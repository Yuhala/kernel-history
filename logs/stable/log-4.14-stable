commit 6e4548ea58e6a5ed2dd3a417d991742e2dec0246
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Mar 3 10:24:39 2018 +0100

    Linux 4.14.24

commit ab5d9d1751bc539fe2b30bafe758d8ebd5d48a09
Author: Jiri Pirko <jiri@mellanox.com>
Date:   Fri Dec 8 19:27:27 2017 +0100

    net: sched: fix use-after-free in tcf_block_put_ext
    
    commit df45bf84e4f5a48f23d4b1a07d21d566e8b587b2 upstream.
    
    Since the block is freed with last chain being put, once we reach the
    end of iteration of list_for_each_entry_safe, the block may be
    already freed. I'm hitting this only by creating and deleting clsact:
    
    [  202.171952] ==================================================================
    [  202.180182] BUG: KASAN: use-after-free in tcf_block_put_ext+0x240/0x390
    [  202.187590] Read of size 8 at addr ffff880225539a80 by task tc/796
    [  202.194508]
    [  202.196185] CPU: 0 PID: 796 Comm: tc Not tainted 4.15.0-rc2jiri+ #5
    [  202.203200] Hardware name: Mellanox Technologies Ltd. "MSN2100-CB2F"/"SA001017", BIOS 5.6.5 06/07/2016
    [  202.213613] Call Trace:
    [  202.216369]  dump_stack+0xda/0x169
    [  202.220192]  ? dma_virt_map_sg+0x147/0x147
    [  202.224790]  ? show_regs_print_info+0x54/0x54
    [  202.229691]  ? tcf_chain_destroy+0x1dc/0x250
    [  202.234494]  print_address_description+0x83/0x3d0
    [  202.239781]  ? tcf_block_put_ext+0x240/0x390
    [  202.244575]  kasan_report+0x1ba/0x460
    [  202.248707]  ? tcf_block_put_ext+0x240/0x390
    [  202.253518]  tcf_block_put_ext+0x240/0x390
    [  202.258117]  ? tcf_chain_flush+0x290/0x290
    [  202.262708]  ? qdisc_hash_del+0x82/0x1a0
    [  202.267111]  ? qdisc_hash_add+0x50/0x50
    [  202.271411]  ? __lock_is_held+0x5f/0x1a0
    [  202.275843]  clsact_destroy+0x3d/0x80 [sch_ingress]
    [  202.281323]  qdisc_destroy+0xcb/0x240
    [  202.285445]  qdisc_graft+0x216/0x7b0
    [  202.289497]  tc_get_qdisc+0x260/0x560
    
    Fix this by holding the block also by chain 0 and put chain 0
    explicitly, out of the list_for_each_entry_safe loop at the very
    end of tcf_block_put_ext.
    
    Fixes: efbf78973978 ("net_sched: get rid of rcu_barrier() in tcf_block_put_ext()")
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac2be03ba64febc467e2df4fceb2a053408cc833
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Dec 4 10:48:18 2017 -0800

    net_sched: get rid of rcu_barrier() in tcf_block_put_ext()
    
    commit efbf78973978b0d25af59bc26c8013a942af6e64 upstream.
    
    Both Eric and Paolo noticed the rcu_barrier() we use in
    tcf_block_put_ext() could be a performance bottleneck when
    we have a lot of tc classes.
    
    Paolo provided the following to demonstrate the issue:
    
    tc qdisc add dev lo root htb
    for I in `seq 1 1000`; do
            tc class add dev lo parent 1: classid 1:$I htb rate 100kbit
            tc qdisc add dev lo parent 1:$I handle $((I + 1)): htb
            for J in `seq 1 10`; do
                    tc filter add dev lo parent $((I + 1)): u32 match ip src 1.1.1.$J
            done
    done
    time tc qdisc del dev root
    
    real    0m54.764s
    user    0m0.023s
    sys     0m0.000s
    
    The rcu_barrier() there is to ensure we free the block after all chains
    are gone, that is, to queue tcf_block_put_final() at the tail of workqueue.
    We can achieve this ordering requirement by refcnt'ing tcf block instead,
    that is, the tcf block is freed only when the last chain in this block is
    gone. This also simplifies the code.
    
    Paolo reported after this patch we get:
    
    real    0m0.017s
    user    0m0.000s
    sys     0m0.017s
    
    Tested-by: Paolo Abeni <pabeni@redhat.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Jiri Pirko <jiri@mellanox.com>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c8e7e61cbdf8792cef437afe5c5cdb26f7773df
Author: Roman Kapl <code@rkapl.cz>
Date:   Fri Nov 24 12:27:58 2017 +0100

    net: sched: crash on blocks with goto chain action
    
    commit a60b3f515d30d0fe8537c64671926879a3548103 upstream.
    
    tcf_block_put_ext has assumed that all filters (and thus their goto
    actions) are destroyed in RCU callback and thus can not race with our
    list iteration. However, that is not true during netns cleanup (see
    tcf_exts_get_net comment).
    
    Prevent the user after free by holding all chains (except 0, that one is
    already held). foreach_safe is not enough in this case.
    
    To reproduce, run the following in a netns and then delete the ns:
        ip link add dtest type dummy
        tc qdisc add dev dtest ingress
        tc filter add dev dtest chain 1 parent ffff: handle 1 prio 1 flower action goto chain 2
    
    Fixes: 822e86d997 ("net_sched: remove tcf_block_put_deferred()")
    Signed-off-by: Roman Kapl <code@rkapl.cz>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6b42b3d2d9576dcaa0b4f1196117ad50b248b21
Author: Roman Kapl <code@rkapl.cz>
Date:   Mon Nov 20 22:21:13 2017 +0100

    net: sched: fix crash when deleting secondary chains
    
    commit d7aa04a5e82b4f254d306926c81eae8df69e5200 upstream.
    
    If you flush (delete) a filter chain other than chain 0 (such as when
    deleting the device), the kernel may run into a use-after-free. The
    chain refcount must not be decremented unless we are sure we are done
    with the chain.
    
    To reproduce the bug, run:
        ip link add dtest type dummy
        tc qdisc add dev dtest ingress
        tc filter add dev dtest chain 1  parent ffff: flower
        ip link del dtest
    
    Introduced in: commit f93e1cdcf42c ("net/sched: fix filter flushing"),
    but unless you have KAsan or luck, you won't notice it until
    commit 0dadc117ac8b ("cls_flower: use tcf_exts_get_net() before call_rcu()")
    
    Fixes: f93e1cdcf42c ("net/sched: fix filter flushing")
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Roman Kapl <code@rkapl.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc44a1bbd131b34fd69c140affe6866caf1e1a39
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Thu Sep 21 09:54:07 2017 +0200

    arm64: dts: marvell: mcbin: add comphy references to Ethernet ports
    
    commit 760b3843fcd88f2a46e66eec08e2e6023a425809 upstream.
    
    This patch adds comphy phandles to the Ethernet ports in the mcbin
    device tree. The comphy is used to configure the serdes PHYs used by
    these ports.
    
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8cf635c9142007dac8a3559d517bf33d4dbfd69
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Mon Sep 18 09:58:09 2017 +0200

    arm64: dts: marvell: add comphy nodes on cp110 master and slave
    
    commit 910d1bf2c68fa1d7dcde0316cb91f62758407e8d upstream.
    
    This patch describes the comphy available in the cp110 master and slave.
    This comphy provides serdes lanes used by various controllers such as
    the network one.
    
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27245fc6f7a8d4f4830f55b50341ae37d920d9a7
Author: Sam Bobroff <sam.bobroff@au1.ibm.com>
Date:   Mon Feb 12 11:19:29 2018 +1100

    powerpc/pseries: Enable RAS hotplug events later
    
    commit c9dccf1d074a67d36c510845f663980d69e3409b upstream.
    
    Currently if the kernel receives a memory hot-unplug event early
    enough, it may get stuck in an infinite loop in
    dissolve_free_huge_pages(). This appears as a stall just after:
    
      pseries-hotplug-mem: Attempting to hot-remove XX LMB(s) at YYYYYYYY
    
    It appears to be caused by "minimum_order" being uninitialized, due to
    init_ras_IRQ() executing before hugetlb_init().
    
    To correct this, extract the part of init_ras_IRQ() that enables
    hotplug event processing and place it in the machine_late_initcall
    phase, which is guaranteed to be after hugetlb_init() is called.
    
    Signed-off-by: Sam Bobroff <sam.bobroff@au1.ibm.com>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    [mpe: Reorder the functions to make the diff readable]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60190108f7e2643bb6dd6465eed69c9d18b26b37
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Dec 7 07:20:46 2017 +0000

    MIPS: Implement __multi3 for GCC7 MIPS64r6 builds
    
    commit ebabcf17bcd7ce968b1631ebe08236275698f39b upstream.
    
    GCC7 is a bit too eager to generate suboptimal __multi3 calls (128bit
    multiply with 128bit result) for MIPS64r6 builds, even in code which
    doesn't explicitly use 128bit types, such as the following:
    
    unsigned long func(unsigned long a, unsigned long b)
    {
            return a > (~0UL) / b;
    }
    
    Which GCC rearanges to:
    
    return (unsigned __int128)a * (unsigned __int128)b > 0xffffffffffffffff;
    
    Therefore implement __multi3, but only for MIPS64r6 with GCC7 as under
    normal circumstances we wouldn't expect any calls to __multi3 to be
    generated from kernel code.
    
    Reported-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Tested-by: Waldemar Brodkorb <wbx@openadk.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Maciej W. Rozycki <macro@mips.com>
    Cc: Matthew Fortune <matthew.fortune@mips.com>
    Cc: Florian Fainelli <florian@openwrt.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17890/
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 819cbaae314ed04f7bd530f0e34c96b9612940eb
Author: Yuval Mintz <yuvalm@mellanox.com>
Date:   Wed Jan 10 11:42:43 2018 +0100

    mlxsw: pci: Wait after reset before accessing HW
    
    
    [ Upstream commit 8e033a93b37f37aa9fca71a370a895155320af60 ]
    
    After performing reset driver polls on HW indication until learning
    that the reset is done, but immediately after reset the device becomes
    unresponsive which might lead to completion timeout on the first read.
    
    Wait for 100ms before starting the polling.
    
    Fixes: 233fa44bd67a ("mlxsw: pci: Implement reset done check")
    Signed-off-by: Yuval Mintz <yuvalm@mellanox.com>
    Reviewed-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d23aaff9e55227d9e786d3aee157c9df63f2efe
Author: Jakub Kicinski <jakub.kicinski@netronome.com>
Date:   Tue Jan 9 18:14:28 2018 -0800

    nfp: always unmask aux interrupts at init
    
    
    [ Upstream commit fc2336505fb49a8b932a0a67a9745c408b79992c ]
    
    The link state and exception interrupts may be masked when we probe.
    The firmware should in theory prevent sending (and automasking) those
    interrupts if the device is disabled, but if my reading of the FW code
    is correct there are firmwares out there with race conditions in this
    area.  The interrupt may also be masked if previous driver which used
    the device was malfunctioning and we didn't load the FW (there is no
    other good way to comprehensively reset the PF).
    
    Note that FW unmasks the data interrupts by itself when vNIC is
    enabled, such helpful operation is not performed for LSC/EXN interrupts.
    
    Always unmask the auxiliary interrupts after request_irq().  On the
    remove path add missing PCI write flush before free_irq().
    
    Fixes: 4c3523623dc0 ("net: add driver for Netronome NFP4000/NFP6000 NIC VFs")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e69660fdecda3bb58e8f3e9e7b0dc36efbad1b96
Author: Madalin Bucur <madalin.bucur@nxp.com>
Date:   Tue Jan 9 14:43:34 2018 +0200

    of_mdio: avoid MDIO bus removal when a PHY is missing
    
    
    [ Upstream commit 95f566de0269a0c59fd6a737a147731302136429 ]
    
    If one of the child devices is missing the of_mdiobus_register_phy()
    call will return -ENODEV. When a missing device is encountered the
    registration of the remaining PHYs is stopped and the MDIO bus will
    fail to register. Propagate all errors except ENODEV to avoid it.
    
    Signed-off-by: Madalin Bucur <madalin.bucur@nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83d9e9c211fe885d03e9acb425be3cf55c1d3bd8
Author: Yangbo Lu <yangbo.lu@nxp.com>
Date:   Tue Jan 9 11:02:33 2018 +0800

    net: gianfar_ptp: move set_fipers() to spinlock protecting area
    
    
    [ Upstream commit 11d827a993a969c3c6ec56758ff63a44ba19b466 ]
    
    set_fipers() calling should be protected by spinlock in
    case that any interrupt breaks related registers setting
    and the function we expect. This patch is to move set_fipers()
    to spinlock protecting area in ptp_gianfar_adjtime().
    
    Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00c840f3b51cda42a3c48fa4067c4fa2091cdbcc
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jan 8 19:02:29 2018 -0200

    sctp: make use of pre-calculated len
    
    
    [ Upstream commit c76f97c99ae6d26d14c7f0e50e074382bfbc9f98 ]
    
    Some sockopt handling functions were calculating the length of the
    buffer to be written to userspace and then calculating it again when
    actually writing the buffer, which could lead to some write not using
    an up-to-date length.
    
    This patch updates such places to just make use of the len variable.
    
    Also, replace some sizeof(type) to sizeof(var).
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 413e58ac3d845144f9b70b85b2f4add7d3249948
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jan 8 19:02:28 2018 -0200

    sctp: add a ceiling to optlen in some sockopts
    
    
    [ Upstream commit 5960cefab9df76600a1a7d4ff592c59e14616e88 ]
    
    Hangbin Liu reported that some sockopt calls could cause the kernel to log
    a warning on memory allocation failure if the user supplied a large optlen
    value. That is because some of them called memdup_user() without a ceiling
    on optlen, allowing it to try to allocate really large buffers.
    
    This patch adds a ceiling by limiting optlen to the maximum allowed that
    would still make sense for these sockopt.
    
    Reported-by: Hangbin Liu <haliu@redhat.com>
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd659881219d8a39a523d2a42ae04e3fc416d030
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Jan 9 12:10:22 2018 +0000

    xen/gntdev: Fix partial gntdev_mmap() cleanup
    
    
    [ Upstream commit cf2acf66ad43abb39735568f55e1f85f9844e990 ]
    
    When cleaning up after a partially successful gntdev_mmap(), unmap the
    successfully mapped grant pages otherwise Xen will kill the domain if
    in debug mode (Attempt to implicitly unmap a granted PTE) or Linux will
    kill the process and emit "BUG: Bad page map in process" if Xen is in
    release mode.
    
    This is only needed when use_ptemod is true because gntdev_put_map()
    will unmap grant pages itself when use_ptemod is false.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5aee2c142e3d7803cb8535fb92806b1f239390bc
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Jan 9 12:10:21 2018 +0000

    xen/gntdev: Fix off-by-one error when unmapping with holes
    
    
    [ Upstream commit 951a010233625b77cde3430b4b8785a9a22968d1 ]
    
    If the requested range has a hole, the calculation of the number of
    pages to unmap is off by one. Fix it.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 197faf0c3a146bd61b0e0eeffec340a491786f7f
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Sat Jan 6 21:53:26 2018 +0300

    SolutionEngine771x: fix Ether platform data
    
    
    [ Upstream commit 195e2addbce09e5afbc766efc1e6567c9ce840d3 ]
    
    The 'sh_eth' driver's probe() method would fail  on the SolutionEngine7710
    board and crash on SolutionEngine7712 board  as the platform code is
    hopelessly behind the driver's platform data --  it passes the PHY address
    instead of 'struct sh_eth_plat_data *'; pass the latter to the driver in
    order to fix the bug...
    
    Fixes: 71557a37adb5 ("[netdrvr] sh_eth: Add SH7619 support")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5ac846ba15f8fc96c867e6e13b85d12b8b65515
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jan 6 09:00:09 2018 +0100

    mdio-sun4i: Fix a memory leak
    
    
    [ Upstream commit 56c0290202ab94a2f2780c449395d4ae8495fab4 ]
    
    If the probing of the regulator is deferred, the memory allocated by
    'mdiobus_alloc_size()' will be leaking.
    It should be freed before the next call to 'sun4i_mdio_probe()' which will
    reallocate it.
    
    Fixes: 4bdcb1dd9feb ("net: Add MDIO bus driver for the Allwinner EMAC")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84ada11975b7fd200f5ca6e263c8060ca4d636d9
Author: Eduardo Otubo <otubo@redhat.com>
Date:   Fri Jan 5 09:42:16 2018 +0100

    xen-netfront: enable device after manual module load
    
    
    [ Upstream commit b707fda2df4070785d0fa8a278aa13944c5f51f8 ]
    
    When loading the module after unloading it, the network interface would
    not be enabled and thus wouldn't have a backend counterpart and unable
    to be used by the guest.
    
    The guest would face errors like:
    
      [root@guest ~]# ethtool -i eth0
      Cannot get driver information: No such device
    
      [root@guest ~]# ifconfig eth0
      eth0: error fetching interface information: Device not found
    
    This patch initializes the state of the netfront device whenever it is
    loaded manually, this state would communicate the netback to create its
    device and establish the connection between them.
    
    Signed-off-by: Eduardo Otubo <otubo@redhat.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e29d0bac356de0cd04279ecbcd0384b4a4056b8
Author: Venkat Duvvuru <venkatkumar.duvvuru@broadcom.com>
Date:   Thu Jan 4 18:46:55 2018 -0500

    bnxt_en: Fix the 'Invalid VF' id check in bnxt_vf_ndo_prep routine.
    
    
    [ Upstream commit 78f300049335ae81a5cc6b4b232481dc5e1f9d41 ]
    
    In bnxt_vf_ndo_prep (which is called by bnxt_get_vf_config ndo), there is a
    check for "Invalid VF id". Currently, the check is done against max_vfs.
    However, the user doesn't always create max_vfs. So, the check should be
    against the created number of VFs. The number of bnxt_vf_info structures
    that are allocated in bnxt_alloc_vf_resources routine is the "number of
    requested VFs". So, if an "invalid VF id" falls between the requested
    number of VFs and the max_vfs, the driver will be dereferencing an invalid
    pointer.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Signed-off-by: Venkat Devvuru <venkatkumar.duvvuru@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a74e2cb46cdbc7b546d8552bc1e61bd43b960df6
Author: Sunil Challa <sunilkumar.challa@broadcom.com>
Date:   Thu Jan 4 18:46:54 2018 -0500

    bnxt_en: Fix population of flow_type in bnxt_hwrm_cfa_flow_alloc()
    
    
    [ Upstream commit 7deea450eb912f269d999de62c8ab922d1461748 ]
    
    flow_type in HWRM_FLOW_ALLOC is not being populated correctly due to
    incorrect passing of pointer and size of l3_mask argument of is_wildcard().
    Fixed this.
    
    Fixes: db1d36a27324 ("bnxt_en: add TC flower offload flow_alloc/free FW cmds")
    Signed-off-by: Sunil Challa <sunilkumar.challa@broadcom.com>
    Reviewed-by: Sathya Perla <sathya.perla@broadcom.com>
    Reviewed-by: Venkat Duvvuru <venkatkumar.duvvuru@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a33ecfb67b9c200feaa97b8854bf65414e5a27f
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Dec 28 14:25:23 2017 +0200

    x86/platform/intel-mid: Revert "Make 'bt_sfi_data' const"
    
    
    [ Upstream commit 9d0513d82f1a8fe17b41f113ac5922fa57dbaf5c ]
    
    So one of the constification patches unearthed a type casting fragility
    of the underlying code:
    
      276c87054751 ("x86/platform/intel-mid: Make 'bt_sfi_data' const")
    
    converted the struct to be const while it is also used as a temporary
    container for important data that is used to fill 'parent' and 'name'
    fields in struct platform_device_info.
    
    The compiler doesn't notice this due to an explicit type cast that loses
    the const - which fragility will be fixed separately.
    
    This type cast turned a seemingly trivial const propagation patch into a
    hard to debug data corruptor and crasher bug.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Bhumika Goyal <bhumirks@gmail.com>
    Cc: Darren Hart <dvhart@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: julia.lawall@lip6.fr
    Cc: platform-driver-x86@vger.kernel.org
    Link: http://lkml.kernel.org/r/20171228122523.21802-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa10314f23bc9158137fc642034ee5042e89ceac
Author: Ewan D. Milne <emilne@redhat.com>
Date:   Fri Jan 5 12:44:06 2018 -0500

    nvme-fabrics: initialize default host->id in nvmf_host_default()
    
    
    [ Upstream commit 6b018235b4daabae96d855219fae59c3fb8be417 ]
    
    The field was uninitialized before use.
    
    Signed-off-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e1311a13449e77022608d95ffa6623a2cc084d0
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Jan 8 14:54:32 2018 +1100

    powerpc/pseries: Make RAS IRQ explicitly dependent on DLPAR WQ
    
    
    [ Upstream commit e2d5915293ffdff977ddcfc12b817b08c53ffa7a ]
    
    The hotplug code uses its own workqueue to handle IRQ requests
    (pseries_hp_wq), however that workqueue is initialized after
    init_ras_IRQ(). That can lead to a kernel panic if any hotplug
    interrupts fire after init_ras_IRQ() but before pseries_hp_wq is
    initialised. eg:
    
      UDP-Lite hash table entries: 2048 (order: 0, 65536 bytes)
      NET: Registered protocol family 1
      Unpacking initramfs...
      (qemu) object_add memory-backend-ram,id=mem1,size=10G
      (qemu) device_add pc-dimm,id=dimm1,memdev=mem1
      Unable to handle kernel paging request for data at address 0xf94d03007c421378
      Faulting instruction address: 0xc00000000012d744
      Oops: Kernel access of bad area, sig: 11 [#1]
      LE SMP NR_CPUS=2048 NUMA pSeries
      Modules linked in:
      CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.15.0-rc2-ziviani+ #26
      task:         (ptrval) task.stack:         (ptrval)
      NIP:  c00000000012d744 LR: c00000000012d744 CTR: 0000000000000000
      REGS:         (ptrval) TRAP: 0380   Not tainted  (4.15.0-rc2-ziviani+)
      MSR:  8000000000009033 <SF,EE,ME,IR,DR,RI,LE>  CR: 28088042  XER: 20040000
      CFAR: c00000000012d3c4 SOFTE: 0
      ...
      NIP [c00000000012d744] __queue_work+0xd4/0x5c0
      LR [c00000000012d744] __queue_work+0xd4/0x5c0
      Call Trace:
      [c0000000fffefb90] [c00000000012d744] __queue_work+0xd4/0x5c0 (unreliable)
      [c0000000fffefc70] [c00000000012dce4] queue_work_on+0xb4/0xf0
    
    This commit makes the RAS IRQ registration explicitly dependent on the
    creation of the pseries_hp_wq.
    
    Reported-by: Min Deng <mdeng@redhat.com>
    Reported-by: Daniel Henrique Barboza <danielhb@linux.vnet.ibm.com>
    Tested-by: Jose Ricardo Ziviani <joserz@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9024bb7e27d2684d71f06f4344c71c7924e8b80c
Author: Jacek Anaszewski <jacek.anaszewski@gmail.com>
Date:   Wed Jan 3 21:13:45 2018 +0100

    leds: core: Fix regression caused by commit 2b83ff96f51d
    
    
    [ Upstream commit 7b6af2c53192f1766892ef40c8f48a413509ed72 ]
    
    Commit 2b83ff96f51d ("led: core: Fix brightness setting when setting delay_off=0")
    replaced del_timer_sync(&led_cdev->blink_timer) with led_stop_software_blink()
    in led_blink_set(), which additionally clears LED_BLINK_SW flag as well as
    zeroes blink_delay_on and blink_delay_off properties of the struct led_classdev.
    
    Cleansing of the latter ones wasn't required to fix the original issue but
    wasn't considered harmful. It nonetheless turned out to be so in case when
    pointer to one or both props is passed to led_blink_set() like in the
    ledtrig-timer.c. In such cases zeroes are passed later in delay_on and/or
    delay_off arguments to led_blink_setup(), which results either in stopping
    the software blinking or setting blinking frequency always to 1Hz.
    
    Avoid using led_stop_software_blink() and add a single call required
    to clear LED_BLINK_SW flag, which was the only needed modification to
    fix the original issue.
    
    Fixes 2b83ff96f51d ("led: core: Fix brightness setting when setting delay_off=0")
    Signed-off-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be2b86901a346d1fc2e496ce5823541ef3f82737
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Thu Jan 4 20:02:09 2018 -0800

    bpf: sockmap missing NULL psock check
    
    
    [ Upstream commit 5731a879d03bdaa00265f8ebc32dfd0e65d25276 ]
    
    Add psock NULL check to handle a racing sock event that can get the
    sk_callback_lock before this case but after xchg happens causing the
    refcnt to hit zero and sock user data (psock) to be null and queued
    for garbage collection.
    
    Also add a comment in the code because this is a bit subtle and
    not obvious in my opinion.
    
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ac98131312a0c16280e216e8ee6debceec11e0f
Author: Valentin Ilie <valentin.ilie@gmail.com>
Date:   Fri Jan 5 23:12:59 2018 +0000

    ia64, sched/cputime: Fix build error if CONFIG_VIRT_CPU_ACCOUNTING_NATIVE=y
    
    
    [ Upstream commit 7729bebc619307a0233c86f8585a4bf3eadc7ce4 ]
    
    Remove the extra parenthesis.
    
    This bug was introduced by:
    
      e2339a4caa5e: ("ia64: Convert vtime to use nsec units directly")
    
    Signed-off-by: Valentin Ilie <valentin.ilie@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: fenghua.yu@intel.com
    Cc: linux-ia64@vger.kernel.org
    Cc: tony.luck@intel.com
    Link: http://lkml.kernel.org/r/1515193979-24873-1-git-send-email-valentin.ilie@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e3acce11e08f33a96d024f8b185a1709d591475
Author: Ming Lei <ming.lei@redhat.com>
Date:   Thu Nov 30 07:56:35 2017 +0800

    block: drain queue before waiting for q_usage_counter becoming zero
    
    
    [ Upstream commit 454be724f6f99cc7e7bbf15067128be9868186c6 ]
    
    Now we track legacy requests with .q_usage_counter in commit 055f6e18e08f
    ("block: Make q_usage_counter also track legacy requests"), but that
    commit never runs and drains legacy queue before waiting for this counter
    becoming zero, then IO hang is caused in the test of pulling disk during IO.
    
    This patch fixes the issue by draining requests before waiting for
    q_usage_counter becoming zero, both Mauricio and chenxiang reported this
    issue, and observed that it can be fixed by this patch.
    
    Link: https://marc.info/?l=linux-block&m=151192424731797&w=2
    Fixes: 055f6e18e08f("block: Make q_usage_counter also track legacy requests")
    Cc: Wen Xiong <wenxiong@us.ibm.com>
    Tested-by: "chenxiang (M)" <chenxiang66@hisilicon.com>
    Tested-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91c12917d4a80ce4d31413937d88e8fb1f9096d3
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Mon Dec 11 09:52:22 2017 +0100

    wcn36xx: Fix dynamic power saving
    
    
    [ Upstream commit 0856655a25476d4431005e39d606e349050066b0 ]
    
    Since driver does not report hardware dynamic power saving cap,
    this is up to the mac80211 to manage power saving timeout and
    state machine, using the ieee80211 config callback to report
    PS changes. This patch enables/disables PS mode according to
    the new configuration.
    
    Remove old behaviour enabling PS mode in a static way, this make
    the device unusable when power save is enabled since device is
    forced to PS regardless RX/TX traffic.
    
    Acked-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f39cc7fe90b8f7fbf5ac700a29c416d8296b2fd
Author: Luu An Phu <phu.luuan@nxp.com>
Date:   Tue Jan 2 10:44:18 2018 +0700

    can: flex_can: Correct the checking for frame length in flexcan_start_xmit()
    
    
    [ Upstream commit 13454c14550065fcc1705d6bd4ee6d40e057099f ]
    
    The flexcan_start_xmit() function compares the frame length with data
    register length to write frame content into data[0] and data[1]
    register. Data register length is 4 bytes and frame maximum length is 8
    bytes.
    
    Fix the check that compares frame length with 3. Because the register
    length is 4.
    
    Signed-off-by: Luu An Phu <phu.luuan@nxp.com>
    Reviewed-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f258cc64f4ec4b933991fb24fa76deddc18fd92
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Jan 4 15:51:53 2018 +0100

    mac80211: mesh: drop frames appearing to be from us
    
    
    [ Upstream commit 736a80bbfda709fb3631f5f62056f250a38e5804 ]
    
    If there are multiple mesh stations with the same MAC address,
    they will both get confused and start throwing warnings.
    
    Obviously in this case nothing can actually work anyway, so just
    drop frames that look like they're from ourselves early on.
    
    Reported-by: Gui Iribarren <gui@altermundi.net>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c38bd3a9fe11720425771392edc0370cd0db0049
Author: Hao Chen <flank3rsky@gmail.com>
Date:   Wed Jan 3 11:00:31 2018 +0800

    nl80211: Check for the required netlink attribute presence
    
    
    [ Upstream commit 3ea15452ee85754f70f3b9fa1f23165ef2e77ba7 ]
    
    nl80211_nan_add_func() does not check if the required attribute
    NL80211_NAN_FUNC_FOLLOW_UP_DEST is present when processing
    NL80211_CMD_ADD_NAN_FUNCTION request. This request can be issued
    by users with CAP_NET_ADMIN privilege and may result in NULL dereference
    and a system crash. Add a check for the required attribute presence.
    
    Signed-off-by: Hao Chen <flank3rsky@gmail.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d66a35c2a1fa519467e9406be41451e997bbd2d1
Author: Netanel Belgazal <netanel@amazon.com>
Date:   Wed Jan 3 06:17:29 2018 +0000

    net: ena: unmask MSI-X only after device initialization is completed
    
    
    [ Upstream commit 7853b49ce8e0ef6364d24512b287463841d71bd3 ]
    
    Under certain conditions MSI-X interrupt might arrive right after it
    was unmasked in ena_up(). There is a chance it would be processed by
    the driver before device ENA_FLAG_DEV_UP flag is set. In such a case
    the interrupt is ignored.
    ENA device operates in auto-masked mode, therefore ignoring
    interrupt leaves it masked for good.
    Moving unmask of interrupt to be the last step in ena_up().
    
    Signed-off-by: Netanel Belgazal <netanel@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aae87222cc9c0b059b1f748c26f1f7482a6e21c6
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Wed Dec 20 11:04:36 2017 -0500

    i40e: don't remove netdev->dev_addr when syncing uc list
    
    
    [ Upstream commit 458867b2ca0c987445c5d9adccd1642970e1ba07 ]
    
    In some circumstances, such as with bridging, it is possible that the
    stack will add a devices own MAC address to its unicast address list.
    
    If, later, the stack deletes this address, then the i40e driver will
    receive a request to remove this address.
    
    The driver stores its current MAC address as part of the MAC/VLAN hash
    array, since it is convenient and matches exactly how the hardware
    expects to be told which traffic to receive.
    
    This causes a problem, since for more devices, the MAC address is stored
    separately, and requests to delete a unicast address should not have the
    ability to remove the filter for the MAC address.
    
    Fix this by forcing a check on every address sync to ensure we do not
    remove the device address.
    
    There is a very narrow possibility of a race between .set_mac and
    .set_rx_mode, if we don't change netdev->dev_addr before updating our
    internal MAC list in .set_mac. This might be possible if .set_rx_mode is
    going to remove MAC "XYZ" from the list, at the same time as .set_mac
    changes our dev_addr to MAC "XYZ", we might possibly queue a delete,
    then an add in .set_mac, then queue a delete in .set_rx_mode's
    dev_uc_sync and then update netdev->dev_addr. We can avoid this by
    moving the copy into dev_addr prior to the changes to the MAC filter
    list.
    
    A similar race on the other side does not cause problems, as if we're
    changing our MAC form A to B, and we race with .set_rx_mode, it could
    queue a delete from A, we'd update our address, and allow the delete.
    This seems like a race, but in reality we're about to queue a delete of
    A anyways, so it would not cause any issues.
    
    A race in the initialization code is unlikely because the netdevice has
    not yet been fully initialized and the stack should not be adding or
    removing addresses yet.
    
    Note that we don't (yet) need similar code for the VF driver because it
    does not make use of __dev_uc_sync and __dev_mc_sync, but instead roles
    its own method for handling updates to the MAC/VLAN list, which already
    has code to protect against removal of the hardware address.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f51f3cf99dfb3eb55fa3b8fd7e96c8ed6ca7112
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Fri Dec 8 10:55:04 2017 -0800

    i40e/i40evf: Account for frags split over multiple descriptors in check linearize
    
    
    [ Upstream commit 248de22e638f10bd5bfc7624a357f940f66ba137 ]
    
    The original code for __i40e_chk_linearize didn't take into account the
    fact that if a fragment is 16K in size or larger it has to be split over 2
    descriptors and the smaller of those 2 descriptors will be on the trailing
    edge of the transmit. As a result we can get into situations where we didn't
    catch requests that could result in a Tx hang.
    
    This patch takes care of that by subtracting the length of all but the
    trailing edge of the stale fragment before we test for sum. By doing this
    we can guarantee that we have all cases covered, including the case of a
    fragment that spans multiple descriptors. We don't need to worry about
    checking the inner portions of this since 12K is the maximum aligned DMA
    size and that is larger than any MSS will ever be since the MTU limit for
    jumbos is something on the order of 9K.
    
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1edfa41adb1001aec1d813f72d7adab65058308e
Author: Felix Janda <felix.janda@posteo.de>
Date:   Mon Jan 1 19:33:20 2018 +0100

    uapi libc compat: add fallback for unsupported libcs
    
    
    [ Upstream commit c0bace798436bca0fdc221ff61143f1376a9c3de ]
    
    libc-compat.h aims to prevent symbol collisions between uapi and libc
    headers for each supported libc. This requires continuous coordination
    between them.
    
    The goal of this commit is to improve the situation for libcs (such as
    musl) which are not yet supported and/or do not wish to be explicitly
    supported, while not affecting supported libcs. More precisely, with
    this commit, unsupported libcs can request the suppression of any
    specific uapi definition by defining the correspondings _UAPI_DEF_*
    macro as 0. This can fix symbol collisions for them, as long as the
    libc headers are included before the uapi headers. Inclusion in the
    other order is outside the scope of this commit.
    
    All infrastructure in order to enable this fallback for unsupported
    libcs is already in place, except that libc-compat.h unconditionally
    defines all _UAPI_DEF_* macros to 1 for all unsupported libcs so that
    any previous definitions are ignored. In order to fix this, this commit
    merely makes these definitions conditional.
    
    This commit together with the musl libc commit
    
    http://git.musl-libc.org/cgit/musl/commit/?id=04983f2272382af92eb8f8838964ff944fbb8258
    
    fixes for example the following compiler errors when <linux/in6.h> is
    included after musl's <netinet/in.h>:
    
    ./linux/in6.h:32:8: error: redefinition of 'struct in6_addr'
    ./linux/in6.h:49:8: error: redefinition of 'struct sockaddr_in6'
    ./linux/in6.h:59:8: error: redefinition of 'struct ipv6_mreq'
    
    The comments referencing glibc are still correct, but this file is not
    only used for glibc any more.
    
    Signed-off-by: Felix Janda <felix.janda@posteo.de>
    Reviewed-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c9da1201713478e14c25e2fa5a04123110785b2
Author: Dave Young <dyoung@redhat.com>
Date:   Tue Jan 2 17:21:09 2018 +0000

    x86/efi: Fix kernel param add_efi_memmap regression
    
    
    [ Upstream commit 835bcec5fdf3f9e880111b482177e7e70e3596da ]
    
    'add_efi_memmap' is an early param, but do_add_efi_memmap() has no
    chance to run because the code path is before parse_early_param().
    I believe it worked when the param was introduced but probably later
    some other changes caused the wrong order and nobody noticed it.
    
    Move efi_memblock_x86_reserve_range() after parse_early_param()
    to fix it.
    
    Signed-off-by: Dave Young <dyoung@redhat.com>
    Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Cc: Ge Song <ge.song@hxt-semitech.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180102172110.17018-2-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 935454915c3387d7679375ad8386fa3f6401db8b
Author: Leon Romanovsky <leonro@mellanox.com>
Date:   Mon Jan 1 13:07:15 2018 +0200

    RDMA/netlink: Fix locking around __ib_get_device_by_index
    
    
    [ Upstream commit f8978bd95cf92f869f3d9b34c1b699f49253b8c6 ]
    
    Holding locks is mandatory when calling __ib_device_get_by_index,
    otherwise there are races during the list iteration with device removal.
    
    Since the locks are static to device.c, __ib_device_get_by_index can
    never be called correctly by any user out side the file.
    
    Make the function static and provide a safe function that gets the
    correct locks and returns a kref'd pointer. Fix all callers.
    
    Fixes: e5c9469efcb1 ("RDMA/netlink: Add nldev device doit implementation")
    Fixes: c3f66f7b0052 ("RDMA/netlink: Implement nldev port doit callback")
    Fixes: 7d02f605f0dc ("RDMA/netlink: Add nldev port dumpit implementation")
    Reviewed-by: Mark Bloch <markb@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cbd67344e05aac1e29778f5724478eda8ac0626
Author: Xiongwei Song <sxwjean@gmail.com>
Date:   Tue Jan 2 21:24:55 2018 +0800

    drm/ttm: check the return value of kzalloc
    
    
    [ Upstream commit 19d859a7205bc59ffc38303eb25ae394f61d21dc ]
    
    In the function ttm_page_alloc_init, kzalloc call is made for variable
    _manager, we need to check its return value, it may return NULL.
    
    Signed-off-by: Xiongwei Song <sxwjean@gmail.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d31d0cf5a9803ea5ae3accc51bc5b3ce776c5c1f
Author: SZ Lin (林上智) <sz.lin@moxa.com>
Date:   Fri Dec 29 17:02:17 2017 +0800

    NET: usb: qmi_wwan: add support for YUGA CLM920-NC5 PID 0x9625
    
    
    [ Upstream commit bd30ffc414e55194ed6149fad69a145550cb7c18 ]
    
    This patch adds support for PID 0x9625 of YUGA CLM920-NC5.
    
    YUGA CLM920-NC5 needs to enable QMI_WWAN_QUIRK_DTR before QMI operation.
    
    qmicli -d /dev/cdc-wdm0 -p --dms-get-revision
    [/dev/cdc-wdm0] Device revision retrieved:
            Revision: 'CLM920_NC5-V1  1  [Oct 23 2016 19:00:00]'
    
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49a8f703725e8d508f4add0042b59a3810ba7077
Author: Tushar Dave <tushar.n.dave@oracle.com>
Date:   Wed Dec 6 02:26:29 2017 +0530

    e1000: fix disabling already-disabled warning
    
    
    [ Upstream commit 0b76aae741abb9d16d2c0e67f8b1e766576f897d ]
    
    This patch adds check so that driver does not disable already
    disabled device.
    
    [   44.637743] advantechwdt: Unexpected close, not stopping watchdog!
    [   44.997548] input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input6
    [   45.013419] e1000 0000:00:03.0: disabling already-disabled device
    [   45.013447] ------------[ cut here ]------------
    [   45.014868] WARNING: CPU: 1 PID: 71 at drivers/pci/pci.c:1641 pci_disable_device+0xa1/0x105:
                                                    pci_disable_device at drivers/pci/pci.c:1640
    [   45.016171] CPU: 1 PID: 71 Comm: rcu_perf_shutdo Not tainted 4.14.0-01330-g3c07399 #1
    [   45.017197] task: ffff88011bee9e40 task.stack: ffffc90000860000
    [   45.017987] RIP: 0010:pci_disable_device+0xa1/0x105:
                                                    pci_disable_device at drivers/pci/pci.c:1640
    [   45.018603] RSP: 0000:ffffc90000863e30 EFLAGS: 00010286
    [   45.019282] RAX: 0000000000000035 RBX: ffff88013a230008 RCX: 0000000000000000
    [   45.020182] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000203
    [   45.021084] RBP: ffff88013a3f31e8 R08: 0000000000000001 R09: 0000000000000000
    [   45.021986] R10: ffffffff827ec29c R11: 0000000000000002 R12: 0000000000000001
    [   45.022946] R13: ffff88013a230008 R14: ffff880117802b20 R15: ffffc90000863e8f
    [   45.023842] FS:  0000000000000000(0000) GS:ffff88013fd00000(0000) knlGS:0000000000000000
    [   45.024863] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   45.025583] CR2: ffffc900006d4000 CR3: 000000000220f000 CR4: 00000000000006a0
    [   45.026478] Call Trace:
    [   45.026811]  __e1000_shutdown+0x1d4/0x1e2:
                                                    __e1000_shutdown at drivers/net/ethernet/intel/e1000/e1000_main.c:5162
    [   45.027344]  ? rcu_perf_cleanup+0x2a1/0x2a1:
                                                    rcu_perf_shutdown at kernel/rcu/rcuperf.c:627
    [   45.027883]  e1000_shutdown+0x14/0x3a:
                                                    e1000_shutdown at drivers/net/ethernet/intel/e1000/e1000_main.c:5235
    [   45.028351]  device_shutdown+0x110/0x1aa:
                                                    device_shutdown at drivers/base/core.c:2807
    [   45.028858]  kernel_power_off+0x31/0x64:
                                                    kernel_power_off at kernel/reboot.c:260
    [   45.029343]  rcu_perf_shutdown+0x9b/0xa7:
                                                    rcu_perf_shutdown at kernel/rcu/rcuperf.c:637
    [   45.029852]  ? __wake_up_common_lock+0xa2/0xa2:
                                                    autoremove_wake_function at kernel/sched/wait.c:376
    [   45.030414]  kthread+0x126/0x12e:
                                                    kthread at kernel/kthread.c:233
    [   45.030834]  ? __kthread_bind_mask+0x8e/0x8e:
                                                    kthread at kernel/kthread.c:190
    [   45.031399]  ? ret_from_fork+0x1f/0x30:
                                                    ret_from_fork at arch/x86/entry/entry_64.S:443
    [   45.031883]  ? kernel_init+0xa/0xf5:
                                                    kernel_init at init/main.c:997
    [   45.032325]  ret_from_fork+0x1f/0x30:
                                                    ret_from_fork at arch/x86/entry/entry_64.S:443
    [   45.032777] Code: 00 48 85 ed 75 07 48 8b ab a8 00 00 00 48 8d bb 98 00 00 00 e8 aa d1 11 00 48 89 ea 48 89 c6 48 c7 c7 d8 e4 0b 82 e8 55 7d da ff <0f> ff b9 01 00 00 00 31 d2 be 01 00 00 00 48 c7 c7 f0 b1 61 82
    [   45.035222] ---[ end trace c257137b1b1976ef ]---
    [   45.037838] ACPI: Preparing to enter system sleep state S5
    
    Signed-off-by: Tushar Dave <tushar.n.dave@oracle.com>
    Tested-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f22fec25935dee1dd769c84f100b173e1565c335
Author: Gao Feng <gfree.wind@vip.163.com>
Date:   Tue Dec 26 21:44:32 2017 +0800

    macvlan: Fix one possible double free
    
    
    [ Upstream commit d02fd6e7d2933ede6478a15f9e4ce8a93845824e ]
    
    Because the macvlan_uninit would free the macvlan port, so there is one
    double free case in macvlan_common_newlink. When the macvlan port is just
    created, then register_netdevice or netdev_upper_dev_link failed and they
    would invoke macvlan_uninit. Then it would reach the macvlan_port_destroy
    which triggers the double free.
    
    Signed-off-by: Gao Feng <gfree.wind@vip.163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d3d428c56a04893782a8d0b1e2b4ad8b34a5f45
Author: Aliaksei Karaliou <akaraliou.dev@gmail.com>
Date:   Thu Dec 21 13:18:26 2017 -0800

    xfs: quota: check result of register_shrinker()
    
    
    [ Upstream commit 3a3882ff26fbdbaf5f7e13f6a0bccfbf7121041d ]
    
    xfs_qm_init_quotainfo() does not check result of register_shrinker()
    which was tagged as __must_check recently, reported by sparse.
    
    Signed-off-by: Aliaksei Karaliou <akaraliou.dev@gmail.com>
    [darrick: move xfs_qm_destroy_quotainos nearer xfs_qm_init_quotainos]
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4def40b2ee0281f1749f4d0a2dc13f06a8bf531f
Author: Aliaksei Karaliou <akaraliou.dev@gmail.com>
Date:   Thu Dec 21 13:18:26 2017 -0800

    xfs: quota: fix missed destroy of qi_tree_lock
    
    
    [ Upstream commit 2196881566225f3c3428d1a5f847a992944daa5b ]
    
    xfs_qm_destroy_quotainfo() does not destroy quotainfo->qi_tree_lock
    while destroys quotainfo->qi_quotaofflock.
    
    Signed-off-by: Aliaksei Karaliou <akaraliou.dev@gmail.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba28394c579b9864bd8114eae1f877835ea96b93
Author: Erez Shitrit <erezsh@mellanox.com>
Date:   Sun Dec 31 15:33:15 2017 +0200

    IB/ipoib: Fix race condition in neigh creation
    
    
    [ Upstream commit 16ba3defb8bd01a9464ba4820a487f5b196b455b ]
    
    When using enhanced mode for IPoIB, two threads may execute xmit in
    parallel to two different TX queues while the target is the same.
    In this case, both of them will add the same neighbor to the path's
    neigh link list and we might see the following message:
    
      list_add double add: new=ffff88024767a348, prev=ffff88024767a348...
      WARNING: lib/list_debug.c:31__list_add_valid+0x4e/0x70
      ipoib_start_xmit+0x477/0x680 [ib_ipoib]
      dev_hard_start_xmit+0xb9/0x3e0
      sch_direct_xmit+0xf9/0x250
      __qdisc_run+0x176/0x5d0
      __dev_queue_xmit+0x1f5/0xb10
      __dev_queue_xmit+0x55/0xb10
    
    Analysis:
    Two SKB are scheduled to be transmitted from two cores.
    In ipoib_start_xmit, both gets NULL when calling ipoib_neigh_get.
    Two calls to neigh_add_path are made. One thread takes the spin-lock
    and calls ipoib_neigh_alloc which creates the neigh structure,
    then (after the __path_find) the neigh is added to the path's neigh
    link list. When the second thread enters the critical section it also
    calls ipoib_neigh_alloc but in this case it gets the already allocated
    ipoib_neigh structure, which is already linked to the path's neigh
    link list and adds it again to the list. Which beside of triggering
    the list, it creates a loop in the linked list. This loop leads to
    endless loop inside path_rec_completion.
    
    Solution:
    Check list_empty(&neigh->list) before adding to the list.
    Add a similar fix in "ipoib_multicast.c::ipoib_mcast_send"
    
    Fixes: b63b70d87741 ('IPoIB: Use a private hash table for path lookup in xmit path')
    Signed-off-by: Erez Shitrit <erezsh@mellanox.com>
    Reviewed-by: Alex Vesker <valex@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67851c9381a1795fb089a775f8c0bce5435daa01
Author: Leon Romanovsky <leonro@mellanox.com>
Date:   Sun Dec 31 15:33:14 2017 +0200

    IB/mlx4: Fix mlx4_ib_alloc_mr error flow
    
    
    [ Upstream commit 5a371cf87e145b86efd32007e46146e78c1eff6d ]
    
    ibmr.device is being set only after ib_alloc_mr() is successfully complete.
    Therefore, in case imlx4_mr_enable() returns with error, the error flow
    unwinder calls to mlx4_free_priv_pages(), which uses ibmr.device.
    
    Such usage causes to NULL dereference oops and to fix it, the IB device
    should be set in the mr struct earlier stage (e.g. prior to calling
    mlx4_free_priv_pages()).
    
    Fixes: 1b2cd0fc673c ("IB/mlx4: Support the new memory registration API")
    Signed-off-by: Nitzan Carmi <nitzanc@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d27ab346384e72f32afbd72b75864bc8ab9675c
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Tue Jan 2 09:39:25 2018 -0800

    Input: xen-kbdfront - do not advertise multi-touch pressure support
    
    
    [ Upstream commit 02a0d9216d4daf6a58d88642bd2da2c78c327552 ]
    
    Some user-space applications expect multi-touch pressure
    on contact to be reported if it is advertised in device
    properties. Otherwise, such applications may treat reports
    not as actual touches, but hovering. Currently this is
    only advertised, but not reported.
    Fix this by not advertising that ABS_MT_PRESSURE is supported.
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Signed-off-by: Andrii Chepurnyi <andrii_chepurnyi@epam.com>
    Patchwork-Id: 10140017
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4132ec352700848531a90524226f7967d61a6809
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 25 14:45:12 2017 +0800

    ip6_tunnel: allow ip6gre dev mtu to be set below 1280
    
    
    [ Upstream commit 2fa771be953a17f8e0a9c39103464c2574444c62 ]
    
    Commit 582442d6d5bc ("ipv6: Allow the MTU of ipip6 tunnel to be set
    below 1280") fixed a mtu setting issue. It works for ipip6 tunnel.
    
    But ip6gre dev updates the mtu also with ip6_tnl_change_mtu. Since
    the inner packet over ip6gre can be ipv4 and it's mtu should also
    be allowed to set below 1280, the same issue also exists on ip6gre.
    
    This patch is to fix it by simply changing to check if parms.proto
    is IPPROTO_IPV6 in ip6_tnl_change_mtu instead, to make ip6gre to
    go to 'else' branch.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4727e485a1dcb43ca0bca62d7d35648a8441c74
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Wed Dec 13 13:50:07 2017 +0200

    btrfs: Fix flush bio leak
    
    
    [ Upstream commit beed9263f4000c48a5c48912f26576f6fa091181 ]
    
    Commit e0ae99941423 ("btrfs: preallocate device flush bio") reworked
    the way the flush bio is allocated and used. Concretely it allocates
    the bio in __alloc_device and then re-uses it multiple times with a
    very simple endio routine that just calls complete() without consuming
    a reference. Allocated bios by default come with a ref count of 1,
    which is then consumed by the endio routine (or not, in which case they
    should be bio_put by the caller). The way the impleementation works now
    is that the flush bio has a refcount of 2 and we only ever bio_put it
    once, leaving it to hang indefinitely. Fix this by removing the extra
    bio_get in __alloc_device.
    
    Fixes: e0ae99941423 ("btrfs: preallocate device flush bio")
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c6652a081394bbd388fdd3ca9fd889775f9890b
Author: Stefan Haberland <sth@linux.vnet.ibm.com>
Date:   Wed Dec 6 10:30:39 2017 +0100

    s390/dasd: fix wrongly assigned configuration data
    
    
    [ Upstream commit 8a9bd4f8ebc6800bfc0596e28631ff6809a2f615 ]
    
    We store per path and per device configuration data to identify the
    path or device correctly. The per path configuration data might get
    mixed up if the original request gets into error recovery and is
    started with a random path mask.
    
    This would lead to a wrong identification of a path in case of a CUIR
    event for example.
    
    Fix by copying the path mask from the original request to the error
    recovery request in case it is a path verification request.
    
    Signed-off-by: Stefan Haberland <sth@linux.vnet.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 622ded58410c69c821bd5e4b9b5be2dbc0af2c01
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jan 2 10:02:19 2018 +0000

    afs: Fix missing error handling in afs_write_end()
    
    
    [ Upstream commit afae457d874860a7e299d334f59eede5f3ad4b47 ]
    
    afs_write_end() is missing page unlock and put if afs_fill_page() fails.
    
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ebaea9e65d20714120d92bc687bbf57f2f64a94
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Dec 2 09:13:04 2017 -0800

    genirq: Guard handle_bad_irq log messages
    
    
    [ Upstream commit 11bca0a83f83f6093d816295668e74ef24595944 ]
    
    An interrupt storm on a bad interrupt will cause the kernel
    log to be clogged.
    
    [   60.089234] ->handle_irq():  ffffffffbe2f803f,
    [   60.090455] 0xffffffffbf2af380
    [   60.090510] handle_bad_irq+0x0/0x2e5
    [   60.090522] ->irq_data.chip(): ffffffffbf2af380,
    [   60.090553]    IRQ_NOPROBE set
    [   60.090584] ->handle_irq():  ffffffffbe2f803f,
    [   60.090590] handle_bad_irq+0x0/0x2e5
    [   60.090596] ->irq_data.chip(): ffffffffbf2af380,
    [   60.090602] 0xffffffffbf2af380
    [   60.090608] ->action():           (null)
    [   60.090779] handle_bad_irq+0x0/0x2e5
    
    This was seen when running an upstream kernel on Acer Chromebook R11.  The
    system was unstable as result.
    
    Guard the log message with __printk_ratelimit to reduce the impact.  This
    won't prevent the interrupt storm from happening, but at least the system
    remains stable.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dmitry Torokhov <dtor@chromium.org>
    Cc: Joe Perches <joe@perches.com>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=197953
    Link: https://lkml.kernel.org/r/1512234784-21038-1-git-send-email-linux@roeck-us.net
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fd2d40b4667e06087c4df3913e2fec68d9095ba
Author: Nitzan Carmi <nitzanc@mellanox.com>
Date:   Tue Dec 26 11:20:20 2017 +0200

    IB/mlx5: Fix mlx5_ib_alloc_mr error flow
    
    
    [ Upstream commit 45e6ae7ef21b907dacb18da62d5787d74a31d860 ]
    
    ibmr.device is being set only after ib_alloc_mr() is
    (successfully) complete. Therefore, in case mlx5_core_create_mkey()
    return with error, the error flow calls mlx5_free_priv_descs()
    which uses ibmr.device (which doesn't exist yet), causing
    a NULL dereference oops.
    
    To fix this, the IB device should be set in the mr struct earlier
    stage (e.g. prior to calling mlx5_core_create_mkey()).
    
    Fixes: 8a187ee52b04 ("IB/mlx5: Support the new memory registration API")
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Nitzan Carmi <nitzanc@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2acc885913807ce4f6d21353d4d7525eaeb2c01
Author: Matthieu CASTET <matthieu.castet@parrot.com>
Date:   Tue Dec 12 11:10:44 2017 +0100

    led: core: Fix brightness setting when setting delay_off=0
    
    
    [ Upstream commit 2b83ff96f51d0b039c4561b9f95c824d7bddb85c ]
    
    With the current code, the following sequence won't work :
    echo timer > trigger
    
    echo 0 >  delay_off
    * at this point we call
    ** led_delay_off_store
    ** led_blink_set

commit 6b800ce9ee8452abfbbfe66bf9cdd13f4655e9a3
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Dec 27 19:45:31 2017 +0100

    perf/x86/intel: Plug memory leak in intel_pmu_init()
    
    
    [ Upstream commit 7ad1437d6ace0e450a6c1167720608ad660b191d ]
    
    A recent commit introduced an extra merge_attr() call in the skylake
    branch, which causes a memory leak.
    
    Store the pointer to the extra allocated memory and free it at the end of
    the function.
    
    Fixes: a5df70c354c2 ("perf/x86: Only show format attributes when supported")
    Reported-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f4c6c0453057d95ee910e65a0fec248f0cce5b8
Author: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
Date:   Fri Dec 22 13:01:39 2017 -0200

    bnx2x: Improve reliability in case of nested PCI errors
    
    
    [ Upstream commit f7084059a9cb9e56a186e1677b1dcffd76c2cd24 ]
    
    While in recovery process of PCI error (called EEH on PowerPC arch),
    another PCI transaction could be corrupted causing a situation of
    nested PCI errors. Also, this scenario could be reproduced with
    error injection mechanisms (for debug purposes).
    
    We observe that in case of nested PCI errors, bnx2x might attempt to
    initialize its shmem and cause a kernel crash due to bad addresses
    read from MCP. Multiple different stack traces were observed depending
    on the point the second PCI error happens.
    
    This patch avoids the crashes by:
    
     * failing PCI recovery in case of nested errors (since multiple
     PCI errors in a row are not expected to lead to a functional
     adapter anyway), and by,
    
     * preventing access to adapter FW when MCP is failed (we mark it as
     failed when shmem cannot get initialized properly).
    
    Reported-by: Abdul Haleem <abdhalee@linux.vnet.ibm.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Acked-by: Shahed Shaikh <Shahed.Shaikh@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f00176d7c5ea0c22c107baece22be1a113c72cd
Author: Siva Reddy Kallam <siva.kallam@broadcom.com>
Date:   Fri Dec 22 16:05:29 2017 +0530

    tg3: Enable PHY reset in MTU change path for 5720
    
    
    [ Upstream commit e60ee41aaf898584205a6af5c996860d0fe6a836 ]
    
    A customer noticed RX path hang when MTU is changed on the fly while
    running heavy traffic with NCSI enabled for 5717 and 5719. Since 5720
    belongs to same ASIC family, we observed same issue and same fix
    could solve this problem for 5720.
    
    Signed-off-by: Siva Reddy Kallam <siva.kallam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c0d89a2733597b57b7f138b5a586f380c881fdc
Author: Siva Reddy Kallam <siva.kallam@broadcom.com>
Date:   Fri Dec 22 16:05:28 2017 +0530

    tg3: Add workaround to restrict 5762 MRRS to 2048
    
    
    [ Upstream commit 4419bb1cedcda0272e1dc410345c5a1d1da0e367 ]
    
    One of AMD based server with 5762 hangs with jumbo frame traffic.
    This AMD platform has southbridge limitation which is restricting MRRS
    to 4000. As a work around, driver to restricts the MRRS to 2048 for
    this particular 5762 NX1 card.
    
    Signed-off-by: Siva Reddy Kallam <siva.kallam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 575650b6566b3e4795e19f3f3f8abb88dca0c12e
Author: Tommi Rantala <tommi.t.rantala@nokia.com>
Date:   Fri Dec 22 09:35:17 2017 +0200

    tipc: fix tipc_mon_delete() oops in tipc_enable_bearer() error path
    
    
    [ Upstream commit 642a8439ddd8423b92f2e71960afe21ee1f66bb6 ]
    
    Calling tipc_mon_delete() before the monitor has been created will oops.
    This can happen in tipc_enable_bearer() error path if tipc_disc_create()
    fails.
    
    [   48.589074] BUG: unable to handle kernel paging request at 0000000000001008
    [   48.590266] IP: tipc_mon_delete+0xea/0x270 [tipc]
    [   48.591223] PGD 1e60c5067 P4D 1e60c5067 PUD 1eb0cf067 PMD 0
    [   48.592230] Oops: 0000 [#1] SMP KASAN
    [   48.595610] CPU: 5 PID: 1199 Comm: tipc Tainted: G    B            4.15.0-rc4-pc64-dirty #5
    [   48.597176] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-2.fc27 04/01/2014
    [   48.598489] RIP: 0010:tipc_mon_delete+0xea/0x270 [tipc]
    [   48.599347] RSP: 0018:ffff8801d827f668 EFLAGS: 00010282
    [   48.600705] RAX: ffff8801ee813f00 RBX: 0000000000000204 RCX: 0000000000000000
    [   48.602183] RDX: 1ffffffff1de6a75 RSI: 0000000000000297 RDI: 0000000000000297
    [   48.604373] RBP: 0000000000000000 R08: 0000000000000000 R09: fffffbfff1dd1533
    [   48.605607] R10: ffffffff8eafbb05 R11: fffffbfff1dd1534 R12: 0000000000000050
    [   48.607082] R13: dead000000000200 R14: ffffffff8e73f310 R15: 0000000000001020
    [   48.608228] FS:  00007fc686484800(0000) GS:ffff8801f5540000(0000) knlGS:0000000000000000
    [   48.610189] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   48.611459] CR2: 0000000000001008 CR3: 00000001dda70002 CR4: 00000000003606e0
    [   48.612759] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   48.613831] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   48.615038] Call Trace:
    [   48.615635]  tipc_enable_bearer+0x415/0x5e0 [tipc]
    [   48.620623]  tipc_nl_bearer_enable+0x1ab/0x200 [tipc]
    [   48.625118]  genl_family_rcv_msg+0x36b/0x570
    [   48.631233]  genl_rcv_msg+0x5a/0xa0
    [   48.631867]  netlink_rcv_skb+0x1cc/0x220
    [   48.636373]  genl_rcv+0x24/0x40
    [   48.637306]  netlink_unicast+0x29c/0x350
    [   48.639664]  netlink_sendmsg+0x439/0x590
    [   48.642014]  SYSC_sendto+0x199/0x250
    [   48.649912]  do_syscall_64+0xfd/0x2c0
    [   48.650651]  entry_SYSCALL64_slow_path+0x25/0x25
    [   48.651843] RIP: 0033:0x7fc6859848e3
    [   48.652539] RSP: 002b:00007ffd25dff938 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
    [   48.654003] RAX: ffffffffffffffda RBX: 00007ffd25dff990 RCX: 00007fc6859848e3
    [   48.655303] RDX: 0000000000000054 RSI: 00007ffd25dff990 RDI: 0000000000000003
    [   48.656512] RBP: 00007ffd25dff980 R08: 00007fc685c35fc0 R09: 000000000000000c
    [   48.657697] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000d13010
    [   48.658840] R13: 00007ffd25e009c0 R14: 0000000000000000 R15: 0000000000000000
    [   48.662972] RIP: tipc_mon_delete+0xea/0x270 [tipc] RSP: ffff8801d827f668
    [   48.664073] CR2: 0000000000001008
    [   48.664576] ---[ end trace e811818d54d5ce88 ]---
    
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 831923622a595a047573c7ca38cb5d851fd1a87d
Author: Tommi Rantala <tommi.t.rantala@nokia.com>
Date:   Fri Dec 22 09:35:16 2017 +0200

    tipc: error path leak fixes in tipc_enable_bearer()
    
    
    [ Upstream commit 19142551b2be4a9e13838099fde1351386e5e007 ]
    
    Fix memory leak in tipc_enable_bearer() if enable_media() fails, and
    cleanup with bearer_disable() if tipc_mon_create() fails.
    
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbc3dbfe4f37d541d57c0acafa8bb463ed178ef5
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Mon Dec 25 11:34:54 2017 +0800

    netfilter: nf_tables: fix potential NULL-ptr deref in nf_tables_dump_obj_done()
    
    
    [ Upstream commit 8bea728dce8972e534e6b99fd550f7b5cc3864e8 ]
    
    If there is no NFTA_OBJ_TABLE and NFTA_OBJ_TYPE, the c.data will be NULL in
    nf_tables_getobj(). So before free filter->table in nf_tables_dump_obj_done(),
    we need to check if filter is NULL first.
    
    Fixes: e46abbcc05aa ("netfilter: nf_tables: Allow table names of up to 255 chars")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdbde4c04c5c63ccf7d91122d39ce0dbea71dbfa
Author: Antoine Ténart <antoine.tenart@free-electrons.com>
Date:   Mon Dec 11 12:10:57 2017 +0100

    crypto: inside-secure - fix request allocations in invalidation path
    
    
    [ Upstream commit 7cad2fabd5691dbb17762877d4e7f236fe4bc181 ]
    
    This patch makes use of the SKCIPHER_REQUEST_ON_STACK and
    AHASH_REQUEST_ON_STACK helpers to allocate enough memory to contain both
    the crypto request structures and their embedded context (__ctx).
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Suggested-by: Ofer Heifetz <oferh@marvell.com>
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cc6e8415d23807c06cf74618e9dc890f1ef21e1
Author: Antoine Ténart <antoine.tenart@free-electrons.com>
Date:   Mon Dec 11 12:10:56 2017 +0100

    crypto: inside-secure - free requests even if their handling failed
    
    
    [ Upstream commit 0a02dcca126280595950f3ea809f77c9cb0a235c ]
    
    This patch frees the request private data even if its handling failed,
    as it would never be freed otherwise.
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Suggested-by: Ofer Heifetz <oferh@marvell.com>
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0971f188da94e84d768c37bb10384463aaa003d4
Author: Ofer Heifetz <oferh@marvell.com>
Date:   Mon Dec 11 12:10:55 2017 +0100

    crypto: inside-secure - per request invalidation
    
    
    [ Upstream commit 1eb7b40386c97f6c4d1c62931bf306f4535a4bd6 ]
    
    When an invalidation request is needed we currently override the context
    .send and .handle_result helpers. This is wrong as under high load other
    requests can already be queued and overriding the context helpers will
    make them execute the wrong .send and .handle_result functions.
    
    This commit fixes this by adding a needs_inv flag in the request to
    choose the action to perform when sending requests or handling their
    results. This flag will be set when needed (i.e. when the context flag
    will be set).
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Signed-off-by: Ofer Heifetz <oferh@marvell.com>
    [Antoine: commit message, and removed non related changes from the
    original commit]
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0653ba0580aed7b4718115e97e3856f12fda7505
Author: Bogdan Mirea <Bogdan-Stefan_Mirea@mentor.com>
Date:   Thu Dec 21 17:18:59 2017 +0200

    arm64: dts: renesas: ulcb: Remove renesas, no-ether-link property
    
    
    [ Upstream commit 7d2901f809c110bd9a261e879d59efe62e3bc758 ]
    
    The present change is a bug fix for AVB link iteratively up/down.
    
    Steps to reproduce:
    - start AVB TX stream (Using aplay via MSE),
    - disconnect+reconnect the eth cable,
    - after a reconnection the eth connection goes iteratively up/down
      without user interaction,
    - this may heal after some seconds or even stay for minutes.
    
    As the documentation specifies, the "renesas,no-ether-link" option
    should be used when a board does not provide a proper AVB_LINK signal.
    There is no need for this option enabled on RCAR H3/M3 Salvator-X/XS
    and ULCB starter kits since the AVB_LINK is correctly handled by HW.
    
    Choosing to keep or remove the "renesas,no-ether-link" option will
    have impact on the code flow in the following ways:
    - keeping this option enabled may lead to unexpected behavior since
      the RX & TX are enabled/disabled directly from adjust_link function
      without any HW interrogation,
    - removing this option, the RX & TX will only be enabled/disabled after
      HW interrogation. The HW check is made through the LMON pin in PSR
      register which specifies AVB_LINK signal value (0 - at low level;
      1 - at high level).
    
    In conclusion, the present change is also a safety improvement because
    it removes the "renesas,no-ether-link" option leading to a proper way
    of detecting the link state based on HW interrogation and not on
    software heuristic.
    
    Fixes: dc36965a8905 ("arm64: dts: r8a7796: salvator-x: Enable EthernetAVB")
    Fixes: 6fa501c549aa ("arm64: dts: r8a7795: enable EthernetAVB on Salvator-X")
    Signed-off-by: Bogdan Mirea <Bogdan-Stefan_Mirea@mentor.com>
    Signed-off-by: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22d5e20c6a5538ec69b499562299412c1c19291d
Author: James Hogan <jhogan@kernel.org>
Date:   Tue Dec 5 23:31:35 2017 +0000

    lib/mpi: Fix umul_ppmm() for MIPS64r6
    
    
    [ Upstream commit bbc25bee37d2b32cf3a1fab9195b6da3a185614a ]
    
    Current MIPS64r6 toolchains aren't able to generate efficient
    DMULU/DMUHU based code for the C implementation of umul_ppmm(), which
    performs an unsigned 64 x 64 bit multiply and returns the upper and
    lower 64-bit halves of the 128-bit result. Instead it widens the 64-bit
    inputs to 128-bits and emits a __multi3 intrinsic call to perform a 128
    x 128 multiply. This is both inefficient, and it results in a link error
    since we don't include __multi3 in MIPS linux.
    
    For example commit 90a53e4432b1 ("cfg80211: implement regdb signature
    checking") merged in v4.15-rc1 recently broke the 64r6_defconfig and
    64r6el_defconfig builds by indirectly selecting MPILIB. The same build
    errors can be reproduced on older kernels by enabling e.g. CRYPTO_RSA:
    
    lib/mpi/generic_mpih-mul1.o: In function `mpihelp_mul_1':
    lib/mpi/generic_mpih-mul1.c:50: undefined reference to `__multi3'
    lib/mpi/generic_mpih-mul2.o: In function `mpihelp_addmul_1':
    lib/mpi/generic_mpih-mul2.c:49: undefined reference to `__multi3'
    lib/mpi/generic_mpih-mul3.o: In function `mpihelp_submul_1':
    lib/mpi/generic_mpih-mul3.c:49: undefined reference to `__multi3'
    lib/mpi/mpih-div.o In function `mpihelp_divrem':
    lib/mpi/mpih-div.c:205: undefined reference to `__multi3'
    lib/mpi/mpih-div.c:142: undefined reference to `__multi3'
    
    Therefore add an efficient MIPS64r6 implementation of umul_ppmm() using
    inline assembly and the DMULU/DMUHU instructions, to prevent __multi3
    calls being emitted.
    
    Fixes: 7fd08ca58ae6 ("MIPS: Add build support for the MIPS R6 ISA")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: linux-mips@linux-mips.org
    Cc: linux-crypto@vger.kernel.org
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36d0a678fb25a7bce5bf9b2828c0d9395fa9a990
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Tue Dec 19 10:27:24 2017 +0000

    crypto: af_alg - Fix race around ctx->rcvused by making it atomic_t
    
    
    [ Upstream commit af955bf15d2c27496b0269b1f05c26f758c68314 ]
    
    This variable was increased and decreased without any protection.
    Result was an occasional misscount and negative wrap around resulting
    in false resource allocation failures.
    
    Fixes: 7d2c3f54e6f6 ("crypto: af_alg - remove locking in async callback")
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reviewed-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99b329b4611a17df15e7122fdf4bbfb8a1245d67
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 21 22:35:19 2017 +0100

    ARM: dts: ls1021a: fix incorrect clock references
    
    
    [ Upstream commit 506e8a912661c97b41adc8a286b875d01323ec45 ]
    
    dtc warns about two 'clocks' properties that have an extraneous '1'
    at the end:
    
    arch/arm/boot/dts/ls1021a-qds.dtb: Warning (clocks_property): arch/arm/boot/dts/ls1021a-twr.dtb: Warning (clocks_property): Property 'clocks', cell 1 is not a phandle reference in /soc/i2c@2180000/mux@77/i2c@4/sgtl5000@2a
    arch/arm/boot/dts/ls1021a-qds.dtb: Warning (clocks_property): Missing property '#clock-cells' in node /soc/interrupt-controller@1400000 or bad phandle (referred from /soc/i2c@2180000/mux@77/i2c@4/sgtl5000@2a:clocks[1])
    Property 'clocks', cell 1 is not a phandle reference in /soc/i2c@2190000/sgtl5000@a
    arch/arm/boot/dts/ls1021a-twr.dtb: Warning (clocks_property): Missing property '#clock-cells' in node /soc/interrupt-controller@1400000 or bad phandle (referred from /soc/i2c@2190000/sgtl5000@a:clocks[1])
    
    The clocks that get referenced here are fixed-rate, so they do not
    take any argument, and dtc interprets the next cell as a phandle, which
    is invalid.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8164587e5262d106891fc97c1fa2c4342c7d6c94
Author: Bryan Tan <bryantan@vmware.com>
Date:   Wed Dec 20 09:49:03 2017 -0800

    RDMA/vmw_pvrdma: Call ib_umem_release on destroy QP path
    
    
    [ Upstream commit 17748056ce123ee37fb7382bc698fc721e3c4a09 ]
    
    The QP cleanup did not previously call ib_umem_release,
    resulting in a user-triggerable kernel resource leak.
    
    Fixes: 29c8d9eba550 ("IB: Add vmw_pvrdma driver")
    Reviewed-by: Adit Ranadive <aditr@vmware.com>
    Reviewed-by: Aditya Sarwade <asarwade@vmware.com>
    Reviewed-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: Bryan Tan <bryantan@vmware.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 831c169c9bacec777ec210cd34575016ef2b6338
Author: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
Date:   Tue Dec 19 22:24:10 2017 -0200

    i915: Reject CCS modifiers for pipe C on Geminilake
    
    
    [ Upstream commit 8bc0d7ac934b6f2d0dc8f38a3104d281c9db1e98 ]
    
    Current code advertises (on the modifiers blob property) support for CCS
    modifier for pipe C on GLK, only to reject it later when validating the
    request before the atomic commit.
    
    This fixes the tests igt@kms_ccs@pipe-c-*, which should skip on GLK for
    pipe C (see bug 104096).
    
    A relevant discussion is archived at:
    
    https://lists.freedesktop.org/archives/intel-gfx/2017-December/150646.html
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=104096
    Signed-off-by: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
    Cc: Ben Widawsky <ben@bwidawsk.net>
    Reviewed-by: Ben Widawsky <ben@bwidawsk.net>
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171220002410.5604-1-krisman@collabora.co.uk
    (cherry picked from commit f0cbd8bd877f3d8c5b80a6b1add9ca9010d7f9d8)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a5c84b1055a1882992de51f1b2bb5b0989cbbf6
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Dec 20 12:08:33 2017 +0100

    netfilter: uapi: correct UNTRACKED conntrack state bit number
    
    
    [ Upstream commit 4c82fd0abb87e20d0d68ef5237e74732352806c8 ]
    
    nft_ct exposes this bit to userspace.  This used to be
    
      #define NF_CT_STATE_UNTRACKED_BIT              (1 << (IP_CT_NUMBER + 1))
      (IP_CT_NUMBER is 5, so this was 0x40)
    
    .. but this got changed to 8 (0x100) when the untracked object got removed.
    Replace this with a literal 6 to prevent further incompatible changes
    in case IP_CT_NUMBER ever increases.
    
    Fixes: cc41c84b7e7f2 ("netfilter: kill the fake untracked conntrack objects")
    Reported-by: Li Shuang <shuali@redhat.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7b0385937fa163b8d8e68f38d90938143ef4feb
Author: Cathy Avery <cavery@redhat.com>
Date:   Tue Dec 19 13:32:48 2017 -0500

    scsi: storvsc: Fix scsi_cmd error assignments in storvsc_handle_error
    
    
    [ Upstream commit d1b8b2391c24751e44f618fcf86fb55d9a9247fd ]
    
    When an I/O is returned with an srb_status of SRB_STATUS_INVALID_LUN
    which has zero good_bytes it must be assigned an error. Otherwise the
    I/O will be continuously requeued and will cause a deadlock in the case
    where disks are being hot added and removed. sd_probe_async will wait
    forever for its I/O to complete while holding scsi_sd_probe_domain.
    
    Also returning the default error of DID_TARGET_FAILURE causes multipath
    to not retry the I/O resulting in applications receiving I/O errors
    before a failover can occur.
    
    Signed-off-by: Cathy Avery <cavery@redhat.com>
    Signed-off-by: Long Li <longli@microsoft.com>
    Reviewed-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2f52fa3f8d6fa949afebbb4dc24f71bc0785803
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Tue Dec 19 12:01:21 2017 +0100

    netfilter: nf_tables: fix chain filter in nf_tables_dump_rules()
    
    
    [ Upstream commit 24c0df82ef7919e4d10cf2e4e65d368eb2e8ea21 ]
    
    ctx->chain may be null now that we have very large object names,
    so we cannot check for ctx->chain[0] here.
    
    Fixes: b7263e071aba7 ("netfilter: nf_tables: Allow table names of up to 255 chars")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Acked-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit def8d0ae4ac9a1dd9fb6e8a7ffe6aadf2893d848
Author: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Date:   Tue Dec 12 15:08:21 2017 -0500

    xen/balloon: Mark unallocated host memory as UNUSABLE
    
    
    [ Upstream commit b3cf8528bb21febb650a7ecbf080d0647be40b9f ]
    
    Commit f5775e0b6116 ("x86/xen: discard RAM regions above the maximum
    reservation") left host memory not assigned to dom0 as available for
    memory hotplug.
    
    Unfortunately this also meant that those regions could be used by
    others. Specifically, commit fa564ad96366 ("x86/PCI: Enable a 64bit BAR
    on AMD Family 15h (Models 00-1f, 30-3f, 60-7f)") may try to map those
    addresses as MMIO.
    
    To prevent this mark unallocated host memory as E820_TYPE_UNUSABLE (thus
    effectively reverting f5775e0b6116) and keep track of that region as
    a hostmem resource that can be used for the hotplug.
    
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit caca324f93736279bece65d54b6efe394d6e00d6
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Dec 20 06:11:59 2017 +0000

    ASoC: rsnd: fixup ADG register mask
    
    
    [ Upstream commit d5aa24825da5711f8cb829f873160ddf1a29b19c ]
    
    BRGCKR should use 0x80770000, instead of 0x80FF0000.
    
    R-Car Gen2 xxx_TIMSEL should use 0x0F1F,
    R-Car Gen3 xxx_TIMSEL should use 0x1F1F.
    Here, Gen3 doesn't support AVD, thus, both case can use 0x0F1F.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Hiroyuki Yokoyama <hiroyuki.yokoyama.vx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43da2bcade2a05e0aef0ab26a879f9c9c246aa7d
Author: Moshe Shemesh <moshe@mellanox.com>
Date:   Mon Dec 4 15:23:51 2017 +0200

    net/mlx5: Stay in polling mode when command EQ destroy fails
    
    
    [ Upstream commit a2fba188fd5eadd6061bef4f2f2577a43231ebf3 ]
    
    During unload, on mlx5_stop_eqs we move command interface from events
    mode to polling mode, but if command interface EQ destroy fail we move
    back to events mode.
    That's wrong since even if we fail to destroy command interface EQ, we
    do release its irq, so no interrupts will be received.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2cfb1c664c31dc692736800c71b2a78ca0af1f7
Author: Moshe Shemesh <moshe@mellanox.com>
Date:   Tue Nov 21 15:15:51 2017 +0200

    net/mlx5: Cleanup IRQs in case of unload failure
    
    
    [ Upstream commit d6b2785cd55ee72e9608762650b3ef299f801b1b ]
    
    When mlx5_stop_eqs fails to destroy any of the eqs it returns with an error.
    In such failure flow the function will return without
    releasing all EQs irqs and then pci_free_irq_vectors will fail.
    Fix by only warn on destroy EQ failure and continue to release other
    EQs and their irqs.
    
    It fixes the following kernel trace:
    kernel: kernel BUG at drivers/pci/msi.c:352!
    ...
    ...
    kernel: Call Trace:
    kernel: pci_disable_msix+0xd3/0x100
    kernel: pci_free_irq_vectors+0xe/0x20
    kernel: mlx5_load_one.isra.17+0x9f5/0xec0 [mlx5_core]
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a472c21129100a3dbb6c77485876280d7729259
Author: Huy Nguyen <huyn@mellanox.com>
Date:   Thu Oct 26 09:56:34 2017 -0500

    net/mlx5e: Fix ETS BW check
    
    
    [ Upstream commit ff0891915cd7b24ab27eee9b360c0452853bf9f6 ]
    
    Fix bug that allows ets bw sum to be 0% when ets tc type exists.
    
    Fixes: 08fb1dacdd76 ('net/mlx5e: Support DCBNL IEEE ETS')
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Reviewed-by: Huy Nguyen <huyn@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11be1c24a60d31004d797bc976522be34ae233ed
Author: Fredrik Hallenberg <megahallon@gmail.com>
Date:   Mon Dec 18 23:34:00 2017 +0100

    net: stmmac: Fix bad RX timestamp extraction
    
    
    [ Upstream commit a1762456993893795030d911106a7650481db0ef ]
    
    As noted in dwmac4_wrback_get_rx_timestamp_status the timestamp is found
    in the context descriptor following the current descriptor. However the
    current code looks for the context descriptor in the current
    descriptor, which will always fail.
    
    Signed-off-by: Fredrik Hallenberg <megahallon@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06dcd2d77a0108b82d4131aa76333d94b66c6cfc
Author: Fredrik Hallenberg <megahallon@gmail.com>
Date:   Mon Dec 18 23:33:59 2017 +0100

    net: stmmac: Fix TX timestamp calculation
    
    
    [ Upstream commit 200922c93f008e03ddc804c6dacdf26ca1ba86d7 ]
    
    When using GMAC4 the value written in PTP_SSIR should be shifted however
    the shifted value is also used in subsequent calculations which results
    in a bad timestamp value.
    
    Signed-off-by: Fredrik Hallenberg <megahallon@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3eeac1d10a1bd21ec210e77b9f3b08d2dc7e1d1f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:26:21 2017 +0800

    ip6_tunnel: get the min mtu properly in ip6_tnl_xmit
    
    
    [ Upstream commit c9fefa08190fc879fb2e681035d7774e0a8c5170 ]
    
    Now it's using IPV6_MIN_MTU as the min mtu in ip6_tnl_xmit, but
    IPV6_MIN_MTU actually only works when the inner packet is ipv6.
    
    With IPV6_MIN_MTU for ipv4 packets, the new pmtu for inner dst
    couldn't be set less than 1280. It would cause tx_err and the
    packet to be dropped when the outer dst pmtu is close to 1280.
    
    Jianlin found it by running ipv4 traffic with the topo:
    
      (client) gre6 <---> eth1 (route) eth2 <---> gre6 (server)
    
    After changing eth2 mtu to 1300, the performance became very
    low, or the connection was even broken. The issue also affects
    ip4ip6 and ip6ip6 tunnels.
    
    So if the inner packet is ipv4, 576 should be considered as the
    min mtu.
    
    Note that for ip4ip6 and ip6ip6 tunnels, the inner packet can
    only be ipv4 or ipv6, but for gre6 tunnel, it may also be ARP.
    This patch using 576 as the min mtu for non-ipv6 packet works
    for all those cases.
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5dc4cbcfb5f2b43656283835c564eeae1951bf4d
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:25:09 2017 +0800

    ip6_gre: remove the incorrect mtu limit for ipgre tap
    
    
    [ Upstream commit 2c52129a7d74d017320804c6928de770815c5f4a ]
    
    The same fix as the patch "ip_gre: remove the incorrect mtu limit for
    ipgre tap" is also needed for ip6_gre.
    
    Fixes: 61e84623ace3 ("net: centralize net_device min/max MTU checking")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 212ea3380bbb9f3915f2f7677cd0eae825711a94
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:24:35 2017 +0800

    ip_gre: remove the incorrect mtu limit for ipgre tap
    
    
    [ Upstream commit cfddd4c33c254954927942599d299b3865743146 ]
    
    ipgre tap driver calls ether_setup(), after commit 61e84623ace3
    ("net: centralize net_device min/max MTU checking"), the range
    of mtu is [min_mtu, max_mtu], which is [68, 1500] by default.
    
    It causes the dev mtu of the ipgre tap device to not be greater
    than 1500, this limit value is not correct for ipgre tap device.
    
    Besides, it's .change_mtu already does the right check. So this
    patch is just to set max_mtu as 0, and leave the check to it's
    .change_mtu.
    
    Fixes: 61e84623ace3 ("net: centralize net_device min/max MTU checking")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4699beb7712768c38d009301a2d20f1f1e567294
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:20:56 2017 +0800

    vxlan: update skb dst pmtu on tx path
    
    
    [ Upstream commit a93bf0ff449064e6b7f44e58522e940f88c0d966 ]
    
    Unlike ip tunnels, now vxlan doesn't do any pmtu update for
    upper dst pmtu, even if it doesn't match the lower dst pmtu
    any more.
    
    The problem can be reproduced when reducing the vxlan lower
    dev's pmtu when running netperf. In jianlin's testing, the
    performance went to 1/7 of the previous.
    
    This patch is to update the upper dst pmtu to match the lower
    dst pmtu on tx path so that packets can be sent out even when
    lower dev's pmtu has been changed.
    
    It also works for metadata dst.
    
    Note that this patch doesn't process any pmtu icmp packet.
    But even in the future, the support for pmtu icmp packets
    process of udp tunnels will also needs this.
    
    The same thing will be done for geneve in another patch.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26e6b9f0be83ae820d603bd1cfc6fdc77ea23193
Author: Alexander Kochetkov <al.kochet@gmail.com>
Date:   Fri Dec 15 20:20:06 2017 +0300

    net: arc_emac: fix arc_emac_rx() error paths
    
    
    [ Upstream commit e688822d035b494071ecbadcccbd6f3325fb0f59 ]
    
    arc_emac_rx() has some issues found by code review.
    
    In case netdev_alloc_skb_ip_align() or dma_map_single() failure
    rx fifo entry will not be returned to EMAC.
    
    In case dma_map_single() failure previously allocated skb became
    lost to driver. At the same time address of newly allocated skb
    will not be provided to EMAC.
    
    Signed-off-by: Alexander Kochetkov <al.kochet@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b72f8c448eceb2d0a683362f4a6f05b6f30c093
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Mon Dec 18 17:00:17 2017 +0800

    net: mediatek: setup proper state for disabled GMAC on the default
    
    
    [ Upstream commit 7352e252b5bf40d59342494a70354a2d436fd0cd ]
    
    The current solution would setup fixed and force link of 1Gbps to the both
    GMAC on the default. However, The GMAC should always be put to link down
    state when the GMAC is disabled on certain target boards. Otherwise,
    the driver possibly receives unexpected data from the floating hardware
    connection through the unused GMAC. Although the driver had been added
    certain protection in RX path to get rid of such kind of unexpected data
    sent to the upper stack.
    
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7f40ff40061bbf45a32a38100c4bddc0ab56840
Author: Jan Beulich <JBeulich@suse.com>
Date:   Mon Dec 18 09:37:45 2017 -0700

    x86-64/Xen: eliminate W+X mappings
    
    
    [ Upstream commit 2cc42bac1c795f75fcc062b95c6ca7ac1b84d5d8 ]
    
    A few thousand such pages are usually left around due to the re-use of
    L1 tables having been provided by the hypervisor (Dom0) or tool stack
    (DomU). Set NX in the direct map variant, which needs to be done in L2
    due to the dual use of the re-used L1s.
    
    For x86_configure_nx() to actually do what it is supposed to do, call
    get_cpu_cap() first. This was broken by commit 4763ed4d45 ("x86, mm:
    Clean up and simplify NX enablement") when switching away from the
    direct EFER read.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54c153a0847bb13bf9f4131c7acfc8059461b597
Author: John Stultz <john.stultz@linaro.org>
Date:   Fri Dec 15 19:59:47 2017 -0800

    staging: ion: Fix ion_cma_heap allocations
    
    
    [ Upstream commit f292b9b28097d8fe870336108e91bd95a14294bf ]
    
    In trying to add support for drm_hwcomposer to HiKey,
    I've needed to utilize the ION CMA heap, and I've noticed
    problems with allocations on newer kernels failing.
    
    It seems back with 204f672255c2 ("ion: Use CMA APIs directly"),
    the ion_cma_heap code was modified to use the CMA API, but
    kept the arguments as buffer lengths rather then number of pages.
    
    This results in errors as we don't have enough pages in CMA to
    satisfy the exaggerated requests.
    
    This patch converts the ion_cma_heap CMA API usage to properly
    request pages.
    
    It also fixes a minor issue in the allocation where in the error
    path, the cma_release is called with the buffer->size value which
    hasn't yet been set.
    
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Cc: Archit Taneja <architt@codeaurora.org>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Dmitry Shmidt <dimitrysh@google.com>
    Cc: Todd Kjos <tkjos@google.com>
    Cc: Amit Pundir <amit.pundir@linaro.org>
    Fixes: 204f672255c2 ("staging: android: ion: Use CMA APIs directly")
    Acked-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d61a373f4344abf10418fa1d41e41f64c82403e9
Author: Prateek Sood <prsood@codeaurora.org>
Date:   Tue Dec 19 12:56:57 2017 +0530

    cgroup: Fix deadlock in cpu hotplug path
    
    
    [ Upstream commit 116d2f7496c51b2e02e8e4ecdd2bdf5fb9d5a641 ]
    
    Deadlock during cgroup migration from cpu hotplug path when a task T is
    being moved from source to destination cgroup.
    
    kworker/0:0
    cpuset_hotplug_workfn()
       cpuset_hotplug_update_tasks()
          hotplug_update_tasks_legacy()
            remove_tasks_in_empty_cpuset()
              cgroup_transfer_tasks() // stuck in iterator loop
                cgroup_migrate()
                  cgroup_migrate_add_task()
    
    In cgroup_migrate_add_task() it checks for PF_EXITING flag of task T.
    Task T will not migrate to destination cgroup. css_task_iter_start()
    will keep pointing to task T in loop waiting for task T cg_list node
    to be removed.
    
    Task T
    do_exit()
      exit_signals() // sets PF_EXITING
      exit_task_namespaces()
        switch_task_namespaces()
          free_nsproxy()
            put_mnt_ns()
              drop_collected_mounts()
                namespace_unlock()
                  synchronize_rcu()
                    _synchronize_rcu_expedited()
                      schedule_work() // on cpu0 low priority worker pool
                      wait_event() // waiting for work item to execute
    
    Task T inserted a work item in the worklist of cpu0 low priority
    worker pool. It is waiting for expedited grace period work item
    to execute. This work item will only be executed once kworker/0:0
    complete execution of cpuset_hotplug_workfn().
    
    kworker/0:0 ==> Task T ==>kworker/0:0
    
    In case of PF_EXITING task being migrated from source to destination
    cgroup, migrate next available task in source cgroup.
    
    Signed-off-by: Prateek Sood <prsood@codeaurora.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56d80186a5ac8af22dc583f9db043a1a0c54c435
Author: Abhijeet Kumar <abhijeet.kumar@intel.com>
Date:   Tue Dec 12 00:40:25 2017 +0530

    ASoC: nau8825: fix issue that pop noise when start capture
    
    
    [ Upstream commit d070f7c703ef26e3db613f24206823f916272fc6 ]
    
    In skylake platform, we hear a loud pop noise(0 dB) at start of
    audio capture power up sequence. This patch removes the pop noise
    from the recording by adding a delay before enabling ADC.
    
    Signed-off-by: Abhijeet Kumar <abhijeet.kumar@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cf652bedcb9acd5491715adc7996f35d33c409a
Author: Radu Pirea <radu.pirea@microchip.com>
Date:   Fri Dec 15 17:40:17 2017 +0200

    spi: atmel: fixed spin_lock usage inside atmel_spi_remove
    
    
    [ Upstream commit 66e900a3d225575c8b48b59ae1fe74bb6e5a65cc ]
    
    The only part of atmel_spi_remove which needs to be atomic is hardware
    reset.
    
    atmel_spi_stop_dma calls dma_terminate_all and this needs interrupts
    enabled.
    atmel_spi_release_dma calls dma_release_channel and dma_release_channel
    locks a mutex inside of spin_lock.
    
    So the call of these functions can't be inside a spin_lock.
    
    Reported-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Radu Pirea <radu.pirea@microchip.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52a63f35cd70fd2fdfdf148b1896d2659c5aa3ed
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Tue Dec 12 17:26:36 2017 +0800

    mac80211_hwsim: Fix a possible sleep-in-atomic bug in hwsim_get_radio_nl
    
    
    [ Upstream commit 162bd5e5fd921785077b5862d8f2ffabe2fe11e5 ]
    
    The driver may sleep under a spinlock.
    The function call path is:
    hwsim_get_radio_nl (acquire the spinlock)
      nlmsg_new(GFP_KERNEL) --> may sleep
    
    To fix it, GFP_KERNEL is replaced with GFP_ATOMIC.
    
    This bug is found by my static analysis tool(DSAC) and checked by my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 647ed111f78ffc7fe6bd654c615ddbd013e2c44a
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Dec 18 15:13:44 2017 -0600

    x86/stacktrace: Make zombie stack traces reliable
    
    
    [ Upstream commit 6454b3bdd138dfc640deb5e7b9a0668fca2d55dd ]
    
    Commit:
    
      1959a60182f4 ("x86/dumpstack: Pin the target stack when dumping it")
    
    changed the behavior of stack traces for zombies.  Before that commit,
    /proc/<pid>/stack reported the last execution path of the zombie before
    it died:
    
      [<ffffffff8105b877>] do_exit+0x6f7/0xa80
      [<ffffffff8105bc79>] do_group_exit+0x39/0xa0
      [<ffffffff8105bcf0>] __wake_up_parent+0x0/0x30
      [<ffffffff8152dd09>] system_call_fastpath+0x16/0x1b
      [<00007fd128f9c4f9>] 0x7fd128f9c4f9
      [<ffffffffffffffff>] 0xffffffffffffffff
    
    After the commit, it just reports an empty stack trace.
    
    The new behavior is actually probably more correct.  If the stack
    refcount has gone down to zero, then the task has already gone through
    do_exit() and isn't going to run anymore.  The stack could be freed at
    any time and is basically gone, so reporting an empty stack makes sense.
    
    However, save_stack_trace_tsk_reliable() treats such a missing stack
    condition as an error.  That can cause livepatch transition stalls if
    there are any unreaped zombies.  Instead, just treat it as a reliable,
    empty stack.
    
    Reported-and-tested-by: Miroslav Benes <mbenes@suse.cz>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: live-patching@vger.kernel.org
    Fixes: af085d9084b4 ("stacktrace/x86: add function for detecting reliable stack traces")
    Link: http://lkml.kernel.org/r/e4b09e630e99d0c1080528f0821fc9d9dbaeea82.1513631620.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e095ecaec6d94aa2156cceb98a85d409b51190f3
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Dec 15 16:40:44 2017 +1100

    xfrm: Reinject transport-mode packets through tasklet
    
    
    [ Upstream commit acf568ee859f098279eadf551612f103afdacb4e ]
    
    This is an old bugbear of mine:
    
    https://www.mail-archive.com/netdev@vger.kernel.org/msg03894.html
    
    By crafting special packets, it is possible to cause recursion
    in our kernel when processing transport-mode packets at levels
    that are only limited by packet size.
    
    The easiest one is with DNAT, but an even worse one is where
    UDP encapsulation is used in which case you just have to insert
    an UDP encapsulation header in between each level of recursion.
    
    This patch avoids this problem by reinjecting tranport-mode packets
    through a tasklet.
    
    Fixes: b05e106698d9 ("[IPV4/6]: Netfilter IPsec input hooks")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e677319068b07f7f00154e83a96b2501709e6dab
Author: Karol Herbst <kherbst@redhat.com>
Date:   Fri Nov 24 03:56:26 2017 +0100

    drm/nouveau/pci: do a msi rearm on init
    
    
    [ Upstream commit a121027d2747168df0aac0c3da35509eea39f61c ]
    
    On my GP107 when I load nouveau after unloading it, for some reason the
    GPU stopped sending or the CPU stopped receiving interrupts if MSI was
    enabled.
    
    Doing a rearm once before getting any interrupts fixes this.
    
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Reviewed-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b9aeeb6070e5f618089e2f6cb7a1c1e352177ab
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Dec 16 00:52:39 2017 +0300

    net: phy: xgene: disable clk on error paths
    
    
    [ Upstream commit ab14436065c8066c265540312742390d6d07ddd2 ]
    
    There are several error paths in xgene_mdio_probe(),
    where clk is left undisabled. The patch fixes them.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac4dc9f1af33538ba475484b1dcb95bbbcef41a6
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Dec 18 15:05:07 2017 -0500

    sget(): handle failures of register_shrinker()
    
    
    [ Upstream commit 9ee332d99e4d5a97548943b81c54668450ce641b ]
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60f1c1f279925a5c3b68edc303c275ae50451c4b
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:07:25 2017 +0800

    sctp: fix the issue that a __u16 variable may overflow in sctp_ulpq_renege
    
    
    [ Upstream commit 5c468674d17056148da06218d4da5d04baf22eac ]
    
    Now when reneging events in sctp_ulpq_renege(), the variable freed
    could be increased by a __u16 value twice while freed is of __u16
    type. It means freed may overflow at the second addition.
    
    This patch is to fix it by using __u32 type for 'freed', while at
    it, also to remove 'if (chunk)' check, as all renege commands are
    generated in sctp_eat_data and it can't be NULL.
    
    Reported-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8b8dd735938be43afa6a2b6a9ea8c43441bcc09
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Dec 4 13:08:47 2017 -0300

    x86/asm: Allow again using asm.h when building for the 'bpf' clang target
    
    
    [ Upstream commit ca26cffa4e4aaeb09bb9e308f95c7835cb149248 ]
    
    Up to f5caf621ee35 ("x86/asm: Fix inline asm call constraints for Clang")
    we were able to use x86 headers to build to the 'bpf' clang target, as
    done by the BPF code in tools/perf/.
    
    With that commit, we ended up with following failure for 'perf test LLVM', this
    is because "clang ... -target bpf ..." fails since 4.0 does not have bpf inline
    asm support and 6.0 does not recognize the register 'esp', fix it by guarding
    that part with an #ifndef __BPF__, that is defined by clang when building to
    the "bpf" target.
    
      # perf test -v LLVM
      37: LLVM search and compile                               :
      37.1: Basic BPF llvm compile                              :
      --- start ---
      test child forked, pid 25526
      Kernel build dir is set to /lib/modules/4.14.0+/build
      set env: KBUILD_DIR=/lib/modules/4.14.0+/build
      unset env: KBUILD_OPTS
      include option is set to  -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: NR_CPUS=4
      set env: LINUX_VERSION_CODE=0x40e00
      set env: CLANG_EXEC=/usr/local/bin/clang
      set env: CLANG_OPTIONS=-xc
      set env: KERNEL_INC_OPTIONS= -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: WORKING_DIR=/lib/modules/4.14.0+/build
      set env: CLANG_SOURCE=-
      llvm compiling command template: echo '/*
       * bpf-script-example.c
       * Test basic LLVM building
       */
      #ifndef LINUX_VERSION_CODE
      # error Need LINUX_VERSION_CODE
      # error Example: for 4.2 kernel, put 'clang-opt="-DLINUX_VERSION_CODE=0x40200" into llvm section of ~/.perfconfig'
      #endif
      #define BPF_ANY 0
      #define BPF_MAP_TYPE_ARRAY 2
      #define BPF_FUNC_map_lookup_elem 1
      #define BPF_FUNC_map_update_elem 2
    
      static void *(*bpf_map_lookup_elem)(void *map, void *key) =
              (void *) BPF_FUNC_map_lookup_elem;
      static void *(*bpf_map_update_elem)(void *map, void *key, void *value, int flags) =
              (void *) BPF_FUNC_map_update_elem;
    
      struct bpf_map_def {
              unsigned int type;
              unsigned int key_size;
              unsigned int value_size;
              unsigned int max_entries;
      };
    
      #define SEC(NAME) __attribute__((section(NAME), used))
      struct bpf_map_def SEC("maps") flip_table = {
              .type = BPF_MAP_TYPE_ARRAY,
              .key_size = sizeof(int),
              .value_size = sizeof(int),
              .max_entries = 1,
      };
    
      SEC("func=SyS_epoll_wait")
      int bpf_func__SyS_epoll_wait(void *ctx)
      {
              int ind =0;
              int *flag = bpf_map_lookup_elem(&flip_table, &ind);
              int new_flag;
              if (!flag)
                      return 0;
              /* flip flag and store back */
              new_flag = !*flag;
              bpf_map_update_elem(&flip_table, &ind, &new_flag, BPF_ANY);
              return new_flag;
      }
      char _license[] SEC("license") = "GPL";
      int _version SEC("version") = LINUX_VERSION_CODE;
      ' | $CLANG_EXEC -D__KERNEL__ -D__NR_CPUS__=$NR_CPUS -DLINUX_VERSION_CODE=$LINUX_VERSION_CODE $CLANG_OPTIONS $KERNEL_INC_OPTIONS -Wno-unused-value -Wno-pointer-sign -working-directory $WORKING_DIR -c "$CLANG_SOURCE" -target bpf -O2 -o -
      test child finished with 0
      ---- end ----
      LLVM search and compile subtest 0: Ok
      37.2: kbuild searching                                    :
      --- start ---
      test child forked, pid 25950
      Kernel build dir is set to /lib/modules/4.14.0+/build
      set env: KBUILD_DIR=/lib/modules/4.14.0+/build
      unset env: KBUILD_OPTS
      include option is set to  -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: NR_CPUS=4
      set env: LINUX_VERSION_CODE=0x40e00
      set env: CLANG_EXEC=/usr/local/bin/clang
      set env: CLANG_OPTIONS=-xc
      set env: KERNEL_INC_OPTIONS= -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: WORKING_DIR=/lib/modules/4.14.0+/build
      set env: CLANG_SOURCE=-
      llvm compiling command template: echo '/*
       * bpf-script-test-kbuild.c
       * Test include from kernel header
       */
      #ifndef LINUX_VERSION_CODE
      # error Need LINUX_VERSION_CODE
      # error Example: for 4.2 kernel, put 'clang-opt="-DLINUX_VERSION_CODE=0x40200" into llvm section of ~/.perfconfig'
      #endif
      #define SEC(NAME) __attribute__((section(NAME), used))
    
      #include <uapi/linux/fs.h>
      #include <uapi/asm/ptrace.h>
    
      SEC("func=vfs_llseek")
      int bpf_func__vfs_llseek(void *ctx)
      {
              return 0;
      }
    
      char _license[] SEC("license") = "GPL";
      int _version SEC("version") = LINUX_VERSION_CODE;
      ' | $CLANG_EXEC -D__KERNEL__ -D__NR_CPUS__=$NR_CPUS -DLINUX_VERSION_CODE=$LINUX_VERSION_CODE $CLANG_OPTIONS $KERNEL_INC_OPTIONS -Wno-unused-value -Wno-pointer-sign -working-directory $WORKING_DIR -c "$CLANG_SOURCE" -target bpf -O2 -o -
      In file included from <stdin>:12:
      In file included from /home/acme/git/linux/arch/x86/include/uapi/asm/ptrace.h:5:
      In file included from /home/acme/git/linux/include/linux/compiler.h:242:
      In file included from /home/acme/git/linux/arch/x86/include/asm/barrier.h:5:
      In file included from /home/acme/git/linux/arch/x86/include/asm/alternative.h:10:
      /home/acme/git/linux/arch/x86/include/asm/asm.h:145:50: error: unknown register name 'esp' in asm
      register unsigned long current_stack_pointer asm(_ASM_SP);
                                                       ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:44:18: note: expanded from macro '_ASM_SP'
      #define _ASM_SP         __ASM_REG(sp)
                              ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:27:32: note: expanded from macro '__ASM_REG'
      #define __ASM_REG(reg)         __ASM_SEL_RAW(e##reg, r##reg)
                                     ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:18:29: note: expanded from macro '__ASM_SEL_RAW'
      # define __ASM_SEL_RAW(a,b) __ASM_FORM_RAW(a)
                                  ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:11:32: note: expanded from macro '__ASM_FORM_RAW'
      # define __ASM_FORM_RAW(x)     #x
                                     ^
      <scratch space>:4:1: note: expanded from here
      "esp"
      ^
      1 error generated.
      ERROR:        unable to compile -
      Hint: Check error message shown above.
      Hint: You can also pre-compile it into .o using:
                      clang -target bpf -O2 -c -
              with proper -I and -D options.
      Failed to compile test case: 'kbuild searching'
      test child finished with -1
      ---- end ----
      LLVM search and compile subtest 1: FAILED!
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Dmitriy Vyukov <dvyukov@google.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Cc: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Wang Nan <wangnan0@huawei.com>
    Cc: Yonghong Song <yhs@fb.com>
    Link: https://lkml.kernel.org/r/20171128175948.GL3298@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba9443c55f36079cb61fb7bc4913766e9a519585
Author: Chunyan Zhang <zhang.lyra@gmail.com>
Date:   Fri Dec 1 03:51:04 2017 +0100

    ARM: 8731/1: Fix csum_partial_copy_from_user() stack mismatch
    
    
    [ Upstream commit 36b0cb84ee858f02c256d26f0cb4229c78e3399e ]
    
    An additional 'ip' will be pushed to the stack, for restoring the
    DACR later, if CONFIG_CPU_SW_DOMAIN_PAN defined.
    
    However, the fixup still get the err_ptr by add #8*4 to sp, which
    results in the fact that the code area pointed by the LR will be
    overwritten, or the kernel will crash if CONFIG_DEBUG_RODATA is enabled.
    
    This patch fixes the stack mismatch.
    
    Fixes: a5e090acbf54 ("ARM: software-based priviledged-no-access support")
    Signed-off-by: Lvqiang Huang <Lvqiang.Huang@spreadtrum.com>
    Signed-off-by: Chunyan Zhang <zhang.lyra@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae3471f65a04451f3670cbde6c59e384cca44dc8
Author: John David Anglin <dave.anglin@bell.net>
Date:   Mon Nov 13 19:35:33 2017 -0500

    parisc: Reduce thread stack to 16 kb
    
    
    [ Upstream commit da57c5414f49ef9e4bcb9ae0bbafd1d650b31411 ]
    
    In testing, I found that the thread stack can be 16 kB when using an irq
    stack.  Without it, the thread stack needs to be 32 kB. Currently, the irq
    stack is 32 kB. While it probably could be 16 kB, I would prefer to leave it
    as is for safety.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b2e0f0996197d7816f241b565f41ad77d403918
Author: Brendan McGrath <redmcg@redmandi.dyndns.org>
Date:   Wed Dec 13 22:14:57 2017 +1100

    ipv6: icmp6: Allow icmp messages to be looped back
    
    
    [ Upstream commit 588753f1eb18978512b1c9b85fddb457d46f9033 ]
    
    One example of when an ICMPv6 packet is required to be looped back is
    when a host acts as both a Multicast Listener and a Multicast Router.
    
    A Multicast Router will listen on address ff02::16 for MLDv2 messages.
    
    Currently, MLDv2 messages originating from a Multicast Listener running
    on the same host as the Multicast Router are not being delivered to the
    Multicast Router. This is due to dst.input being assigned the default
    value of dst_discard.
    
    This results in the packet being looped back but discarded before being
    delivered to the Multicast Router.
    
    This patch sets dst.input to ip6_input to ensure a looped back packet
    is delivered to the Multicast Router.
    
    Signed-off-by: Brendan McGrath <redmcg@redmandi.dyndns.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6de1b002a29f86982b8662941ad97eec0741d3f8
Author: Albert Hsieh <wen.hsieh@broadcom.com>
Date:   Mon Nov 20 11:26:26 2017 +0800

    mtd: nand: brcmnand: Zero bitflip is not an error
    
    
    [ Upstream commit e44b9a9c135727f3410e029910275f40681dc8bc ]
    
    A negative return value of brcmstb_nand_verify_erased_page() indicates a
    real bitflip error of an erased page, and other return values (>= 0) show
    the corrected bitflip number. Zero return value means no bitflip, but the
    current driver code treats it as an error, and eventually leads to
    falsely reported ECC error.
    
    Fixes: 02b88eea9f9c ("mtd: brcmnand: Add check for erased page bitflip")
    Signed-off-by: Albert Hsieh <wen.hsieh@broadcom.com>
    Acked-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f485259011ad644d91a7ccc40bfaaafea72974f9
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Tue Dec 5 11:51:40 2017 +0100

    mtd: nand: gpmi: Fix failure when a erased page has a bitflip at BBM
    
    
    [ Upstream commit fdf2e821052958a114618a95ab18a300d0b080cb ]
    
    When erased subpages are read then the BCH decoder returns STATUS_ERASED
    if they are all empty, or STATUS_UNCORRECTABLE if there are bitflips.
    When there are bitflips, we have to set these bits again to show the
    upper layers a completely erased page. When a bitflip happens in the
    exact byte where the bad block marker is, then this byte is swapped
    with another byte in block_mark_swapping(). The correction code then
    detects a bitflip in another subpage and no longer corrects the bitflip
    where it really happens.
    
    Correct this behaviour by calling block_mark_swapping() after the
    bitflips have been corrected.
    
    In our case UBIFS failed with this bug because it expects erased
    pages to be really empty:
    
    UBIFS error (pid 187): ubifs_scan: corrupt empty space at LEB 36:118735
    UBIFS error (pid 187): ubifs_scanned_corruption: corruption at LEB 36:118735
    UBIFS error (pid 187): ubifs_scanned_corruption: first 8192 bytes from LEB 36:118735
    UBIFS error (pid 187): ubifs_scan: LEB 36 scanning failed
    UBIFS error (pid 187): do_commit: commit failed, error -117
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Acked-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14862bfbffd90fd11b21273a7ef2778054c0ec1e
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Thu Dec 14 16:56:14 2017 +0100

    net: usb: qmi_wwan: add Telit ME910 PID 0x1101 support
    
    
    [ Upstream commit c647c0d62c82eb3ddf78a0d8b3d58819d9f552aa ]
    
    This patch adds support for Telit ME910 PID 0x1101.
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 043309fb5106c3fe9a45cd0637517b661d9dac61
Author: Igor Russkikh <igor.russkikh@aquantia.com>
Date:   Thu Dec 14 12:34:41 2017 +0300

    net: aquantia: Fix hardware DMA stream overload on large MRRS
    
    
    [ Upstream commit 1e366161510f266516107a69db91f1f2edaea11c ]
    
    Systems with large MRRS on device (2K, 4K) with high data rates and/or
    large MTU, atlantic observes DMA packet buffer overflow. On some systems
    that causes PCIe transaction errors, hardware NMIs or datapath freeze.
    This patch
    1) Limits MRRS from device side to 2K (thats maximum our hardware supports)
    2) Limit maximum size of outstanding TX DMA data read requests. This makes
    hardware buffers running fine.
    
    Signed-off-by: Pavel Belous <pavel.belous@aquantia.com>
    Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dabd233b757d11cb7dc7d76b3e5abd623ee437c9
Author: Igor Russkikh <igor.russkikh@aquantia.com>
Date:   Thu Dec 14 12:34:40 2017 +0300

    net: aquantia: Fix actual speed capabilities reporting
    
    
    [ Upstream commit e4d02ca04c6d48ab2226342a1c4ed54f1dbb72bd ]
    
    Different hardware device Ids correspond to different maximum speed
    available. Extra checks were added for devices D108 and D109 to
    remove unsupported speeds from these device capabilities list.
    
    Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbd047ffcccf07f1c24f96f8dd23add065c9cdbe
Author: Keith Busch <keith.busch@intel.com>
Date:   Thu Dec 14 11:20:14 2017 -0700

    nvme: check hw sectors before setting chunk sectors
    
    
    [ Upstream commit 249159c5f15812140fa216f9997d799ac0023a1f ]
    
    Some devices with IDs matching the "stripe" quirk don't actually have
    this quirk, and don't have an MDTS value. When MDTS is not set, the
    driver sets the max sectors to UINT_MAX, which is not a power of 2,
    hitting a BUG_ON from blk_queue_chunk_sectors. This patch skips setting
    chunk sectors for such devices.
    
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1aef5ce2abef719d1881bd22e0e875cca8f7b6f
Author: James Smart <jsmart2021@gmail.com>
Date:   Wed Nov 29 15:11:37 2017 -0800

    nvme-fc: remove double put reference if admin connect fails
    
    
    [ Upstream commit 4596e752db02d47038cd7c965419789ab15d1985 ]
    
    There are two put references in the failure case of initial
    create_association. The first put actually frees the controller, thus the
    second put references freed memory.
    
    Remove the unnecessary 2nd put.
    
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d9f6272917815f5ac5821ab6163045e74903f0d
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Fri Nov 17 16:55:35 2017 +0530

    phy: cpcap-usb: Fix platform_get_irq_byname's error checking.
    
    
    [ Upstream commit e796cc6a3a9186c92092e2f5929cf8f65b56cf01 ]
    
    The platform_get_irq_byname() function returns negative if an error occurs.
    zero or positive number on success. platform_get_irq_byname() error
    checking for zero is not correct.
    
    Fixes: 6d6ce40f63af ("phy: cpcap-usb: Add CPCAP PMIC USB support")
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 959f6a0906d56ee0ea95862bce6bfae2bbc8a717
Author: Andreas Platschek <andreas.platschek@opentech.at>
Date:   Thu Dec 14 12:50:51 2017 +0100

    dmaengine: fsl-edma: disable clks on all error paths
    
    
    [ Upstream commit 2610acf46b9ed528ec2cacd717bc9d354e452b73 ]
    
    Previously enabled clks are only disabled if clk_prepare_enable() fails.
    However, there are other error paths were the previously enabled
    clocks are not disabled.
    
    To fix the problem, fsl_disable_clocks() now takes the number of clocks
    that shall be disabled + unprepared. For existing calls were all clocks
    were already successfully prepared + enabled, DMAMUX_NR is passed to
    disable + unprepare all clocks.
    
    In error paths were only some clocks were successfully prepared +
    enabled the loop counter is passed, in order to disable + unprepare
    all successfully prepared + enabled clocks.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Andreas Platschek <andreas.platschek@opentech.at>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cfa95893cbb1a7615385b2b66effc754aae9e6e
Author: Prasad B Munirathnam <prasad.munirathnam@microsemi.com>
Date:   Tue Dec 12 11:40:10 2017 -0800

    scsi: aacraid: Fix I/O drop during reset
    
    
    [ Upstream commit 5771cfffdffe709ae9b403b6f80438ca40bf850e ]
    
    "FIB_CONTEXT_FLAG_TIMEDOUT" flag is set in aac_eh_abort to indicate
    command timeout. Using the same flag in reset handler causes the command
    to time out and the I/Os were dropped.
    
    Define a new flag "FIB_CONTEXT_FLAG_EH_RESET" to make sure I/O is
    properly handled in eh_reset handler.
    
    [mkp: tweaked commit message]
    
    Signed-off-by: Prasad B Munirathnam <prasad.munirathnam@microsemi.com>
    Reviewed-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 647a37ec1a17c2710103d948a748f21453aabf21
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Dec 14 15:33:08 2017 -0800

    mm/frame_vector.c: release a semaphore in 'get_vaddr_frames()'
    
    
    [ Upstream commit 1f704fd0d14043e76e80f6b8b2251b9b2cedcca6 ]
    
    A semaphore is acquired before this check, so we must release it before
    leaving.
    
    Link: http://lkml.kernel.org/r/20171211211009.4971-1-christophe.jaillet@wanadoo.fr
    Fixes: b7f0554a56f2 ("mm: fail get_vaddr_frames() for filesystem-dax mappings")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: David Sterba <dsterba@suse.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7edaa9afb923dff77e173de2f3954bbbdd19d9d3
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 14 15:32:41 2017 -0800

    exec: avoid gcc-8 warning for get_task_comm
    
    
    [ Upstream commit 3756f6401c302617c5e091081ca4d26ab604bec5 ]
    
    gcc-8 warns about using strncpy() with the source size as the limit:
    
      fs/exec.c:1223:32: error: argument to 'sizeof' in 'strncpy' call is the same expression as the source; did you mean to use the size of the destination? [-Werror=sizeof-pointer-memaccess]
    
    This is indeed slightly suspicious, as it protects us from source
    arguments without NUL-termination, but does not guarantee that the
    destination is terminated.
    
    This keeps the strncpy() to ensure we have properly padded target
    buffer, but ensures that we use the correct length, by passing the
    actual length of the destination buffer as well as adding a build-time
    check to ensure it is exactly TASK_COMM_LEN.
    
    There are only 23 callsites which I all reviewed to ensure this is
    currently the case.  We could get away with doing only the check or
    passing the right length, but it doesn't hurt to do both.
    
    Link: http://lkml.kernel.org/r/20171205151724.1764896-1-arnd@arndb.de
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Suggested-by: Kees Cook <keescook@chromium.org>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Serge Hallyn <serge@hallyn.com>
    Cc: James Morris <james.l.morris@oracle.com>
    Cc: Aleksa Sarai <asarai@suse.de>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Frederic Weisbecker <frederic@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f92679fee6ad1a13c8e82cf1f5769cef27343f78
Author: Anna-Maria Gleixner <anna-maria@linutronix.de>
Date:   Thu Dec 21 11:41:35 2017 +0100

    hrtimer: Ensure POSIX compliance (relative CLOCK_REALTIME hrtimers)
    
    commit 48d0c9becc7f3c66874c100c126459a9da0fdced upstream.
    
    The POSIX specification defines that relative CLOCK_REALTIME timers are not
    affected by clock modifications. Those timers have to use CLOCK_MONOTONIC
    to ensure POSIX compliance.
    
    The introduction of the additional HRTIMER_MODE_PINNED mode broke this
    requirement for pinned timers.
    
    There is no user space visible impact because user space timers are not
    using pinned mode, but for consistency reasons this needs to be fixed.
    
    Check whether the mode has the HRTIMER_MODE_REL bit set instead of
    comparing with HRTIMER_MODE_ABS.
    
    Signed-off-by: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: keescook@chromium.org
    Fixes: 597d0275736d ("timers: Framework for identifying pinned timers")
    Link: http://lkml.kernel.org/r/20171221104205.7269-7-anna-maria@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 267ef1d332845c1d361ff3fd1d346613a12db773
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 28 10:19:45 2018 +0100

    Linux 4.14.23

commit ac3d021048be9edb825f0794da5b42f04fefecef
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 2 12:47:19 2018 +0100

    microblaze: fix endian handling
    
    commit 71e7673dadfdae0605d4c1f66ecb4b045c79fe0f upstream.
    
    Building an allmodconfig kernel fails horribly because of
    endian mismatch. It turns out that the -mlittle-endian
    switch was not honored at all as we were using the wrong
    Kconfig symbol and failing to apply CPUFLAGS to the CFLAGS.
    Finally, the linker flags did not get set right.
    
    This addresses all three of those issues, which now lets
    me build both big-endian and little-endian kernels for
    testing.
    
    Fixes: 428dbf156cc5 ("arch: change default endian for microblaze")
    Fixes: 206d3642d8ee ("arch/microblaze: add choice for endianness and update Makefile")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ce9f4e4a543b457551728764e2d297cd40dee53
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Wed Nov 15 17:31:18 2017 -0800

    m32r: fix endianness constraints
    
    commit c95f121142a41c951fd62683a5574f2a7b37c573 upstream.
    
    The m32r Kconfig provides both CPU_BIG_ENDIAN and CPU_LITTLE_ENDIAN
    configuration options.  As they are user-selectable and independent,
    this allows invalid configurations:
    
      - All m32r defconfigs build a big endian kernel, but CPU_BIG_ENDIAN is
        not set, causing compiler warnings like:
    
            include/linux/byteorder/big_endian.h:7:2: warning: #warning inconsistent configuration, needs CONFIG_CPU_BIG_ENDIAN [-Wcpp]
             #warning inconsistent configuration, needs CONFIG_CPU_BIG_ENDIAN
              ^
    
      - Since commit 5bdfca6435b82944 ("m32r: define CPU_BIG_ENDIAN"),
        building an allmodconfig or allyesconfig enables both
        CONFIG_CPU_BIG_ENDIAN and CONFIG_CPU_LITTLE_ENDIAN.
        While this did get rid of the warning above, both options are
        obviously mutually exclusive.
    
    Fix this by making only CPU_LITTLE_ENDIAN configurable by the user, as
    before, and by making sure exactly one of CPU_BIG_ENDIAN and
    CPU_LITTLE_ENDIAN is always enabled.
    
    Link: http://lkml.kernel.org/r/1509361505-18150-1-git-send-email-geert@linux-m68k.org
    Fixes: 5bdfca6435b82944 ("m32r: define CPU_BIG_ENDIAN")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 821e97898016456bc7b42063ac91c0063f88a8dd
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Tue Feb 13 09:01:54 2018 +0000

    drm/i915/breadcrumbs: Ignore unsubmitted signalers
    
    commit 117172c8f9d40ba1de8cb35c6e614422faa03330 upstream.
    
    When a request is preempted, it is unsubmitted from the HW queue and
    removed from the active list of breadcrumbs. In the process, this
    however triggers the signaler and it may see the clear rbtree with the
    old, and still valid, seqno, or it may match the cleared seqno with the
    now zero rq->global_seqno. This confuses the signaler into action and
    signaling the fence.
    
    Fixes: d6a2289d9d6b ("drm/i915: Remove the preempted request from the execution queue")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v4.12+
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180206094633.30181-1-chris@chris-wilson.co.uk
    (cherry picked from commit fd10e2ce9905030d922e179a8047a4d50daffd8e)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180213090154.17373-1-chris@chris-wilson.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f0ffdc671080f22449387b6ed961edbe700b0a1
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Feb 8 17:46:01 2018 +0800

    drm/amdgpu: add new device to use atpx quirk
    
    commit 6e59de2048eb375a9bfcd39461ef841cd2a78962 upstream.
    
    The affected system (0x0813) is pretty similar to another one (0x0812),
    it also needs to use ATPX power control.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4517799bf6556d2cffc0dd3a0cfb53cde2ada47d
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Jan 22 23:13:32 2018 -0500

    drm/amdgpu: Avoid leaking PM domain on driver unbind (v2)
    
    commit 458d876eb869d5a88b53074c6c271b8b9adc0f07 upstream.
    
    We only support vga_switcheroo and runtime pm on PX/HG systems
    so forcing runpm to 1 doesn't do anything useful anyway.
    
    Only call vga_switcheroo_init_domain_pm_ops() for PX/HG so
    that the cleanup path is correct as well.  This mirrors what
    radeon does as well.
    
    v2: rework the patch originally sent by Lukas (Alex)
    
    Acked-by: Lukas Wunner <lukas@wunner.de>
    Reported-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de> (v1)
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14fdf444827770fcba67f3487924096bffd5ce19
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Dec 20 13:29:58 2017 -0500

    drm/amdgpu: add atpx quirk handling (v2)
    
    commit 052c299080cd6859f82a8154a7a673fafabe644c upstream.
    
    Add quirks for handling PX/HG systems.  In this case, add
    a quirk for a weston dGPU that only seems to properly power
    down using ATPX power control rather than HG (_PR3).
    
    v2: append a new weston XT
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Junwei Zhang <Jerry.Zhang@amd.com> (v2)
    Reviewed-and-Tested-by: Junwei Zhang <Jerry.Zhang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30537deb089c4a695d27e6a39c914b6418a5cfc6
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Dec 19 09:52:31 2017 -0500

    drm/amdgpu: only check mmBIF_IOV_FUNC_IDENTIFIER on tonga/fiji
    
    commit 57ad33a307bf85cafda3a77c03a555c9f9ee4139 upstream.
    
    We only support SR-IOV on tonga/fiji.  Don't check this register
    on other VI parts.
    
    Fixes: 048765ad5af7c89 (amdgpu: fix asic initialization for virtualized environments (v2))
    Reviewed-by: Xiangliang Yu <Xiangliang.Yu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46c1e4023b58a910cea8797cb1c2bd9b784a835c
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Nov 21 12:10:57 2017 -0500

    drm/amdgpu: Add dpm quirk for Jet PRO (v2)
    
    commit f2e5262f75ecb40a6e56554e156a292ab9e1d1b7 upstream.
    
    Fixes stability issues.
    
    v2: clamp sclk to 600 Mhz
    
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=103370
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68de83c13b30fa01e39b184f71ca5cca63010c4d
Author: Huang Rui <ray.huang@amd.com>
Date:   Thu Dec 14 13:47:16 2017 +0800

    drm/amdgpu: disable MMHUB power gating on raven
    
    commit 400b6afbaa949914460e5fd1d769c5e26ef1f6b8 upstream.
    
    MMHUB power gating still has issue, and doesn't work on raven at current. So
    disable it for the moment.
    
    Signed-off-by: Huang Rui <ray.huang@amd.com>
    Acked-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ac8aa5eba0e8b4d2bf21d46fa46713fa2bfbe0f
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Feb 19 11:35:43 2018 +0000

    drm: Handle unexpected holes in color-eviction
    
    commit b8ff1802815913aad52695898cccbc9f77b7e726 upstream.
    
    During eviction, the driver may free more than one hole in the drm_mm
    due to the side-effects in evicting the scanned nodes. However,
    drm_mm_scan_color_evict() expects that the scan result is the first
    available hole (in the mru freed hole_stack list):
    
      kernel BUG at drivers/gpu/drm/drm_mm.c:844!
      invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI
      Dumping ftrace buffer:
         (ftrace buffer empty)
      Modules linked in: i915 snd_hda_codec_analog snd_hda_codec_generic coretemp snd_hda_intel snd_hda_codec snd_hwdep snd_hda_core lpc_ich snd_pcm e1000e mei_me prime_numbers mei
      CPU: 1 PID: 1490 Comm: gem_userptr_bli Tainted: G     U           4.16.0-rc1-g740f57c54ecf-kasan_6+ #1
      Hardware name: Dell Inc. OptiPlex 755                 /0PU052, BIOS A08 02/19/2008
      RIP: 0010:drm_mm_scan_color_evict+0x2b8/0x3d0
      RSP: 0018:ffff880057a573f8 EFLAGS: 00010287
      RAX: ffff8800611f5980 RBX: ffff880057a575d0 RCX: dffffc0000000000
      RDX: 00000000029d5000 RSI: 1ffff1000af4aec1 RDI: ffff8800611f5a10
      RBP: ffff88005ab884d0 R08: ffff880057a57600 R09: 000000000afff000
      R10: 1ffff1000b5710b5 R11: 0000000000001000 R12: 1ffff1000af4ae82
      R13: ffff8800611f59b0 R14: ffff8800611f5980 R15: ffff880057a57608
      FS:  00007f2de0c2e8c0(0000) GS:ffff88006ac40000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007f2ddde1e000 CR3: 00000000609b2000 CR4: 00000000000006e0
      Call Trace:
       ? drm_mm_scan_remove_block+0x330/0x330
       ? drm_mm_scan_remove_block+0x151/0x330
       i915_gem_evict_something+0x711/0xbd0 [i915]
       ? igt_evict_contexts+0x50/0x50 [i915]
       ? nop_clear_range+0x10/0x10 [i915]
       ? igt_evict_something+0x90/0x90 [i915]
       ? i915_gem_gtt_reserve+0x1a1/0x320 [i915]
       i915_gem_gtt_insert+0x237/0x400 [i915]
       __i915_vma_do_pin+0xc25/0x1a20 [i915]
       eb_lookup_vmas+0x1c63/0x3790 [i915]
       ? i915_gem_check_execbuffer+0x250/0x250 [i915]
       ? trace_hardirqs_on_caller+0x33f/0x590
       ? _raw_spin_unlock_irqrestore+0x39/0x60
       ? __pm_runtime_resume+0x7d/0xf0
       i915_gem_do_execbuffer+0x86a/0x2ff0 [i915]
       ? __kmalloc+0x132/0x340
       ? i915_gem_execbuffer2_ioctl+0x10f/0x760 [i915]
       ? drm_ioctl_kernel+0x12e/0x1c0
       ? drm_ioctl+0x662/0x980
       ? eb_relocate_slow+0xa90/0xa90 [i915]
       ? i915_gem_execbuffer2_ioctl+0x10f/0x760 [i915]
       ? __might_fault+0xea/0x1a0
       i915_gem_execbuffer2_ioctl+0x3cc/0x760 [i915]
       ? i915_gem_execbuffer_ioctl+0xba0/0xba0 [i915]
       ? lock_acquire+0x3c0/0x3c0
       ? i915_gem_execbuffer_ioctl+0xba0/0xba0 [i915]
       drm_ioctl_kernel+0x12e/0x1c0
       drm_ioctl+0x662/0x980
       ? i915_gem_execbuffer_ioctl+0xba0/0xba0 [i915]
       ? drm_getstats+0x20/0x20
       ? debug_check_no_obj_freed+0x2a6/0x8c0
       do_vfs_ioctl+0x170/0xe70
       ? ioctl_preallocate+0x170/0x170
       ? task_work_run+0xbe/0x160
       ? lock_acquire+0x3c0/0x3c0
       ? trace_hardirqs_on_caller+0x33f/0x590
       ? _raw_spin_unlock_irq+0x2f/0x50
       SyS_ioctl+0x36/0x70
       ? do_vfs_ioctl+0xe70/0xe70
       do_syscall_64+0x18c/0x5d0
       entry_SYSCALL_64_after_hwframe+0x26/0x9b
      RIP: 0033:0x7f2ddf13b587
      RSP: 002b:00007fff15c4f9d8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
      RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f2ddf13b587
      RDX: 00007fff15c4fa20 RSI: 0000000040406469 RDI: 0000000000000003
      RBP: 00007fff15c4fa20 R08: 0000000000000000 R09: 00007f2ddf3fe120
      R10: 0000000000000073 R11: 0000000000000246 R12: 0000000040406469
      R13: 0000000000000003 R14: 00007fff15c4fa20 R15: 00000000000000c7
      Code: 00 00 00 4a c7 44 22 08 00 00 00 00 42 c7 44 22 10 00 00 00 00 48 81 c4 b8 00 00 00 5b 5d 41 5c 41 5d 41 5e 41 5f c3 0f 0b 0f 0b <0f> 0b 31 c0 eb c0 4c 89 ef e8 9a 09 41 ff e9 1e fe ff ff 4c 89
      RIP: drm_mm_scan_color_evict+0x2b8/0x3d0 RSP: ffff880057a573f8
    
    We can trivially relax this assumption by searching the hole_stack for
    the scan result and warn instead if the driver called us without any
    result.
    
    Fixes: 3fa489dabea9 ("drm: Apply tight eviction scanning to color_adjust")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v4.11+
    Reviewed-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180219113543.8010-1-chris@chris-wilson.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c9beaf3aca7ae80cf8b54b1abecf43082416f52
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed Jan 31 12:04:50 2018 +0100

    drm/cirrus: Load lut in crtc_commit
    
    commit 745fd50f3b044db6a3922e1718306555613164b0 upstream.
    
    In the past the ast driver relied upon the fbdev emulation helpers to
    call ->load_lut at boot-up. But since
    
    commit b8e2b0199cc377617dc238f5106352c06dcd3fa2
    Author: Peter Rosin <peda@axentia.se>
    Date:   Tue Jul 4 12:36:57 2017 +0200
    
    drm/fb-helper: factor out pseudo-palette
    
    that's cleaned up and drivers are expected to boot into a consistent
    lut state. This patch fixes that.
    
    Fixes: b8e2b0199cc3 ("drm/fb-helper: factor out pseudo-palette")
    Cc: Peter Rosin <peda@axenita.se>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # v4.14+
    References: https://bugzilla.kernel.org/show_bug.cgi?id=198123
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20180131110450.22153-1-daniel.vetter@ffwll.ch
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit faf1a75046cb59e1a7573b4bb390fc5938ccf4df
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Mon Feb 5 17:12:35 2018 +0900

    usb: renesas_usbhs: missed the "running" flag in usb_dmac with rx path
    
    commit 17aa31f13cad25daa19d3f923323f552e87bc874 upstream.
    
    This fixes an issue that a gadget driver (usb_f_fs) is possible to
    stop rx transactions after the usb-dmac is used because the following
    functions missed to set/check the "running" flag.
     - usbhsf_dma_prepare_pop_with_usb_dmac()
     - usbhsf_dma_pop_done_with_usb_dmac()
    
    So, if next transaction uses pio, the usbhsf_prepare_pop() can not
    start the transaction because the "running" flag is 0.
    
    Fixes: 8355b2b3082d ("usb: renesas_usbhs: fix the behavior of some usbhs_pkt_handle")
    Cc: <stable@vger.kernel.org> # v3.19+
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51aba4e16ccc71925ea0bf89818da5bbc2397b11
Author: Jack Pham <jackp@codeaurora.org>
Date:   Wed Jan 24 23:58:20 2018 -0800

    usb: gadget: f_fs: Use config_ep_by_speed()
    
    commit 675272d092e4a5570bace92593776f7348daf4c5 upstream.
    
    In commit 2bfa0719ac2a ("usb: gadget: function: f_fs: pass
    companion descriptor along") there is a pointer arithmetic
    bug where the comp_desc is obtained as follows:
    
     comp_desc = (struct usb_ss_ep_comp_descriptor *)(ds +
                   USB_DT_ENDPOINT_SIZE);
    
    Since ds is a pointer to usb_endpoint_descriptor, adding
    7 to it ends up going out of bounds (7 * sizeof(struct
    usb_endpoint_descriptor), which is actually 7*9 bytes) past
    the SS descriptor. As a result the maxburst value will be
    read incorrectly, and the UDC driver will also get a garbage
    comp_desc (assuming it uses it).
    
    Since Felipe wrote, "Eventually, f_fs.c should be converted
    to use config_ep_by_speed() like all other functions, though",
    let's finally do it. This allows the other usb_ep fields to
    be properly populated, such as maxpacket and mult. It also
    eliminates the awkward speed-based descriptor lookup since
    config_ep_by_speed() does that already using the ones found
    in struct usb_function.
    
    Fixes: 2bfa0719ac2a ("usb: gadget: function: f_fs: pass companion descriptor along")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e936140e0d746e96d26af3a8b02fd09909d7029
Author: Jack Pham <jackp@codeaurora.org>
Date:   Wed Jan 24 00:11:53 2018 -0800

    usb: gadget: f_fs: Process all descriptors during bind
    
    commit 6cf439e0d37463e42784271179c8a308fd7493c6 upstream.
    
    During _ffs_func_bind(), the received descriptors are evaluated
    to prepare for binding with the gadget in order to allocate
    endpoints and optionally set up OS descriptors. However, the
    high- and super-speed descriptors are only parsed based on
    whether the gadget_is_dualspeed() and gadget_is_superspeed()
    calls are true, respectively.
    
    This is a problem in case a userspace program always provides
    all of the {full,high,super,OS} descriptors when configuring a
    function. Then, for example if a gadget device is not capable
    of SuperSpeed, the call to ffs_do_descs() for the SS descriptors
    is skipped, resulting in an incorrect offset calculation for
    the vla_ptr when moving on to the OS descriptors that follow.
    This causes ffs_do_os_descs() to fail as it is now looking at
    the SS descriptors' offset within the raw_descs buffer instead.
    
    _ffs_func_bind() should evaluate the descriptors unconditionally,
    so remove the checks for gadget speed.
    
    Fixes: f0175ab51993 ("usb: gadget: f_fs: OS descriptors support")
    Cc: stable@vger.kernel.org
    Co-Developed-by: Mayank Rana <mrana@codeaurora.org>
    Signed-off-by: Mayank Rana <mrana@codeaurora.org>
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7551ff0ab230add761bc9ffdea855062e0778e21
Author: Bin Liu <b-liu@ti.com>
Date:   Tue Feb 20 07:31:35 2018 -0600

    Revert "usb: musb: host: don't start next rx urb if current one failed"
    
    commit 44eb5e12b845cc8a0634f21b70ef07d774eb4b25 upstream.
    
    This reverts commit dbac5d07d13e330e6706813c9fde477140fb5d80.
    
    commit dbac5d07d13e ("usb: musb: host: don't start next rx urb if current one failed")
    along with commit b5801212229f ("usb: musb: host: clear rxcsr error bit if set")
    try to solve the issue described in [1], but the latter alone is
    sufficient, and the former causes the issue as in [2], so now revert it.
    
    [1] https://marc.info/?l=linux-usb&m=146173995117456&w=2
    [2] https://marc.info/?l=linux-usb&m=151689238420622&w=2
    
    Cc: stable@vger.kernel.org # v4.7+
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e402ea2cdc21d5f3fca6f7d99213528d147bab4
Author: Karsten Koop <kkoop@ld-didactic.de>
Date:   Fri Feb 9 09:12:06 2018 +0000

    usb: ldusb: add PIDs for new CASSY devices supported by this driver
    
    commit 52ad2bd8918158266fc88a05f95429b56b6a33c5 upstream.
    
    This patch adds support for new CASSY devices to the ldusb driver. The
    PIDs are also added to the ignore list in hid-quirks.
    
    Signed-off-by: Karsten Koop <kkoop@ld-didactic.de>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1e8aa2176d2cfbfa444df0461a906b455e9e66b
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Fri Jan 12 18:18:27 2018 -0800

    usb: dwc3: ep0: Reset TRB counter for ep0 IN
    
    commit f035d139ffece7b6a7b8bfb17bd0ba715ee57a04 upstream.
    
    DWC3 tracks TRB counter for each ep0 direction separately. In control
    read transfer completion handler, the driver needs to reset the TRB
    enqueue counter for ep0 IN direction. Currently the driver only resets
    the TRB counter for control OUT endpoint. Check for the data direction
    and properly reset the TRB counter from correct control endpoint.
    
    Cc: stable@vger.kernel.org
    Fixes: c2da2ff00606 ("usb: dwc3: ep0: don't use ep0in for transfers")
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49e18b2ba887724ae43b1169ad0b8e747fd5aad9
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Fri Jan 12 18:18:05 2018 -0800

    usb: dwc3: gadget: Set maxpacket size for ep0 IN
    
    commit 6180026341e852a250e1f97ebdcf71684a3c81b9 upstream.
    
    There are 2 control endpoint structures for DWC3. However, the driver
    only updates the OUT direction control endpoint structure during
    ConnectDone event. DWC3 driver needs to update the endpoint max packet
    size for control IN endpoint as well. If the max packet size is not
    properly set, then the driver will incorrectly calculate the data
    transfer size and fail to send ZLP for HS/FS 3-stage control read
    transfer.
    
    The fix is simply to update the max packet size for the ep0 IN direction
    during ConnectDone event.
    
    Cc: stable@vger.kernel.org
    Fixes: 72246da40f37 ("usb: Introduce DesignWare USB3 DRD Driver")
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1075f607869283ad07a224c01b78e61b09f4bc7a
Author: Peter Chen <hzpeterchen@gmail.com>
Date:   Thu Feb 1 12:26:43 2018 +0800

    usb: host: ehci: use correct device pointer for dma ops
    
    commit 02a10f061a3f8bca1b37332672f50a107198adbe upstream.
    
    commit a8c06e407ef9 ("usb: separate out sysdev pointer from usb_bus")
    converted to use hcd->self.sysdev for DMA operations instead of
    hcd->self.controller, but forgot to do it for hcd test mode. Replace
    the correct one in this commit.
    
    Fixes: a8c06e407ef9 ("usb: separate out sysdev pointer from usb_bus")
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b5061ec6fcab358e1cfa009a7e43fce27aca3e7
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Sun Feb 18 16:53:59 2018 +0800

    drm/edid: Add 6 bpc quirk for CPT panel in Asus UX303LA
    
    commit 06998a756a3865817b87a129a7e5d5bb66dc1ec3 upstream.
    
    Similar to commit e10aec652f31 ("drm/edid: Add 6 bpc quirk for display
    AEO model 0."), the EDID reports "DFP 1.x compliant TMDS" but it support
    6bpc instead of 8 bpc.
    
    Hence, use 6 bpc quirk for this panel.
    
    Fixes: 196f954e2509 ("drm/i915/dp: Revert "drm/i915/dp: fall back to 18 bpp when sink capability is unknown"")
    BugLink: https://bugs.launchpad.net/bugs/1749420
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Reviewed-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Cc: <stable@vger.kernel.org> # v4.8+
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180218085359.7817-1-kai.heng.feng@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f74ddc2e6152b7c0e13d952403938bd41c530464
Author: Jack Stocker <jackstocker.93@gmail.com>
Date:   Thu Feb 15 18:24:10 2018 +0000

    Add delay-init quirk for Corsair K70 RGB keyboards
    
    commit 7a1646d922577b5b48c0d222e03831141664bb59 upstream.
    
    Following on from this patch: https://lkml.org/lkml/2017/11/3/516,
    Corsair K70 RGB keyboards also require the DELAY_INIT quirk to
    start correctly at boot.
    
    Device ids found here:
    usb 3-3: New USB device found, idVendor=1b1c, idProduct=1b13
    usb 3-3: New USB device strings: Mfr=1, Product=2, SerialNumber=3
    usb 3-3: Product: Corsair K70 RGB Gaming Keyboard
    
    Signed-off-by: Jack Stocker <jackstocker.93@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21aadb063e70f858958a8b43f8bd661c8abc5575
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Feb 19 14:41:44 2018 +0000

    arm64: cpufeature: Fix CTR_EL0 field definitions
    
    commit be68a8aaf925aaf35574260bf820bb09d2f9e07f upstream.
    
    Our field definitions for CTR_EL0 suffer from a number of problems:
    
      - The IDC and DIC fields are missing, which causes us to enable CTR
        trapping on CPUs with either of these returning non-zero values.
    
      - The ERG is FTR_LOWER_SAFE, whereas it should be treated like CWG as
        FTR_HIGHER_SAFE so that applications can use it to avoid false sharing.
    
      - [nit] A RES1 field is described as "RAO"
    
    This patch updates the CTR_EL0 field definitions to fix these issues.
    
    Cc: <stable@vger.kernel.org>
    Cc: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6842a512ad160e15be7985acb9992795f3d11af1
Author: Michael Weiser <michael.weiser@gmx.de>
Date:   Thu Feb 1 23:13:38 2018 +0100

    arm64: Disable unhandled signal log messages by default
    
    commit 5ee39a71fd89ab7240c5339d04161c44a8e03269 upstream.
    
    aarch64 unhandled signal kernel messages are very verbose, suggesting
    them to be more of a debugging aid:
    
    sigsegv[33]: unhandled level 2 translation fault (11) at 0x00000000, esr
    0x92000046, in sigsegv[400000+71000]
    CPU: 1 PID: 33 Comm: sigsegv Tainted: G        W        4.15.0-rc3+ #3
    Hardware name: linux,dummy-virt (DT)
    pstate: 60000000 (nZCv daif -PAN -UAO)
    pc : 0x4003f4
    lr : 0x4006bc
    sp : 0000fffffe94a060
    x29: 0000fffffe94a070 x28: 0000000000000000
    x27: 0000000000000000 x26: 0000000000000000
    x25: 0000000000000000 x24: 00000000004001b0
    x23: 0000000000486ac8 x22: 00000000004001c8
    x21: 0000000000000000 x20: 0000000000400be8
    x19: 0000000000400b30 x18: 0000000000484728
    x17: 000000000865ffc8 x16: 000000000000270f
    x15: 00000000000000b0 x14: 0000000000000002
    x13: 0000000000000001 x12: 0000000000000000
    x11: 0000000000000000 x10: 0008000020008008
    x9 : 000000000000000f x8 : ffffffffffffffff
    x7 : 0004000000000000 x6 : ffffffffffffffff
    x5 : 0000000000000000 x4 : 0000000000000000
    x3 : 00000000004003e4 x2 : 0000fffffe94a1e8
    x1 : 000000000000000a x0 : 0000000000000000
    
    Disable them by default, so they can be enabled using
    /proc/sys/debug/exception-trace.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Michael Weiser <michael.weiser@gmx.de>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96e99291728f4e975ef832f14a461720c0f98eeb
Author: Michael Weiser <michael.weiser@gmx.de>
Date:   Thu Feb 1 23:13:36 2018 +0100

    arm64: Remove unimplemented syscall log message
    
    commit 1962682d2b2fbe6cfa995a85c53c069fadda473e upstream.
    
    Stop printing a (ratelimited) kernel message for each instance of an
    unimplemented syscall being called. Userland making an unimplemented
    syscall is not necessarily misbehaviour and to be expected with a
    current userland running on an older kernel. Also, the current message
    looks scary to users but does not actually indicate a real problem nor
    help them narrow down the cause. Just rely on sys_ni_syscall() to return
    -ENOSYS.
    
    Cc: <stable@vger.kernel.org>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Michael Weiser <michael.weiser@gmx.de>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e8407d1462d3c965dea98fd182d602185241be0
Author: AMAN DEEP <aman.deep@samsung.com>
Date:   Thu Feb 8 11:55:01 2018 +0800

    usb: ohci: Proper handling of ed_rm_list to handle race condition between usb_kill_urb() and finish_unlinks()
    
    commit 46408ea558df13b110e0866b99624384a33bdeba upstream.
    
    There is a race condition between finish_unlinks->finish_urb() function
    and usb_kill_urb() in ohci controller case. The finish_urb calls
    spin_unlock(&ohci->lock) before usb_hcd_giveback_urb() function call,
    then if during this time, usb_kill_urb is called for another endpoint,
    then new ed will be added to ed_rm_list at beginning for unlink, and
    ed_rm_list will point to newly added.
    
    When finish_urb() is completed in finish_unlinks() and ed->td_list
    becomes empty as in below code (in finish_unlinks() function):
    
            if (list_empty(&ed->td_list)) {
                    *last = ed->ed_next;
                    ed->ed_next = NULL;
            } else if (ohci->rh_state == OHCI_RH_RUNNING) {
                    *last = ed->ed_next;
                    ed->ed_next = NULL;
                    ed_schedule(ohci, ed);
            }
    
    The *last = ed->ed_next will make ed_rm_list to point to ed->ed_next
    and previously added ed by usb_kill_urb will be left unreferenced by
    ed_rm_list. This causes usb_kill_urb() hang forever waiting for
    finish_unlink to remove added ed from ed_rm_list.
    
    The main reason for hang in this race condtion is addition and removal
    of ed from ed_rm_list in the beginning during usb_kill_urb and later
    last* is modified in finish_unlinks().
    
    As suggested by Alan Stern, the solution for proper handling of
    ohci->ed_rm_list is to remove ed from the ed_rm_list before finishing
    any URBs. Then at the end, we can add ed back to the list if necessary.
    
    This properly handle the updated ohci->ed_rm_list in usb_kill_urb().
    
    Fixes: 977dcfdc6031 ("USB: OHCI: don't lose track of EDs when a controller dies")
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Aman Deep <aman.deep@samsung.com>
    Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85c3d26bd754160f6be90d8b078d70a1b35820e7
Author: Shigeru Yoshida <shigeru.yoshida@windriver.com>
Date:   Fri Feb 2 13:51:39 2018 +0800

    ohci-hcd: Fix race condition caused by ohci_urb_enqueue() and io_watchdog_func()
    
    commit b2685bdacdaab065c172b97b55ab46c6be77a037 upstream.
    
    Running io_watchdog_func() while ohci_urb_enqueue() is running can
    cause a race condition where ohci->prev_frame_no is corrupted and the
    watchdog can mis-detect following error:
    
      ohci-platform 664a0800.usb: frame counter not updating; disabled
      ohci-platform 664a0800.usb: HC died; cleaning up
    
    Specifically, following scenario causes a race condition:
    
      1. ohci_urb_enqueue() calls spin_lock_irqsave(&ohci->lock, flags)
         and enters the critical section
      2. ohci_urb_enqueue() calls timer_pending(&ohci->io_watchdog) and it
         returns false
      3. ohci_urb_enqueue() sets ohci->prev_frame_no to a frame number
         read by ohci_frame_no(ohci)
      4. ohci_urb_enqueue() schedules io_watchdog_func() with mod_timer()
      5. ohci_urb_enqueue() calls spin_unlock_irqrestore(&ohci->lock,
         flags) and exits the critical section
      6. Later, ohci_urb_enqueue() is called
      7. ohci_urb_enqueue() calls spin_lock_irqsave(&ohci->lock, flags)
         and enters the critical section
      8. The timer scheduled on step 4 expires and io_watchdog_func() runs
      9. io_watchdog_func() calls spin_lock_irqsave(&ohci->lock, flags)
         and waits on it because ohci_urb_enqueue() is already in the
         critical section on step 7
     10. ohci_urb_enqueue() calls timer_pending(&ohci->io_watchdog) and it
         returns false
     11. ohci_urb_enqueue() sets ohci->prev_frame_no to new frame number
         read by ohci_frame_no(ohci) because the frame number proceeded
         between step 3 and 6
     12. ohci_urb_enqueue() schedules io_watchdog_func() with mod_timer()
     13. ohci_urb_enqueue() calls spin_unlock_irqrestore(&ohci->lock,
         flags) and exits the critical section, then wake up
         io_watchdog_func() which is waiting on step 9
     14. io_watchdog_func() enters the critical section
     15. io_watchdog_func() calls ohci_frame_no(ohci) and set frame_no
         variable to the frame number
     16. io_watchdog_func() compares frame_no and ohci->prev_frame_no
    
    On step 16, because this calling of io_watchdog_func() is scheduled on
    step 4, the frame number set in ohci->prev_frame_no is expected to the
    number set on step 3.  However, ohci->prev_frame_no is overwritten on
    step 11.  Because step 16 is executed soon after step 11, the frame
    number might not proceed, so ohci->prev_frame_no must equals to
    frame_no.
    
    To address above scenario, this patch introduces a special sentinel
    value IO_WATCHDOG_OFF and set this value to ohci->prev_frame_no when
    the watchdog is not pending or running.  When ohci_urb_enqueue()
    schedules the watchdog (step 4 and 12 above), it compares
    ohci->prev_frame_no to IO_WATCHDOG_OFF so that ohci->prev_frame_no is
    not overwritten while io_watchdog_func() is running.
    
    Signed-off-by: Shigeru Yoshida <Shigeru.Yoshida@windriver.com>
    Signed-off-by: Haiqing Bai <Haiqing.Bai@windriver.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50f80b646a2b76bde046ef180e2c5bfaef861510
Author: Casey Leedom <leedom@chelsio.com>
Date:   Thu Feb 15 20:03:18 2018 +0530

    PCI/cxgb4: Extend T3 PCI quirk to T4+ devices
    
    commit 7dcf688d4c78a18ba9538b2bf1b11dc7a43fe9be upstream.
    
    We've run into a problem where our device is attached
    to a Virtual Machine and the use of the new pci_set_vpd_size()
    API doesn't help.  The VM kernel has been informed that
    the accesses are okay, but all of the actual VPD Capability
    Accesses are trapped down into the KVM Hypervisor where it
    goes ahead and imposes the silent denials.
    
    The right idea is to follow the kernel.org
    commit 1c7de2b4ff88 ("PCI: Enable access to non-standard VPD for
    Chelsio devices (cxgb3)") which Alexey Kardashevskiy authored
    to establish a PCI Quirk for our T3-based adapters. This commit
    extends that PCI Quirk to cover Chelsio T4 devices and later.
    
    The advantage of this approach is that the VPD Size gets set early
    in the Base OS/Hypervisor Boot and doesn't require that the cxgb4
    driver even be available in the Base OS/Hypervisor.  Thus PF4 can
    be exported to a Virtual Machine and everything should work.
    
    Fixes: 67e658794ca1 ("cxgb4: Set VPD size so we can read both VPD structures")
    Cc: <stable@vger.kernel.org>  # v4.9+
    Signed-off-by: Casey Leedom <leedom@chelsio.com>
    Signed-off-by: Arjun Vynipadath <arjun@chelsio.com>
    Signed-off-by: Ganesh Goudar <ganeshgr@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a665d628f938af3718e89247f5b8a77fbf8c536
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Mon Feb 5 16:45:36 2018 +0000

    irqchip/mips-gic: Avoid spuriously handling masked interrupts
    
    commit 285cb4f62319737e6538252cf1a67ce9da5cf3d5 upstream.
    
    Commit 7778c4b27cbe ("irqchip: mips-gic: Use pcpu_masks to avoid reading
    GIC_SH_MASK*") removed the read of the hardware mask register when
    handling shared interrupts, instead using the driver's shadow pcpu_masks
    entry as the effective mask. Unfortunately this did not take account of
    the write to pcpu_masks during gic_shared_irq_domain_map, which
    effectively unmasks the interrupt early. If an interrupt is asserted,
    gic_handle_shared_int decodes and processes the interrupt even though it
    has not yet been unmasked via gic_unmask_irq, which also sets the
    appropriate bit in pcpu_masks.
    
    On the MIPS Boston board, when a console command line of
    "console=ttyS0,115200n8r" is passed, the modem status IRQ is enabled in
    the UART, which is immediately raised to the GIC. The interrupt has been
    mapped, but no handler has yet been registered, nor is it expected to be
    unmasked. However, the write to pcpu_masks in gic_shared_irq_domain_map
    has effectively unmasked it, resulting in endless reports of:
    
    [    5.058454] irq 13, desc: ffffffff80a7ad80, depth: 1, count: 0, unhandled: 0
    [    5.062057] ->handle_irq():  ffffffff801b1838,
    [    5.062175] handle_bad_irq+0x0/0x2c0
    
    Where IRQ 13 is the UART interrupt.
    
    To fix this, just remove the write to pcpu_masks in
    gic_shared_irq_domain_map. The existing write in gic_unmask_irq is the
    correct place for what is now the effective unmasking.
    
    Cc: stable@vger.kernel.org
    Fixes: 7778c4b27cbe ("irqchip: mips-gic: Use pcpu_masks to avoid reading GIC_SH_MASK*")
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Reviewed-by: Paul Burton <paul.burton@mips.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc4704f507cdb98689b7d637db9b2d0d4937652a
Author: Shanker Donthineni <shankerd@codeaurora.org>
Date:   Wed Jan 31 18:03:42 2018 -0600

    irqchip/gic-v3: Use wmb() instead of smb_wmb() in gic_raise_softirq()
    
    commit 21ec30c0ef5234fb1039cc7c7737d885bf875a9e upstream.
    
    A DMB instruction can be used to ensure the relative order of only
    memory accesses before and after the barrier. Since writes to system
    registers are not memory operations, barrier DMB is not sufficient
    for observability of memory accesses that occur before ICC_SGI1R_EL1
    writes.
    
    A DSB instruction ensures that no instructions that appear in program
    order after the DSB instruction, can execute until the DSB instruction
    has completed.
    
    Cc: stable@vger.kernel.org
    Acked-by: Will Deacon <will.deacon@arm.com>,
    Signed-off-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62160e348e89b12255df61e6d08891b1ca8f9617
Author: Huang Ying <huang.ying.caritas@gmail.com>
Date:   Wed Feb 21 14:45:39 2018 -0800

    mm, swap, frontswap: fix THP swap if frontswap enabled
    
    commit 7ba716698cc53f8d5367766c93c538c7da6c68ce upstream.
    
    It was reported by Sergey Senozhatsky that if THP (Transparent Huge
    Page) and frontswap (via zswap) are both enabled, when memory goes low
    so that swap is triggered, segfault and memory corruption will occur in
    random user space applications as follow,
    
    kernel: urxvt[338]: segfault at 20 ip 00007fc08889ae0d sp 00007ffc73a7fc40 error 6 in libc-2.26.so[7fc08881a000+1ae000]
     #0  0x00007fc08889ae0d _int_malloc (libc.so.6)
     #1  0x00007fc08889c2f3 malloc (libc.so.6)
     #2  0x0000560e6004bff7 _Z14rxvt_wcstoutf8PKwi (urxvt)
     #3  0x0000560e6005e75c n/a (urxvt)
     #4  0x0000560e6007d9f1 _ZN16rxvt_perl_interp6invokeEP9rxvt_term9hook_typez (urxvt)
     #5  0x0000560e6003d988 _ZN9rxvt_term9cmd_parseEv (urxvt)
     #6  0x0000560e60042804 _ZN9rxvt_term6pty_cbERN2ev2ioEi (urxvt)
     #7  0x0000560e6005c10f _Z17ev_invoke_pendingv (urxvt)
     #8  0x0000560e6005cb55 ev_run (urxvt)
     #9  0x0000560e6003b9b9 main (urxvt)
     #10 0x00007fc08883af4a __libc_start_main (libc.so.6)
     #11 0x0000560e6003f9da _start (urxvt)
    
    After bisection, it was found the first bad commit is bd4c82c22c36 ("mm,
    THP, swap: delay splitting THP after swapped out").
    
    The root cause is as follows:
    
    When the pages are written to swap device during swapping out in
    swap_writepage(), zswap (fontswap) is tried to compress the pages to
    improve performance.  But zswap (frontswap) will treat THP as a normal
    page, so only the head page is saved.  After swapping in, tail pages
    will not be restored to their original contents, causing memory
    corruption in the applications.
    
    This is fixed by refusing to save page in the frontswap store functions
    if the page is a THP.  So that the THP will be swapped out to swap
    device.
    
    Another choice is to split THP if frontswap is enabled.  But it is found
    that the frontswap enabling isn't flexible.  For example, if
    CONFIG_ZSWAP=y (cannot be module), frontswap will be enabled even if
    zswap itself isn't enabled.
    
    Frontswap has multiple backends, to make it easy for one backend to
    enable THP support, the THP checking is put in backend frontswap store
    functions instead of the general interfaces.
    
    Link: http://lkml.kernel.org/r/20180209084947.22749-1-ying.huang@intel.com
    Fixes: bd4c82c22c367e068 ("mm, THP, swap: delay splitting THP after swapped out")
    Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
    Reported-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Tested-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Suggested-by: Minchan Kim <minchan@kernel.org>  [put THP checking in backend]
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Dan Streetman <ddstreet@ieee.org>
    Cc: Seth Jennings <sjenning@redhat.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Shaohua Li <shli@kernel.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: <stable@vger.kernel.org>    [4.14]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a14562d6e2c48068616e260a7d76b2ae8b8ee30
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 20 21:58:21 2018 +0100

    x86/oprofile: Fix bogus GCC-8 warning in nmi_setup()
    
    commit 85c615eb52222bc5fab6c7190d146bc59fac289e upstream.
    
    GCC-8 shows a warning for the x86 oprofile code that copies per-CPU
    data from CPU 0 to all other CPUs, which when building a non-SMP
    kernel turns into a memcpy() with identical source and destination
    pointers:
    
     arch/x86/oprofile/nmi_int.c: In function 'mux_clone':
     arch/x86/oprofile/nmi_int.c:285:2: error: 'memcpy' source argument is the same as destination [-Werror=restrict]
       memcpy(per_cpu(cpu_msrs, cpu).multiplex,
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
              per_cpu(cpu_msrs, 0).multiplex,
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
              sizeof(struct op_msr) * model->num_virt_counters);
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     arch/x86/oprofile/nmi_int.c: In function 'nmi_setup':
     arch/x86/oprofile/nmi_int.c:466:3: error: 'memcpy' source argument is the same as destination [-Werror=restrict]
     arch/x86/oprofile/nmi_int.c:470:3: error: 'memcpy' source argument is the same as destination [-Werror=restrict]
    
    I have analyzed a number of such warnings now: some are valid and the
    GCC warning is welcome. Others turned out to be false-positives, and
    GCC was changed to not warn about those any more. This is a corner case
    that is a false-positive but the GCC developers feel it's better to keep
    warning about it.
    
    In this case, it seems best to work around it by telling GCC
    a little more clearly that this code path is never hit with
    an IS_ENABLED() configuration check.
    
    Cc:stable as we also want old kernels to build cleanly with GCC-8.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Jessica Yu <jeyu@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Martin Sebor <msebor@gcc.gnu.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Robert Richter <rric@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: oprofile-list@lists.sf.net
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180220205826.2008875-1-arnd@arndb.de
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=84095
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b82d316fa5b199125a22559fd457cf3100c34fc
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Feb 21 14:45:20 2018 -0800

    Kbuild: always define endianess in kconfig.h
    
    commit 101110f6271ce956a049250c907bc960030577f8 upstream.
    
    Build testing with LTO found a couple of files that get compiled
    differently depending on whether asm/byteorder.h gets included early
    enough or not.  In particular, include/asm-generic/qrwlock_types.h is
    affected by this, but there are probably others as well.
    
    The symptom is a series of LTO link time warnings, including these:
    
        net/netlabel/netlabel_unlabeled.h:223: error: type of 'netlbl_unlhsh_add' does not match original declaration [-Werror=lto-type-mismatch]
         int netlbl_unlhsh_add(struct net *net,
        net/netlabel/netlabel_unlabeled.c:377: note: 'netlbl_unlhsh_add' was previously declared here
    
        include/net/ipv6.h:360: error: type of 'ipv6_renew_options_kern' does not match original declaration [-Werror=lto-type-mismatch]
         ipv6_renew_options_kern(struct sock *sk,
        net/ipv6/exthdrs.c:1162: note: 'ipv6_renew_options_kern' was previously declared here
    
        net/core/dev.c:761: note: 'dev_get_by_name_rcu' was previously declared here
         struct net_device *dev_get_by_name_rcu(struct net *net, const char *name)
        net/core/dev.c:761: note: code may be misoptimized unless -fno-strict-aliasing is used
    
        drivers/gpu/drm/i915/i915_drv.h:3377: error: type of 'i915_gem_object_set_to_wc_domain' does not match original declaration [-Werror=lto-type-mismatch]
         i915_gem_object_set_to_wc_domain(struct drm_i915_gem_object *obj, bool write);
        drivers/gpu/drm/i915/i915_gem.c:3639: note: 'i915_gem_object_set_to_wc_domain' was previously declared here
    
        include/linux/debugfs.h:92:9: error: type of 'debugfs_attr_read' does not match original declaration [-Werror=lto-type-mismatch]
         ssize_t debugfs_attr_read(struct file *file, char __user *buf,
        fs/debugfs/file.c:318: note: 'debugfs_attr_read' was previously declared here
    
        include/linux/rwlock_api_smp.h:30: error: type of '_raw_read_unlock' does not match original declaration [-Werror=lto-type-mismatch]
         void __lockfunc _raw_read_unlock(rwlock_t *lock) __releases(lock);
        kernel/locking/spinlock.c:246:26: note: '_raw_read_unlock' was previously declared here
    
        include/linux/fs.h:3308:5: error: type of 'simple_attr_open' does not match original declaration [-Werror=lto-type-mismatch]
         int simple_attr_open(struct inode *inode, struct file *file,
        fs/libfs.c:795: note: 'simple_attr_open' was previously declared here
    
    All of the above are caused by include/asm-generic/qrwlock_types.h
    failing to include asm/byteorder.h after commit e0d02285f16e
    ("locking/qrwlock: Use 'struct qrwlock' instead of 'struct __qrwlock'")
    in linux-4.15.
    
    Similar bugs may or may not exist in older kernels as well, but there is
    no easy way to test those with link-time optimizations, and kernels
    before 4.14 are harder to fix because they don't have Babu's patch
    series
    
    We had similar issues with CONFIG_ symbols in the past and ended up
    always including the configuration headers though linux/kconfig.h.  This
    works around the issue through that same file, defining either
    __BIG_ENDIAN or __LITTLE_ENDIAN depending on CONFIG_CPU_BIG_ENDIAN,
    which is now always set on all architectures since commit 4c97a0c8fee3
    ("arch: define CPU_BIG_ENDIAN for all fixed big endian archs").
    
    Link: http://lkml.kernel.org/r/20180202154104.1522809-2-arnd@arndb.de
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Babu Moger <babu.moger@amd.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Nicolas Pitre <nico@linaro.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6315213f0a788c7f08b02f88d1224e93f37d13f4
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Feb 14 15:43:00 2018 +0100

    iio: adis_lib: Initialize trigger before requesting interrupt
    
    commit f027e0b3a774e10302207e91d304bbf99e3a8b36 upstream.
    
    The adis_probe_trigger() creates a new IIO trigger and requests an
    interrupt associated with the trigger. The interrupt uses the generic
    iio_trigger_generic_data_rdy_poll() function as its interrupt handler.
    
    Currently the driver initializes some fields of the trigger structure after
    the interrupt has been requested. But an interrupt can fire as soon as it
    has been requested. This opens up a race condition.
    
    iio_trigger_generic_data_rdy_poll() will access the trigger data structure
    and dereference the ops field. If the ops field is not yet initialized this
    will result in a NULL pointer deref.
    
    It is not expected that the device generates an interrupt at this point, so
    typically this issue did not surface unless e.g. due to a hardware
    misconfiguration (wrong interrupt number, wrong polarity, etc.).
    
    But some newer devices from the ADIS family start to generate periodic
    interrupts in their power-on reset configuration and unfortunately the
    interrupt can not be masked in the device.  This makes the race condition
    much more visible and the following crash has been observed occasionally
    when booting a system using the ADIS16460.
    
            Unable to handle kernel NULL pointer dereference at virtual address 00000008
            pgd = c0004000
            [00000008] *pgd=00000000
            Internal error: Oops: 5 [#1] PREEMPT SMP ARM
            Modules linked in:
            CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.9.0-04126-gf9739f0-dirty #257
            Hardware name: Xilinx Zynq Platform
            task: ef04f640 task.stack: ef050000
            PC is at iio_trigger_notify_done+0x30/0x68
            LR is at iio_trigger_generic_data_rdy_poll+0x18/0x20
            pc : [<c042d868>]    lr : [<c042d924>]    psr: 60000193
            sp : ef051bb8  ip : 00000000  fp : ef106400
            r10: c081d80a  r9 : ef3bfa00  r8 : 00000087
            r7 : ef051bec  r6 : 00000000  r5 : ef3bfa00  r4 : ee92ab00
            r3 : 00000000  r2 : 00000000  r1 : 00000000  r0 : ee97e400
            Flags: nZCv  IRQs off  FIQs on  Mode SVC_32  ISA ARM  Segment none
            Control: 18c5387d  Table: 0000404a  DAC: 00000051
            Process swapper/0 (pid: 1, stack limit = 0xef050210)
            [<c042d868>] (iio_trigger_notify_done) from [<c0065b10>] (__handle_irq_event_percpu+0x88/0x118)
            [<c0065b10>] (__handle_irq_event_percpu) from [<c0065bbc>] (handle_irq_event_percpu+0x1c/0x58)
            [<c0065bbc>] (handle_irq_event_percpu) from [<c0065c30>] (handle_irq_event+0x38/0x5c)
            [<c0065c30>] (handle_irq_event) from [<c0068e28>] (handle_level_irq+0xa4/0x130)
            [<c0068e28>] (handle_level_irq) from [<c0064e74>] (generic_handle_irq+0x24/0x34)
            [<c0064e74>] (generic_handle_irq) from [<c021ab7c>] (zynq_gpio_irqhandler+0xb8/0x13c)
            [<c021ab7c>] (zynq_gpio_irqhandler) from [<c0064e74>] (generic_handle_irq+0x24/0x34)
            [<c0064e74>] (generic_handle_irq) from [<c0065370>] (__handle_domain_irq+0x5c/0xb4)
            [<c0065370>] (__handle_domain_irq) from [<c000940c>] (gic_handle_irq+0x48/0x8c)
            [<c000940c>] (gic_handle_irq) from [<c0013e8c>] (__irq_svc+0x6c/0xa8)
    
    To fix this make sure that the trigger is fully initialized before
    requesting the interrupt.
    
    Fixes: ccd2b52f4ac6 ("staging:iio: Add common ADIS library")
    Reported-by: Robin Getz <Robin.Getz@analog.com>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dc4030c87b77f7856b7d1388ad908e6a6d5f363
Author: Stefan Windfeldt-Prytz <stefan.windfeldt@axis.com>
Date:   Thu Feb 15 15:02:53 2018 +0100

    iio: buffer: check if a buffer has been set up when poll is called
    
    commit 4cd140bda6494543f1c1b0ccceceaa44b676eef6 upstream.
    
    If no iio buffer has been set up and poll is called return 0.
    Without this check there will be a null pointer dereference when
    calling poll on a iio driver without an iio buffer.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Windfeldt-Prytz <stefan.windfeldt@axis.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b985a6e8d4da148a320caf139ea9e8de8071a77
Author: Andreas Klinger <ak@it-klinger.de>
Date:   Thu Feb 1 21:49:24 2018 +0100

    iio: srf08: fix link error "devm_iio_triggered_buffer_setup" undefined
    
    commit 511051d509ec54642dd6d30fdf2caa33c23619cc upstream.
    
    Functions for triggered buffer support are needed by this module.
    If they are not defined accidentally by another driver, there's an error
    thrown out while linking.
    
    Add a select of IIO_BUFFER and IIO_TRIGGERED_BUFFER in the Kconfig file.
    
    Signed-off-by: Andreas Klinger <ak@it-klinger.de>
    Fixes: a83195937151 ("iio: srf08: add triggered buffer support")
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4f94e9baeba909e2bc5902ed2dd033fa8bb74a3
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Tue Jan 23 17:04:56 2018 +0100

    iio: adc: stm32: fix stm32h7_adc_enable error handling
    
    commit a3b5655ebdb501a98a45c0d3265dca9f2fe0218a upstream.
    
    Error handling in stm32h7_adc_enable routine doesn't unwind enable
    sequence correctly. ADEN can only be cleared by hardware (e.g. by
    writing one to ADDIS).
    It's also better to clear ADRDY just after it's been set by hardware.
    
    Fixes: 95e339b6e85d ("iio: adc: stm32: add support for STM32H7")
    
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2492eca0a05b05736cbcf7fc1f234a666c4fcc52
Author: Leon Romanovsky <leonro@mellanox.com>
Date:   Wed Feb 14 12:35:40 2018 +0200

    RDMA/uverbs: Sanitize user entered port numbers prior to access it
    
    commit 5d4c05c3ee36f67ddc107ab5ea0898af01a62cc1 upstream.
    
    ==================================================================
    BUG: KASAN: use-after-free in copy_ah_attr_from_uverbs+0x6f2/0x8c0
    Read of size 4 at addr ffff88006476a198 by task syzkaller697701/265
    
    CPU: 0 PID: 265 Comm: syzkaller697701 Not tainted 4.15.0+ #90
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    Call Trace:
     dump_stack+0xde/0x164
     ? dma_virt_map_sg+0x22c/0x22c
     ? show_regs_print_info+0x17/0x17
     ? lock_contended+0x11a0/0x11a0
     print_address_description+0x83/0x3e0
     kasan_report+0x18c/0x4b0
     ? copy_ah_attr_from_uverbs+0x6f2/0x8c0
     ? copy_ah_attr_from_uverbs+0x6f2/0x8c0
     ? lookup_get_idr_uobject+0x120/0x200
     ? copy_ah_attr_from_uverbs+0x6f2/0x8c0
     copy_ah_attr_from_uverbs+0x6f2/0x8c0
     ? modify_qp+0xd0e/0x1350
     modify_qp+0xd0e/0x1350
     ib_uverbs_modify_qp+0xf9/0x170
     ? ib_uverbs_query_qp+0xa70/0xa70
     ib_uverbs_write+0x7f9/0xef0
     ? attach_entity_load_avg+0x8b0/0x8b0
     ? ib_uverbs_query_qp+0xa70/0xa70
     ? uverbs_devnode+0x110/0x110
     ? cyc2ns_read_end+0x10/0x10
     ? print_irqtrace_events+0x280/0x280
     ? sched_clock_cpu+0x18/0x200
     ? _raw_spin_unlock_irq+0x29/0x40
     ? _raw_spin_unlock_irq+0x29/0x40
     ? _raw_spin_unlock_irq+0x29/0x40
     ? time_hardirqs_on+0x27/0x670
     __vfs_write+0x10d/0x700
     ? uverbs_devnode+0x110/0x110
     ? kernel_read+0x170/0x170
     ? _raw_spin_unlock_irq+0x29/0x40
     ? finish_task_switch+0x1bd/0x7a0
     ? finish_task_switch+0x194/0x7a0
     ? prandom_u32_state+0xe/0x180
     ? rcu_read_unlock+0x80/0x80
     ? security_file_permission+0x93/0x260
     vfs_write+0x1b0/0x550
     SyS_write+0xc7/0x1a0
     ? SyS_read+0x1a0/0x1a0
     ? trace_hardirqs_on_thunk+0x1a/0x1c
     entry_SYSCALL_64_fastpath+0x1e/0x8b
    RIP: 0033:0x433c29
    RSP: 002b:00007ffcf2be82a8 EFLAGS: 00000217
    
    Allocated by task 62:
     kasan_kmalloc+0xa0/0xd0
     kmem_cache_alloc+0x141/0x480
     dup_fd+0x101/0xcc0
     copy_process.part.62+0x166f/0x4390
     _do_fork+0x1cb/0xe90
     kernel_thread+0x34/0x40
     call_usermodehelper_exec_work+0x112/0x260
     process_one_work+0x929/0x1aa0
     worker_thread+0x5c6/0x12a0
     kthread+0x346/0x510
     ret_from_fork+0x3a/0x50
    
    Freed by task 259:
     kasan_slab_free+0x71/0xc0
     kmem_cache_free+0xf3/0x4c0
     put_files_struct+0x225/0x2c0
     exit_files+0x88/0xc0
     do_exit+0x67c/0x1520
     do_group_exit+0xe8/0x380
     SyS_exit_group+0x1e/0x20
     entry_SYSCALL_64_fastpath+0x1e/0x8b
    
    The buggy address belongs to the object at ffff88006476a000
     which belongs to the cache files_cache of size 832
    The buggy address is located 408 bytes inside of
     832-byte region [ffff88006476a000, ffff88006476a340)
    The buggy address belongs to the page:
    page:ffffea000191da80 count:1 mapcount:0 mapping:          (null) index:0x0 compound_mapcount: 0
    flags: 0x4000000000008100(slab|head)
    raw: 4000000000008100 0000000000000000 0000000000000000 0000000100080008
    raw: 0000000000000000 0000000100000001 ffff88006bcf7a80 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff88006476a080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff88006476a100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    >ffff88006476a180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                ^
     ffff88006476a200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff88006476a280: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: <stable@vger.kernel.org> # 4.11
    Fixes: 44c58487d51a ("IB/core: Define 'ib' and 'roce' rdma_ah_attr types")
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84205f964bcc09400c5e195dc6dbeee058f0aa6b
Author: Leon Romanovsky <leonro@mellanox.com>
Date:   Wed Feb 14 12:35:39 2018 +0200

    RDMA/uverbs: Fix circular locking dependency
    
    commit 1ff5325c3ca1843228a86549318bbd3b414b9207 upstream.
    
    Avoid circular locking dependency by calling
    to uobj_alloc_commit() outside of xrcd_tree_mutex lock.
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.15.0+ #87 Not tainted
    ------------------------------------------------------
    syzkaller401056/269 is trying to acquire lock:
     (&uverbs_dev->xrcd_tree_mutex){+.+.}, at: [<000000006c12d2cd>] uverbs_free_xrcd+0xd2/0x360
    
    but task is already holding lock:
     (&ucontext->uobjects_lock){+.+.}, at: [<00000000da010f09>] uverbs_cleanup_ucontext+0x168/0x730
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #1 (&ucontext->uobjects_lock){+.+.}:
           __mutex_lock+0x111/0x1720
           rdma_alloc_commit_uobject+0x22c/0x600
           ib_uverbs_open_xrcd+0x61a/0xdd0
           ib_uverbs_write+0x7f9/0xef0
           __vfs_write+0x10d/0x700
           vfs_write+0x1b0/0x550
           SyS_write+0xc7/0x1a0
           entry_SYSCALL_64_fastpath+0x1e/0x8b
    
    -> #0 (&uverbs_dev->xrcd_tree_mutex){+.+.}:
           lock_acquire+0x19d/0x440
           __mutex_lock+0x111/0x1720
           uverbs_free_xrcd+0xd2/0x360
           remove_commit_idr_uobject+0x6d/0x110
           uverbs_cleanup_ucontext+0x2f0/0x730
           ib_uverbs_cleanup_ucontext.constprop.3+0x52/0x120
           ib_uverbs_close+0xf2/0x570
           __fput+0x2cd/0x8d0
           task_work_run+0xec/0x1d0
           do_exit+0x6a1/0x1520
           do_group_exit+0xe8/0x380
           SyS_exit_group+0x1e/0x20
           entry_SYSCALL_64_fastpath+0x1e/0x8b
    
    other info that might help us debug this:
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(&ucontext->uobjects_lock);
                                   lock(&uverbs_dev->xrcd_tree_mutex);
                                   lock(&ucontext->uobjects_lock);
      lock(&uverbs_dev->xrcd_tree_mutex);
    
     *** DEADLOCK ***
    
    3 locks held by syzkaller401056/269:
     #0:  (&file->cleanup_mutex){+.+.}, at: [<00000000c9f0c252>] ib_uverbs_close+0xac/0x570
     #1:  (&ucontext->cleanup_rwsem){++++}, at: [<00000000b6994d49>] uverbs_cleanup_ucontext+0xf6/0x730
     #2:  (&ucontext->uobjects_lock){+.+.}, at: [<00000000da010f09>] uverbs_cleanup_ucontext+0x168/0x730
    
    stack backtrace:
    CPU: 0 PID: 269 Comm: syzkaller401056 Not tainted 4.15.0+ #87
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    Call Trace:
     dump_stack+0xde/0x164
     ? dma_virt_map_sg+0x22c/0x22c
     ? uverbs_cleanup_ucontext+0x168/0x730
     ? console_unlock+0x502/0xbd0
     print_circular_bug.isra.24+0x35e/0x396
     ? print_circular_bug_header+0x12e/0x12e
     ? find_usage_backwards+0x30/0x30
     ? entry_SYSCALL_64_fastpath+0x1e/0x8b
     validate_chain.isra.28+0x25d1/0x40c0
     ? check_usage+0xb70/0xb70
     ? graph_lock+0x160/0x160
     ? find_usage_backwards+0x30/0x30
     ? cyc2ns_read_end+0x10/0x10
     ? print_irqtrace_events+0x280/0x280
     ? __lock_acquire+0x93d/0x1630
     __lock_acquire+0x93d/0x1630
     lock_acquire+0x19d/0x440
     ? uverbs_free_xrcd+0xd2/0x360
     __mutex_lock+0x111/0x1720
     ? uverbs_free_xrcd+0xd2/0x360
     ? uverbs_free_xrcd+0xd2/0x360
     ? __mutex_lock+0x828/0x1720
     ? mutex_lock_io_nested+0x1550/0x1550
     ? uverbs_cleanup_ucontext+0x168/0x730
     ? __lock_acquire+0x9a9/0x1630
     ? mutex_lock_io_nested+0x1550/0x1550
     ? uverbs_cleanup_ucontext+0xf6/0x730
     ? lock_contended+0x11a0/0x11a0
     ? uverbs_free_xrcd+0xd2/0x360
     uverbs_free_xrcd+0xd2/0x360
     remove_commit_idr_uobject+0x6d/0x110
     uverbs_cleanup_ucontext+0x2f0/0x730
     ? sched_clock_cpu+0x18/0x200
     ? uverbs_close_fd+0x1c0/0x1c0
     ib_uverbs_cleanup_ucontext.constprop.3+0x52/0x120
     ib_uverbs_close+0xf2/0x570
     ? ib_uverbs_remove_one+0xb50/0xb50
     ? ib_uverbs_remove_one+0xb50/0xb50
     __fput+0x2cd/0x8d0
     task_work_run+0xec/0x1d0
     do_exit+0x6a1/0x1520
     ? fsnotify_first_mark+0x220/0x220
     ? exit_notify+0x9f0/0x9f0
     ? entry_SYSCALL_64_fastpath+0x5/0x8b
     ? entry_SYSCALL_64_fastpath+0x5/0x8b
     ? trace_hardirqs_on_thunk+0x1a/0x1c
     ? time_hardirqs_on+0x27/0x670
     ? time_hardirqs_off+0x27/0x490
     ? syscall_return_slowpath+0x6c/0x460
     ? entry_SYSCALL_64_fastpath+0x5/0x8b
     do_group_exit+0xe8/0x380
     SyS_exit_group+0x1e/0x20
     entry_SYSCALL_64_fastpath+0x1e/0x8b
    RIP: 0033:0x431ce9
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: <stable@vger.kernel.org> # 4.11
    Fixes: fd3c7904db6e ("IB/core: Change idr objects to use the new schema")
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aaa1915e3d2cc1a626b47b38734bfa8387509615
Author: Leon Romanovsky <leonro@mellanox.com>
Date:   Wed Feb 14 12:35:38 2018 +0200

    RDMA/uverbs: Fix bad unlock balance in ib_uverbs_close_xrcd
    
    commit 5c2e1c4f926856717f3fd31932e926dc3fe77ebd upstream.
    
    There is no matching lock for this mutex. Git history suggests this is
    just a missed remnant from an earlier version of the function before
    this locking was moved into uverbs_free_xrcd.
    
    Originally this lock was protecting the xrcd_table_delete()
    
    =====================================
    WARNING: bad unlock balance detected!
    4.15.0+ #87 Not tainted
    -------------------------------------
    syzkaller223405/269 is trying to release lock (&uverbs_dev->xrcd_tree_mutex) at:
    [<00000000b8703372>] ib_uverbs_close_xrcd+0x195/0x1f0
    but there are no more locks to release!
    
    other info that might help us debug this:
    1 lock held by syzkaller223405/269:
     #0:  (&uverbs_dev->disassociate_srcu){....}, at: [<000000005af3b960>] ib_uverbs_write+0x265/0xef0
    
    stack backtrace:
    CPU: 0 PID: 269 Comm: syzkaller223405 Not tainted 4.15.0+ #87
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    Call Trace:
     dump_stack+0xde/0x164
     ? dma_virt_map_sg+0x22c/0x22c
     ? ib_uverbs_write+0x265/0xef0
     ? console_unlock+0x502/0xbd0
     ? ib_uverbs_close_xrcd+0x195/0x1f0
     print_unlock_imbalance_bug+0x131/0x160
     lock_release+0x59d/0x1100
     ? ib_uverbs_close_xrcd+0x195/0x1f0
     ? lock_acquire+0x440/0x440
     ? lock_acquire+0x440/0x440
     __mutex_unlock_slowpath+0x88/0x670
     ? wait_for_completion+0x4c0/0x4c0
     ? rdma_lookup_get_uobject+0x145/0x2f0
     ib_uverbs_close_xrcd+0x195/0x1f0
     ? ib_uverbs_open_xrcd+0xdd0/0xdd0
     ib_uverbs_write+0x7f9/0xef0
     ? cyc2ns_read_end+0x10/0x10
     ? ib_uverbs_open_xrcd+0xdd0/0xdd0
     ? uverbs_devnode+0x110/0x110
     ? cyc2ns_read_end+0x10/0x10
     ? cyc2ns_read_end+0x10/0x10
     ? sched_clock_cpu+0x18/0x200
     __vfs_write+0x10d/0x700
     ? uverbs_devnode+0x110/0x110
     ? kernel_read+0x170/0x170
     ? __fget+0x358/0x5d0
     ? security_file_permission+0x93/0x260
     vfs_write+0x1b0/0x550
     SyS_write+0xc7/0x1a0
     ? SyS_read+0x1a0/0x1a0
     ? trace_hardirqs_on_thunk+0x1a/0x1c
     entry_SYSCALL_64_fastpath+0x1e/0x8b
    RIP: 0033:0x4335c9
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: <stable@vger.kernel.org> # 4.11
    Fixes: fd3c7904db6e ("IB/core: Change idr objects to use the new schema")
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3d66d43500c60192c9600a15e8e9f9b931ff389
Author: Leon Romanovsky <leonro@mellanox.com>
Date:   Tue Feb 13 12:18:41 2018 +0200

    RDMA/uverbs: Protect from command mask overflow
    
    commit 3f802b162dbf4a558ff98986449eddc717826209 upstream.
    
    The command number is not bounds checked against the command mask before it
    is shifted, resulting in an ubsan hit. This does not cause malfunction since
    the command number is eventually bounds checked, but we can make this ubsan
    clean by moving the bounds check to before the mask check.
    
    ================================================================================
    UBSAN: Undefined behaviour in
    drivers/infiniband/core/uverbs_main.c:647:21
    shift exponent 207 is too large for 64-bit type 'long long unsigned int'
    CPU: 0 PID: 446 Comm: syz-executor3 Not tainted 4.15.0-rc2+ #61
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    Call Trace:
    dump_stack+0xde/0x164
    ? dma_virt_map_sg+0x22c/0x22c
    ubsan_epilogue+0xe/0x81
    __ubsan_handle_shift_out_of_bounds+0x293/0x2f7
    ? debug_check_no_locks_freed+0x340/0x340
    ? __ubsan_handle_load_invalid_value+0x19b/0x19b
    ? lock_acquire+0x440/0x440
    ? lock_acquire+0x19d/0x440
    ? __might_fault+0xf4/0x240
    ? ib_uverbs_write+0x68d/0xe20
    ib_uverbs_write+0x68d/0xe20
    ? __lock_acquire+0xcf7/0x3940
    ? uverbs_devnode+0x110/0x110
    ? cyc2ns_read_end+0x10/0x10
    ? sched_clock_cpu+0x18/0x200
    ? sched_clock_cpu+0x18/0x200
    __vfs_write+0x10d/0x700
    ? uverbs_devnode+0x110/0x110
    ? kernel_read+0x170/0x170
    ? __fget+0x35b/0x5d0
    ? security_file_permission+0x93/0x260
    vfs_write+0x1b0/0x550
    SyS_write+0xc7/0x1a0
    ? SyS_read+0x1a0/0x1a0
    ? trace_hardirqs_on_thunk+0x1a/0x1c
    entry_SYSCALL_64_fastpath+0x18/0x85
    RIP: 0033:0x448e29
    RSP: 002b:00007f033f567c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 00007f033f5686bc RCX: 0000000000448e29
    RDX: 0000000000000060 RSI: 0000000020001000 RDI: 0000000000000012
    RBP: 000000000070bea0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00000000ffffffff
    R13: 00000000000056a0 R14: 00000000006e8740 R15: 0000000000000000
    ================================================================================
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: <stable@vger.kernel.org> # 4.5
    Fixes: 2dbd5186a39c ("IB/core: IB/core: Allow legacy verbs through extended interfaces")
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Reviewed-by: Matan Barak <matanb@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da768ed845a5228d0044d92faab4fd8de98c86fd
Author: Leon Romanovsky <leonro@mellanox.com>
Date:   Tue Feb 13 12:18:37 2018 +0200

    RDMA/uverbs: Protect from races between lookup and destroy of uobjects
    
    commit 6623e3e3cd78020016d3fa42555763178e94ab64 upstream.
    
    The race is between lookup_get_idr_uobject and
    uverbs_idr_remove_uobj -> uverbs_uobject_put.
    
    We deliberately do not call sychronize_rcu after the idr_remove in
    uverbs_idr_remove_uobj for performance reasons, instead we call
    kfree_rcu() during uverbs_uobject_put.
    
    However, this means we can obtain pointers to uobj's that have
    already been released and must protect against krefing them
    using kref_get_unless_zero.
    
    ==================================================================
    BUG: KASAN: use-after-free in copy_ah_attr_from_uverbs.isra.2+0x860/0xa00
    Read of size 4 at addr ffff88005fda1ac8 by task syz-executor2/441
    
    CPU: 1 PID: 441 Comm: syz-executor2 Not tainted 4.15.0-rc2+ #56
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    Call Trace:
    dump_stack+0x8d/0xd4
    print_address_description+0x73/0x290
    kasan_report+0x25c/0x370
    ? copy_ah_attr_from_uverbs.isra.2+0x860/0xa00
    copy_ah_attr_from_uverbs.isra.2+0x860/0xa00
    ? uverbs_try_lock_object+0x68/0xc0
    ? modify_qp.isra.7+0xdc4/0x10e0
    modify_qp.isra.7+0xdc4/0x10e0
    ib_uverbs_modify_qp+0xfe/0x170
    ? ib_uverbs_query_qp+0x970/0x970
    ? __lock_acquire+0xa11/0x1da0
    ib_uverbs_write+0x55a/0xad0
    ? ib_uverbs_query_qp+0x970/0x970
    ? ib_uverbs_query_qp+0x970/0x970
    ? ib_uverbs_open+0x760/0x760
    ? futex_wake+0x147/0x410
    ? sched_clock_cpu+0x18/0x180
    ? check_prev_add+0x1680/0x1680
    ? do_futex+0x3b6/0xa30
    ? sched_clock_cpu+0x18/0x180
    __vfs_write+0xf7/0x5c0
    ? ib_uverbs_open+0x760/0x760
    ? kernel_read+0x110/0x110
    ? lock_acquire+0x370/0x370
    ? __fget+0x264/0x3b0
    vfs_write+0x18a/0x460
    SyS_write+0xc7/0x1a0
    ? SyS_read+0x1a0/0x1a0
    ? trace_hardirqs_on_thunk+0x1a/0x1c
    entry_SYSCALL_64_fastpath+0x18/0x85
    RIP: 0033:0x448e29
    RSP: 002b:00007f443fee0c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 00007f443fee16bc RCX: 0000000000448e29
    RDX: 0000000000000078 RSI: 00000000209f8000 RDI: 0000000000000012
    RBP: 000000000070bea0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00000000ffffffff
    R13: 0000000000008e98 R14: 00000000006ebf38 R15: 0000000000000000
    
    Allocated by task 1:
    kmem_cache_alloc_trace+0x16c/0x2f0
    mlx5_alloc_cmd_msg+0x12e/0x670
    cmd_exec+0x419/0x1810
    mlx5_cmd_exec+0x40/0x70
    mlx5_core_mad_ifc+0x187/0x220
    mlx5_MAD_IFC+0xd7/0x1b0
    mlx5_query_mad_ifc_gids+0x1f3/0x650
    mlx5_ib_query_gid+0xa4/0xc0
    ib_query_gid+0x152/0x1a0
    ib_query_port+0x21e/0x290
    mlx5_port_immutable+0x30f/0x490
    ib_register_device+0x5dd/0x1130
    mlx5_ib_add+0x3e7/0x700
    mlx5_add_device+0x124/0x510
    mlx5_register_interface+0x11f/0x1c0
    mlx5_ib_init+0x56/0x61
    do_one_initcall+0xa3/0x250
    kernel_init_freeable+0x309/0x3b8
    kernel_init+0x14/0x180
    ret_from_fork+0x24/0x30
    
    Freed by task 1:
    kfree+0xeb/0x2f0
    mlx5_free_cmd_msg+0xcd/0x140
    cmd_exec+0xeba/0x1810
    mlx5_cmd_exec+0x40/0x70
    mlx5_core_mad_ifc+0x187/0x220
    mlx5_MAD_IFC+0xd7/0x1b0
    mlx5_query_mad_ifc_gids+0x1f3/0x650
    mlx5_ib_query_gid+0xa4/0xc0
    ib_query_gid+0x152/0x1a0
    ib_query_port+0x21e/0x290
    mlx5_port_immutable+0x30f/0x490
    ib_register_device+0x5dd/0x1130
    mlx5_ib_add+0x3e7/0x700
    mlx5_add_device+0x124/0x510
    mlx5_register_interface+0x11f/0x1c0
    mlx5_ib_init+0x56/0x61
    do_one_initcall+0xa3/0x250
    kernel_init_freeable+0x309/0x3b8
    kernel_init+0x14/0x180
    ret_from_fork+0x24/0x30
    
    The buggy address belongs to the object at ffff88005fda1ab0
    which belongs to the cache kmalloc-32 of size 32
    The buggy address is located 24 bytes inside of
    32-byte region [ffff88005fda1ab0, ffff88005fda1ad0)
    The buggy address belongs to the page:
    page:00000000d5655c19 count:1 mapcount:0 mapping: (null)
    index:0xffff88005fda1fc0
    flags: 0x4000000000000100(slab)
    raw: 4000000000000100 0000000000000000 ffff88005fda1fc0 0000000180550008
    raw: ffffea00017f6780 0000000400000004 ffff88006c803980 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
    ffff88005fda1980: fc fc fb fb fb fb fc fc fb fb fb fb fc fc fb fb
    ffff88005fda1a00: fb fb fc fc fb fb fb fb fc fc 00 00 00 00 fc fc
    ffff88005fda1a80: fb fb fb fb fc fc fb fb fb fb fc fc fb fb fb fb
    ffff88005fda1b00: fc fc 00 00 00 00 fc fc fb fb fb fb fc fc fb fb
    ffff88005fda1b80: fb fb fc fc fb fb fb fb fc fc fb fb fb fb fc fc
    ==================================================================@
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: <stable@vger.kernel.org> # 4.11
    Fixes: 3832125624b7 ("IB/core: Add support for idr types")
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 606f74e3d01b39ab2b602102d2c56a1ef9c9b3b1
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Feb 13 20:25:50 2018 +0100

    extcon: int3496: process id-pin first so that we start with the right status
    
    commit 0434352d3d2e950cf5e743f6062abd87de22f960 upstream.
    
    Some other drivers may be waiting for our extcon to show-up, exiting their
    probe methods with -EPROBE_DEFER until we show up.
    
    These drivers will typically get the cable state directly after getting
    the extcon, this commit changes the int3496 code to wait for the initial
    processing of the id-pin to complete before exiting probe() with 0, which
    will cause devices waiting on the defered probe to get reprobed.
    
    This fixes a race where the initial work might still be running while other
    drivers were already calling extcon_get_state().
    
    Fixes: 2f556bdb9f2e ("extcon: int3496: Add Intel INT3496 ACPI ... driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29e76b211e9231e1d565551de84d9abd6eff5658
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Feb 22 14:38:33 2018 +0000

    PKCS#7: fix certificate blacklisting
    
    commit 29f4a67c17e19314b7d74b8569be935e6c7edf50 upstream.
    
    If there is a blacklisted certificate in a SignerInfo's certificate
    chain, then pkcs7_verify_sig_chain() sets sinfo->blacklisted and returns
    0.  But, pkcs7_verify() fails to handle this case appropriately, as it
    actually continues on to the line 'actual_ret = 0;', indicating that the
    SignerInfo has passed verification.  Consequently, PKCS#7 signature
    verification ignores the certificate blacklist.
    
    Fix this by not considering blacklisted SignerInfos to have passed
    verification.
    
    Also fix the function comment with regards to when 0 is returned.
    
    Fixes: 03bb79315ddc ("PKCS#7: Handle blacklisted certificates")
    Cc: <stable@vger.kernel.org> # v4.12+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a1f7f726bd8670b7b371f4e440533cdcb9d8110
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Feb 22 14:38:33 2018 +0000

    PKCS#7: fix certificate chain verification
    
    commit 971b42c038dc83e3327872d294fe7131bab152fc upstream.
    
    When pkcs7_verify_sig_chain() is building the certificate chain for a
    SignerInfo using the certificates in the PKCS#7 message, it is passing
    the wrong arguments to public_key_verify_signature().  Consequently,
    when the next certificate is supposed to be used to verify the previous
    certificate, the next certificate is actually used to verify itself.
    
    An attacker can use this bug to create a bogus certificate chain that
    has no cryptographic relationship between the beginning and end.
    
    Fortunately I couldn't quite find a way to use this to bypass the
    overall signature verification, though it comes very close.  Here's the
    reasoning: due to the bug, every certificate in the chain beyond the
    first actually has to be self-signed (where "self-signed" here refers to
    the actual key and signature; an attacker might still manipulate the
    certificate fields such that the self_signed flag doesn't actually get
    set, and thus the chain doesn't end immediately).  But to pass trust
    validation (pkcs7_validate_trust()), either the SignerInfo or one of the
    certificates has to actually be signed by a trusted key.  Since only
    self-signed certificates can be added to the chain, the only way for an
    attacker to introduce a trusted signature is to include a self-signed
    trusted certificate.
    
    But, when pkcs7_validate_trust_one() reaches that certificate, instead
    of trying to verify the signature on that certificate, it will actually
    look up the corresponding trusted key, which will succeed, and then try
    to verify the *previous* certificate, which will fail.  Thus, disaster
    is narrowly averted (as far as I could tell).
    
    Fixes: 6c2dc5ae4ab7 ("X.509: Extract signature digest and make self-signed cert checks earlier")
    Cc: <stable@vger.kernel.org> # v4.7+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99b2095ac71e316ed366f027913646d40640d0be
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Feb 22 14:38:34 2018 +0000

    X.509: fix NULL dereference when restricting key with unsupported_sig
    
    commit 4b34968e77ad09628cfb3c4a7daf2adc2cefc6e8 upstream.
    
    The asymmetric key type allows an X.509 certificate to be added even if
    its signature's hash algorithm is not available in the crypto API.  In
    that case 'payload.data[asym_auth]' will be NULL.  But the key
    restriction code failed to check for this case before trying to use the
    signature, resulting in a NULL pointer dereference in
    key_or_keyring_common() or in restrict_link_by_signature().
    
    Fix this by returning -ENOPKG when the signature is unsupported.
    
    Reproducer when all the CONFIG_CRYPTO_SHA512* options are disabled and
    keyctl has support for the 'restrict_keyring' command:
    
        keyctl new_session
        keyctl restrict_keyring @s asymmetric builtin_trusted
        openssl req -new -sha512 -x509 -batch -nodes -outform der \
            | keyctl padd asymmetric desc @s
    
    Fixes: a511e1af8b12 ("KEYS: Move the point of trust determination to __key_link()")
    Cc: <stable@vger.kernel.org> # v4.7+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcb04cc794835964c1efeea24b392e5e35e88ab8
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Feb 22 14:38:33 2018 +0000

    X.509: fix BUG_ON() when hash algorithm is unsupported
    
    commit 437499eea4291ae9621e8763a41df027c110a1ef upstream.
    
    The X.509 parser mishandles the case where the certificate's signature's
    hash algorithm is not available in the crypto API.  In this case,
    x509_get_sig_params() doesn't allocate the cert->sig->digest buffer;
    this part seems to be intentional.  However,
    public_key_verify_signature() is still called via
    x509_check_for_self_signed(), which triggers the 'BUG_ON(!sig->digest)'.
    
    Fix this by making public_key_verify_signature() return -ENOPKG if the
    hash buffer has not been allocated.
    
    Reproducer when all the CONFIG_CRYPTO_SHA512* options are disabled:
    
        openssl req -new -sha512 -x509 -batch -nodes -outform der \
            | keyctl padd asymmetric desc @s
    
    Fixes: 6c2dc5ae4ab7 ("X.509: Extract signature digest and make self-signed cert checks earlier")
    Reported-by: Paolo Valente <paolo.valente@linaro.org>
    Cc: Paolo Valente <paolo.valente@linaro.org>
    Cc: <stable@vger.kernel.org> # v4.7+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa465cd5681334cc7db63c9da999dcbb0137fb8c
Author: Eric Anholt <eric@anholt.net>
Date:   Thu Feb 8 14:54:05 2018 +0100

    i2c: bcm2835: Set up the rising/falling edge delays
    
    commit fe32a815f05c8568669a062587435e15f9345764 upstream.
    
    We were leaving them in the power on state (or the state the firmware
    had set up for some client, if we were taking over from them).  The
    boot state was 30 core clocks, when we actually want to sample some
    time after (to make sure that the new input bit has actually arrived).
    
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e1d63cc7a5f6580c751d8f9e6be8c95791aa1cb
Author: Ben Gardner <gardner.ben@gmail.com>
Date:   Wed Feb 14 09:29:52 2018 -0600

    i2c: designware: must wait for enable
    
    commit fba4adbbf670577e605f9ad306629db6031cd48b upstream.
    
    One I2C bus on my Atom E3845 board has been broken since 4.9.
    It has two devices, both declared by ACPI and with built-in drivers.
    
    There are two back-to-back transactions originating from the kernel, one
    targeting each device. The first transaction works, the second one locks
    up the I2C controller. The controller never recovers.
    
    These kernel logs show up whenever an I2C transaction is attempted after
    this failure.
    i2c-designware-pci 0000:00:18.3: timeout in disabling adapter
    i2c-designware-pci 0000:00:18.3: timeout waiting for bus ready
    
    Waiting for the I2C controller status to indicate that it is enabled
    before programming it fixes the issue.
    
    I have tested this patch on 4.14 and 4.15.
    
    Fixes: commit 2702ea7dbec5 ("i2c: designware: wait for disable/enable only if necessary")
    Cc: linux-stable <stable@vger.kernel.org> #4.13+
    Signed-off-by: Ben Gardner <gardner.ben@gmail.com>
    Acked-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebaefbdaf552f9e159ea08f54afb6c80e20b2641
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 2 16:31:23 2018 +0100

    cfg80211: fix cfg80211_beacon_dup
    
    commit bee92d06157fc39d5d7836a061c7d41289a55797 upstream.
    
    gcc-8 warns about some obviously incorrect code:
    
    net/mac80211/cfg.c: In function 'cfg80211_beacon_dup':
    net/mac80211/cfg.c:2896:3: error: 'memcpy' source argument is the same as destination [-Werror=restrict]
    
    From the context, I conclude that we want to copy from beacon into
    new_beacon, as we do in the rest of the function.
    
    Cc: stable@vger.kernel.org
    Fixes: 73da7d5bab79 ("mac80211: add channel switch command and beacon callbacks")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f9eed6e3772e12e1d715a8d508f962ad8a51caa
Author: James Hogan <jhogan@kernel.org>
Date:   Tue Feb 20 15:44:37 2018 +0000

    MIPS: Drop spurious __unused in struct compat_flock
    
    commit 6ae1756faddefd7494353380ee546dd38c2f97eb upstream.
    
    MIPS' struct compat_flock doesn't match the 32-bit struct flock, as it
    has an extra short __unused before pad[4], which combined with alignment
    increases the size to 40 bytes compared with struct flock's 36 bytes.
    
    Since commit 8c6657cb50cb ("Switch flock copyin/copyout primitives to
    copy_{from,to}_user()"), put_compat_flock() writes the full compat_flock
    struct to userland, which results in corruption of the userland word
    after the struct flock when running 32-bit userlands on 64-bit kernels.
    
    This was observed to cause a bus error exception when starting Firefox
    on Debian 8 (Jessie).
    
    Reported-by: Peter Mamonov <pmamonov@gmail.com>
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Tested-by: Peter Mamonov <pmamonov@gmail.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # 4.13+
    Patchwork: https://patchwork.linux-mips.org/patch/18646/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fc16629e9bc8421ef4a5ae6248d5366fdb93185
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Tue Jan 23 20:11:32 2018 -0600

    scsi: ibmvfc: fix misdefined reserved field in ibmvfc_fcp_rsp_info
    
    commit c39813652700f3df552b6557530f1e5f782dbe2f upstream.
    
    The fcp_rsp_info structure as defined in the FC spec has an initial 3
    bytes reserved field. The ibmvfc driver mistakenly defined this field as
    4 bytes resulting in the rsp_code field being defined in what should be
    the start of the second reserved field and thus always being reported as
    zero by the driver.
    
    Ideally, we should wire ibmvfc up with libfc for the sake of code
    deduplication, and ease of maintaining standardized structures in a
    single place. However, for now simply fixup the definition in ibmvfc for
    backporting to distros on older kernels. Wiring up with libfc will be
    done in a followup patch.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53c86c2d90c69e11143d61c03f5d2142149e84eb
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Feb 13 15:31:05 2018 -0800

    xtensa: fix high memory/reserved memory collision
    
    commit 6ac5a11dc674bc5016ea716e8082fff61f524dc1 upstream.
    
    Xtensa memory initialization code frees high memory pages without
    checking whether they are in the reserved memory regions or not. That
    results in invalid value of totalram_pages and duplicate page usage by
    CMA and highmem. It produces a bunch of BUGs at startup looking like
    this:
    
    BUG: Bad page state in process swapper  pfn:70800
    page:be60c000 count:0 mapcount:-127 mapping:  (null) index:0x1
    flags: 0x80000000()
    raw: 80000000 00000000 00000001 ffffff80 00000000 be60c014 be60c014 0000000a
    page dumped because: nonzero mapcount
    Modules linked in:
    CPU: 0 PID: 1 Comm: swapper Tainted: G    B            4.16.0-rc1-00015-g7928b2cbe55b-dirty #23
    Stack:
     bd839d33 00000000 00000018 ba97b64c a106578c bd839d70 be60c000 00000000
     a1378054 bd86a000 00000003 ba97b64c a1066166 bd839da0 be60c000 ffe00000
     a1066b58 bd839dc0 be504000 00000000 000002f4 bd838000 00000000 0000001e
    Call Trace:
     [<a1065734>] bad_page+0xac/0xd0
     [<a106578c>] free_pages_check_bad+0x34/0x4c
     [<a1066166>] __free_pages_ok+0xae/0x14c
     [<a1066b58>] __free_pages+0x30/0x64
     [<a1365de5>] init_cma_reserved_pageblock+0x35/0x44
     [<a13682dc>] cma_init_reserved_areas+0xf4/0x148
     [<a10034b8>] do_one_initcall+0x80/0xf8
     [<a1361c16>] kernel_init_freeable+0xda/0x13c
     [<a125b59d>] kernel_init+0x9/0xd0
     [<a1004304>] ret_from_kernel_thread+0xc/0x18
    
    Only free high memory pages that are not reserved.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9428e622eca72b8664e856766fce52ea91a12a8c
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Feb 22 16:59:26 2018 -0800

    MIPS: boot: Define __ASSEMBLY__ for its.S build
    
    commit 0f9da844d87796ac31b04e81ee95e155e9043132 upstream.
    
    The MIPS %.its.S compiler command did not define __ASSEMBLY__, which meant
    when compiler_types.h was added to kconfig.h, unexpected things appeared
    (e.g. struct declarations) which should not have been present. As done in
    the general %.S compiler command, __ASSEMBLY__ is now included here too.
    
    The failure was:
    
        Error: arch/mips/boot/vmlinux.gz.its:201.1-2 syntax error
        FATAL ERROR: Unable to parse input tree
        /usr/bin/mkimage: Can't read arch/mips/boot/vmlinux.gz.itb.tmp: Invalid argument
        /usr/bin/mkimage Can't add hashes to FIT blob
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Fixes: 28128c61e08e ("kconfig.h: Include compiler types to avoid missed struct attributes")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3aff5c3b2a1b9f53e80f60d129c9d81b6e8d60f
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Feb 22 09:41:40 2018 -0800

    kconfig.h: Include compiler types to avoid missed struct attributes
    
    commit 28128c61e08eaeced9cc8ec0e6b5d677b5b94690 upstream.
    
    The header files for some structures could get included in such a way
    that struct attributes (specifically __randomize_layout from path.h) would
    be parsed as variable names instead of attributes. This could lead to
    some instances of a structure being unrandomized, causing nasty GPFs, etc.
    
    This patch makes sure the compiler_types.h header is included in
    kconfig.h so that we've always got types and struct attributes defined,
    since kconfig.h is included from the compiler command line.
    
    Reported-by: Patrick McLean <chutzpah@gentoo.org>
    Root-caused-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Tested-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Fixes: 3859a271a003 ("randstruct: Mark various structs for randomization")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35d75b7bfc67520fb1d93b63ab3ae27992006f66
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Fri Feb 23 18:29:02 2018 +0000

    arm64: mm: don't write garbage into TTBR1_EL1 register
    
    Stable backport commit 173358a49173 ("arm64: kpti: Add ->enable callback
    to remap swapper using nG mappings") of upstream commit f992b4dfd58b did
    not survive the backporting process unscathed, and ends up writing garbage
    into the TTBR1_EL1 register, rather than pointing it to the zero page to
    disable translations. Fix that.
    
    Cc: <stable@vger.kernel.org> #v4.14
    Reported-by: Nicolas Dechesne <nicolas.dechesne@linaro.org>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 485595768d89f53581a7527285acf97880fc65a6
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu Feb 8 12:19:00 2018 +0100

    netfilter: drop outermost socket lock in getsockopt()
    
    commit 01ea306f2ac2baff98d472da719193e738759d93 upstream.
    
    The Syzbot reported a possible deadlock in the netfilter area caused by
    rtnl lock, xt lock and socket lock being acquired with a different order
    on different code paths, leading to the following backtrace:
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.15.0+ #301 Not tainted
    ------------------------------------------------------
    syzkaller233489/4179 is trying to acquire lock:
      (rtnl_mutex){+.+.}, at: [<0000000048e996fd>] rtnl_lock+0x17/0x20
    net/core/rtnetlink.c:74
    
    but task is already holding lock:
      (&xt[i].mutex){+.+.}, at: [<00000000328553a2>]
    xt_find_table_lock+0x3e/0x3e0 net/netfilter/x_tables.c:1041
    
    which lock already depends on the new lock.
    ===
    
    Since commit 3f34cfae1230 ("netfilter: on sockopt() acquire sock lock
    only in the required scope"), we already acquire the socket lock in
    the innermost scope, where needed. In such commit I forgot to remove
    the outer-most socket lock from the getsockopt() path, this commit
    addresses the issues dropping it now.
    
    v1 -> v2: fix bad subj, added relavant 'fixes' tag
    
    Fixes: 22265a5c3c10 ("netfilter: xt_TEE: resolve oif using netdevice notifiers")
    Fixes: 202f59afd441 ("netfilter: ipt_CLUSTERIP: do not hold dev")
    Fixes: 3f34cfae1230 ("netfilter: on sockopt() acquire sock lock only in the required scope")
    Reported-by: syzbot+ddde1c7b7ff7442d7f2d@syzkaller.appspotmail.com
    Suggested-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Tested-by: Krzysztof Piotr Oledzki <ole@ans.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55b195735142c1a8ffccb21a4af0b1bd8bd4d1eb
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Feb 25 11:08:04 2018 +0100

    Linux 4.14.22

commit c902ff1e4b2535a43980302d573020a16be29a2e
Author: Michal Hocko <mhocko@suse.com>
Date:   Wed Feb 21 14:46:01 2018 -0800

    vmalloc: fix __GFP_HIGHMEM usage for vmalloc_32 on 32b systems
    
    commit 698d0831ba87b92ae10b15e8203cfd59f5a59a35 upstream.
    
    Kai Heng Feng has noticed that BUG_ON(PageHighMem(pg)) triggers in
    drivers/media/common/saa7146/saa7146_core.c since 19809c2da28a ("mm,
    vmalloc: use __GFP_HIGHMEM implicitly").
    
    saa7146_vmalloc_build_pgtable uses vmalloc_32 and it is reasonable to
    expect that the resulting page is not in highmem.  The above commit
    aimed to add __GFP_HIGHMEM only for those requests which do not specify
    any zone modifier gfp flag.  vmalloc_32 relies on GFP_VMALLOC32 which
    should do the right thing.  Except it has been missed that GFP_VMALLOC32
    is an alias for GFP_KERNEL on 32b architectures.  Thanks to Matthew to
    notice this.
    
    Fix the problem by unconditionally setting GFP_DMA32 in GFP_VMALLOC32
    for !64b arches (as a bailout).  This should do the right thing and use
    ZONE_NORMAL which should be always below 4G on 32b systems.
    
    Debugged by Matthew Wilcox.
    
    [akpm@linux-foundation.org: coding-style fixes]
    Link: http://lkml.kernel.org/r/20180212095019.GX21609@dhcp22.suse.cz
    Fixes: 19809c2da28a ("mm, vmalloc: use __GFP_HIGHMEM implicitly”)
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reported-by: Kai Heng Feng <kai.heng.feng@canonical.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eff339b5d25029ce5aed6c85c59f1708b22ef9b2
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Sun Feb 18 11:05:16 2018 +0200

    mei: me: add cannon point device ids for 4th device
    
    commit 2a4ac172c2f257d28c47b90c9e381bec31edcc44 upstream.
    
    Add cannon point device ids for 4th (itouch) device.
    
    Cc: <stable@vger.kernel.org> 4.14+
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06320148eecdd7377c4e512b1d694a26b7b61cd8
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Sun Feb 18 11:05:15 2018 +0200

    mei: me: add cannon point device ids
    
    commit f8f4aa68a8ae98ed79c8fee3488c38a2f5d2de8c upstream.
    
    Add CNP LP and CNP H device ids for cannon lake
    and coffee lake platforms.
    
    Cc: <stable@vger.kernel.org> 4.14+
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95c0853883973c9c065959a33208751dcf8c57d1
Author: Kamil Konieczny <k.konieczny@partner.samsung.com>
Date:   Wed Feb 7 16:52:09 2018 +0100

    crypto: s5p-sss - Fix kernel Oops in AES-ECB mode
    
    commit c927b080c67e3e97193c81fc1d27f4251bf4e036 upstream.
    
    In AES-ECB mode crypt is done with key only, so any use of IV
    can cause kernel Oops. Use IV only in AES-CBC and AES-CTR.
    
    Signed-off-by: Kamil Konieczny <k.konieczny@partner.samsung.com>
    Reported-by: Anand Moon <linux.amoon@gmail.com>
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Tested-by: Anand Moon <linux.amoon@gmail.com>
    Cc: stable@vger.kernel.org # can be applied after commit 8f9702aad138
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc4cb30f2cd5f42631f81cb7afb7f5b325f5a23a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Nov 27 16:10:27 2017 +0100

    drm/i915: fix intel_backlight_device_register declaration
    
    commit ac29fc66855b79c2960c63a4a66952d5b721d698 upstream.
    
    The alternative intel_backlight_device_register() definition apparently
    never got used, but I have now run into a case of i915 being compiled
    without CONFIG_BACKLIGHT_CLASS_DEVICE, resulting in a number of
    identical warnings:
    
    drivers/gpu/drm/i915/intel_drv.h:1739:12: error: 'intel_backlight_device_register' defined but not used [-Werror=unused-function]
    
    This marks the function as 'inline', which was surely the original
    intention here.
    
    Fixes: 1ebaa0b9c2d4 ("drm/i915: Move backlight registration to connector registration")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171127151239.1813673-1-arnd@arndb.de
    (cherry picked from commit 2de2d0b063b08becb2c67a2c338c44e37bdcffee)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68a2a52047602994f5ded220f172da9e7e17a310
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Jan 26 17:09:59 2018 +0100

    crypto: talitos - fix Kernel Oops on hashing an empty file
    
    commit 87a81dce53b1ea61acaeefa5191a0376a2d1d721 upstream.
    
    Performing the hash of an empty file leads to a kernel Oops
    
    [   44.504600] Unable to handle kernel paging request for data at address 0x0000000c
    [   44.512819] Faulting instruction address: 0xc02d2be8
    [   44.524088] Oops: Kernel access of bad area, sig: 11 [#1]
    [   44.529171] BE PREEMPT CMPC885
    [   44.532232] CPU: 0 PID: 491 Comm: md5sum Not tainted 4.15.0-rc8-00211-g3a968610b6ea #81
    [   44.540814] NIP:  c02d2be8 LR: c02d2984 CTR: 00000000
    [   44.545812] REGS: c6813c90 TRAP: 0300   Not tainted  (4.15.0-rc8-00211-g3a968610b6ea)
    [   44.554223] MSR:  00009032 <EE,ME,IR,DR,RI>  CR: 48222822  XER: 20000000
    [   44.560855] DAR: 0000000c DSISR: c0000000
    [   44.560855] GPR00: c02d28fc c6813d40 c6828000 c646fa40 00000001 00000001 00000001 00000000
    [   44.560855] GPR08: 0000004c 00000000 c000bfcc 00000000 28222822 100280d4 00000000 10020008
    [   44.560855] GPR16: 00000000 00000020 00000000 00000000 10024008 00000000 c646f9f0 c6179a10
    [   44.560855] GPR24: 00000000 00000001 c62f0018 c6179a10 00000000 c6367a30 c62f0000 c646f9c0
    [   44.598542] NIP [c02d2be8] ahash_process_req+0x448/0x700
    [   44.603751] LR [c02d2984] ahash_process_req+0x1e4/0x700
    [   44.608868] Call Trace:
    [   44.611329] [c6813d40] [c02d28fc] ahash_process_req+0x15c/0x700 (unreliable)
    [   44.618302] [c6813d90] [c02060c4] hash_recvmsg+0x11c/0x210
    [   44.623716] [c6813db0] [c0331354] ___sys_recvmsg+0x98/0x138
    [   44.629226] [c6813eb0] [c03332c0] __sys_recvmsg+0x40/0x84
    [   44.634562] [c6813f10] [c03336c0] SyS_socketcall+0xb8/0x1d4
    [   44.640073] [c6813f40] [c000d1ac] ret_from_syscall+0x0/0x38
    [   44.645530] Instruction dump:
    [   44.648465] 38c00001 7f63db78 4e800421 7c791b78 54690ffe 0f090000 80ff0190 2f870000
    [   44.656122] 40befe50 2f990001 409e0210 813f01bc <8129000c> b39e003a 7d29c214 913e003c
    
    This patch fixes that Oops by checking if src is NULL.
    
    Fixes: 6a1e8d14156d4 ("crypto: talitos - making mapping helpers more generic")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e94fc847bd6e405e7c2b8849e52c102070777387
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Tue Dec 12 16:49:52 2017 +0800

    hippi: Fix a Fix a possible sleep-in-atomic bug in rr_close
    
    
    [ Upstream commit 6e266610eb6553cfb7e7eb5d11914bd01509c406 ]
    
    The driver may sleep under a spinlock.
    The function call path is:
    rr_close (acquire the spinlock)
      free_irq --> may sleep
    
    To fix it, free_irq is moved to the place without holding the spinlock.
    
    This bug is found by my static analysis tool(DSAC) and checked by my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 385aeea7128918b57f7a4dd70c0fa55c50c6daa3
Author: Anju T Sudhakar <anju@linux.vnet.ibm.com>
Date:   Tue Dec 5 11:00:38 2017 +0530

    powerpc/perf/imc: Fix nest-imc cpuhotplug callback failure
    
    
    [ Upstream commit ad2b6e01024ef23bddc3ce0bcb115ecd8c520b7e ]
    
    Oops is observed during boot:
    
      Faulting instruction address: 0xc000000000248340
      cpu 0x0: Vector: 380 (Data Access Out of Range) at [c000000ff66fb850]
          pc: c000000000248340: event_function_call+0x50/0x1f0
          lr: c00000000024878c: perf_remove_from_context+0x3c/0x100
          sp: c000000ff66fbad0
         msr: 9000000000009033
         dar: 7d20e2a6f92d03c0
        pid = 14, comm = cpuhp/0
    
    While registering the cpuhotplug callbacks for nest-imc, if we fail in
    the cpuhotplug online path for any random node in a multi node
    system (because the opal call to stop nest-imc counters fails for that
    node), ppc_nest_imc_cpu_offline() will get invoked for other nodes who
    successfully returned from cpuhotplug online path.
    
    This call trace is generated since in the ppc_nest_imc_cpu_offline()
    path we are trying to migrate the event context, when nest-imc
    counters are not even initialized.
    
    Patch to add a check to ensure that nest-imc is registered before
    migrating the event context.
    
    Fixes: 885dcd709ba9 ("powerpc/perf: Add nest IMC PMU support")
    Signed-off-by: Anju T Sudhakar <anju@linux.vnet.ibm.com>
    Reviewed-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 473900cd523a9d11a03a2eb5fec2e2ef029fb21b
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Dec 7 11:15:19 2017 +0100

    PCI: rcar: Fix use-after-free in probe error path
    
    
    [ Upstream commit 0c31f1d7be1b5c4858b1d714dcefa25f41428cab ]
    
    If CONFIG_DEBUG_SLAB=y, and no PCIe card is inserted, the kernel crashes
    during probe on r8a7791/koelsch:
    
      rcar-pcie fe000000.pcie: PCIe link down
      Unable to handle kernel paging request at virtual address 6b6b6b6b
    
    (seeing this message requires earlycon and keep_bootcon).
    
    Indeed, pci_free_host_bridge() frees the PCI host bridge, including the
    embedded rcar_pcie object, so pci_free_resource_list() must not be called
    afterwards.
    
    To fix this, move the call to pci_free_resource_list() up, and update the
    label name accordingly.
    
    Fixes: ddd535f1ea3eb27e ("PCI: rcar: Fix memory leak when no PCIe card is inserted")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Simon Horman <horms+renesas@verge.net.au>
    Acked-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73974676f802f6634054539757dd66fee0754190
Author: Jan Beulich <JBeulich@suse.com>
Date:   Tue Dec 12 03:18:11 2017 -0700

    xen: XEN_ACPI_PROCESSOR is Dom0-only
    
    
    [ Upstream commit c4f9d9cb2c29ff04c6b4bb09b72802d8aedfc7cb ]
    
    Add a respective dependency.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8babb53208856c1ec982c7bc26024865d0fba3a4
Author: Pali Rohár <pali.rohar@gmail.com>
Date:   Thu Nov 2 21:25:24 2017 +0100

    platform/x86: dell-laptop: Fix keyboard max lighting for Dell Latitude E6410
    
    
    [ Upstream commit 68a213d325c23d39f109f4c7c824b906a7d209de ]
    
    This machine reports number of keyboard backlight led levels, instead of
    value of the last led level index. Therefore max_brightness properly needs
    to be subtracted by 1 to match led max_brightness API.
    
    Signed-off-by: Pali Rohár <pali.rohar@gmail.com>
    Reported-by: Gabriel M. Elder <gabriel@tekgnowsys.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=196913
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 721d4b02495c917032ec66e8de4251f55717ca9b
Author: Karol Herbst <kherbst@redhat.com>
Date:   Mon Nov 27 08:51:39 2017 +0100

    x86/mm/kmmio: Fix mmiotrace for page unaligned addresses
    
    
    [ Upstream commit 6d60ce384d1d5ca32b595244db4077a419acc687 ]
    
    If something calls ioremap() with an address not aligned to PAGE_SIZE, the
    returned address might be not aligned as well. This led to a probe
    registered on exactly the returned address, but the entire page was armed
    for mmiotracing.
    
    On calling iounmap() the address passed to unregister_kmmio_probe() was
    PAGE_SIZE aligned by the caller leading to a complete freeze of the
    machine.
    
    We should always page align addresses while (un)registerung mappings,
    because the mmiotracer works on top of pages, not mappings. We still keep
    track of the probes based on their real addresses and lengths though,
    because the mmiotrace still needs to know what are mapped memory regions.
    
    Also move the call to mmiotrace_iounmap() prior page aligning the address,
    so that all probes are unregistered properly, otherwise the kernel ends up
    failing memory allocations randomly after disabling the mmiotracer.
    
    Tested-by: Lyude <lyude@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Acked-by: Pekka Paalanen <ppaalanen@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: nouveau@lists.freedesktop.org
    Link: http://lkml.kernel.org/r/20171127075139.4928-1-kherbst@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d91c3f2e540f978ee98558e10f108fd5f13b1e2a
Author: Dave Young <dyoung@redhat.com>
Date:   Sat Dec 9 12:16:10 2017 +0800

    mm/early_ioremap: Fix boot hang with earlyprintk=efi,keep
    
    
    [ Upstream commit 7f6f60a1ba52538c16f26930bfbcfe193d9d746a ]
    
    earlyprintk=efi,keep does not work any more with a warning
    in mm/early_ioremap.c: WARN_ON(system_state != SYSTEM_BOOTING):
    Boot just hangs because of the earlyprintk within the earlyprintk
    implementation code itself.
    
    This is caused by a new introduced middle state in:
    
      69a78ff226fe ("init: Introduce SYSTEM_SCHEDULING state")
    
    early_ioremap() is fine in both SYSTEM_BOOTING and SYSTEM_SCHEDULING
    states, original condition should be updated accordingly.
    
    Signed-off-by: Dave Young <dyoung@redhat.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: bp@suse.de
    Cc: linux-efi@vger.kernel.org
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20171209041610.GA3249@dhcp-128-65.nay.redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abe8e59ab2f26645830bd61ed94063b00b84cda3
Author: Andreas Platschek <andreas.platschek@opentech.at>
Date:   Thu Dec 7 11:32:20 2017 +0100

    usb: dwc3: of-simple: fix missing clk_disable_unprepare
    
    
    [ Upstream commit ded600ea9fb51a495d2fcd21e90351df876488e8 ]
    
    If of_clk_get() fails, the clean-up of already initialized clocks should be
    the same as when clk_prepare_enable() fails. Thus a clk_disable_unprepare()
    for each clock should be called before the clk_put().
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: 16adc674d0d6 ("usb: dwc3: ep0: fix setup_packet_pending initialization")
    
    Signed-off-by: Andreas Platschek <andreas.platschek@opentech.at>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98b35258b3941badc6998092d738a17f4c5d63fd
Author: Vincent Pelletier <plr.vincent@gmail.com>
Date:   Thu Nov 30 15:31:06 2017 +0000

    usb: dwc3: gadget: Wait longer for controller to end command processing
    
    
    [ Upstream commit 8722e095f5a44d0e409e45c5ddc2ee9cf589c777 ]
    
    DWC3_DEPCMD_ENDTRANSFER has been witnessed to require around 600 iterations
    before controller would become idle again after unplugging the USB cable
    with AIO reads submitted.
    Bump timeout from 500 iterations to 1000 so dwc3_stop_active_transfer does
    not receive -ETIMEDOUT and does not WARN:
    
    [   81.326273] ------------[ cut here ]------------
    [   81.335341] WARNING: CPU: 0 PID: 1874 at drivers/usb/dwc3/gadget.c:2627 dwc3_stop_active_transfer.constprop.23+0x69/0xc0 [dwc3]
    [   81.347094] Modules linked in: usb_f_fs libcomposite configfs bnep btsdio bluetooth ecdh_generic brcmfmac brcmutil dwc3 intel_powerclamp coretemp ulpi kvm_intel udc_core kvm irqbypass crc32_pclmul crc32c_intel pcbc dwc3_pci aesni_intel aes_i586 crypto_simd cryptd ehci_pci ehci_hcd basincove_gpadc industrialio gpio_keys usbcore usb_common
    [   81.378142] CPU: 0 PID: 1874 Comm: irq/34-dwc3 Not tainted 4.14.0-edison+ #119
    [   81.385545] Hardware name: Intel Corporation Merrifield/BODEGA BAY, BIOS 542 2015.01.21:18.19.48
    [   81.394548] task: f5b1be00 task.stack: f420a000
    [   81.399219] EIP: dwc3_stop_active_transfer.constprop.23+0x69/0xc0 [dwc3]
    [   81.406086] EFLAGS: 00010086 CPU: 0
    [   81.409672] EAX: 0000001f EBX: f5729800 ECX: c132a2a2 EDX: 00000000
    [   81.416096] ESI: f4054014 EDI: f41cf400 EBP: f420be10 ESP: f420bdf4
    [   81.422521]  DS: 007b ES: 007b FS: 00d8 GS: 0000 SS: 0068
    [   81.428061] CR0: 80050033 CR2: b7a3f000 CR3: 01d94000 CR4: 001006d0
    [   81.434483] Call Trace:
    [   81.437063]  __dwc3_gadget_ep_disable+0xa3/0x2b0 [dwc3]
    [   81.442438]  ? _raw_spin_lock_irqsave+0x32/0x40
    [   81.447135]  dwc3_gadget_ep_disable+0xbf/0xe0 [dwc3]
    [   81.452269]  usb_ep_disable+0x1c/0xd0 [udc_core]
    [   81.457048]  ffs_func_eps_disable.isra.15+0x3b/0x90 [usb_f_fs]
    [   81.463070]  ffs_func_set_alt+0x7d/0x310 [usb_f_fs]
    [   81.468132]  ffs_func_disable+0x14/0x20 [usb_f_fs]
    [   81.473075]  reset_config+0x5b/0x90 [libcomposite]
    [   81.478023]  composite_disconnect+0x2b/0x50 [libcomposite]
    [   81.483685]  dwc3_disconnect_gadget+0x39/0x50 [dwc3]
    [   81.488808]  dwc3_gadget_disconnect_interrupt+0x21b/0x250 [dwc3]
    [   81.495014]  dwc3_thread_interrupt+0x2a8/0xf70 [dwc3]
    [   81.500219]  ? __schedule+0x78c/0x7e0
    [   81.504027]  irq_thread_fn+0x18/0x30
    [   81.507715]  ? irq_thread+0xb7/0x180
    [   81.511400]  irq_thread+0x111/0x180
    [   81.515000]  ? irq_finalize_oneshot+0xe0/0xe0
    [   81.519490]  ? wake_threads_waitq+0x30/0x30
    [   81.523806]  kthread+0x107/0x110
    [   81.527131]  ? disable_percpu_irq+0x50/0x50
    [   81.531439]  ? kthread_stop+0x150/0x150
    [   81.535397]  ret_from_fork+0x19/0x24
    [   81.539136] Code: 89 d8 c7 45 ec 00 00 00 00 c7 45 f0 00 00 00 00 c7 45 f4 00 00 00 00 e8 56 ef ff ff 85 c0 74 12 50 68 b9 1c 14 f8 e8 64 0f f7 c8 <0f> ff 58 5a 8d 76 00 8b 83 98 00 00 00 c6 83 a0 00 00 00 00 83
    [   81.559295] ---[ end trace f3133eec81a473b8 ]---
    
    Number of iterations measured on 4 consecutive unplugs:
    [ 1088.799777] dwc3_send_gadget_ep_cmd(cmd=331016, params={0, 0, 0}) iterated 605 times
    [ 1222.024986] dwc3_send_gadget_ep_cmd(cmd=331016, params={0, 0, 0}) iterated 580 times
    [ 1317.590452] dwc3_send_gadget_ep_cmd(cmd=331016, params={0, 0, 0}) iterated 598 times
    [ 1453.218314] dwc3_send_gadget_ep_cmd(cmd=331016, params={0, 0, 0}) iterated 594 times
    
    Signed-off-by: Vincent Pelletier <plr.vincent@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58d3cc9687f5baf704c866d61af302c50d302d91
Author: Tobias Jordan <Tobias.Jordan@elektrobit.com>
Date:   Wed Dec 6 14:28:27 2017 +0100

    dmaengine: jz4740: disable/unprepare clk if probe fails
    
    
    [ Upstream commit eb9436966fdc84cebdf222952a99898ab46d9bb0 ]
    
    in error path of jz4740_dma_probe(), call clk_disable_unprepare() to clean
    up.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: 25ce6c35fea0 MIPS: jz4740: Remove custom DMA API
    Signed-off-by: Tobias Jordan <Tobias.Jordan@elektrobit.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4826773306b5275055632a59eda7957ae543eecd
Author: Stefan Schake <stschake@gmail.com>
Date:   Sat Dec 2 18:40:39 2017 +0100

    drm/vc4: Release fence after signalling
    
    
    [ Upstream commit babc8110057cb9ca542c3c1666cbda4e8ccf9250 ]
    
    We were never releasing the initial fence reference that is obtained
    through dma_fence_init.
    
    Link: https://github.com/anholt/linux/issues/122
    Fixes: cdec4d361323 ("drm/vc4: Expose dma-buf fences for V3D rendering.")
    Signed-off-by: Stefan Schake <stschake@gmail.com>
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/1512236444-301-1-git-send-email-stschake@gmail.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 645ad410dcbd32d2566ada0dd1eb65abfcfa3b9d
Author: Jiada Wang <jiada_wang@mentor.com>
Date:   Thu Dec 7 22:15:38 2017 -0800

    ASoC: rsnd: ssi: fix race condition in rsnd_ssi_pointer_update
    
    
    [ Upstream commit 33f801366bdf3f8b67dfe325b84f4051a090d01e ]
    
    Currently there is race condition between set of byte_pos and wrap
    it around when new buffer starts. If .pointer is called in-between
    it will result in inconsistent pointer position be returned
    from .pointer callback.
    
    This patch increments buffer pointer atomically to avoid this issue.
    
    Signed-off-by: Jiada Wang <jiada_wang@mentor.com>
    Reviewed-by: Takashi Sakamoto <takashi.sakamoto@miraclelinux.com>
    Acked-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06078bd640c3d5b339c841366963447a9f9a67b7
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Fri Dec 8 12:16:22 2017 +0000

    drm/armada: fix leak of crtc structure
    
    
    [ Upstream commit 33cd3c07a976e11c3c4cc6b0b3db6760ad1590c5 ]
    
    Fix the leak of the CRTC structure in the failure paths of
    armada_drm_crtc_create().
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20db5b3e3da3a112cb25baa0446af80976bd2208
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Fri Dec 8 08:07:25 2017 +0100

    xfrm: Fix stack-out-of-bounds with misconfigured transport mode policies.
    
    
    [ Upstream commit 732706afe1cc46ef48493b3d2b69c98f36314ae4 ]
    
    On policies with a transport mode template, we pass the addresses
    from the flowi to xfrm_state_find(), assuming that the IP addresses
    (and address family) don't change during transformation.
    
    Unfortunately our policy template validation is not strict enough.
    It is possible to configure policies with transport mode template
    where the address family of the template does not match the selectors
    address family. This lead to stack-out-of-bound reads because
    we compare arddesses of the wrong family. Fix this by refusing
    such a configuration, address family can not change on transport
    mode.
    
    We use the assumption that, on transport mode, the first templates
    address family must match the address family of the policy selector.
    Subsequent transport mode templates must mach the address family of
    the previous template.
    
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1840744a7f2e977f726f0197ecca5085f2e682da
Author: Guy Levi <guyle@mellanox.com>
Date:   Tue Dec 5 22:30:03 2017 +0200

    IB/mlx4: Fix RSS hash fields restrictions
    
    
    [ Upstream commit 4d02ebd9bbbdde1d524e62b540b0402cee7bbcdf ]
    
    Mistakenly the driver didn't allow RSS hash fields combinations which
    involve both IPv4 and IPv6 protocols. This bug caused to failures for
    user's use cases for RSS.
    
    Consequently, this patch fixes this bug and allows any combination that
    the HW can support.
    
    Additionally, the patch fixes the driver to return an error in case the
    user provides an unsupported mask for RSS hash fields.
    
    Fixes: 3078f5f1bd8b ("IB/mlx4: Add support for RSS QP")
    Signed-off-by: Guy Levi <guyle@mellanox.com>
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8edeefab9ef2ddb13fad02594457c87386b7c2e0
Author: Takuo Koguchi <takuo.koguchi@gmail.com>
Date:   Thu Dec 7 16:20:14 2017 +0900

    spi: sun4i: disable clocks in the remove function
    
    
    [ Upstream commit c810daba0ab5226084a56893a789af427a801146 ]
    
    mclk and hclk need to be disabled. Since pm_runtime_disable does
    not disable the clocks, use pm_runtime_force_suspend instead.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Takuo Koguchi <takuo.koguchi.sw@hitachi.com>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8e50037b6dee16b7f7a4f2b0bc71f496c49c2b7
Author: Stefan Potyra <Stefan.Potyra@elektrobit.com>
Date:   Wed Dec 6 16:03:24 2017 +0100

    ASoC: rockchip: disable clock on error
    
    
    [ Upstream commit c7b92172a61b91936be985cb9bc499a4ebc6489b ]
    
    Disable the clocks in  rk_spdif_probe when an error occurs after one
    of the clocks has been enabled previously.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: f874b80e1571 ASoC: rockchip: Add rockchip SPDIF transceiver driver
    Signed-off-by: Stefan Potyra <Stefan.Potyra@elektrobit.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5be88596c7b04b896a231d81d97948adb890a018
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Dec 5 17:37:17 2017 +0300

    staging: ccree: Uninitialized return in ssi_ahash_import()
    
    
    [ Upstream commit aece09024414b54158e03aa45f4a4436e7cb996c ]
    
    The return value isn't initialized on some success paths.
    
    Fixes: c5f39d07860c ("staging: ccree: fix leak of import() after init()")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30fe9f094c1784f03d08a977e17f66ef88095ca3
Author: Cai Li <cai.li@spreadtrum.com>
Date:   Tue Nov 21 17:24:38 2017 +0800

    clk: fix a panic error caused by accessing NULL pointer
    
    
    [ Upstream commit 975b820b6836b6b6c42fb84cd2e772e2b41bca67 ]
    
    In some cases the clock parent would be set NULL when doing re-parent,
    it will cause a NULL pointer accessing if clk_set trace event is
    enabled.
    
    This patch sets the parent as "none" if the input parameter is NULL.
    
    Fixes: dfc202ead312 (clk: Add tracepoints for hardware operations)
    Signed-off-by: Cai Li <cai.li@spreadtrum.com>
    Signed-off-by: Chunyan Zhang <chunyan.zhang@spreadtrum.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03e82f2b21579e8ff032a8aee018e2f5022eb4b4
Author: Jann Horn <jannh@google.com>
Date:   Fri Dec 1 01:46:07 2017 +0100

    netfilter: xt_bpf: add overflow checks
    
    
    [ Upstream commit 6ab405114b0b229151ef06f4e31c7834dd09d0c0 ]
    
    Check whether inputs from userspace are too long (explicit length field too
    big or string not null-terminated) to avoid out-of-bounds reads.
    
    As far as I can tell, this can at worst lead to very limited kernel heap
    memory disclosure or oopses.
    
    This bug can be triggered by an unprivileged user even if the xt_bpf module
    is not loaded: iptables is available in network namespaces, and the xt_bpf
    module can be autoloaded.
    
    Triggering the bug with a classic BPF filter with fake length 0x1000 causes
    the following KASAN report:
    
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in bpf_prog_create+0x84/0xf0
    Read of size 32768 at addr ffff8801eff2c494 by task test/4627
    
    CPU: 0 PID: 4627 Comm: test Not tainted 4.15.0-rc1+ #1
    [...]
    Call Trace:
     dump_stack+0x5c/0x85
     print_address_description+0x6a/0x260
     kasan_report+0x254/0x370
     ? bpf_prog_create+0x84/0xf0
     memcpy+0x1f/0x50
     bpf_prog_create+0x84/0xf0
     bpf_mt_check+0x90/0xd6 [xt_bpf]
    [...]
    Allocated by task 4627:
     kasan_kmalloc+0xa0/0xd0
     __kmalloc_node+0x47/0x60
     xt_alloc_table_info+0x41/0x70 [x_tables]
    [...]
    The buggy address belongs to the object at ffff8801eff2c3c0
                    which belongs to the cache kmalloc-2048 of size 2048
    The buggy address is located 212 bytes inside of
                    2048-byte region [ffff8801eff2c3c0, ffff8801eff2cbc0)
    [...]
    ==================================================================
    
    Fixes: e6f30c731718 ("netfilter: x_tables: add xt_bpf match")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c232fd3d703499b352d293f6dbc76cda8c7783ed
Author: Aviv Heller <avivh@mellanox.com>
Date:   Tue Nov 28 19:55:40 2017 +0200

    xfrm: Fix xfrm_input() to verify state is valid when (encap_type < 0)
    
    
    [ Upstream commit 4ce3dbe397d7b6b15f272ae757c78c35e9e4b61d ]
    
    Code path when (encap_type < 0) does not verify the state is valid
    before progressing.
    
    This will result in a crash if, for instance, x->km.state ==
    XFRM_STATE_ACQ.
    
    Fixes: 7785bba299a8 ("esp: Add a software GRO codepath")
    Signed-off-by: Aviv Heller <avivh@mellanox.com>
    Signed-off-by: Yevgeny Kliteynik <kliteyn@mellanox.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05fc2b8ba00a94587f9c3f9bed70e71266ceb08d
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Mon Nov 20 08:28:14 2017 -0600

    dmaengine: at_hdmac: fix potential NULL pointer dereference in atc_prep_dma_interleaved
    
    
    [ Upstream commit 62a277d43d47e74972de44d33bd3763e31992414 ]
    
    _xt_ is being dereferenced before it is null checked, hence there is a
    potential null pointer dereference.
    
    Fix this by moving the pointer dereference after _xt_ has been null
    checked.
    
    This issue was detected with the help of Coccinelle.
    
    Fixes: 4483320e241c ("dmaengine: Use Pointer xt after NULL check.")
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27e2830b31154c1034111115b75e4d26942bc26b
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Nov 17 22:37:53 2017 +0100

    dmaengine: ioat: Fix error handling path
    
    
    [ Upstream commit 5c9afbda911ce20b3f2181d1e440a0222e1027dd ]
    
    If the last test in 'ioat_dma_self_test()' fails, we must release all
    the allocated resources and not just part of them.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 249d9f3ef5e93290168b00a98b8a3756e149907f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Dec 6 15:14:18 2017 +0100

    scsi: bfa: fix type conversion warning
    
    commit 48d83282db077f93b2cf40de120f4d6f29eb293b upstream.
    
    A regression fix introduced a harmless type mismatch warning:
    
    drivers/scsi/bfa/bfad_bsg.c: In function 'bfad_im_bsg_vendor_request':
    drivers/scsi/bfa/bfad_bsg.c:3137:35: error: initialization of 'struct bfad_im_port_s *' from 'long unsigned int' makes pointer from integer without a cast [-Werror=int-conversion]
      struct bfad_im_port_s *im_port = shost->hostdata[0];
                                       ^~~~~
    drivers/scsi/bfa/bfad_bsg.c: In function 'bfad_im_bsg_els_ct_request':
    drivers/scsi/bfa/bfad_bsg.c:3353:35: error: initialization of 'struct bfad_im_port_s *' from 'long unsigned int' makes pointer from integer without a cast [-Werror=int-conversion]
      struct bfad_im_port_s *im_port = shost->hostdata[0];
    
    This changes the code back to shost_priv() once more, but encapsulates
    it in an inline function to document the rather unusual way of
    using the private data only as a pointer to the previously allocated
    structure.
    
    I did not try to get rid of the extra indirection level entirely,
    which would have been rather invasive and required reworking the entire
    initialization sequence.
    
    Fixes: 45349821ab3a ("scsi: bfa: fix access to bfad_im_port_s")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Sasha Levin <Alexander.Levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e748a5ea4ff2693db71303f23454d0c620695906
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Tue Nov 28 16:26:57 2017 +0100

    scsi: bfa: fix access to bfad_im_port_s
    
    
    [ Upstream commit 45349821ab3a8d378b8f37e52c6fe1aa1b870c47 ]
    
    Commit 'cd21c605b2cf ("scsi: fc: provide fc_bsg_to_shost() helper")'
    changed access to bfa's 'struct bfad_im_port_s' by using shost_priv()
    instead of shost->hostdata[0].
    
    This lead to crashes like in the following back-trace:
    
    task: ffff880046375300 ti: ffff8800a2ef8000 task.ti: ffff8800a2ef8000
    RIP: e030:[<ffffffffa04c8252>]  [<ffffffffa04c8252>] bfa_fcport_get_attr+0x82/0x260 [bfa]
    RSP: e02b:ffff8800a2efba10  EFLAGS: 00010046
    RAX: 575f415441536432 RBX: ffff8800a2efba28 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffff8800a2efba28 RDI: ffff880004dc31d8
    RBP: ffff880004dc31d8 R08: 0000000000000000 R09: 0000000000000001
    R10: ffff88011fadc468 R11: 0000000000000001 R12: ffff880004dc31f0
    R13: 0000000000000200 R14: ffff880004dc61d0 R15: ffff880004947a10
    FS:  00007feb1e489700(0000) GS:ffff88011fac0000(0000) knlGS:0000000000000000
    CS:  e033 DS: 0000 ES: 0000 CR0: 000000008005003b
    CR2: 00007ffe14e46c10 CR3: 00000000957b8000 CR4: 0000000000000660
    Stack:
     ffff88001d4da000 ffff880004dc31c0 ffffffffa048a9df ffffffff81e56380
     0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [] bfad_iocmd_ioc_get_info+0x4f/0x220 [bfa]
    [] bfad_iocmd_handler+0xa00/0xd40 [bfa]
    [] bfad_im_bsg_request+0xee/0x1b0 [bfa]
    [] fc_bsg_dispatch+0x10b/0x1b0 [scsi_transport_fc]
    [] bsg_request_fn+0x11d/0x1c0
    [] __blk_run_queue+0x2f/0x40
    [] blk_execute_rq_nowait+0xa8/0x160
    [] blk_execute_rq+0x77/0x120
    [] bsg_ioctl+0x1b6/0x200
    [] do_vfs_ioctl+0x2cd/0x4a0
    [] SyS_ioctl+0x74/0x80
    [] entry_SYSCALL_64_fastpath+0x12/0x6d
    
    Fixes: cd21c605b2cf ("scsi: fc: provide fc_bsg_to_shost() helper")
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Cc: Michal Koutný <mkoutny@suse.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd079e26a0e488267af0aeae1317245d60433111
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Nov 22 11:58:03 2017 +0300

    scsi: lpfc: Use after free in lpfc_rq_buf_free()
    
    
    [ Upstream commit 9816ef6ecbc102b9bcbb1d83e12c7fb19924f38c ]
    
    The error message dereferences "rqb_entry" so we need to print it first
    and then free the buffer.
    
    Fixes: 6c621a2229b0 ("scsi: lpfc: Separate NVMET RQ buffer posting from IO resources SGL/iocbq/context")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b8ffbead22d93673ac41b60eeb73869be20c860
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Thu Dec 7 18:44:23 2017 +0200

    gianfar: Disable EEE autoneg by default
    
    
    [ Upstream commit b6b5e8a691185606dfffff3198c89e3b4fd9d4f6 ]
    
    This controller does not support EEE, but it may connect to a PHY
    which supports EEE and advertises EEE by default, while its link
    partner also advertises EEE. If this happens, the PHY enters low
    power mode when the traffic rate is low and causes packet loss.
    This patch disables EEE advertisement by default for any PHY that
    gianfar connects to, to prevent the above unwanted outcome.
    
    Signed-off-by: Shaohui Xie <Shaohui.Xie@nxp.com>
    Tested-by: Yangbo Lu <Yangbo.lu@nxp.com>
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2f12ea19faee9dc0b1d80a90630df47cbb6d5f5
Author: Eric Biggers <ebiggers3@gmail.com>
Date:   Fri Dec 8 15:13:28 2017 +0000

    509: fix printing uninitialized stack memory when OID is empty
    
    
    [ Upstream commit 8dfd2f22d3bf3ab7714f7495ad5d897b8845e8c1 ]
    
    Callers of sprint_oid() do not check its return value before printing
    the result.  In the case where the OID is zero-length, -EBADMSG was
    being returned without anything being written to the buffer, resulting
    in uninitialized stack memory being printed.  Fix this by writing
    "(bad)" to the buffer in the cases where -EBADMSG is returned.
    
    Fixes: 4f73175d0375 ("X.509: Add utility functions to render OIDs as strings")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c65a55722acf228bdf194954fe02084c1f1eeb1
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Thu Dec 7 01:05:57 2017 +0100

    net: dsa: mv88e6xxx: Unregister MDIO bus on error path
    
    
    [ Upstream commit 3126aeec5313565bfa19e2dd8fd7e3c3390514cb ]
    
    The MDIO busses need to be unregistered before they are freed,
    otherwise BUG() is called. Add a call to the unregister code if the
    registration fails, since we can have multiple busses, of which some
    may correctly register before one fails. This requires moving the code
    around a little.
    
    Fixes: a3c53be55c95 ("net: dsa: mv88e6xxx: Support multiple MDIO busses")
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Vivien Didelot <vivien.didelot@savoirfairelinux.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ef99ba03888ea4be143d0a9e9b401071d0fcbf8
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Thu Dec 7 01:05:56 2017 +0100

    net: dsa: mv88e6xxx: Fix interrupt masking on removal
    
    
    [ Upstream commit 3d5fdba1842bdd2eef29364c660558cb4cbb3fe0 ]
    
    When removing the interrupt handling code, we should mask the
    generation of interrupts. The code however unmasked all
    interrupts. This can then cause a new interrupt. We then get into a
    deadlock where the interrupt thread is waiting to run, and the code
    continues, trying to remove the interrupt handler, which means waiting
    for the thread to complete. On a UP machine this deadlocks.
    
    Fix so we really mask interrupts in the hardware. The same error is
    made in the error path when install the interrupt handling code.
    
    Fixes: 3460a5770ce9 ("net: dsa: mv88e6xxx: Mask g1 interrupts and free interrupt")
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Vivien Didelot <vivien.didelot@savoirfairelinux.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74875198a68e352a1e5d55abff956552a50b762d
Author: Branislav Radocaj <branislav@radocaj.org>
Date:   Thu Dec 7 00:07:38 2017 +0100

    net: ethernet: arc: fix error handling in emac_rockchip_probe
    
    
    [ Upstream commit e46772a6946a7d1f3fbbc1415871851d6651f1d4 ]
    
    If clk_set_rate() fails, we should disable clk before return.
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Branislav Radocaj <branislav@radocaj.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f04764307af8ae268b133c5066068246574a3e39
Author: Yunjian Wang <wangyunjian@huawei.com>
Date:   Mon Dec 4 14:02:19 2017 +0800

    virtio_net: fix return value check in receive_mergeable()
    
    
    [ Upstream commit 03e9f8a05bce7330bcd9c5cc54c8e42d0fcbf993 ]
    
    The function virtqueue_get_buf_ctx() could return NULL, the return
    value 'buf' need to be checked with NULL, not value 'ctx'.
    
    Signed-off-by: Yunjian Wang <wangyunjian@huawei.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64313a130c3d79561b55a9d82e5b3ffb9353b824
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Nov 23 17:57:04 2017 +0200

    brcmfmac: Avoid build error with make W=1
    
    
    [ Upstream commit 51ef7925e10688c57186d438e784532e063492e4 ]
    
    When I run make W=1 on gcc (Debian 7.2.0-16) 7.2.0 I got an error for
    the first run, all next ones are okay.
    
      CC [M]  drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.o
    drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c:2078: error: Cannot parse struct or union!
    scripts/Makefile.build:310: recipe for target 'drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.o' failed
    
    Seems like something happened with W=1 and wrong kernel doc format.
    As a quick fix remove dubious /** in the code.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90b0805d6085a5d157b5a4488ca81ede00f1a065
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Fri Dec 1 11:19:42 2017 +0200

    btrfs: Fix possible off-by-one in btrfs_search_path_in_tree
    
    
    [ Upstream commit c8bcbfbd239ed60a6562964b58034ac8a25f4c31 ]
    
    The name char array passed to btrfs_search_path_in_tree is of size
    BTRFS_INO_LOOKUP_PATH_MAX (4080). So the actual accessible char indexes
    are in the range of [0, 4079]. Currently the code uses the define but this
    represents an off-by-one.
    
    Implications:
    
    Size of btrfs_ioctl_ino_lookup_args is 4096, so the new byte will be
    written to extra space, not some padding that could be provided by the
    allocator.
    
    btrfs-progs store the arguments on stack, but kernel does own copy of
    the ioctl buffer and the off-by-one overwrite does not affect userspace,
    but the ending 0 might be lost.
    
    Kernel ioctl buffer is allocated dynamically so we're overwriting
    somebody else's memory, and the ioctl is privileged if args.objectid is
    not 256. Which is in most cases, but resolving a subvolume stored in
    another directory will trigger that path.
    
    Before this patch the buffer was one byte larger, but then the -1 was
    not added.
    
    Fixes: ac8e9819d71f907 ("Btrfs: add search and inode lookup ioctls")
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ added implications ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27b0dc31686b212fb1996ece086a184d5eaac624
Author: Omar Sandoval <osandov@fb.com>
Date:   Tue Dec 5 22:54:02 2017 -0800

    Btrfs: disable FUA if mounted with nobarrier
    
    
    [ Upstream commit 1b9e619c5bc8235cfba3dc4ced2fb0e3554a05d4 ]
    
    I was seeing disk flushes still happening when I mounted a Btrfs
    filesystem with nobarrier for testing. This is because we use FUA to
    write out the first super block, and on devices without FUA support, the
    block layer translates FUA to a flush. Even on devices supporting true
    FUA, using FUA when we asked for no barriers is surprising.
    
    Fixes: 387125fc722a8ed ("Btrfs: fix barrier flushes")
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8edc5b9772d04af3871f71c68aa8a5b468a27a72
Author: Justin Maggard <jmaggard10@gmail.com>
Date:   Mon Oct 30 15:29:10 2017 -0700

    btrfs: Fix quota reservation leak on preallocated files
    
    
    [ Upstream commit b430b7751286b3acff2d324553c8cec4f1e87764 ]
    
    Commit c6887cd11149 ("Btrfs: don't do nocow check unless we have to")
    changed the behavior of __btrfs_buffered_write() so that it first tries
    to get a data space reservation, and then skips the relatively expensive
    nocow check if the reservation succeeded.
    
    If we have quotas enabled, the data space reservation also includes a
    quota reservation.  But in the rewrite case, the space has already been
    accounted for in qgroups.  So btrfs_check_data_free_space() increases
    the quota reservation, but it never gets decreased when the data
    actually gets written and overwrites the pre-existing data.  So we're
    left with both the qgroup and qgroup reservation accounting for the same
    space.
    
    This commit adds the missing btrfs_qgroup_free_data() call in the case
    of BTRFS_ORDERED_PREALLOC extents.
    
    Fixes: c6887cd11149 ("Btrfs: don't do nocow check unless we have to")
    Signed-off-by: Justin Maggard <jmaggard@netgear.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a59eb84df2b793856fd3ba2eaca4098e95231058
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Dec 6 17:32:47 2017 +0100

    locking/lockdep: Fix possible NULL deref
    
    
    [ Upstream commit 5e351ad106997e06b2dc3da9c6b939b95f67fb88 ]
    
    We can't invalidate xhlocks when we've not yet allocated any.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Fixes: f52be5708076 ("locking/lockdep: Untangle xhlock history save/restore from task independence")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aeed5daaf62a38261f1198e4491c0ebf59528d9
Author: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
Date:   Tue Dec 5 13:41:17 2017 -0700

    net: qualcomm: rmnet: Fix leak on transmit failure
    
    
    [ Upstream commit c20a548792f15f8d8e38cd74356301c6db0d241f ]
    
    If a skb in transmit path does not have sufficient headroom to add
    the map header, the skb is not sent out and is never freed.
    
    Fixes: ceed73a2cf4a ("drivers: net: ethernet: qualcomm: rmnet: Initial implementation")
    Signed-off-by: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8172a467adaebddf2577d79ccdbacdcc54ee9cbf
Author: Jim Mattson <jmattson@google.com>
Date:   Fri Dec 1 09:57:56 2017 -0800

    KVM: VMX: fix page leak in hardware_setup()
    
    
    [ Upstream commit 2895db67b01cb875457c9c3f30a14723b6b5dfd5 ]
    
    vmx_io_bitmap_b should not be allocated twice.
    
    Fixes: 23611332938d ("KVM: VMX: refactor setup of global page-sized bitmaps")
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 034ddb54c33ecfb3408bd87415eb8f07712895b5
Author: Stefan Hajnoczi <stefanha@redhat.com>
Date:   Tue Dec 5 11:31:14 2017 +0000

    VSOCK: fix outdated sk_state value in hvs_release()
    
    
    [ Upstream commit c9d3fe9da094a9a7a3d3cd365b334b822e05f5e8 ]
    
    Since commit 3b4477d2dcf2709d0be89e2a8dced3d0f4a017f2 ("VSOCK: use TCP
    state constants for sk_state") VSOCK has used TCP_* constants for
    sk_state.
    
    Commit b4562ca7925a3bedada87a3dd072dd5bad043288 ("hv_sock: add locking
    in the open/close/release code paths") reintroduced the SS_DISCONNECTING
    constant.
    
    This patch replaces the old SS_DISCONNECTING with the new TCP_CLOSING
    constant.
    
    CC: Dexuan Cui <decui@microsoft.com>
    CC: Cathy Avery <cavery@redhat.com>
    Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>
    Reviewed-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8001a37b83c4b716936a40ab451b75d9f43d0c6b
Author: Nogah Frankel <nogahf@mellanox.com>
Date:   Mon Dec 4 13:31:11 2017 +0200

    net_sched: red: Avoid illegal values
    
    
    [ Upstream commit 8afa10cbe281b10371fee5a87ab266e48d71a7f9 ]
    
    Check the qmin & qmax values doesn't overflow for the given Wlog value.
    Check that qmin <= qmax.
    
    Fixes: a783474591f2 ("[PKT_SCHED]: Generic RED layer")
    Signed-off-by: Nogah Frankel <nogahf@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e428e8ce3a008852e56e25c2fab4bc14c9f16915
Author: Nogah Frankel <nogahf@mellanox.com>
Date:   Mon Dec 4 13:31:10 2017 +0200

    net_sched: red: Avoid devision by zero
    
    
    [ Upstream commit 5c472203421ab4f928aa1ae9e1dbcfdd80324148 ]
    
    Do not allow delta value to be zero since it is used as a divisor.
    
    Fixes: 8af2a218de38 ("sch_red: Adaptative RED AQM")
    Signed-off-by: Nogah Frankel <nogahf@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e95c4f921770c62b4c7f88b2b9da7bccaa6514e
Author: Zumeng Chen <zumeng.chen@gmail.com>
Date:   Mon Dec 4 11:22:02 2017 +0800

    gianfar: fix a flooded alignment reports because of padding issue.
    
    
    [ Upstream commit 58117672943734715bbe7565ac9f062effa524f0 ]
    
    According to LS1021A RM, the value of PAL can be set so that the start of the
    IP header in the receive data buffer is aligned to a 32-bit boundary. Normally,
    setting PAL = 2 provides minimal padding to ensure such alignment of the IP
    header.
    
    However every incoming packet's 8-byte time stamp will be inserted into the
    packet data buffer as padding alignment bytes when hardware time stamping is
    enabled.
    
    So we set the padding 8+2 here to avoid the flooded alignment faults:
    
    root@128:~# cat /proc/cpu/alignment
    User:           0
    System:         17539 (inet_gro_receive+0x114/0x2c0)
    Skipped:        0
    Half:           0
    Word:           0
    DWord:          0
    Multi:          17539
    User faults:    2 (fixup)
    
    Also shown when exception report enablement
    
    CPU: 0 PID: 161 Comm: irq/66-eth1_g0_ Not tainted 4.1.21-rt13-WR8.0.0.0_preempt-rt #16
    Hardware name: Freescale LS1021A
    [<8001b420>] (unwind_backtrace) from [<8001476c>] (show_stack+0x20/0x24)
    [<8001476c>] (show_stack) from [<807cfb48>] (dump_stack+0x94/0xac)
    [<807cfb48>] (dump_stack) from [<80025d70>] (do_alignment+0x720/0x958)
    [<80025d70>] (do_alignment) from [<80009224>] (do_DataAbort+0x40/0xbc)
    [<80009224>] (do_DataAbort) from [<80015398>] (__dabt_svc+0x38/0x60)
    Exception stack(0x86ad1cc0 to 0x86ad1d08)
    1cc0: f9b3e080 86b3d072 2d78d287 00000000 866816c0 86b3d05e 86e785d0 00000000
    1ce0: 00000011 0000000e 80840ab0 86ad1d3c 86ad1d08 86ad1d08 806d7fc0 806d806c
    1d00: 40070013 ffffffff
    [<80015398>] (__dabt_svc) from [<806d806c>] (inet_gro_receive+0x114/0x2c0)
    [<806d806c>] (inet_gro_receive) from [<80660eec>] (dev_gro_receive+0x21c/0x3c0)
    [<80660eec>] (dev_gro_receive) from [<8066133c>] (napi_gro_receive+0x44/0x17c)
    [<8066133c>] (napi_gro_receive) from [<804f0538>] (gfar_clean_rx_ring+0x39c/0x7d4)
    [<804f0538>] (gfar_clean_rx_ring) from [<804f0bf4>] (gfar_poll_rx_sq+0x58/0xe0)
    [<804f0bf4>] (gfar_poll_rx_sq) from [<80660b10>] (net_rx_action+0x27c/0x43c)
    [<80660b10>] (net_rx_action) from [<80033638>] (do_current_softirqs+0x1e0/0x3dc)
    [<80033638>] (do_current_softirqs) from [<800338c4>] (__local_bh_enable+0x90/0xa8)
    [<800338c4>] (__local_bh_enable) from [<8008025c>] (irq_forced_thread_fn+0x70/0x84)
    [<8008025c>] (irq_forced_thread_fn) from [<800805e8>] (irq_thread+0x16c/0x244)
    [<800805e8>] (irq_thread) from [<8004e490>] (kthread+0xe8/0x104)
    [<8004e490>] (kthread) from [<8000fda8>] (ret_from_fork+0x14/0x2c)
    
    Signed-off-by: Zumeng Chen <zumeng.chen@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bbd45c38ed6d0ded82ab453a1395f110814c389
Author: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
Date:   Fri Dec 1 21:37:23 2017 -0800

    nfp: fix port stats for mac representors
    
    
    [ Upstream commit 42d779ffc186f6dd26271fc60a7417cb51aca93e ]
    
    Previously we swapped the tx_packets, tx_bytes and tx_dropped counters
    with rx_packets, rx_bytes and rx_dropped counters, respectively. This
    behaviour is correct and expected for VF representors but it should not
    be swapped for physical port mac representors.
    
    Fixes: eadfa4c3be99 ("nfp: add stats and xmit helpers for representors")
    Signed-off-by: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45f9e44667c135f629c8e965a788b4f9030289f1
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Dec 4 08:27:17 2017 -0800

    ARM: dts: Fix elm interrupt compiler warning
    
    
    [ Upstream commit d364b038bc962f494cffb8f6cb6cddbe41bcb5b6 ]
    
    Looks like the interrupt property is missing the controller and level
    information causing:
    
    Warning (interrupts_property): interrupts size is (4), expected multiple
    of 12 in /ocp/elm@48078000
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29c9acbc7463e8d94c6527ba46ce3e1b6366a4ca
Author: Stefan Haberland <sth@linux.vnet.ibm.com>
Date:   Thu Oct 26 14:37:35 2017 +0200

    s390/dasd: prevent prefix I/O error
    
    
    [ Upstream commit da340f921d3454f1521671c7a5a43ad3331fbe50 ]
    
    Prevent that a prefix flag is set based on invalid configuration data.
    The validity.verify_base flag should only be set for alias devices.
    Usually the unit address type is either one of base, PAV alias or
    HyperPAV alias. But in cases where the unit address type is not set or
    any other value the validity.verify_base flag might be set as well.
    This would lead to follow on errors.
    Explicitly check for alias devices and set the validity flag only for
    them.
    
    Signed-off-by: Stefan Haberland <sth@linux.vnet.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfb48332d6021a854160a1f5e131c3258b9f60f0
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Tue Nov 28 16:11:29 2017 +0200

    s390/virtio: add BSD license to virtio-ccw
    
    
    [ Upstream commit edfb8d8fcb94a75b2e61c63549d4a5f6474ad3d2 ]
    
    The original intent of the virtio header relicensing
    from 2008 was to make sure anyone can implement compatible
    devices/drivers. The virtio-ccw was omitted by mistake.
    
    We have an ack from the only contributor as well as the
    maintainer from IBM, so it's not too late to fix that.
    
    Make it dual-licensed with GPLv2, as the whole kernel is GPL2.
    
    Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Acked-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b028b06afc9b2acbae933fa1fd3be120252a4d3
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Dec 1 14:58:34 2017 +0100

    PM / runtime: Fix handling of suppliers with disabled runtime PM
    
    
    [ Upstream commit 31eb7431805493e10f4731f366cf4d4e3e952035 ]
    
    Prevent rpm_get_suppliers() from returning an error code if runtime
    PM is disabled for one or more of the supplier devices it wants to
    runtime-resume, so as to make runtime PM work for devices with links
    to suppliers that don't use runtime PM (such links may be created
    during device enumeration even before it is known whether or not
    runtime PM will be enabled for the devices in question, for example).
    
    Fixes: 21d5c57b3726 (PM / runtime: Use device links)
    Reported-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Lukas Wunner <lukas@wunner.de>
    Tested-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b9d371a8c01c9ee321f87559f66f207e85a18c5
Author: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
Date:   Thu Nov 30 14:03:22 2017 +0530

    powerpc/perf: Fix oops when grouping different pmu events
    
    
    [ Upstream commit 5aa04b3eb6fca63d2e9827be656dcadc26d54e11 ]
    
    When user tries to group imc (In-Memory Collections) event with
    normal event, (sometime) kernel crashes with following log:
    
        Faulting instruction address: 0x00000000
        [link register   ] c00000000010ce88 power_check_constraints+0x128/0x980
        ...
        c00000000010e238 power_pmu_event_init+0x268/0x6f0
        c0000000002dc60c perf_try_init_event+0xdc/0x1a0
        c0000000002dce88 perf_event_alloc+0x7b8/0xac0
        c0000000002e92e0 SyS_perf_event_open+0x530/0xda0
        c00000000000b004 system_call+0x38/0xe0
    
    'event_base' field of 'struct hw_perf_event' is used as flags for
    normal hw events and used as memory address for imc events. While
    grouping these two types of events, collect_events() tries to
    interpret imc 'event_base' as a flag, which causes a corruption
    resulting in a crash.
    
    Consider only those events which belongs to 'perf_hw_context' in
    collect_events().
    
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
    Reviewed-By: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30791140de2148c5fd1bd82e0ba986dd1c9e3441
Author: Greg Ungerer <gerg@linux-m68k.org>
Date:   Tue Nov 14 11:50:07 2017 +1000

    m68k: add missing SOFTIRQENTRY_TEXT linker section
    
    
    [ Upstream commit 969de0988b77e5a57aac2f7270191a3c50540c52 ]
    
    Commit be7635e7287e ("arch, ftrace: for KASAN put hard/soft IRQ entries
    into separate sections") added a new linker section, SOFTIRQENTRY_TEXT,
    to the linker scripts for most architectures. It didn't add it to any of
    the linker scripts for the m68k architecture. This was not really a problem
    because it is only defined if either of CONFIG_FUNCTION_GRAPH_TRACER or
    CONFIG_KASAN are enabled - which can never be true for m68k.
    
    However commit 229a71860547 ("irq: Make the irqentry text section
    unconditional") means that SOFTIRQENTRY_TEXT is now always defined. So on
    m68k we now end up with a separate ELF section for .softirqentry.text
    instead of it being part of the .text section. On some m68k targets in some
    configurations this can also cause a fatal link error:
    
      LD      vmlinux
    /usr/local/bin/../m68k-uclinux/bin/ld.real: section .softirqentry.text loaded at [0000000010de10c0,0000000010de12dd] overlaps section .rodata loaded at [0000000010de10c0,0000000010e0fd67]
    
    To fix add in the missing SOFTIRQENTRY_TEXT section into the m68k linker
    scripts. I noticed that m68k is also missing the IRQENTRY_TEXT section,
    so this patch also adds an entry for that too.
    
    Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae5a0acea27346c1b32ab82ba6409adf15384fb1
Author: Gao Feng <gfree.wind@vip.163.com>
Date:   Fri Dec 1 09:58:42 2017 +0800

    ipvlan: Add the skb->mark as flow4's member to lookup route
    
    
    [ Upstream commit a98a4ebc8c61d20f0150d6be66e0e65223a347af ]
    
    Current codes don't use skb->mark to assign flowi4_mark, it would
    make the policy route rule with fwmark doesn't work as expected.
    
    Signed-off-by: Gao Feng <gfree.wind@vip.163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b35e7321347a0ff2f06516f85797e35e277ea8b5
Author: Ray Jui <ray.jui@broadcom.com>
Date:   Fri Dec 1 03:13:02 2017 -0500

    bnxt_en: Need to unconditionally shut down RoCE in bnxt_shutdown
    
    
    [ Upstream commit a7f3f939dd7d8398acebecd1ceb2e9e7ffbe91d2 ]
    
    The current 'bnxt_shutdown' implementation only invokes
    'bnxt_ulp_shutdown' to shut down RoCE in the case when the system is in
    the path of power off (SYSTEM_POWER_OFF). While this may work in most
    cases, it does not work in the smart NIC case, when Linux 'reboot'
    command is initiated from the Linux that runs on the ARM cores of the
    NIC card. In this particular case, Linux 'reboot' results in a system
    'L3' level reset where the entire ARM and associated subsystems are
    being reset, but at the same time, Nitro core is being kept in sane state
    (to allow external PCIe connected servers to continue to work). Without
    properly shutting down RoCE and freeing all associated resources, it
    results in the ARM core to hang immediately after the 'reboot'
    
    By always invoking 'bnxt_ulp_shutdown' in 'bnxt_shutdown', it fixes the
    above issue
    
    Fixes: 0efd2fc65c92 ("bnxt_en: Add a callback to inform RDMA driver during PCI shutdown.")
    
    Signed-off-by: Ray Jui <ray.jui@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9537ff76fa06b7dfac07a6634d213282d6406fec
Author: Will Deacon <will.deacon@arm.com>
Date:   Wed Nov 29 15:20:03 2017 +0000

    scripts/kernel-doc: Don't fail with status != 0 if error encountered with -none
    
    
    [ Upstream commit e814bccbafece52a24e152d2395b5d49eef55841 ]
    
    My bisect scripts starting running into build failures when trying to
    compile 4.15-rc1 with the builds failing with things like:
    
    drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c:2078: error: Cannot parse struct or union!
    
    The line in question is actually just a #define, but after some digging
    it turns out that my scripts pass W=1 and since commit 3a025e1d1c2ea
    ("Add optional check for bad kernel-doc comments") that results in
    kernel-doc running on each source file. The file in question has a
    badly formatted comment immediately before the #define:
    
    /**
     * struct brcmf_skbuff_cb reserves first two bytes in sk_buff::cb for
     * bus layer usage.
     */
    
    which causes the regex in dump_struct to fail (lack of braces following
    struct declaration) and kernel-doc returns 1, which causes the build
    to fail.
    
    Fix the issue by always returning 0 from kernel-doc when invoked with
    -none. It successfully generates no documentation, and prints out any
    issues.
    
    Cc: Matthew Wilcox <mawilcox@microsoft.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0d049e9131406607cabe6e508463584613fb36e
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Oct 29 17:06:01 2017 -0700

    iio: fix kernel-doc build errors
    
    
    [ Upstream commit c175cb7cd953782bbf4e8bdf088ad61440d6dde5 ]
    
    Fix build errors in kernel-doc notation. Symbols that end in '_'
    have a special meaning, but adding a '*' makes them OK.
    
    ../drivers/iio/industrialio-core.c:635: ERROR: Unknown target name: "iio_val".
    ../drivers/iio/industrialio-core.c:642: ERROR: Unknown target name: "iio_val".
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c5ae538b3da25b47c0b8c87209697ea46579641
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Nov 3 15:03:36 2017 +0200

    iio: proximity: sx9500: Assign interrupt from GpioIo()
    
    
    [ Upstream commit e53111ad5deaef98d8c18a9933ef1f5624c5979d ]
    
    The commit 0f0796509c07
    
    ("iio: remove gpio interrupt probing from drivers that use a single interrupt")
    
    removed custom IRQ assignment for the drivers which are enumerated via
    ACPI or OF. Unfortunately, some ACPI tables have IRQ line defined as
    GpioIo() resource and thus automatic IRQ allocation will fail.
    
    Partially revert the commit 0f0796509c07 to restore original behaviour.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 567c1f767ef4b8fcd96dcf1599b36dbce94d3c14
Author: Shaohua Li <shli@fb.com>
Date:   Fri Dec 1 12:12:34 2017 -0800

    md/raid1/10: add missed blk plug
    
    
    [ Upstream commit 18022a1bd3709b74ca31ef0b28fccd52bcd6c504 ]
    
    flush_pending_writes isn't always called with block plug, so add it, and plug
    works in nested way.
    
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86659fbb32a5f6d4c97e6f9058bf3f65d7501049
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Nov 30 13:59:26 2017 +0000

    phylink: ensure we take the link down when phylink_stop() is called
    
    
    [ Upstream commit 2012b7d6b2868c532f22d9172c8b24611637eb48 ]
    
    Ensure that we tell the MAC to take the link down when phylink_stop()
    is called, and that this completes prior to phylink_stop() returns.
    
    Reported-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 778e7124f71dc42e0863c21aefd99b7c2155a4b8
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Nov 30 13:59:11 2017 +0000

    sfp: fix RX_LOS signal handling
    
    
    [ Upstream commit acf1c02f023926b8b04672a9e81b1711ae681619 ]
    
    The options word is a be16 quantity, so we need to test the flags
    having converted the endian-ness.  Convert the flag bits to be16,
    which can be optimised by the compiler, rather than converting a
    variable at runtime.
    
    Reported-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a7bcee6d73cb8c1c22b18c709496af767d8dc46
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 25 21:18:34 2017 +0800

    sctp: only update outstanding_bytes for transmitted queue when doing prsctp_prune
    
    
    [ Upstream commit d30fc5126efb0c33b7adf5966d3051db2c3d7721 ]
    
    Now outstanding_bytes is only increased when appending chunks into one
    packet and sending it at 1st time, while decreased when it is about to
    move into retransmit queue. It means outstanding_bytes value is already
    decreased for all chunks in retransmit queue.
    
    However sctp_prsctp_prune_sent is a common function to check the chunks
    in both transmitted and retransmit queue, it decrease outstanding_bytes
    when moving a chunk into abandoned queue from either of them.
    
    It could cause outstanding_bytes underflow, as it also decreases it's
    value for the chunks in retransmit queue.
    
    This patch fixes it by only updating outstanding_bytes for transmitted
    queue when pruning queues for prsctp prio policy, the same fix is also
    needed in sctp_check_transmitted.
    
    Fixes: 8dbdf1f5b09c ("sctp: implement prsctp PRIO policy")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 559be170a4702d6546141584e5e784f9da9f8fe6
Author: bingjingc <bingjingc@synology.com>
Date:   Fri Nov 17 10:57:44 2017 +0800

    md/raid5: correct degraded calculation in raid5_error
    
    
    [ Upstream commit aff69d89bdebc39235cddb4445371eb979b49685 ]
    
    When disk failure occurs on new disks for reshape, mddev->degraded
    is not calculated correctly. Faulty bit of the failure device is not
    set before raid5_calc_degraded(conf).
    
    mdadm --create /dev/md0 --level=5 --raid-devices=3 /dev/loop[012]
    mdadm /dev/md0 -a /dev/loop3
    mdadm /dev/md0 --grow -n4
    mdadm /dev/md0 -f /dev/loop3 # simulating disk failure
    
    cat /sys/block/md0/md/degraded # it outputs 0, but it should be 1.
    
    However, mdadm -D /dev/md0 will show that it is degraded. It's a bug.
    It can be fixed by moving the resources raid5_calc_degraded() depends
    on before it.
    
    Reported-by: Roy Chung <roychung@synology.com>
    Reviewed-by: Alex Wu <alexwu@synology.com>
    Signed-off-by: BingJing Chang <bingjingc@synology.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ded534c9074c8e8df4636e617f778618c695593
Author: Dmitry Monakhov <dmonakhov@openvz.org>
Date:   Mon Nov 27 13:39:05 2017 +0000

    IB/core: Init subsys if compiled to vmlinuz-core
    
    
    [ Upstream commit a9cd1a673737dd81332fce1145801bfacfb90d90 ]
    
    Once infiniband is compiled as a core component its subsystem must be
    enabled before device initialization. Otherwise there is a NULL pointer
    dereference during mlx4_core init, calltrace:
    ->device_add
      if (dev->class) {
         deref  dev->class->p =>NULLPTR
    
    #Config
    CONFIG_NET_DEVLINK=y
    CONFIG_MAY_USE_DEVLINK=y
    CONFIG_MLX4_EN=y
    
    Signed-off-by: Dmitry Monakhov <dmonakhov@openvz.org>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ffc1b361ac23ee73efd87f5fc812d5e39e06b2e
Author: Moni Shoua <monis@mellanox.com>
Date:   Sun Nov 26 20:23:54 2017 +0200

    RDMA/cma: Make sure that PSN is not over max allowed
    
    
    [ Upstream commit 23a9cd2ad90543e9da3786878d2b2729c095439d ]
    
    This patch limits the initial value for PSN to 24 bits as
    spec requires.
    
    Signed-off-by: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Mukesh Kacker <mukesh.kacker@oracle.com>
    Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f917b1c60e4a5570886976c1baac8980c41e9d66
Author: Mustafa Ismail <mustafa.ismail@intel.com>
Date:   Tue Nov 21 16:18:32 2017 -0600

    i40iw: Correct ARP index mask
    
    
    [ Upstream commit a283cdc4d3670700182c820b59078387f9a01a30 ]
    
    The ARP table entry indexes are aliased to 12bits
    instead of the intended 16bits when uploaded to
    the QP Context. This will present an issue when the
    number of connections exceeds 4096 as ARP entries are
    reused. Fix this by adjusting the mask to account for
    the full 16bits.
    
    Fixes: 4e9042e647ff ("i40iw: add hw and utils files")
    Signed-off-by: Mustafa Ismail <mustafa.ismail@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03f23424aa2b2809275db1b535862b9d8ddc7056
Author: Mustafa Ismail <mustafa.ismail@intel.com>
Date:   Tue Nov 21 16:18:31 2017 -0600

    i40iw: Do not free sqbuf when event is I40IW_TIMER_TYPE_CLOSE
    
    
    [ Upstream commit 10499986dbd8778e1acf9f9d2e166800dfee44b4 ]
    
    When the event type is I40IW_TIMER_TYPE_CLOSE, there is no sqbuf and
    it should not be freed as one in i40iw_schedule_cm_timer().
    
    Fixes: f27b4746f378 ("i40iw: add connection management code")
    Signed-off-by: Mustafa Ismail <mustafa.ismail@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f10f5b89c13635c32ebf6435c7849aef46e2ef4e
Author: Chien Tin Tung <chien.tin.tung@intel.com>
Date:   Tue Nov 21 16:18:30 2017 -0600

    i40iw: Allocate a sdbuf per CQP WQE
    
    
    [ Upstream commit 100d6de2ced538c539d923dc14a1b5cbae234503 ]
    
    Currently there is only one sdbuf per Control QP (CQP) for
    programming Segment Descriptor (SD). If multiple SD work
    requests are posted simultaneously, the sdbuf is reused
    by all WQEs and new WQEs can corrupt previous WQEs sdbuf
    leading to incorrect SD programming.
    
    Fix this by allocating one sdbuf per CQP SQ WQE. When an
    SD command is posted, it will use the corresponding sdbuf
    for the WQE.
    
    Fixes: 86dbcd0f12e9 ("i40iw: add file to handle cqp calls")
    Signed-off-by: Chien Tin Tung <chien.tin.tung@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97ef3a5027b043bcb6a9c4aeefdcbfe4cf6221f7
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Thu Nov 30 17:00:30 2017 +0000

    KVM: arm/arm64: Fix spinlock acquisition in vgic_set_owner
    
    
    [ Upstream commit 7465894e90e5a47e0e52aa5f1f708653fc40020f ]
    
    vgic_set_owner acquires the irq lock without disabling interrupts,
    resulting in a lockdep splat (an interrupt could fire and result
    in the same lock being taken if the same virtual irq is to be
    injected).
    
    In practice, it is almost impossible to trigger this bug, but
    better safe than sorry. Convert the lock acquisition to a
    spin_lock_irqsave() and keep lockdep happy.
    
    Reported-by: James Morse <james.morse@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2117bba3cfbb120dee072a11aba4a116f316dff5
Author: Arnaud Patard <arnaud.patard@rtp-net.org>
Date:   Wed Nov 29 16:09:46 2017 +0100

    meson-gx-socinfo: Fix package id parsing
    
    
    [ Upstream commit 044d71bc6cdee8980d0fdc35ec79a0d5818b2ce3 ]
    
    I've noticed the following message while booting a S905X based board:
    
    soc soc0: Amlogic Meson GXL (S905D) Revision 21:82 (b:2) Detected
    
    The S905D string is obviously wrong. The vendor code does:
    ...
            ver = (readl(assist_hw_rev) >> 8) & 0xff;
            meson_cpu_version[MESON_CPU_VERSION_LVL_MINOR] = ver;
            ver =  (readl(assist_hw_rev) >> 16) & 0xff;
            meson_cpu_version[MESON_CPU_VERSION_LVL_PACK] = ver;
    ...
    
    while the current code does:
    ...
    ...
    
    This means that the current mainline code has package id and minor
    version reversed.
    
    Fixes: a9daaba2965e8 ("soc: Add Amlogic SoC Information driver")
    Signed-off-by: Arnaud Patard <apatard@hupstream.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 844dfa1b41887029fce142f83cae07dfb9e6e86e
Author: Dennis Dalessandro <dennis.dalessandro@intel.com>
Date:   Tue Nov 14 04:34:23 2017 -0800

    IB/hfi1: Initialize bth1 in 16B rc ack builder
    
    
    [ Upstream commit 8935780b9f7bbad0f2eb5dd43f61ba7b509a1575 ]
    
    It is possible the bth1 variable could be used uninitialized so going
    ahead and giving it a default value.
    
    Otherwise we leak stack memory to the network.
    
    Fixes: 5b6cabb0db77 ("IB/hfi1: Add 16B RC/UC support")
    Reviewed-by: Don Hiatt <don.hiatt@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04521caaea964d627d4c969da7887935150d7280
Author: Andre Przywara <andre.przywara@arm.com>
Date:   Sat Nov 25 12:12:30 2017 +0000

    pinctrl: sunxi: Fix A64 UART mux value
    
    
    [ Upstream commit 7c5c2c2d18d778e51fd8b899965097168306031c ]
    
    To use pin PF4 as the RX signal of UART0, we have to write 0b011 into
    the respective pin controller register.
    Fix the wrong value we had in our table so far.
    
    Fixes: 96851d391d02 ("drivers: pinctrl: add driver for Allwinner A64 SoC")
    Signed-off-by: Andre Przywara <andre.przywara@arm.com>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1f0445d07f356a1b79c2fc6a370d755f703bc5e
Author: Andre Przywara <andre.przywara@arm.com>
Date:   Sat Nov 25 12:19:48 2017 +0000

    pinctrl: sunxi: Fix A80 interrupt pin bank
    
    
    [ Upstream commit 6ad4cc8d1ac483e0fd33f605fb2788b0ecf51ed4 ]
    
    On the A80 the pins on port B can trigger interrupts, and those are
    assigned to the second interrupt bank.
    Having two pins assigned to the same interrupt bank/pin combination does
    not look healthy (instead more like a copy&paste bug from pins PA14-PA16),
    so fix the interrupt bank for pins PB14-PB16, which is actually 1.
    
    I don't have any A80 board, so could not test this.
    
    Fixes: d5e9fb31baa2 ("pinctrl: sunxi: Add A80 pinctrl muxing options")
    Signed-off-by: Andre Przywara <andre.przywara@arm.com>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 073cd31e2fd18de990c6a1617c6c281eb6fb8ba3
Author: Keerthy <j-keerthy@ti.com>
Date:   Fri Nov 10 16:43:17 2017 +0530

    gpio: davinci: Assign first bank regs for unbanked case
    
    
    [ Upstream commit 7f8e2a85c1b0bd440ffe87be82c79fdc319e8291 ]
    
    As per the re-design assign the first bank regs for unbanked
    irq case. This was missed out in the original patch.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Fixes: b5cf3fd827d2e1 ("gpio: davinci: Redesign driver to accommodate ngpios in one gpio chip")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c194e5b0d90869a2fad206d106d524ba1c9232b
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Tue Nov 21 15:18:10 2017 +0100

    gpio: 74x164: Fix crash during .remove()
    
    
    [ Upstream commit a158531f3c92467df0e93e000d58185acae78a6e ]
    
    Commit 7ebc194d0fd4bb0f ("gpio: 74x164: Introduce 'enable-gpios'
    property") added a new member gpiod_oe to the end of the struct
    gen_74x164_chip, after the zero-length buffer array.
    
    However, this buffer is a flexible array, allocated together with the
    structure during .probe().  As the buffer is no longer the last member,
    writing to it corrupts the newly added member after it.
    During device removal, the corrupted member will be used as a pointer,
    leading to a crash.
    
    This went unnoticed, as the flexible array was declared as "buffer[0]"
    instead of "buffer[]", and thus did not trigger a "flexible array member
    not at end of struct" error from gcc.
    
    Move the gpiod_oe field up to fix this, and drop the zero from the array
    size to prevent future similar bugs.
    
    Fixes: 7ebc194d0fd4bb0f ("gpio: 74x164: Introduce 'enable-gpios' property")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4ec37fab6008e17a1f2af26db8c6a801c9f7ec6
Author: Yan Markman <ymarkman@marvell.com>
Date:   Thu Nov 30 10:49:46 2017 +0100

    net: mvpp2: allocate zeroed tx descriptors
    
    
    [ Upstream commit a154f8e399a063137fc42b961f437248d55ece29 ]
    
    Reserved and unused fields in the Tx descriptors should be 0. The PPv2
    driver doesn't clear them at run-time (for performance reasons) but
    these descriptors aren't zeroed when allocated, which can lead to
    unpredictable behaviors. This patch fixes this by using
    dma_zalloc_coherent instead of dma_alloc_coherent.
    
    Fixes: 3f518509dedc ("ethernet: Add new driver for Marvell Armada 375 network unit")
    Signed-off-by: Yan Markman <ymarkman@marvell.com>
    [Antoine: commit message]
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 801f3b0c40da62ddc27dbd3e06331c8144cf394e
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Sun Nov 5 17:51:00 2017 -0500

    media: ov13858: Select V4L2_FWNODE
    
    
    [ Upstream commit fce8ba670b7418319da14a6fc6668db1f1a96267 ]
    
    The ov13858 driver depends on the V4L2 fwnode, thus add that to Kconfig.
    
    Fixes: 5fcf092e0c9f ("[media] ov13858: add support for OV13858 sensor")
    
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8c033b1f4bfda9315bf35063530cff79dec8f28
Author: Mauro Carvalho Chehab <mchehab@s-opensource.com>
Date:   Wed Nov 29 08:44:41 2017 -0500

    media: s5k6aa: describe some function parameters
    
    
    [ Upstream commit 070250a1715cee2297de0d9e7e2cea58be999d37 ]
    
    as warned:
      drivers/media/i2c/s5k6aa.c:429: warning: No description found for parameter 's5k6aa'
      drivers/media/i2c/s5k6aa.c:679: warning: No description found for parameter 's5k6aa'
      drivers/media/i2c/s5k6aa.c:733: warning: No description found for parameter 's5k6aa'
      drivers/media/i2c/s5k6aa.c:733: warning: No description found for parameter 'preset'
      drivers/media/i2c/s5k6aa.c:787: warning: No description found for parameter 'sd'
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dc548c0671dc614358f6fc2ca98ad2d5e149593
Author: Xie XiuQi <xiexiuqi@huawei.com>
Date:   Thu Nov 30 09:41:29 2017 +0800

    trace/xdp: fix compile warning: 'struct bpf_map' declared inside parameter list
    
    
    [ Upstream commit 23721a755f98ac846897a013c92cccb281c1bcc8 ]
    
    We meet this compile warning, which caused by missing bpf.h in xdp.h.
    
    In file included from ./include/trace/events/xdp.h:10:0,
                     from ./include/linux/bpf_trace.h:6,
                     from drivers/net/ethernet/intel/i40e/i40e_txrx.c:29:
    ./include/trace/events/xdp.h:93:17: warning: ‘struct bpf_map’ declared inside parameter list will not be visible outside of this definition or declaration
        const struct bpf_map *map, u32 map_index),
                     ^
    ./include/linux/tracepoint.h:187:34: note: in definition of macro ‘__DECLARE_TRACE’
      static inline void trace_##name(proto)    \
                                      ^~~~~
    ./include/linux/tracepoint.h:352:24: note: in expansion of macro ‘PARAMS’
      __DECLARE_TRACE(name, PARAMS(proto), PARAMS(args),  \
                            ^~~~~~
    ./include/linux/tracepoint.h:477:2: note: in expansion of macro ‘DECLARE_TRACE’
      DECLARE_TRACE(name, PARAMS(proto), PARAMS(args))
      ^~~~~~~~~~~~~
    ./include/linux/tracepoint.h:477:22: note: in expansion of macro ‘PARAMS’
      DECLARE_TRACE(name, PARAMS(proto), PARAMS(args))
                          ^~~~~~
    ./include/trace/events/xdp.h:89:1: note: in expansion of macro ‘DEFINE_EVENT’
     DEFINE_EVENT(xdp_redirect_template, xdp_redirect,
     ^~~~~~~~~~~~
    ./include/trace/events/xdp.h:90:2: note: in expansion of macro ‘TP_PROTO’
      TP_PROTO(const struct net_device *dev,
      ^~~~~~~~
    ./include/trace/events/xdp.h:93:17: warning: ‘struct bpf_map’ declared inside parameter list will not be visible outside of this definition or declaration
        const struct bpf_map *map, u32 map_index),
                     ^
    ./include/linux/tracepoint.h:203:38: note: in definition of macro ‘__DECLARE_TRACE’
      register_trace_##name(void (*probe)(data_proto), void *data) \
                                          ^~~~~~~~~~
    ./include/linux/tracepoint.h:354:4: note: in expansion of macro ‘PARAMS’
        PARAMS(void *__data, proto),   \
        ^~~~~~
    
    Reported-by: Huang Daode <huangdaode@hisilicon.com>
    Cc: Hanjun Guo <guohanjun@huawei.com>
    Fixes: 8d3b778ff544 ("xdp: tracepoint xdp_redirect also need a map argument")
    Signed-off-by: Xie XiuQi <xiexiuqi@huawei.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49a3efa81147c088505baa35eca827c4df6d4c38
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Tue Nov 28 15:18:19 2017 +0000

    kvm: arm: don't treat unavailable HYP mode as an error
    
    
    [ Upstream commit 58d0d19a204604ca0da26058828a53558b265da3 ]
    
    Since it is perfectly legal to run the kernel at EL1, it is not
    actually an error if HYP mode is not available when attempting to
    initialize KVM, given that KVM support cannot be built as a module.
    So demote the kvm_err() to kvm_info(), which prevents the error from
    appearing on an otherwise 'quiet' console.
    
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Acked-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c05bbe5dc862789cbbc809a4c6b4422d0b158adb
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Nov 10 19:55:18 2017 +0200

    pinctrl: denverton: Fix UART2 RTS pin mode
    
    
    [ Upstream commit 4bd6683da2e64590bdc27ecf7e61ad8376861768 ]
    
    UART2 RTS is mode 2 of the pin.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f8a0b09520b15b66c44ff135c3cd482600e1549
Author: Thomas Richter <tmricht@linux.vnet.ibm.com>
Date:   Thu Nov 23 12:46:11 2017 +0100

    perf test: Fix test 21 for s390x
    
    
    [ Upstream commit 996548499df61babae5306544c7daf5fd39db31c ]
    
    Test case 21 (Number of exit events of a simple workload) fails on
    s390x. The reason is the invalid sample frequency supplied for this
    test. On s390x the minimum sample frequency is much higher (see output
    of /proc/service_levels).
    
    Supply a save sample frequency value for s390x to fix this.  The value
    will be adjusted by the s390x CPUMF frequency convertion function to a
    value well below the sysctl kernel.perf_event_max_sample_rate value.
    
    Signed-off-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    LPU-Reference: 20171123114611.93397-1-tmricht@linux.vnet.ibm.com
    Link: https://lkml.kernel.org/n/tip-1ynblyhi1n81idpido59nt1y@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b6c6ab154b95b862f9dfd75bca6acebb5bd138d
Author: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>
Date:   Wed Nov 22 22:13:53 2017 +0530

    perf bench numa: Fixup discontiguous/sparse numa nodes
    
    
    [ Upstream commit 321a7c35c90cc834851ceda18a8ee18f1d032b92 ]
    
    Certain systems are designed to have sparse/discontiguous nodes.  On
    such systems, 'perf bench numa' hangs, shows wrong number of nodes and
    shows values for non-existent nodes. Handle this by only taking nodes
    that are exposed by kernel to userspace.
    
    Signed-off-by: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>
    Reviewed-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Acked-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Link: http://lkml.kernel.org/r/1edbcd353c009e109e93d78f2f46381930c340fe.1511368645.git.sathnaga@linux.vnet.ibm.com
    Signed-off-by: Balamuruhan S <bala24@linux.vnet.ibm.com>
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7efaeefce5c9bdfa015aa56f7d581f4f01a64e70
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Tue Nov 14 10:23:39 2017 +0100

    perf top: Fix window dimensions change handling
    
    
    [ Upstream commit 89d0aeab4252adc2a7ea693637dd21c588bfa2d1 ]
    
    The stdio perf top crashes when we change the terminal
    window size. The reason is that we assumed we get the
    perf_top pointer as a signal handler argument which is
    not the case.
    
    Changing the SIGWINCH handler logic to change global
    resize variable, which is checked in the main thread
    loop.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Tested-by: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lkml.kernel.org/n/tip-ysuzwz77oev1ftgvdscn9bpu@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 984d85a69da98ef34389a31e8ed7f527e02cf637
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Wed Aug 9 18:14:06 2017 +0200

    perf: Fix header.size for namespace events
    
    
    [ Upstream commit 34900ec5c9577cc1b0f22887ac7349f458ba8ac2 ]
    
    Reset header size for namespace events, otherwise it only gets bigger in
    ctx iterations.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Fixes: e422267322cd ("perf: Add PERF_RECORD_NAMESPACES to include namespaces related info")
    Link: http://lkml.kernel.org/n/tip-nlo4gonz9d4guyb8153ukzt0@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 475e6b835d8c395eab9d7e633e37d6daa20999f0
Author: Thomas Richter <tmricht@linux.vnet.ibm.com>
Date:   Tue Nov 14 08:18:46 2017 +0100

    perf test shell: Fix check open filename arg using 'perf trace' on s390x
    
    
    [ Upstream commit ccafc38f1c778847ab6d53dd7933260426731cf3 ]
    
    This 'perf test' case fails on s390x. The 'touch' command on s390x uses
    the 'openat' system call to open the file named on the command line:
    
    [root@s35lp76 perf]# perf probe -l
      probe:vfs_getname    (on getname_flags:72@fs/namei.c with pathname)
    [root@s35lp76 perf]# perf trace -e open touch /tmp/abc
         0.400 ( 0.015 ms): touch/27542 open(filename:
                    /usr/lib/locale/locale-archive, flags: CLOEXEC) = 3
    [root@s35lp76 perf]#
    
    There is no 'open' system call for file '/tmp/abc'. Instead the 'openat'
    system call is used:
    
    [root@s35lp76 perf]# strace touch /tmp/abc
        execve("/usr/bin/touch", ["touch", "/tmp/abc"], 0x3ffd547ec98
                            /* 30 vars */) = 0
        [...]
        openat(AT_FDCWD, "/tmp/abc", O_WRONLY|O_CREAT|O_NOCTTY|O_NONBLOCK, 0666) = 3
        [...]
    
    On s390x the 'egrep' command does not find a matching pattern and
    returns an error.
    
    Fix this for s390x create a platform dependent command line to enable
    the 'perf probe' call to listen to the 'openat' system call and get the
    expected output.
    
    Signed-off-by: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    LPU-Reference: 20171114071847.2381-1-tmricht@linux.vnet.ibm.com
    Link: http://lkml.kernel.org/n/tip-3qf38jk0prz54rhmhyu871my@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 863b61caaeb83cdd5ae7bc8e8a7da6b4bf103832
Author: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
Date:   Tue Nov 14 08:55:40 2017 +0530

    perf annotate: Do not truncate instruction names at 6 chars
    
    
    [ Upstream commit 05d0e62d9fa0f1002cf82009ef31b36174da5472 ]
    
    There are many instructions, esp on PowerPC, whose mnemonics are longer
    than 6 characters. Using precision limit causes truncation of such
    mnemonics.
    
    Fix this by removing precision limit. Note that, 'width' is still 6, so
    alignment won't get affected for length <= 6.
    
    Before:
    
       li     r11,-1
       xscvdp vs1,vs1
       add.   r10,r10,r11
    
    After:
    
      li     r11,-1
      xscvdpsxds vs1,vs1
      add.   r10,r10,r11
    
    Reported-by: Donald Stence <dstence@us.ibm.com>
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Taeung Song <treeze.taeung@gmail.com>
    Link: http://lkml.kernel.org/r/20171114032540.4564-1-ravi.bangoria@linux.vnet.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 182d948c7ae957a152251d34e66d0e3ee382c197
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Tue Nov 14 09:15:42 2017 +0900

    perf help: Fix a bug during strstart() conversion
    
    
    [ Upstream commit af98f2273fd0af31ce327cd1406b67c7be0b6734 ]
    
    The commit 8e99b6d4533c changed prefixcmp() to strstart() but missed to
    change the return value in some place.  It makes perf help print
    annoying output even for sane config items like below:
    
      $ perf help
      '.root': unsupported man viewer sub key.
      ...
    
    Reported-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Tested-by: Taeung Song <treeze.taeung@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Sihyeon Jang <uneedsihyeon@gmail.com>
    Cc: kernel-team@lge.com
    Link: http://lkml.kernel.org/r/20171114001542.GA16464@sejong
    Fixes: 8e99b6d4533c ("tools include: Adopt strstarts() from the kernel")
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfb3906919d12aabc9d1974bb12c01902f7d2506
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Oct 20 13:27:55 2017 -0700

    perf record: Fix -c/-F options for cpu event aliases
    
    
    [ Upstream commit 59622fd496a3175c7bf549046e091d81c303ecff ]
    
    The Intel PMU event aliases have a implicit period= specifier to set the
    default period.
    
    Unfortunately this breaks overriding these periods with -c or -F,
    because the alias terms look like they are user specified to the
    internal parser, and user specified event qualifiers override the
    command line options.
    
    Track that they are coming from aliases by adding a "weak" state to the
    term. Any weak terms don't override command line options.
    
    I only did it for -c/-F for now, I think that's the only case that's
    broken currently.
    
    Before:
    
    $ perf record -c 1000 -vv -e uops_issued.any
    ...
      { sample_period, sample_freq }   2000003
    
    After:
    
    $ perf record -c 1000 -vv -e uops_issued.any
    ...
      { sample_period, sample_freq }   1000
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Link: http://lkml.kernel.org/r/20171020202755.21410-2-andi@firstfloor.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76103695459665e6f1cc19097a619b57766d2798
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Nov 1 11:03:40 2017 +0200

    ARM: dts: am437x-cm-t43: Correct the dmas property of spi0
    
    
    [ Upstream commit ca41e244517d6d3f1600c229ff7ca615049c1e9c ]
    
    The DMA binding for eDMA needs 2 parameters, not 1.
    The second, missing parameter is the tptc to be used for the channel.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1fd303e1e4160e5fe9e41e5738e9e04d311dc4a
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Nov 1 11:03:31 2017 +0200

    ARM: dts: am4372: Correct the interrupts_properties of McASP
    
    
    [ Upstream commit 627395a6f8091c0aa18f49dca7df59ba3ec147ef ]
    
    Fixes the following warnings:
    
    arch/arm/boot/dts/am437x-cm-t43.dtb: Warning (interrupts_property):
    interrupts size is (8), expected multiple of 12 in
    /ocp@44000000/mcasp@48038000
    
    arch/arm/boot/dts/am437x-cm-t43.dtb: Warning (interrupts_property):
    interrupts size is (8), expected multiple of 12 in
    /ocp@44000000/mcasp@4803C000
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c601b98e14dfbda5175a2aabc6578c3b903cc095
Author: Adam Ford <aford173@gmail.com>
Date:   Tue Oct 31 13:45:59 2017 -0500

    ARM: dts: logicpd-somlv: Fix wl127x pinmux
    
    
    [ Upstream commit cd7594ac3281722cb8f10d6f6c7e4287747c7a9d ]
    
    The pin assignment for the wl127x interrupt was incorrect.  I am
    not sure how this every worked.  This also eliminates a conflict with
    the SMC911x ethernet driver and properly moves pinmuxes for the
    related gpio to omap3_pmx_wkup from omap3_pmx_core.
    
    Fixes: ab8dd3aed011 ("ARM: DTS: Add minimal Support for Logic PD
    DM3730 SOM-LV")
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90e4395ca72da52dd1ecda333b5612f546806d4c
Author: Adam Ford <aford173@gmail.com>
Date:   Tue Oct 31 13:42:13 2017 -0500

    ARM: dts: logicpd-som-lv: Fix gpmc addresses for NAND and enet
    
    
    [ Upstream commit 3c18bbf3d11d2005da08b57ff26f44ff1c2b12d0 ]
    
    This patch fixes and issue where the NAND and GPMC based ethernet
    controller stopped working.  This also updates the GPMC settings
    to be consistent with the Logic PD Torpedo development from the
    commit listed above.
    
    Fixes: 44e4716499b8 ("ARM: dts: omap3: Fix NAND device nodes")
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 104df4374d5d75fe3b6d2d7e9c67aa9510e4a385
Author: Tony Lindgren <tony@atomide.com>
Date:   Fri Nov 17 08:56:58 2017 -0800

    ARM: dts: Fix omap4 hang with GPS connected to USB by using wakeupgen
    
    
    [ Upstream commit cf87634c8b24e24bf379b8c6807c8b0fb5f23567 ]
    
    There's been a reproducable USB OHCI/EHCI cpuidle related hang on omap4
    for a while that happens after about 20 - 40 minutes on an idle system
    with some data feeding device being connected, like a USB GPS device or
    a cellular modem.
    
    This issue happens in cpuidle states C2 and C3 and does not happen if
    cpuidle is limited to C1 state only. The symptoms are that the whole
    system hangs and never wakes up from idle, and if a watchdog is
    configured the system reboots after a while.
    
    Turns out that OHCI/EHCI devices on omap4 are trying to use the GIC
    interrupt controller directly as a parent instead of the WUGEN. We
    need to pass the interrupts through WUGEN to GIC to provide the wakeup
    events for the processor.
    
    Let's fix the issue by removing the gic interrupt-parent and use the
    default interrupt-parent wakeupgen instead. Note that omap5.dtsi had
    this already fixes earlier by commit 7136d457f365 ("ARM: omap: convert
    wakeupgen to stacked domains") but we somehow missed omap4 at that
    point.
    
    Fixes: 7136d457f365 ("ARM: omap: convert wakeupgen to stacked domains")
    Cc: Dave Gerlach <d-gerlach@ti.com>
    Cc: Nishanth Menon <nm@ti.com>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Reviewed-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17e712b1294a35773ed3a7c43b68bfb8fbe1b8f9
Author: Keerthy <j-keerthy@ti.com>
Date:   Fri Nov 10 16:56:52 2017 +0530

    ARM: AM33xx: PRM: Remove am33xx_pwrdm_read_prev_pwrst function
    
    
    [ Upstream commit b6d6af7226465b6d11eac09d0be2ab78a4a9eb62 ]
    
    Referring TRM Am335X series:
    http://www.ti.com/lit/ug/spruh73p/spruh73p.pdf
    
    The LastPowerStateEntered bitfield is present only for PM_CEFUSE
    domain. This is not present in any of the other power domains. Hence
    remove the generic am33xx_pwrdm_read_prev_pwrst hook which wrongly
    reads the reserved bit fields for all the other power domains.
    
    Reading the reserved bits leads to wrongly interpreting the low
    power transitions for various power domains that do not have the
    LastPowerStateEntered field. The pm debug counters values are wrong
    currently as we are incrementing them based on the reserved bits.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b59a1da647f163d0bf035f823a908b45c357643a
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Nov 27 08:57:26 2017 -0800

    ARM: OMAP2+: Fix SRAM virt to phys translation for save_secure_ram_context
    
    
    [ Upstream commit d09220a887f70368afa79e850c95e74890c0a32d ]
    
    With the CMA changes from Joonsoo Kim <iamjoonsoo.kim@lge.com>, it
    was noticed that n900 stopped booting. After investigating it turned
    out that n900 save_secure_ram_context does some whacky virtual to
    physical address translation for the SRAM data address.
    
    As we now only have minimal parts of omap3 idle code copied to SRAM,
    running save_secure_ram_context() in SRAM is not needed. It only gets
    called on PM init. And it seems there's no need to ever call this from
    SRAM idle code.
    
    So let's just keep save_secure_ram_context() in DDR, and pass it the
    physical address of the parameters. We can do everything else in
    omap-secure.c like we already do for other secure code.
    
    And since we don't have any documentation, I still have no clue what
    the values for 0, 1 and 1 for the parameters might be. If somebody has
    figured it out, please do send a patch to add some comments.
    
    Debugged-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ba11e4309b58d290d471f24b2f89d481e4d873f
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Nov 3 15:30:53 2017 +0100

    serdev: fix receive_buf return value when no callback
    
    
    [ Upstream commit fd00cf81a9a84776ba58e56bd042c726dcf75cf3 ]
    
    The receive_buf callback is supposed to return the number of bytes
    processed and should specifically not return a negative errno.
    
    Due to missing sanity checks in the serdev tty-port controller, a driver
    not providing a receive_buf callback could cause the flush_to_ldisc()
    worker to spin in a tight loop when the tty buffer pointers are
    incremented with -EINVAL (-22).
    
    The missing sanity checks have now been added to the tty-port
    controller, but let's fix up the serdev-controller helper as well.
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 371cf4043b29e55cfa30c68e7304659e6e253222
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Nov 17 11:00:45 2017 -0800

    usb: build drivers/usb/common/ when USB_SUPPORT is set
    
    
    [ Upstream commit c9d24f78268be444e803fb2bb138a2f598de9c23 ]
    
    PHY drivers can use ULPI interfaces when CONFIG_USB (which is host side
    support) is not enabled, so also build drivers/usb/ when CONFIG_USB_SUPPORT
    is enabled so that drivers/usb/common/ is built.
    
    ERROR: "ulpi_unregister_driver" [drivers/phy/ti/phy-tusb1210.ko] undefined!
    ERROR: "__ulpi_register_driver" [drivers/phy/ti/phy-tusb1210.ko] undefined!
    ERROR: "ulpi_read" [drivers/phy/ti/phy-tusb1210.ko] undefined!
    ERROR: "ulpi_write" [drivers/phy/ti/phy-tusb1210.ko] undefined!
    ERROR: "ulpi_unregister_driver" [drivers/phy/qualcomm/phy-qcom-usb-hs.ko] undefined!
    ERROR: "__ulpi_register_driver" [drivers/phy/qualcomm/phy-qcom-usb-hs.ko] undefined!
    ERROR: "ulpi_write" [drivers/phy/qualcomm/phy-qcom-usb-hs.ko] undefined!
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c276379fa71576b9ae082dd8c1dc00ecb32bdba1
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Fri Jan 26 11:56:50 2018 -0700

    usbip: keep usbip_device sockfd state in sync with tcp_socket
    
    commit 009f41aed4b3e11e6dc1e3c07377a10c20f1a5ed upstream.
    
    Keep usbip_device sockfd state in sync with tcp_socket. When tcp_socket
    is reset to null, reset sockfd to -1 to keep it in sync.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d74450a91a4af7bc7406403064e4325513d1fcdf
Author: Alexandru Ardelean <alexandru.ardelean@analog.com>
Date:   Thu Jan 25 14:30:45 2018 +0200

    staging: iio: ad5933: switch buffer mode to software
    
    commit 7d2b8e6aaf9ee87910c2337e1c59bb5d3e3ba8c5 upstream.
    
    Since commit 152a6a884ae1 ("staging:iio:accel:sca3000 move
    to hybrid hard / soft buffer design.")
    the buffer mechanism has changed and the
    INDIO_BUFFER_HARDWARE flag has been unused.
    
    Since commit 2d6ca60f3284 ("iio: Add a DMAengine framework
    based buffer")
    the INDIO_BUFFER_HARDWARE flag has been re-purposed for
    DMA buffers.
    
    This driver has lagged behind these changes, and
    in order for buffers to work, the INDIO_BUFFER_SOFTWARE
    needs to be used.
    
    Signed-off-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Fixes: 2d6ca60f3284 ("iio: Add a DMAengine framework based buffer")
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ccf5138bd107624a9ef371166399a6c970babd7
Author: Alexandru Ardelean <alexandru.ardelean@analog.com>
Date:   Mon Jan 22 11:53:12 2018 +0200

    staging: iio: adc: ad7192: fix external frequency setting
    
    commit e31b617d0a63c6558485aaa730fd162faa95a766 upstream.
    
    The external clock frequency was set only when selecting
    the internal clock, which is fixed at 4.9152 Mhz.
    
    This is incorrect, since it should be set when any of
    the external clock or crystal settings is selected.
    
    Added range validation for the external (crystal/clock)
    frequency setting.
    Valid values are between 2.4576 and 5.12 Mhz.
    
    Signed-off-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6648ab4f03c01bd84815d1d0e4ab55485c0994c7
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 16 16:36:04 2018 +0100

    staging: fsl-mc: fix build testing on x86
    
    commit 02b7b2844c2ffd3b614ec2b9293e8c7f041d60da upstream.
    
    Selecting GENERIC_MSI_IRQ_DOMAIN on x86 causes a compile-time error in
    some configurations:
    
    drivers/base/platform-msi.c:37:19: error: field 'arg' has incomplete type
    
    On the other architectures, we are fine, but here we should have an additional
    dependency on X86_LOCAL_APIC so we can get the PCI_MSI_IRQ_DOMAIN symbol.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b46af094b82a47ca1cbba9092578f8f96af82798
Author: Todd Kjos <tkjos@android.com>
Date:   Wed Feb 7 13:57:37 2018 -0800

    binder: replace "%p" with "%pK"
    
    commit 8ca86f1639ec5890d400fff9211aca22d0a392eb upstream.
    
    The format specifier "%p" can leak kernel addresses. Use
    "%pK" instead. There were 4 remaining cases in binder.c.
    
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 047ba51a55e369ba2b5a9e7e5dfa179cb10a7569
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jan 30 23:11:24 2018 -0800

    binder: check for binder_thread allocation failure in binder_poll()
    
    commit f88982679f54f75daa5b8eff3da72508f1e7422f upstream.
    
    If the kzalloc() in binder_get_thread() fails, binder_poll()
    dereferences the resulting NULL pointer.
    
    Fix it by returning POLLERR if the memory allocation failed.
    
    This bug was found by syzkaller using fault injection.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Fixes: 457b9a6f09f0 ("Staging: android: add binder driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95f9c2edcbaea324be43d45540dda080fcd677f8
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sun Feb 4 02:06:27 2018 +0000

    staging: android: ashmem: Fix a race condition in pin ioctls
    
    commit ce8a3a9e76d0193e2e8d74a06d275b3c324ca652 upstream.
    
    ashmem_pin_unpin() reads asma->file and asma->size before taking the
    ashmem_mutex, so it can race with other operations that modify them.
    
    Build-tested only.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 441b5d10e4602b25ad960d1ca1c6bb77e788c220
Author: Martijn Coenen <maco@android.com>
Date:   Fri Feb 16 09:47:15 2018 +0100

    ANDROID: binder: synchronize_rcu() when using POLLFREE.
    
    commit 5eeb2ca02a2f6084fc57ae5c244a38baab07033a upstream.
    
    To prevent races with ep_remove_waitqueue() removing the
    waitqueue at the same time.
    
    Reported-by: syzbot+a2a3c4909716e271487e@syzkaller.appspotmail.com
    Signed-off-by: Martijn Coenen <maco@android.com>
    Cc: stable <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 129926c3756ac93c19608f8065d9654a99006fbf
Author: Todd Kjos <tkjos@android.com>
Date:   Wed Feb 7 12:38:47 2018 -0800

    ANDROID: binder: remove WARN() for redundant txn error
    
    commit e46a3b3ba7509cb7fda0e07bc7c63a2cd90f579b upstream.
    
    binder_send_failed_reply() is called when a synchronous
    transaction fails. It reports an error to the thread that
    is waiting for the completion. Given that the transaction
    is synchronous, there should never be more than 1 error
    response to that thread -- this was being asserted with
    a WARN().
    
    However, when exercising the driver with syzbot tests, cases
    were observed where multiple "synchronous" requests were
    sent without waiting for responses, so it is possible that
    multiple errors would be reported to the thread. This testing
    was conducted with panic_on_warn set which forced the crash.
    
    This is easily reproduced by sending back-to-back
    "synchronous" transactions without checking for any
    response (eg, set read_size to 0):
    
        bwr.write_buffer = (uintptr_t)&bc1;
        bwr.write_size = sizeof(bc1);
        bwr.read_buffer = (uintptr_t)&br;
        bwr.read_size = 0;
        ioctl(fd, BINDER_WRITE_READ, &bwr);
        sleep(1);
        bwr2.write_buffer = (uintptr_t)&bc2;
        bwr2.write_size = sizeof(bc2);
        bwr2.read_buffer = (uintptr_t)&br;
        bwr2.read_size = 0;
        ioctl(fd, BINDER_WRITE_READ, &bwr2);
        sleep(1);
    
    The first transaction is sent to the servicemanager and the reply
    fails because no VMA is set up by this client. After
    binder_send_failed_reply() is called, the BINDER_WORK_RETURN_ERROR
    is sitting on the thread's todo list since the read_size was 0 and
    the client is not waiting for a response.
    
    The 2nd transaction is sent and the BINDER_WORK_RETURN_ERROR has not
    been consumed, so the thread's reply_error.cmd is still set (normally
    cleared when the BINDER_WORK_RETURN_ERROR is handled). Therefore
    when the servicemanager attempts to reply to the 2nd failed
    transaction, the error is already set and it triggers this warning.
    
    This is a user error since it is not waiting for the synchronous
    transaction to complete. If it ever does check, it will see an
    error.
    
    Changed the WARN() to a pr_warn().
    
    Signed-off-by: Todd Kjos <tkjos@android.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6b581e3db4a5d9cf81ed7587f2655095259d0a1
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu Feb 15 16:59:49 2018 +0100

    dn_getsockoptdecnet: move nf_{get/set}sockopt outside sock lock
    
    commit dfec091439bb2acf763497cfc58f2bdfc67c56b7 upstream.
    
    After commit 3f34cfae1238 ("netfilter: on sockopt() acquire sock lock
    only in the required scope"), the caller of nf_{get/set}sockopt() must
    not hold any lock, but, in such changeset, I forgot to cope with DECnet.
    
    This commit addresses the issue moving the nf call outside the lock,
    in the dn_{get,set}sockopt() with the same schema currently used by
    ipv4 and ipv6. Also moves the unhandled sockopts of the end of the main
    switch statements, to improve code readability.
    
    Reported-by: Petr Vandrovec <petr@vandrovec.name>
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=198791#c2
    Fixes: 3f34cfae1238 ("netfilter: on sockopt() acquire sock lock only in the required scope")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80b1c636a72b7999fc5b91c2259839393fc4fb3e
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 10 22:06:48 2018 +0100

    arm64: dts: add #cooling-cells to CPU nodes
    
    commit acbf76ee05067c3942852019993f7beb69a0f45f upstream.
    
    dtc complains about the lack of #coolin-cells properties for the
    CPU nodes that are referred to as "cooling-device":
    
    arch/arm64/boot/dts/mediatek/mt8173-evb.dtb: Warning (cooling_device_property): Missing property '#cooling-cells' in node /cpus/cpu@0 or bad phandle (referred from /thermal-zones/cpu_thermal/cooling-maps/map@0:cooling-device[0])
    arch/arm64/boot/dts/mediatek/mt8173-evb.dtb: Warning (cooling_device_property): Missing property '#cooling-cells' in node /cpus/cpu@100 or bad phandle (referred from /thermal-zones/cpu_thermal/cooling-maps/map@1:cooling-device[0])
    
    Apparently this property must be '<2>' to match the binding.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Tested-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    [arnd: backported to 4.15]
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 225fcdd0e33b26d3269b0cc517d6c91bf5ce9285
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 10 17:53:18 2018 +0100

    ARM: 8743/1: bL_switcher: add MODULE_LICENSE tag
    
    commit a21b4c10c7bf5b58112afa20d6fa829e8d74e3e6 upstream.
    
    Without this tag, we get a build warning:
    
    WARNING: modpost: missing MODULE_LICENSE() in arch/arm/common/bL_switcher_dummy_if.o
    
    For completeness, I'm also adding author and description fields.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52d4c1978cb49e7228c4d8c8bcddfdb734a51a3f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jan 15 17:04:22 2018 +0100

    video: fbdev/mmp: add MODULE_LICENSE
    
    commit c1530ac5a3ce93a1f02adabc4508b5fbf862dfe2 upstream.
    
    Kbuild complains about the lack of a license tag in this driver:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/video/fbdev/mmp/mmp_disp.o
    
    This adds the license, author and description tags.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f4f5777e5fa10f8d4c50aeece7d3eb2e9865d09
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 10 17:34:45 2018 +0100

    ASoC: ux500: add MODULE_LICENSE tag
    
    commit 1783c9d7cb7bc3181b9271665959b87280d98d8e upstream.
    
    This adds MODULE_LICENSE/AUTHOR/DESCRIPTION tags to the ux500
    platform drivers, to avoid these build warnings:
    
    WARNING: modpost: missing MODULE_LICENSE() in sound/soc/ux500/snd-soc-ux500-plat-dma.o
    WARNING: modpost: missing MODULE_LICENSE() in sound/soc/ux500/snd-soc-ux500-mach-mop500.o
    
    The company no longer exists, so the email addresses of the authors
    don't work any more, but I've added them anyway for consistency.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14b2ad0bb2fa7bbc5b5b90ec3b3b3e7a68aa10c2
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Jan 27 10:58:43 2018 -0800

    net_sched: gen_estimator: fix lockdep splat
    
    commit 40ca54e3a686f13117f3de0c443f8026dadf7c44 upstream.
    
    syzbot reported a lockdep splat in gen_new_estimator() /
    est_fetch_counters() when attempting to lock est->stats_lock.
    
    Since est_fetch_counters() is called from BH context from timer
    interrupt, we need to block BH as well when calling it from process
    context.
    
    Most qdiscs use per cpu counters and are immune to the problem,
    but net/sched/act_api.c and net/netfilter/xt_RATEEST.c are using
    a spinlock to protect their data. They both call gen_new_estimator()
    while object is created and not yet alive, so this bug could
    not trigger a deadlock, only a lockdep splat.
    
    Fixes: 1c0d32fde5bd ("net_sched: gen_estimator: complete rewrite of rate estimators")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 701ba0df95205187f1afc4f3f520bff57ba4001d
Author: Willem de Bruijn <willemb@google.com>
Date:   Tue Dec 12 11:39:04 2017 -0500

    net: avoid skb_warn_bad_offload on IS_ERR
    
    commit 8d74e9f88d65af8bb2e095aff506aa6eac755ada upstream.
    
    skb_warn_bad_offload warns when packets enter the GSO stack that
    require skb_checksum_help or vice versa. Do not warn on arbitrary
    bad packets. Packet sockets can craft many. Syzkaller was able to
    demonstrate another one with eth_type games.
    
    In particular, suppress the warning when segmentation returns an
    error, which is for reasons other than checksum offload.
    
    See also commit 36c92474498a ("net: WARN if skb_checksum_help() is
    called on skb requiring segmentation") for context on this warning.
    
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83ee02de2c8d958b598498a81323635f02bc4b1e
Author: Sowmini Varadhan <sowmini.varadhan@oracle.com>
Date:   Thu Nov 30 11:11:29 2017 -0800

    rds: tcp: atomically purge entries from rds_tcp_conn_list during netns delete
    
    commit f10b4cff98c6977668434fbf5dd58695eeca2897 upstream.
    
    The rds_tcp_kill_sock() function parses the rds_tcp_conn_list
    to find the rds_connection entries marked for deletion as part
    of the netns deletion under the protection of the rds_tcp_conn_lock.
    Since the rds_tcp_conn_list tracks rds_tcp_connections (which
    have a 1:1 mapping with rds_conn_path), multiple tc entries in
    the rds_tcp_conn_list will map to a single rds_connection, and will
    be deleted as part of the rds_conn_destroy() operation that is
    done outside the rds_tcp_conn_lock.
    
    The rds_tcp_conn_list traversal done under the protection of
    rds_tcp_conn_lock should not leave any doomed tc entries in
    the list after the rds_tcp_conn_lock is released, else another
    concurrently executiong netns delete (for a differnt netns) thread
    may trip on these entries.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c64534f82608a8f9d58d7c74d4a12122bdb2c3fe
Author: Sowmini Varadhan <sowmini.varadhan@oracle.com>
Date:   Thu Nov 30 11:11:28 2017 -0800

    rds: tcp: correctly sequence cleanup on netns deletion.
    
    commit 681648e67d43cf269c5590ecf021ed481f4551fc upstream.
    
    Commit 8edc3affc077 ("rds: tcp: Take explicit refcounts on struct net")
    introduces a regression in rds-tcp netns cleanup. The cleanup_net(),
    (and thus rds_tcp_dev_event notification) is only called from put_net()
    when all netns refcounts go to 0, but this cannot happen if the
    rds_connection itself is holding a c_net ref that it expects to
    release in rds_tcp_kill_sock.
    
    Instead, the rds_tcp_kill_sock callback should make sure to
    tear down state carefully, ensuring that the socket teardown
    is only done after all data-structures and workqs that depend
    on it are quiesced.
    
    The original motivation for commit 8edc3affc077 ("rds: tcp: Take explicit
    refcounts on struct net") was to resolve a race condition reported by
    syzkaller where workqs for tx/rx/connect were triggered after the
    namespace was deleted. Those worker threads should have been
    cancelled/flushed before socket tear-down and indeed,
    rds_conn_path_destroy() does try to sequence this by doing
         /* cancel cp_send_w */
         /* cancel cp_recv_w */
         /* flush cp_down_w */
         /* free data structures */
    Here the "flush cp_down_w" will trigger rds_conn_shutdown and thus
    invoke rds_tcp_conn_path_shutdown() to close the tcp socket, so that
    we ought to have satisfied the requirement that "socket-close is
    done after all other dependent state is quiesced". However,
    rds_conn_shutdown has a bug in that it *always* triggers the reconnect
    workq (and if connection is successful, we always restart tx/rx
    workqs so with the right timing, we risk the race conditions reported
    by syzkaller).
    
    Netns deletion is like module teardown- no need to restart a
    reconnect in this case. We can use the c_destroy_in_prog bit
    to avoid restarting the reconnect.
    
    Fixes: 8edc3affc077 ("rds: tcp: Take explicit refcounts on struct net")
    Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e12516df1367e80f25fc204b6002db2a700a6ad
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Feb 5 14:41:45 2018 -0800

    netfilter: xt_RATEEST: acquire xt_rateest_mutex for hash insert
    
    commit 7dc68e98757a8eccf8ca7a53a29b896f1eef1f76 upstream.
    
    rateest_hash is supposed to be protected by xt_rateest_mutex,
    and, as suggested by Eric, lookup and insert should be atomic,
    so we should acquire the xt_rateest_mutex once for both.
    
    So introduce a non-locking helper for internal use and keep the
    locking one for external.
    
    Reported-by: <syzbot+5cb189720978275e4c75@syzkaller.appspotmail.com>
    Fixes: 5859034d7eb8 ("[NETFILTER]: x_tables: add RATEEST target")
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be6c08bf9aea46775232e48241b55e768362b9e0
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Jan 31 15:02:47 2018 -0800

    netfilter: xt_cgroup: initialize info->priv in cgroup_mt_check_v1()
    
    commit ba7cd5d95f25cc6005f687dabdb4e7a6063adda9 upstream.
    
    xt_cgroup_info_v1->priv is an internal pointer only used for kernel,
    we should not trust what user-space provides.
    
    Reported-by: <syzbot+4fbcfcc0d2e6592bd641@syzkaller.appspotmail.com>
    Fixes: c38c4597e4bf ("netfilter: implement xt_cgroup cgroup2 path match")
    Cc: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 516c855cf51462678eb50ec52da845c10734d0bf
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Jan 30 19:01:40 2018 +0100

    netfilter: on sockopt() acquire sock lock only in the required scope
    
    commit 3f34cfae1238848fd53f25e5c8fd59da57901f4b upstream.
    
    Syzbot reported several deadlocks in the netfilter area caused by
    rtnl lock and socket lock being acquired with a different order on
    different code paths, leading to backtraces like the following one:
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.15.0-rc9+ #212 Not tainted
    ------------------------------------------------------
    syzkaller041579/3682 is trying to acquire lock:
      (sk_lock-AF_INET6){+.+.}, at: [<000000008775e4dd>] lock_sock
    include/net/sock.h:1463 [inline]
      (sk_lock-AF_INET6){+.+.}, at: [<000000008775e4dd>]
    do_ipv6_setsockopt.isra.8+0x3c5/0x39d0 net/ipv6/ipv6_sockglue.c:167
    
    but task is already holding lock:
      (rtnl_mutex){+.+.}, at: [<000000004342eaa9>] rtnl_lock+0x17/0x20
    net/core/rtnetlink.c:74
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #1 (rtnl_mutex){+.+.}:
            __mutex_lock_common kernel/locking/mutex.c:756 [inline]
            __mutex_lock+0x16f/0x1a80 kernel/locking/mutex.c:893
            mutex_lock_nested+0x16/0x20 kernel/locking/mutex.c:908
            rtnl_lock+0x17/0x20 net/core/rtnetlink.c:74
            register_netdevice_notifier+0xad/0x860 net/core/dev.c:1607
            tee_tg_check+0x1a0/0x280 net/netfilter/xt_TEE.c:106
            xt_check_target+0x22c/0x7d0 net/netfilter/x_tables.c:845
            check_target net/ipv6/netfilter/ip6_tables.c:538 [inline]
            find_check_entry.isra.7+0x935/0xcf0
    net/ipv6/netfilter/ip6_tables.c:580
            translate_table+0xf52/0x1690 net/ipv6/netfilter/ip6_tables.c:749
            do_replace net/ipv6/netfilter/ip6_tables.c:1165 [inline]
            do_ip6t_set_ctl+0x370/0x5f0 net/ipv6/netfilter/ip6_tables.c:1691
            nf_sockopt net/netfilter/nf_sockopt.c:106 [inline]
            nf_setsockopt+0x67/0xc0 net/netfilter/nf_sockopt.c:115
            ipv6_setsockopt+0x115/0x150 net/ipv6/ipv6_sockglue.c:928
            udpv6_setsockopt+0x45/0x80 net/ipv6/udp.c:1422
            sock_common_setsockopt+0x95/0xd0 net/core/sock.c:2978
            SYSC_setsockopt net/socket.c:1849 [inline]
            SyS_setsockopt+0x189/0x360 net/socket.c:1828
            entry_SYSCALL_64_fastpath+0x29/0xa0
    
    -> #0 (sk_lock-AF_INET6){+.+.}:
            lock_acquire+0x1d5/0x580 kernel/locking/lockdep.c:3914
            lock_sock_nested+0xc2/0x110 net/core/sock.c:2780
            lock_sock include/net/sock.h:1463 [inline]
            do_ipv6_setsockopt.isra.8+0x3c5/0x39d0 net/ipv6/ipv6_sockglue.c:167
            ipv6_setsockopt+0xd7/0x150 net/ipv6/ipv6_sockglue.c:922
            udpv6_setsockopt+0x45/0x80 net/ipv6/udp.c:1422
            sock_common_setsockopt+0x95/0xd0 net/core/sock.c:2978
            SYSC_setsockopt net/socket.c:1849 [inline]
            SyS_setsockopt+0x189/0x360 net/socket.c:1828
            entry_SYSCALL_64_fastpath+0x29/0xa0
    
    other info that might help us debug this:
    
      Possible unsafe locking scenario:
    
            CPU0                    CPU1
            ----                    ----
       lock(rtnl_mutex);
                                    lock(sk_lock-AF_INET6);
                                    lock(rtnl_mutex);
       lock(sk_lock-AF_INET6);
    
      *** DEADLOCK ***
    
    1 lock held by syzkaller041579/3682:
      #0:  (rtnl_mutex){+.+.}, at: [<000000004342eaa9>] rtnl_lock+0x17/0x20
    net/core/rtnetlink.c:74
    
    The problem, as Florian noted, is that nf_setsockopt() is always
    called with the socket held, even if the lock itself is required only
    for very tight scopes and only for some operation.
    
    This patch addresses the issues moving the lock_sock() call only
    where really needed, namely in ipv*_getorigdst(), so that nf_setsockopt()
    does not need anymore to acquire both locks.
    
    Fixes: 22265a5c3c10 ("netfilter: xt_TEE: resolve oif using netdevice notifiers")
    Reported-by: syzbot+a4c2dc980ac1af699b36@syzkaller.appspotmail.com
    Suggested-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2852a7dd15fe311e96be2d36a7361faac471b7a9
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Tue Jan 30 15:21:34 2018 +0100

    netfilter: ipt_CLUSTERIP: fix out-of-bounds accesses in clusterip_tg_check()
    
    commit 1a38956cce5eabd7b74f94bab70265e4df83165e upstream.
    
    Commit 136e92bbec0a switched local_nodes from an array to a bitmask
    but did not add proper bounds checks. As the result
    clusterip_config_init_nodelist() can both over-read
    ipt_clusterip_tgt_info.local_nodes and over-write
    clusterip_config.local_nodes.
    
    Add bounds checks for both.
    
    Fixes: 136e92bbec0a ("[NETFILTER] CLUSTERIP: use a bitmap to store node responsibility data")
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f25f048d3bde992239b7e019467b4fb4832bac99
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 24 17:16:09 2018 -0800

    netfilter: x_tables: avoid out-of-bounds reads in xt_request_find_{match|target}
    
    commit da17c73b6eb74aad3c3c0654394635675b623b3e upstream.
    
    It looks like syzbot found its way into netfilter territory.
    
    Issue here is that @name comes from user space and might
    not be null terminated.
    
    Out-of-bound reads happen, KASAN is not happy.
    
    v2 added similar fix for xt_request_find_target(),
    as Florian advised.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6609d112229fff5dbccf57bbc31facffc1ba06dd
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Thu Dec 28 09:48:54 2017 +0100

    netfilter: x_tables: fix int overflow in xt_alloc_table_info()
    
    commit 889c604fd0b5f6d3b8694ade229ee44124de1127 upstream.
    
    syzkaller triggered OOM kills by passing ipt_replace.size = -1
    to IPT_SO_SET_REPLACE. The root cause is that SMP_ALIGN() in
    xt_alloc_table_info() causes int overflow and the size check passes
    when it should not. SMP_ALIGN() is no longer needed leftover.
    
    Remove SMP_ALIGN() call in xt_alloc_table_info().
    
    Reported-by: syzbot+4396883fa8c4f64e0175@syzkaller.appspotmail.com
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4249e8af8108afadc6316d9e4815f3333c9770d0
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Tue Feb 6 15:40:28 2018 -0800

    kcov: detect double association with a single task
    
    commit a77660d231f8b3d84fd23ed482e0964f7aa546d6 upstream.
    
    Currently KCOV_ENABLE does not check if the current task is already
    associated with another kcov descriptor.  As the result it is possible
    to associate a single task with more than one kcov descriptor, which
    later leads to a memory leak of the old descriptor.  This relation is
    really meant to be one-to-one (task has only one back link).
    
    Extend validation to detect such misuse.
    
    Link: http://lkml.kernel.org/r/20180122082520.15716-1-dvyukov@google.com
    Fixes: 5c9a8750a640 ("kernel: add kcov code coverage")
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: Shankara Pailoor <sp3485@columbia.edu>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b5ec5505945ee2ba6f6dbab51483a1102720623
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Wed Dec 13 10:46:40 2017 +0100

    KVM: x86: fix escape of guest dr6 to the host
    
    commit efdab992813fb2ed825745625b83c05032e9cda2 upstream.
    
    syzkaller reported:
    
       WARNING: CPU: 0 PID: 12927 at arch/x86/kernel/traps.c:780 do_debug+0x222/0x250
       CPU: 0 PID: 12927 Comm: syz-executor Tainted: G           OE    4.15.0-rc2+ #16
       RIP: 0010:do_debug+0x222/0x250
       Call Trace:
        <#DB>
        debug+0x3e/0x70
       RIP: 0010:copy_user_enhanced_fast_string+0x10/0x20
        </#DB>
        _copy_from_user+0x5b/0x90
        SyS_timer_create+0x33/0x80
        entry_SYSCALL_64_fastpath+0x23/0x9a
    
    The testcase sets a watchpoint (with perf_event_open) on a buffer that is
    passed to timer_create() as the struct sigevent argument.  In timer_create(),
    copy_from_user()'s rep movsb triggers the BP.  The testcase also sets
    the debug registers for the guest.
    
    However, KVM only restores host debug registers when the host has active
    watchpoints, which triggers a race condition when running the testcase with
    multiple threads.  The guest's DR6.BS bit can escape to the host before
    another thread invokes timer_create(), and do_debug() complains.
    
    The fix is to respect do_debug()'s dr6 invariant when leaving KVM.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cc50a1946e69400399575f8ea63c2131baa83b7
Author: Douglas Gilbert <dgilbert@interlog.com>
Date:   Sun Jan 14 17:00:48 2018 -0500

    blk_rq_map_user_iov: fix error override
    
    commit 69e0927b3774563c19b5fb32e91d75edc147fb62 upstream.
    
    During stress tests by syzkaller on the sg driver the block layer
    infrequently returns EINVAL. Closer inspection shows the block
    layer was trying to return ENOMEM (which is much more
    understandable) but for some reason overroad that useful error.
    
    Patch below does not show this (unchanged) line:
       ret =__blk_rq_map_user_iov(rq, map_data, &i, gfp_mask, copy);
    That 'ret' was being overridden when that function failed.
    
    Signed-off-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c565a9538a13e0b427ff7c3fbd2ee8e8cd59709
Author: Laura Abbott <labbott@redhat.com>
Date:   Fri Jan 5 11:14:09 2018 -0800

    staging: android: ion: Switch from WARN to pr_warn
    
    commit e4e179a844f52e907e550f887d0a2171f1508af1 upstream.
    
    Syzbot reported a warning with Ion:
    
    WARNING: CPU: 0 PID: 3502 at drivers/staging/android/ion/ion-ioctl.c:73 ion_ioctl+0x2db/0x380 drivers/staging/android/ion/ion-ioctl.c:73
    Kernel panic - not syncing: panic_on_warn set ...
    
    This is a warning that validation of the ioctl fields failed. This was
    deliberately added as a warning to make it very obvious to developers that
    something needed to be fixed. In reality, this is overkill and disturbs
    fuzzing. Switch to pr_warn for a message instead.
    
    Reported-by: syzbot+fa2d5f63ee5904a0115a@syzkaller.appspotmail.com
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 747ad3d315923647ca4d79d92b28b512e85cd96e
Author: Laura Abbott <labbott@redhat.com>
Date:   Fri Jan 5 11:14:08 2018 -0800

    staging: android: ion: Add __GFP_NOWARN for system contig heap
    
    commit 0c75f10312a35b149b2cebb1832316b35c2337ca upstream.
    
    syzbot reported a warning from Ion:
    
      WARNING: CPU: 1 PID: 3485 at mm/page_alloc.c:3926
    
      ...
       __alloc_pages_nodemask+0x9fb/0xd80 mm/page_alloc.c:4252
      alloc_pages_current+0xb6/0x1e0 mm/mempolicy.c:2036
      alloc_pages include/linux/gfp.h:492 [inline]
      ion_system_contig_heap_allocate+0x40/0x2c0
      drivers/staging/android/ion/ion_system_heap.c:374
      ion_buffer_create drivers/staging/android/ion/ion.c:93 [inline]
      ion_alloc+0x2c1/0x9e0 drivers/staging/android/ion/ion.c:420
      ion_ioctl+0x26d/0x380 drivers/staging/android/ion/ion-ioctl.c:84
      vfs_ioctl fs/ioctl.c:46 [inline]
      do_vfs_ioctl+0x1b1/0x1520 fs/ioctl.c:686
      SYSC_ioctl fs/ioctl.c:701 [inline]
      SyS_ioctl+0x8f/0xc0 fs/ioctl.c:692
    
    This is a warning about attempting to allocate order > MAX_ORDER. This
    is coming from a userspace Ion allocation request. Since userspace is
    free to request however much memory it wants (and the kernel is free to
    deny its allocation), silence the allocation attempt with __GFP_NOWARN
    in case it fails.
    
    Reported-by: syzbot+76e7efc4748495855a4d@syzkaller.appspotmail.com
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 392e03283a3ddddf7c48dcc002b8668e1612a578
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Dec 18 16:40:26 2017 -0800

    crypto: x86/twofish-3way - Fix %rbp usage
    
    commit d8c7fe9f2a486a6e5f0d5229ca43807af5ab22c6 upstream.
    
    Using %rbp as a temporary register breaks frame pointer convention and
    breaks stack traces when unwinding from an interrupt in the crypto code.
    
    In twofish-3way, we can't simply replace %rbp with another register
    because there are none available.  Instead, we use the stack to hold the
    values that %rbp, %r11, and %r12 were holding previously.  Each of these
    values represents the half of the output from the previous Feistel round
    that is being passed on unchanged to the following round.  They are only
    used once per round, when they are exchanged with %rax, %rbx, and %rcx.
    
    As a result, we free up 3 registers (one per block) and can reassign
    them so that %rbp is not used, and additionally %r14 and %r15 are not
    used so they do not need to be saved/restored.
    
    There may be a small overhead caused by replacing 'xchg REG, REG' with
    the needed sequence 'mov MEM, REG; mov REG, MEM; mov REG, REG' once per
    round.  But, counterintuitively, when I tested "ctr-twofish-3way" on a
    Haswell processor, the new version was actually about 2% faster.
    (Perhaps 'xchg' is not as well optimized as plain moves.)
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bae74042eb17eeaed782f85438a7a131fe68282
Author: Andrey Konovalov <andreyknvl@google.com>
Date:   Thu Nov 2 09:52:27 2017 -0400

    media: pvrusb2: properly check endpoint types
    
    commit 72c27a68a2a3f650f0dc7891ee98f02283fc11af upstream.
    
    As syzkaller detected, pvrusb2 driver submits bulk urb withount checking
    the the endpoint type is actually blunk. Add a check.
    
    usb 1-1: BOGUS urb xfer, pipe 3 != type 1
    ------------[ cut here ]------------
    WARNING: CPU: 1 PID: 2713 at drivers/usb/core/urb.c:449 usb_submit_urb+0xf8a/0x11d0
    Modules linked in:
    CPU: 1 PID: 2713 Comm: pvrusb2-context Not tainted
    4.14.0-rc1-42251-gebb2c2437d80 #210
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    task: ffff88006b7a18c0 task.stack: ffff880069978000
    RIP: 0010:usb_submit_urb+0xf8a/0x11d0 drivers/usb/core/urb.c:448
    RSP: 0018:ffff88006997f990 EFLAGS: 00010286
    RAX: 0000000000000029 RBX: ffff880063661900 RCX: 0000000000000000
    RDX: 0000000000000029 RSI: ffffffff86876d60 RDI: ffffed000d32ff24
    RBP: ffff88006997fa90 R08: 1ffff1000d32fdca R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: 1ffff1000d32ff39
    R13: 0000000000000001 R14: 0000000000000003 R15: ffff880068bbed68
    FS:  0000000000000000(0000) GS:ffff88006c600000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000001032000 CR3: 000000006a0ff000 CR4: 00000000000006f0
    Call Trace:
     pvr2_send_request_ex+0xa57/0x1d80 drivers/media/usb/pvrusb2/pvrusb2-hdw.c:3645
     pvr2_hdw_check_firmware drivers/media/usb/pvrusb2/pvrusb2-hdw.c:1812
     pvr2_hdw_setup_low drivers/media/usb/pvrusb2/pvrusb2-hdw.c:2107
     pvr2_hdw_setup drivers/media/usb/pvrusb2/pvrusb2-hdw.c:2250
     pvr2_hdw_initialize+0x548/0x3c10 drivers/media/usb/pvrusb2/pvrusb2-hdw.c:2327
     pvr2_context_check drivers/media/usb/pvrusb2/pvrusb2-context.c:118
     pvr2_context_thread_func+0x361/0x8c0 drivers/media/usb/pvrusb2/pvrusb2-context.c:167
     kthread+0x3a1/0x470 kernel/kthread.c:231
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431
    Code: 48 8b 85 30 ff ff ff 48 8d b8 98 00 00 00 e8 ee 82 89 fe 45 89
    e8 44 89 f1 4c 89 fa 48 89 c6 48 c7 c7 40 c0 ea 86 e8 30 1b dc fc <0f>
    ff e9 9b f7 ff ff e8 aa 95 25 fd e9 80 f7 ff ff e8 50 74 f3
    ---[ end trace 6919030503719da6 ]---
    
    Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

commit ca181454e726e47434566d9a126e9cfc29db48ae
Author: Paul Moore <paul@paul-moore.com>
Date:   Tue Dec 5 17:17:43 2017 -0500

    selinux: skip bounded transition processing if the policy isn't loaded
    
    commit 4b14752ec4e0d87126e636384cf37c8dd9df157c upstream.
    
    We can't do anything reasonable in security_bounded_transition() if we
    don't have a policy loaded, and in fact we could run into problems
    with some of the code inside expecting a policy.  Fix these problems
    like we do many others in security/selinux/ss/services.c by checking
    to see if the policy is loaded (ss_initialized) and returning quickly
    if it isn't.
    
    Reported-by: syzbot <syzkaller-bugs@googlegroups.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Acked-by: Stephen Smalley <sds@tycho.nsa.gov>
    Reviewed-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 116df867dbc12297d0e04cd6540ecad401f4c060
Author: Paul Moore <paul@paul-moore.com>
Date:   Tue Nov 28 18:51:12 2017 -0500

    selinux: ensure the context is NUL terminated in security_context_to_sid_core()
    
    commit ef28df55ac27e1e5cd122e19fa311d886d47a756 upstream.
    
    The syzbot/syzkaller automated tests found a problem in
    security_context_to_sid_core() during early boot (before we load the
    SELinux policy) where we could potentially feed context strings without
    NUL terminators into the strcmp() function.
    
    We already guard against this during normal operation (after the SELinux
    policy has been loaded) by making a copy of the context strings and
    explicitly adding a NUL terminator to the end.  The patch extends this
    protection to the early boot case (no loaded policy) by moving the context
    copy earlier in security_context_to_sid_core().
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Reviewed-By: William Roberts <william.c.roberts@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b517942f5126c04fff8ff341cdd6a28b0a8de84f
Author: Jason Wang <jasowang@redhat.com>
Date:   Fri Feb 9 17:45:50 2018 +0800

    ptr_ring: try vmalloc() when kmalloc() fails
    
    commit 0bf7800f1799b5b1fd7d4f024e9ece53ac489011 upstream.
    
    This patch switch to use kvmalloc_array() for using a vmalloc()
    fallback to help in case kmalloc() fails.
    
    Reported-by: syzbot+e4d4f9ddd4295539735d@syzkaller.appspotmail.com
    Fixes: 2e0ab8ca83c12 ("ptr_ring: array based FIFO for pointers")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6688494804d87dcc8c936941f3f9969797af5419
Author: Jason Wang <jasowang@redhat.com>
Date:   Fri Feb 9 17:45:49 2018 +0800

    ptr_ring: fail early if queue occupies more than KMALLOC_MAX_SIZE
    
    commit 6e6e41c3112276288ccaf80c70916779b84bb276 upstream.
    
    To avoid slab to warn about exceeded size, fail early if queue
    occupies more than KMALLOC_MAX_SIZE.
    
    Reported-by: syzbot+e4d4f9ddd4295539735d@syzkaller.appspotmail.com
    Fixes: 2e0ab8ca83c12 ("ptr_ring: array based FIFO for pointers")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73e6a383d1509d8bee58579041e76e5d36793c18
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 4 15:03:40 2017 +0200

    ALSA: bcd2000: Add a sanity check for invalid EPs
    
    commit 6815a0b444572527256f0d0efd8efe3ddede6018 upstream.
    
    As syzkaller spotted, currently bcd2000 driver submits a URB with the
    fixed EP without checking whether it's actually available, which may
    result in a kernel warning like:
      usb 1-1: BOGUS urb xfer, pipe 1 != type 3
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 1846 at drivers/usb/core/urb.c:449
      usb_submit_urb+0xf8a/0x11d0
      Modules linked in:
      CPU: 0 PID: 1846 Comm: kworker/0:2 Not tainted
      4.14.0-rc2-42613-g1488251d1a98 #238
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
      Workqueue: usb_hub_wq hub_event
      Call Trace:
       bcd2000_init_device sound/usb/bcd2000/bcd2000.c:289
       bcd2000_init_midi sound/usb/bcd2000/bcd2000.c:345
       bcd2000_probe+0xe64/0x19e0 sound/usb/bcd2000/bcd2000.c:406
       usb_probe_interface+0x35d/0x8e0 drivers/usb/core/driver.c:361
       ....
    
    This patch adds a sanity check of validity of EPs at the device
    initialization phase for avoiding the call with an invalid EP.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b43a3e21937c869706e94efb53ad166478ad1a93
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 4 15:07:21 2017 +0200

    ALSA: caiaq: Add a sanity check for invalid EPs
    
    commit 58fc7f73a85d45a47057dad2af53502fdf6cf778 upstream.
    
    As syzkaller spotted, currently caiaq driver submits a URB with the
    fixed EP without checking whether it's actually available, which may
    result in a kernel warning like:
      usb 1-1: BOGUS urb xfer, pipe 3 != type 1
      ------------[ cut here ]------------
      WARNING: CPU: 1 PID: 1150 at drivers/usb/core/urb.c:449
      usb_submit_urb+0xf8a/0x11d0
      Modules linked in:
      CPU: 1 PID: 1150 Comm: kworker/1:1 Not tainted
      4.14.0-rc2-42660-g24b7bd59eec0 #277
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
      Workqueue: usb_hub_wq hub_event
      Call Trace:
       init_card sound/usb/caiaq/device.c:467
       snd_probe+0x81c/0x1150 sound/usb/caiaq/device.c:525
       usb_probe_interface+0x35d/0x8e0 drivers/usb/core/driver.c:361
       ....
    
    This patch adds a sanity check of validity of EPs at the device
    initialization phase for avoiding the call with an invalid EP.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90bca3712acb0ddffbb85beb099eb7eeafba6cd3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 4 15:09:24 2017 +0200

    ALSA: line6: Add a sanity check for invalid EPs
    
    commit 2a4340c57717162c6bf07a0860d05711d4de994b upstream.
    
    As syzkaller spotted, currently line6 drivers submit a URB with the
    fixed EP without checking whether it's actually available, which may
    result in a kernel warning like:
      usb 1-1: BOGUS urb xfer, pipe 3 != type 1
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 24 at drivers/usb/core/urb.c:449
      usb_submit_urb+0xf8a/0x11d0
      Modules linked in:
      CPU: 0 PID: 24 Comm: kworker/0:1 Not tainted 4.14.0-rc2-42613-g1488251d1a98 #238
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
      Workqueue: usb_hub_wq hub_event
      Call Trace:
       line6_start_listen+0x55f/0x9e0 sound/usb/line6/driver.c:82
       line6_init_cap_control sound/usb/line6/driver.c:690
       line6_probe+0x7c9/0x1310 sound/usb/line6/driver.c:764
       podhd_probe+0x64/0x70 sound/usb/line6/podhd.c:474
       usb_probe_interface+0x35d/0x8e0 drivers/usb/core/driver.c:361
       ....
    
    This patch adds a sanity check of validity of EPs at the device
    initialization phase for avoiding the call with an invalid EP.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c666e6471acb1fe33b6b88d95486ed2d548d944
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Tue Oct 31 11:55:35 2017 +0000

    drm: Require __GFP_NOFAIL for the legacy drm_modeset_lock_all
    
    commit d18d1a5ac811d12f7ebc1129230312b5f2c50cb8 upstream.
    
    To acquire all modeset locks requires a ww_ctx to be allocated. As this
    is the legacy path and the allocation small, to reduce the changes
    required (and complex untested error handling) to the legacy drivers, we
    simply assume that the allocation succeeds. At present, it relies on the
    too-small-to-fail rule, but syzbot found that by injecting a failure
    here we would hit the WARN. Document that this allocation must succeed
    with __GFP_NOFAIL.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171031115535.15166-1-chris@chris-wilson.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3587188ad596da05a8dd691fc28ee56d335f41b8
Author: Jan Kara <jack@suse.cz>
Date:   Tue Oct 31 09:53:28 2017 +0100

    dnotify: Handle errors from fsnotify_add_mark_locked() in fcntl_dirnotify()
    
    commit b3a0066005821acdc0cdb092cb72587182ab583f upstream.
    
    fsnotify_add_mark_locked() can fail but we do not check its return
    value. This didn't matter before commit 9dd813c15b2c "fsnotify: Move
    mark list head from object into dedicated structure" as none of possible
    failures could happen for dnotify but after that commit -ENOMEM can be
    returned. Handle this error properly in fcntl_dirnotify() as
    otherwise we just hit BUG_ON(dn_mark->dn) in dnotify_free_mark().
    
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Reported-by: syzkaller
    Fixes: 9dd813c15b2c101168808d4f5941a29985758973
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90f9a1ff1e8eaa15c1e33fefa44705707db4de2b
Author: Jens Axboe <axboe@kernel.dk>
Date:   Sun Nov 5 09:16:09 2017 -0700

    blktrace: fix unlocked registration of tracepoints
    
    commit a6da0024ffc19e0d47712bb5ca4fd083f76b07df upstream.
    
    We need to ensure that tracepoints are registered and unregistered
    with the users of them. The existing atomic count isn't enough for
    that. Add a lock around the tracepoints, so we serialize access
    to them.
    
    This fixes cases where we have multiple users setting up and
    tearing down tracepoints, like this:
    
    CPU: 0 PID: 2995 Comm: syzkaller857118 Not tainted
    4.14.0-rc5-next-20171018+ #36
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Call Trace:
      __dump_stack lib/dump_stack.c:16 [inline]
      dump_stack+0x194/0x257 lib/dump_stack.c:52
      panic+0x1e4/0x41c kernel/panic.c:183
      __warn+0x1c4/0x1e0 kernel/panic.c:546
      report_bug+0x211/0x2d0 lib/bug.c:183
      fixup_bug+0x40/0x90 arch/x86/kernel/traps.c:177
      do_trap_no_signal arch/x86/kernel/traps.c:211 [inline]
      do_trap+0x260/0x390 arch/x86/kernel/traps.c:260
      do_error_trap+0x120/0x390 arch/x86/kernel/traps.c:297
      do_invalid_op+0x1b/0x20 arch/x86/kernel/traps.c:310
      invalid_op+0x18/0x20 arch/x86/entry/entry_64.S:905
    RIP: 0010:tracepoint_add_func kernel/tracepoint.c:210 [inline]
    RIP: 0010:tracepoint_probe_register_prio+0x397/0x9a0 kernel/tracepoint.c:283
    RSP: 0018:ffff8801d1d1f6c0 EFLAGS: 00010293
    RAX: ffff8801d22e8540 RBX: 00000000ffffffef RCX: ffffffff81710f07
    RDX: 0000000000000000 RSI: ffffffff85b679c0 RDI: ffff8801d5f19818
    RBP: ffff8801d1d1f7c8 R08: ffffffff81710c10 R09: 0000000000000004
    R10: ffff8801d1d1f6b0 R11: 0000000000000003 R12: ffffffff817597f0
    R13: 0000000000000000 R14: 00000000ffffffff R15: ffff8801d1d1f7a0
      tracepoint_probe_register+0x2a/0x40 kernel/tracepoint.c:304
      register_trace_block_rq_insert include/trace/events/block.h:191 [inline]
      blk_register_tracepoints+0x1e/0x2f0 kernel/trace/blktrace.c:1043
      do_blk_trace_setup+0xa10/0xcf0 kernel/trace/blktrace.c:542
      blk_trace_setup+0xbd/0x180 kernel/trace/blktrace.c:564
      sg_ioctl+0xc71/0x2d90 drivers/scsi/sg.c:1089
      vfs_ioctl fs/ioctl.c:45 [inline]
      do_vfs_ioctl+0x1b1/0x1520 fs/ioctl.c:685
      SYSC_ioctl fs/ioctl.c:700 [inline]
      SyS_ioctl+0x8f/0xc0 fs/ioctl.c:691
      entry_SYSCALL_64_fastpath+0x1f/0xbe
    RIP: 0033:0x444339
    RSP: 002b:00007ffe05bb5b18 EFLAGS: 00000206 ORIG_RAX: 0000000000000010
    RAX: ffffffffffffffda RBX: 00000000006d66c0 RCX: 0000000000444339
    RDX: 000000002084cf90 RSI: 00000000c0481273 RDI: 0000000000000009
    RBP: 0000000000000082 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000206 R12: ffffffffffffffff
    R13: 00000000c0481273 R14: 0000000000000000 R15: 0000000000000000
    
    since we can now run these in parallel. Ensure that the exported helpers
    for doing this are grabbing the queue trace mutex.
    
    Reported-by: Steven Rostedt <rostedt@goodmis.org>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2df0d6de5eff25b8fb4e858c9d77c98cae8a0bc0
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Nov 17 14:11:11 2017 +0800

    sctp: set frag_point in sctp_setsockopt_maxseg correctly
    
    commit ecca8f88da5c4260cc2bccfefd2a24976704c366 upstream.
    
    Now in sctp_setsockopt_maxseg user_frag or frag_point can be set with
    val >= 8 and val <= SCTP_MAX_CHUNK_LEN. But both checks are incorrect.
    
    val >= 8 means frag_point can even be less than SCTP_DEFAULT_MINSEGMENT.
    Then in sctp_datamsg_from_user(), when it's value is greater than cookie
    echo len and trying to bundle with cookie echo chunk, the first_len will
    overflow.
    
    The worse case is when it's value is equal as cookie echo len, first_len
    becomes 0, it will go into a dead loop for fragment later on. In Hangbin
    syzkaller testing env, oom was even triggered due to consecutive memory
    allocation in that loop.
    
    Besides, SCTP_MAX_CHUNK_LEN is the max size of the whole chunk, it should
    deduct the data header for frag_point or user_frag check.
    
    This patch does a proper check with SCTP_DEFAULT_MINSEGMENT subtracting
    the sctphdr and datahdr, SCTP_MAX_CHUNK_LEN subtracting datahdr when
    setting frag_point via sockopt. It also improves sctp_setsockopt_maxseg
    codes.
    
    Suggested-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d4d55665f32c20117ec1d1a96dc807f6d04fc09
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Nov 27 11:15:16 2017 -0800

    xfrm: check id proto in validate_tmpl()
    
    commit 6a53b7593233ab9e4f96873ebacc0f653a55c3e1 upstream.
    
    syzbot reported a kernel warning in xfrm_state_fini(), which
    indicates that we have entries left in the list
    net->xfrm.state_all whose proto is zero. And
    xfrm_id_proto_match() doesn't consider them as a match with
    IPSEC_PROTO_ANY in this case.
    
    Proto with value 0 is probably not a valid value, at least
    verify_newsa_info() doesn't consider it valid either.
    
    This patch fixes it by checking the proto value in
    validate_tmpl() and rejecting invalid ones, like what iproute2
    does in xfrm_xfrmproto_getbyname().
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70c5e41f4734ee5cbafb5c49576bdc914f02c6b8
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Wed Nov 29 06:53:55 2017 +0100

    xfrm: Fix stack-out-of-bounds read on socket policy lookup.
    
    commit ddc47e4404b58f03e98345398fb12d38fe291512 upstream.
    
    When we do tunnel or beet mode, we pass saddr and daddr from the
    template to xfrm_state_find(), this is ok. On transport mode,
    we pass the addresses from the flowi, assuming that the IP
    addresses (and address family) don't change during transformation.
    This assumption is wrong in the IPv4 mapped IPv6 case, packet
    is IPv4 and template is IPv6.
    
    Fix this by catching address family missmatches of the policy
    and the flow already before we do the lookup.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6b36a2616ab94040b24ce622bd6befb1a28e4aa
Author: Leon Romanovsky <leonro@mellanox.com>
Date:   Tue Dec 5 22:30:04 2017 +0200

    RDMA/netlink: Fix general protection fault
    
    commit d0e312fe3d34c1bc014a7f8ec6540d05e8077483 upstream.
    
    The RDMA netlink core code checks validity of messages by ensuring
    that type and operand are in range. It works well for almost all
    clients except NLDEV, which has cb_table less than number of operands.
    
    Request to access such operand will trigger the following kernel panic.
    
    This patch updates all places where cb_table is declared for the
    consistency, but only NLDEV is actually need it.
    
    general protection fault: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN
    Modules linked in:
    CPU: 0 PID: 522 Comm: syz-executor6 Not tainted 4.13.0+ #4
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    task: ffff8800657799c0 task.stack: ffff8800695d000
    RIP: 0010:rdma_nl_rcv_msg+0x13a/0x4c0
    RSP: 0018:ffff8800695d7838 EFLAGS: 00010207
    RAX: dffffc0000000000 RBX: 1ffff1000d2baf0b RCX: 00000000704ff4d7
    RDX: 0000000000000000 RSI: ffffffff81ddb03c RDI: 00000003827fa6bc
    RBP: ffff8800695d7900 R08: ffffffff82ec0578 R09: 0000000000000000
    R10: ffff8800695d7900 R11: 0000000000000001 R12: 000000000000001c
    R13: ffff880069d31e00 R14: 00000000ffffffff R15: ffff880069d357c0
    FS:  00007fee6acb8700(0000) GS:ffff88006ca00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000201a9000 CR3: 0000000059766000 CR4: 00000000000006b0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     ? rdma_nl_multicast+0x80/0x80
     rdma_nl_rcv+0x36b/0x4d0
     ? ibnl_put_attr+0xc0/0xc0
     netlink_unicast+0x4bd/0x6d0
     ? netlink_sendskb+0x50/0x50
     ? drop_futex_key_refs.isra.4+0x68/0xb0
     netlink_sendmsg+0x9ab/0xbd0
     ? nlmsg_notify+0x140/0x140
     ? wake_up_q+0xa1/0xf0
     ? drop_futex_key_refs.isra.4+0x68/0xb0
     sock_sendmsg+0x88/0xd0
     sock_write_iter+0x228/0x3c0
     ? sock_sendmsg+0xd0/0xd0
     ? do_futex+0x3e5/0xb20
     ? iov_iter_init+0xaf/0x1d0
     __vfs_write+0x46e/0x640
     ? sched_clock_cpu+0x1b/0x190
     ? __vfs_read+0x620/0x620
     ? __fget+0x23a/0x390
     ? rw_verify_area+0xca/0x290
     vfs_write+0x192/0x490
     SyS_write+0xde/0x1c0
     ? SyS_read+0x1c0/0x1c0
     ? trace_hardirqs_on_thunk+0x1a/0x1c
     entry_SYSCALL_64_fastpath+0x18/0xad
    RIP: 0033:0x7fee6a74a219
    RSP: 002b:00007fee6acb7d58 EFLAGS: 00000212 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 0000000000638000 RCX: 00007fee6a74a219
    RDX: 0000000000000078 RSI: 0000000020141000 RDI: 0000000000000006
    RBP: 0000000000000046 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000212 R12: ffff8800695d7f98
    R13: 0000000020141000 R14: 0000000000000006 R15: 00000000ffffffff
    Code: d6 48 b8 00 00 00 00 00 fc ff df 66 41 81 e4 ff 03 44 8d 72 ff 4a 8d 3c b5 c0 a6 7f 82 44 89 b5 4c ff ff ff 48 89 f9 48 c1 e9 03 <0f> b6 0c 01 48 89 f8 83 e0 07 83 c0 03 38 c8 7c 08 84 c9 0f 85
    RIP: rdma_nl_rcv_msg+0x13a/0x4c0 RSP: ffff8800695d7838
    ---[ end trace ba085d123959c8ec ]---
    Kernel panic - not syncing: Fatal exception
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Fixes: b4c598a67ea1 ("RDMA/netlink: Implement nldev device dumpit calback")
    Reviewed-by: Mark Bloch <markb@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Signed-off-by: Doug Ledford <dledford@redhat.com>

commit 846666fad8d7de79b47a4147e39330fe96e1bdc3
Author: Lan Tianyu <tianyu.lan@intel.com>
Date:   Thu Dec 14 03:01:52 2017 -0500

    KVM/x86: Check input paging mode when cs.l is set
    
    commit f29810335965ac1f7bcb501ee2af5f039f792416 upstream.
    
    Reported by syzkaller:
        WARNING: CPU: 0 PID: 27962 at arch/x86/kvm/emulate.c:5631 x86_emulate_insn+0x557/0x15f0 [kvm]
        Modules linked in: kvm_intel kvm [last unloaded: kvm]
        CPU: 0 PID: 27962 Comm: syz-executor Tainted: G    B   W        4.15.0-rc2-next-20171208+ #32
        Hardware name: Intel Corporation S1200SP/S1200SP, BIOS S1200SP.86B.01.03.0006.040720161253 04/07/2016
        RIP: 0010:x86_emulate_insn+0x557/0x15f0 [kvm]
        RSP: 0018:ffff8807234476d0 EFLAGS: 00010282
        RAX: 0000000000000000 RBX: ffff88072d0237a0 RCX: ffffffffa0065c4d
        RDX: 1ffff100e5a046f9 RSI: 0000000000000003 RDI: ffff88072d0237c8
        RBP: ffff880723447728 R08: ffff88072d020000 R09: ffffffffa008d240
        R10: 0000000000000002 R11: ffffed00e7d87db3 R12: ffff88072d0237c8
        R13: ffff88072d023870 R14: ffff88072d0238c2 R15: ffffffffa008d080
        FS:  00007f8a68666700(0000) GS:ffff880802200000(0000) knlGS:0000000000000000
        CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
        CR2: 000000002009506c CR3: 000000071fec4005 CR4: 00000000003626f0
        Call Trace:
         x86_emulate_instruction+0x3bc/0xb70 [kvm]
         ? reexecute_instruction.part.162+0x130/0x130 [kvm]
         vmx_handle_exit+0x46d/0x14f0 [kvm_intel]
         ? trace_event_raw_event_kvm_entry+0xe7/0x150 [kvm]
         ? handle_vmfunc+0x2f0/0x2f0 [kvm_intel]
         ? wait_lapic_expire+0x25/0x270 [kvm]
         vcpu_enter_guest+0x720/0x1ef0 [kvm]
         ...
    
    When CS.L is set, vcpu should run in the 64 bit paging mode.
    Current kvm set_sregs function doesn't have such check when
    userspace inputs sreg values. This will lead unexpected behavior.
    This patch is to add checks for CS.L, EFER.LME, EFER.LMA and
    CR4.PAE when get SREG inputs from userspace in order to avoid
    unexpected behavior.
    
    Suggested-by: Paolo Bonzini <pbonzini@redhat.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Jim Mattson <jmattson@google.com>
    Signed-off-by: Tianyu Lan <tianyu.lan@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7880fc541566166d140954825fc83c826534e622
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Mon Dec 18 20:31:41 2017 +0900

    mm,vmscan: Make unregister_shrinker() no-op if register_shrinker() failed.
    
    commit bb422a738f6566f7439cd347d54e321e4fe92a9f upstream.
    
    Syzbot caught an oops at unregister_shrinker() because combination of
    commit 1d3d4437eae1bb29 ("vmscan: per-node deferred work") and fault
    injection made register_shrinker() fail and the caller of
    register_shrinker() did not check for failure.
    
    ----------
    [  554.881422] FAULT_INJECTION: forcing a failure.
    [  554.881422] name failslab, interval 1, probability 0, space 0, times 0
    [  554.881438] CPU: 1 PID: 13231 Comm: syz-executor1 Not tainted 4.14.0-rc8+ #82
    [  554.881443] Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    [  554.881445] Call Trace:
    [  554.881459]  dump_stack+0x194/0x257
    [  554.881474]  ? arch_local_irq_restore+0x53/0x53
    [  554.881486]  ? find_held_lock+0x35/0x1d0
    [  554.881507]  should_fail+0x8c0/0xa40
    [  554.881522]  ? fault_create_debugfs_attr+0x1f0/0x1f0
    [  554.881537]  ? check_noncircular+0x20/0x20
    [  554.881546]  ? find_next_zero_bit+0x2c/0x40
    [  554.881560]  ? ida_get_new_above+0x421/0x9d0
    [  554.881577]  ? find_held_lock+0x35/0x1d0
    [  554.881594]  ? __lock_is_held+0xb6/0x140
    [  554.881628]  ? check_same_owner+0x320/0x320
    [  554.881634]  ? lock_downgrade+0x990/0x990
    [  554.881649]  ? find_held_lock+0x35/0x1d0
    [  554.881672]  should_failslab+0xec/0x120
    [  554.881684]  __kmalloc+0x63/0x760
    [  554.881692]  ? lock_downgrade+0x990/0x990
    [  554.881712]  ? register_shrinker+0x10e/0x2d0
    [  554.881721]  ? trace_event_raw_event_module_request+0x320/0x320
    [  554.881737]  register_shrinker+0x10e/0x2d0
    [  554.881747]  ? prepare_kswapd_sleep+0x1f0/0x1f0
    [  554.881755]  ? _down_write_nest_lock+0x120/0x120
    [  554.881765]  ? memcpy+0x45/0x50
    [  554.881785]  sget_userns+0xbcd/0xe20
    (...snipped...)
    [  554.898693] kasan: CONFIG_KASAN_INLINE enabled
    [  554.898724] kasan: GPF could be caused by NULL-ptr deref or user memory access
    [  554.898732] general protection fault: 0000 [#1] SMP KASAN
    [  554.898737] Dumping ftrace buffer:
    [  554.898741]    (ftrace buffer empty)
    [  554.898743] Modules linked in:
    [  554.898752] CPU: 1 PID: 13231 Comm: syz-executor1 Not tainted 4.14.0-rc8+ #82
    [  554.898755] Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    [  554.898760] task: ffff8801d1dbe5c0 task.stack: ffff8801c9e38000
    [  554.898772] RIP: 0010:__list_del_entry_valid+0x7e/0x150
    [  554.898775] RSP: 0018:ffff8801c9e3f108 EFLAGS: 00010246
    [  554.898780] RAX: dffffc0000000000 RBX: 0000000000000000 RCX: 0000000000000000
    [  554.898784] RDX: 0000000000000000 RSI: ffff8801c53c6f98 RDI: ffff8801c53c6fa0
    [  554.898788] RBP: ffff8801c9e3f120 R08: 1ffff100393c7d55 R09: 0000000000000004
    [  554.898791] R10: ffff8801c9e3ef70 R11: 0000000000000000 R12: 0000000000000000
    [  554.898795] R13: dffffc0000000000 R14: 1ffff100393c7e45 R15: ffff8801c53c6f98
    [  554.898800] FS:  0000000000000000(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000
    [  554.898804] CS:  0010 DS: 002b ES: 002b CR0: 0000000080050033
    [  554.898807] CR2: 00000000dbc23000 CR3: 00000001c7269000 CR4: 00000000001406e0
    [  554.898813] DR0: 0000000020000000 DR1: 0000000020000000 DR2: 0000000000000000
    [  554.898816] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600
    [  554.898818] Call Trace:
    [  554.898828]  unregister_shrinker+0x79/0x300
    [  554.898837]  ? perf_trace_mm_vmscan_writepage+0x750/0x750
    [  554.898844]  ? down_write+0x87/0x120
    [  554.898851]  ? deactivate_super+0x139/0x1b0
    [  554.898857]  ? down_read+0x150/0x150
    [  554.898864]  ? check_same_owner+0x320/0x320
    [  554.898875]  deactivate_locked_super+0x64/0xd0
    [  554.898883]  deactivate_super+0x141/0x1b0
    ----------
    
    Since allowing register_shrinker() callers to call unregister_shrinker()
    when register_shrinker() failed can simplify error recovery path, this
    patch makes unregister_shrinker() no-op when register_shrinker() failed.
    Also, reset shrinker->nr_deferred in case unregister_shrinker() was
    by error called twice.
    
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Aliaksei Karaliou <akaraliou.dev@gmail.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Glauber Costa <glauber@scylladb.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e754b4ec589f14ef6efa454ee872580ba1802fa
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Dec 27 23:25:45 2017 +0100

    xfrm: skip policies marked as dead while rehashing
    
    commit 862591bf4f519d1b8d859af720fafeaebdd0162a upstream.
    
    syzkaller triggered following KASAN splat:
    
    BUG: KASAN: slab-out-of-bounds in xfrm_hash_rebuild+0xdbe/0xf00 net/xfrm/xfrm_policy.c:618
    read of size 2 at addr ffff8801c8e92fe4 by task kworker/1:1/23 [..]
    Workqueue: events xfrm_hash_rebuild [..]
     __asan_report_load2_noabort+0x14/0x20 mm/kasan/report.c:428
     xfrm_hash_rebuild+0xdbe/0xf00 net/xfrm/xfrm_policy.c:618
     process_one_work+0xbbf/0x1b10 kernel/workqueue.c:2112
     worker_thread+0x223/0x1990 kernel/workqueue.c:2246 [..]
    
    The reproducer triggers:
    1016                 if (error) {
    1017                         list_move_tail(&walk->walk.all, &x->all);
    1018                         goto out;
    1019                 }
    
    in xfrm_policy_walk() via pfkey (it sets tiny rcv space, dump
    callback returns -ENOBUFS).
    
    In this case, *walk is located the pfkey socket struct, so this socket
    becomes visible in the global policy list.
    
    It looks like this is intentional -- phony walker has walk.dead set to 1
    and all other places skip such "policies".
    
    Ccing original authors of the two commits that seem to expose this
    issue (first patch missed ->dead check, second patch adds pfkey
    sockets to policies dumper list).
    
    Fixes: 880a6fab8f6ba5b ("xfrm: configure policy hash table thresholds by netlink")
    Fixes: 12a169e7d8f4b1c ("ipsec: Put dumpers on the dump list")
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Timo Teras <timo.teras@iki.fi>
    Cc: Christophe Gouault <christophe.gouault@6wind.com>
    Reported-by: syzbot <bot+c028095236fcb6f4348811565b75084c754dc729@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8370258ca0bc9e630043157db862be2c5c341a6
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Sun Dec 31 16:18:56 2017 +0100

    xfrm: fix rcu usage in xfrm_get_type_offload
    
    commit 2f10a61cee8fdb9f8da90f5db687e1862b22cf06 upstream.
    
    request_module can sleep, thus we cannot hold rcu_read_lock() while
    calling it. The function also jumps back and takes rcu_read_lock()
    again (in xfrm_state_get_afinfo()), resulting in an imbalance.
    
    This codepath is triggered whenever a new offloaded state is created.
    
    Fixes: ffdb5211da1c ("xfrm: Auto-load xfrm offload modules")
    Reported-by: syzbot+ca425f44816d749e8eb49755567a75ee48cf4a30@syzkaller.appspotmail.com
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85c31887a20da06fe2803b4ec1031b9af89c1899
Author: Florian Westphal <fw@strlen.de>
Date:   Sat Jan 6 01:13:08 2018 +0100

    xfrm: don't call xfrm_policy_cache_flush while holding spinlock
    
    commit b1bdcb59b64f806ef08d25a85c39ffb3ad841ce6 upstream.
    
    xfrm_policy_cache_flush can sleep, so it cannot be called while holding
    a spinlock.  We could release the lock first, but I don't see why we need
    to invoke this function here in first place, the packet path won't reuse
    an xdst entry unless its still valid.
    
    While at it, add an annotation to xfrm_policy_cache_flush, it would
    have probably caught this bug sooner.
    
    Fixes: ec30d78c14a813 ("xfrm: add xdst pcpu cache")
    Reported-by: syzbot+e149f7d1328c26f9c12f@syzkaller.appspotmail.com
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 201941360944afbde6ab6f5ff70f96f16d334971
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Fri Jan 5 08:35:47 2018 +0100

    esp: Fix GRO when the headers not fully in the linear part of the skb.
    
    commit 374d1b5a81f7f9cc5e7f095ac3d5aff3f6600376 upstream.
    
    The GRO layer does not necessarily pull the complete headers
    into the linear part of the skb, a part may remain on the
    first page fragment. This can lead to a crash if we try to
    pull the headers, so make sure we have them on the linear
    part before pulling.
    
    Fixes: 7785bba299a8 ("esp: Add a software GRO codepath")
    Reported-by: syzbot+82bbd65569c49c6c0c4d@syzkaller.appspotmail.com
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 447f1170c23bea791c3b5efdc0264519fd22f565
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Jan 15 09:32:36 2018 +0100

    mac80211_hwsim: validate number of different channels
    
    commit 51a1aaa631c90223888d8beac4d649dc11d2ca55 upstream.
    
    When creating a new radio on the fly, hwsim allows this
    to be done with an arbitrary number of channels, but
    cfg80211 only supports a limited number of simultaneous
    channels, leading to a warning.
    
    Fix this by validating the number - this requires moving
    the define for the maximum out to a visible header file.
    
    Reported-by: syzbot+8dd9051ff19940290931@syzkaller.appspotmail.com
    Fixes: b59ec8dd4394 ("mac80211_hwsim: fix number of channels in interface combinations")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9e441e2e6346284120c9e8e24c4050c245b8895
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Jan 15 09:58:27 2018 +0100

    cfg80211: check dev_set_name() return value
    
    commit 59b179b48ce2a6076448a44531242ac2b3f6cef2 upstream.
    
    syzbot reported a warning from rfkill_alloc(), and after a while
    I think that the reason is that it was doing fault injection and
    the dev_set_name() failed, leaving the name NULL, and we didn't
    check the return value and got to rfkill_alloc() with a NULL name.
    Since we really don't want a NULL name, we ought to check the
    return value.
    
    Fixes: fb28ad35906a ("net: struct device - replace bus_id with dev_name(), dev_set_name()")
    Reported-by: syzbot+1ddfb3357e1d7bb5b5d3@syzkaller.appspotmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddf0936b9eefe0af6d046cd7d6a9212478812c9a
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Thu Jan 18 01:15:21 2018 +0100

    bpf: mark dst unknown on inconsistent {s, u}bounds adjustments
    
    commit 6f16101e6a8b4324c36e58a29d9e0dbb287cdedb upstream.
    
    syzkaller generated a BPF proglet and triggered a warning with
    the following:
    
      0: (b7) r0 = 0
      1: (d5) if r0 s<= 0x0 goto pc+0
       R0=inv0 R1=ctx(id=0,off=0,imm=0) R10=fp0
      2: (1f) r0 -= r1
       R0=inv0 R1=ctx(id=0,off=0,imm=0) R10=fp0
      verifier internal error: known but bad sbounds
    
    What happens is that in the first insn, r0's min/max value
    are both 0 due to the immediate assignment, later in the jsle
    test the bounds are updated for the min value in the false
    path, meaning, they yield smin_val = 1, smax_val = 0, and when
    ctx pointer is subtracted from r0, verifier bails out with the
    internal error and throwing a WARN since smin_val != smax_val
    for the known constant.
    
    For min_val > max_val scenario it means that reg_set_min_max()
    and reg_set_min_max_inv() (which both refine existing bounds)
    demonstrated that such branch cannot be taken at runtime.
    
    In above scenario for the case where it will be taken, the
    existing [0, 0] bounds are kept intact. Meaning, the rejection
    is not due to a verifier internal error, and therefore the
    WARN() is not necessary either.
    
    We could just reject such cases in adjust_{ptr,scalar}_min_max_vals()
    when either known scalars have smin_val != smax_val or
    umin_val != umax_val or any scalar reg with bounds
    smin_val > smax_val or umin_val > umax_val. However, there
    may be a small risk of breakage of buggy programs, so handle
    this more gracefully and in adjust_{ptr,scalar}_min_max_vals()
    just taint the dst reg as unknown scalar when we see ops with
    such kind of src reg.
    
    Reported-by: syzbot+6d362cadd45dc0a12ba4@syzkaller.appspotmail.com
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c0b71202f83f7851f173caee9059f830e3b0dfd
Author: Tom Herbert <tom@quantonium.net>
Date:   Wed Jan 24 12:35:40 2018 -0800

    kcm: Only allow TCP sockets to be attached to a KCM mux
    
    commit 581e7226a5d43f629eb6399a121f85f6a15f81be upstream.
    
    TCP sockets for IPv4 and IPv6 that are not listeners or in closed
    stated are allowed to be attached to a KCM mux.
    
    Fixes: ab7ac4eb9832 ("kcm: Kernel Connection Multiplexor module")
    Reported-by: syzbot+8865eaff7f9acd593945@syzkaller.appspotmail.com
    Signed-off-by: Tom Herbert <tom@quantonium.net>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44890e9ff771ef11777b2d1ebf8589255eb12502
Author: Tom Herbert <tom@quantonium.net>
Date:   Wed Jan 24 12:35:41 2018 -0800

    kcm: Check if sk_user_data already set in kcm_attach
    
    commit e5571240236c5652f3e079b1d5866716a7ad819c upstream.
    
    This is needed to prevent sk_user_data being overwritten.
    The check is done under the callback lock. This should prevent
    a socket from being attached twice to a KCM mux. It also prevents
    a socket from being attached for other use cases of sk_user_data
    as long as the other cases set sk_user_data under the lock.
    Followup work is needed to unify all the use cases of sk_user_data
    to use the same locking.
    
    Reported-by: syzbot+114b15f2be420a8886c3@syzkaller.appspotmail.com
    Fixes: ab7ac4eb9832 ("kcm: Kernel Connection Multiplexor module")
    Signed-off-by: Tom Herbert <tom@quantonium.net>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed25667f33032b7715bc4af67e6728020fe75f5e
Author: Jason Wang <jasowang@redhat.com>
Date:   Tue Jan 23 17:27:25 2018 +0800

    vhost: use mutex_lock_nested() in vhost_dev_lock_vqs()
    
    commit e9cb4239134c860e5f92c75bf5321bd377bb505b upstream.
    
    We used to call mutex_lock() in vhost_dev_lock_vqs() which tries to
    hold mutexes of all virtqueues. This may confuse lockdep to report a
    possible deadlock because of trying to hold locks belong to same
    class. Switch to use mutex_lock_nested() to avoid false positive.
    
    Fixes: 6b1e6cc7855b0 ("vhost: new device IOTLB API")
    Reported-by: syzbot+dbb7c1161485e61b0241@syzkaller.appspotmail.com
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebf7d035c39a70756a9b68a6a670ee8a39ecc586
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 4 16:15:59 2017 +0200

    usb: core: Add a helper function to check the validity of EP type in URB
    
    commit e901b9873876ca30a09253731bd3a6b00c44b5b0 upstream.
    
    This patch adds a new helper function to perform a sanity check of the
    given URB to see whether it contains a valid endpoint.  It's a light-
    weight version of what usb_submit_urb() does, but without the kernel
    warning followed by the stack trace, just returns an error code.
    
    Especially for a driver that doesn't parse the descriptor but fills
    the URB with the fixed endpoint (e.g. some quirks for non-compliant
    devices), this kind of check is preferable at the probe phase before
    actually submitting the urb.
    
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58056a531e440061142a4481358ebb365193df5e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Feb 22 15:42:33 2018 +0100

    Linux 4.14.21

commit e506ac1dab86c88b03f62404055a35262dda310d
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Sun Jan 14 18:35:40 2018 +0200

    ovl: hash directory inodes for fsnotify
    
    commit 31747eda41ef3c30c09c5c096b380bf54013746a upstream.
    
    fsnotify pins a watched directory inode in cache, but if directory dentry
    is released, new lookup will allocate a new dentry and a new inode.
    Directory events will be notified on the new inode, while fsnotify listener
    is watching the old pinned inode.
    
    Hash all directory inodes to reuse the pinned inode on lookup. Pure upper
    dirs are hashes by real upper inode, merge and lower dirs are hashed by
    real lower inode.
    
    The reference to lower inode was being held by the lower dentry object
    in the overlay dentry (oe->lowerstack[0]). Releasing the overlay dentry
    may drop lower inode refcount to zero. Add a refcount on behalf of the
    overlay inode to prevent that.
    
    As a by-product, hashing directory inodes also detects multiple
    redirected dirs to the same lower dir and uncovered redirected dir
    target on and returns -ESTALE on lookup.
    
    The reported issue dates back to initial version of overlayfs, but this
    patch depends on ovl_inode code that was introduced in kernel v4.13.
    
    Cc: <stable@vger.kernel.org> #v4.13
    Reported-by: Niklas Cassel <niklas.cassel@axis.com>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Tested-by: Niklas Cassel <niklas.cassel@axis.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1a81c0eab38a1cf8887cd10731c77ad547cc17c
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Fri Jan 5 14:55:33 2018 -0600

    ASoC: acpi: fix machine driver selection based on quirk
    
    commit 5c256045b87b8aa8e5bc9d2e2fdc0802351c1f99 upstream.
    
    The ACPI/machine-driver code refactoring introduced in 4.13 introduced
    a regression for cases where we need a DMI-based quirk to select the
    machine driver (the BIOS reports an invalid HID). The fix is just to
    make sure the results of the quirk are actually used.
    
    Fixes: 54746dabf770 ('ASoC: Improve machine driver selection based on quirk data')
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=96691
    Tested-by: Nicole Færber <nicole.faerber@dpin.de>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a2b3777bd5335e34ec585ecc8e29d575dfc8c13
Author: yinbo.zhu <yinbo.zhu@nxp.com>
Date:   Fri Dec 1 15:09:34 2017 +0800

    mmc: sdhci-of-esdhc: fix the mmc error after sleep on ls1046ardb
    
    commit f2bc600008bd6f7f5d0b6b56238d14f95cd454d2 upstream.
    
    When system wakes up from sleep on ls1046ardb, the SD operation fails
    with mmc error messages since ESDHC_TB_EN bit couldn't be cleaned by
    eSDHC_SYSCTL[RSTA]. It's proper to clean this bit in esdhc_reset()
    rather than in probe.
    
    Signed-off-by: yinbo.zhu <yinbo.zhu@nxp.com>
    Acked-by: Yangbo Lu <yangbo.lu@nxp.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44e47693e3a680114332420a92281861bba5a9a4
Author: yinbo.zhu <yinbo.zhu@nxp.com>
Date:   Wed Nov 8 17:09:50 2017 +0800

    mmc: sdhci-of-esdhc: fix eMMC couldn't work after kexec
    
    commit 97618aca1440b5addc5c3d78659d3e176be23b80 upstream.
    
    The bit eSDHC_TBCTL[TB_EN] couldn't be reset by eSDHC_SYSCTL[RSTA] which is
    used to reset for all. The driver should make sure it's cleared before card
    initialization, otherwise the initialization would fail.
    
    Signed-off-by: yinbo.zhu <yinbo.zhu@nxp.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffe075e233bb8049ba7d3e362b37bc97ecf7e6fa
Author: yangbo lu <yangbo.lu@nxp.com>
Date:   Thu Sep 21 16:43:31 2017 +0800

    mmc: sdhci-of-esdhc: disable SD clock for clock value 0
    
    commit dd3f6983b4a468efca9e8caa0e2b4aa20946d801 upstream.
    
    SD clock should be disabled for clock value 0. It's not
    right to just return. This may cause failure of signal
    voltage switching.
    
    Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11785a9ece1b10d43156ae79e24f709053644bc5
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Nov 30 06:08:05 2017 -0500

    media: r820t: fix r820t_write_reg for KASAN
    
    commit 16c3ada89cff9a8c2a0eea34ffa1aa20af3f6008 upstream.
    
    With CONFIG_KASAN, we get an overly long stack frame due to inlining
    the register access functions:
    
    drivers/media/tuners/r820t.c: In function 'generic_set_freq.isra.7':
    drivers/media/tuners/r820t.c:1334:1: error: the frame size of 2880 bytes is larger than 2048 bytes [-Werror=frame-larger-than=]
    
    This is caused by a gcc bug that has now been fixed in gcc-8.
    To work around the problem, we can pass the register data
    through a local variable that older gcc versions can optimize
    out as well.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=81715
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbd577fec485647aaad0e2ba6142f2fec363b946
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Tue Jan 2 08:57:17 2018 +0100

    ARM: dts: Delete bogus reference to the charlcd
    
    commit 586b2a4befad88cd87b372a1cea01e58c6811ea9 upstream.
    
    The EB MP board probably has a character LCD but the board manual does
    not really state which IRQ it has assigned to this device. The invalid
    assignment was a mistake by me during submission of the DTSI where I was
    looking for the reference, didn't find it and didn't fill it in.
    
    Delete this for now: it can probably be fixed but that requires access
    to the actual board for some trial-and-error experiments.
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5782df0a58b6748cca77cd0a7684c8c7e2401af2
Author: Matthias Brugger <matthias.bgg@gmail.com>
Date:   Fri Dec 1 13:07:08 2017 +0100

    arm: dts: mt2701: Add reset-cells
    
    commit ae72e95b5e4ded145bfc6926ad9457b74e3af41a upstream.
    
    The hifsys and ethsys needs the definition of the reset-cells
    property. Fix this.
    
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 011c19041424dabd87e0bfa26b5ce20c1a0119e1
Author: Matthias Brugger <matthias.bgg@gmail.com>
Date:   Fri Dec 1 13:07:07 2017 +0100

    arm: dts: mt7623: Update ethsys binding
    
    commit 76a09ce214addb8ddc0f6d50dc1106a5f829e713 upstream.
    
    The ethsys binding misses the reset-cells, this patch
    adds this property.
    
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7367af9cf0e4e1502151d42535cae779046d77e4
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 10 17:10:11 2018 +0100

    ARM: dts: s5pv210: add interrupt-parent for ohci
    
    commit 5c1037196b9ee75897c211972de370ed1336ec8f upstream.
    
    The ohci-hcd node has an interrupt number but no interrupt-parent,
    leading to a warning with current dtc versions:
    
    arch/arm/boot/dts/s5pv210-aquila.dtb: Warning (interrupts_property): Missing interrupt-parent for /soc/ohci@ec300000
    arch/arm/boot/dts/s5pv210-goni.dtb: Warning (interrupts_property): Missing interrupt-parent for /soc/ohci@ec300000
    arch/arm/boot/dts/s5pv210-smdkc110.dtb: Warning (interrupts_property): Missing interrupt-parent for /soc/ohci@ec300000
    arch/arm/boot/dts/s5pv210-smdkv210.dtb: Warning (interrupts_property): Missing interrupt-parent for /soc/ohci@ec300000
    arch/arm/boot/dts/s5pv210-torbreck.dtb: Warning (interrupts_property): Missing interrupt-parent for /soc/ohci@ec300000
    
    As seen from the related exynos dts files, the ohci and ehci controllers
    always share one interrupt number, and the number is the same here as
    well, so setting the same interrupt-parent is the reasonable solution
    here.
    
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34aac3426553aed01e59ec30467e42d165af2142
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Tue Nov 7 19:45:01 2017 -0800

    arm64: dts: msm8916: Add missing #phy-cells
    
    commit b0ab681285aa66064f2de5b74191c0cabba381ff upstream.
    
    Add a missing #phy-cells to the dsi-phy, to silence dtc warning.
    
    Cc: Archit Taneja <architt@codeaurora.org>
    Fixes: 305410ffd1b2 ("arm64: dts: msm8916: Add display support")
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Archit Taneja <architt@codeaurora.org>
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 361bd5be7b845f10f6f282987088c1e62dd671d9
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 10 15:40:37 2018 +0100

    ARM: pxa/tosa-bt: add MODULE_LICENSE tag
    
    commit 3343647813fdf0f2409fbf5816ee3e0622168079 upstream.
    
    Without this tag, we get a build warning:
    
    WARNING: modpost: missing MODULE_LICENSE() in arch/arm/mach-pxa/tosa-bt.o
    
    For completeness, I'm also adding author and description fields.
    
    Acked-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5eab7c3d1003d0d8df8beefa531187452212c59
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 21 22:30:07 2017 +0100

    ARM: dts: exynos: fix RTC interrupt for exynos5410
    
    commit 5628a8ca14149ba4226e3bdce3a04c3b688435ad upstream.
    
    According to the comment added to exynos_dt_pmu_match[] in commit
    8b283c025443 ("ARM: exynos4/5: convert pmu wakeup to stacked domains"),
    the RTC is not able to wake up the system through the PMU on Exynos5410,
    unlike Exynos5420.
    
    However, when the RTC DT node got added, it was a straight copy of
    the Exynos5420 node, which now causes a warning from dtc.
    
    This removes the incorrect interrupt-parent, which should get the
    interrupt working and avoid the warning.
    
    Fixes: e1e146b1b062 ("ARM: dts: exynos: Add RTC and I2C to Exynos5410")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcdc01c2edd4baf8096c70837fd583e1cc00d023
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Oct 11 15:47:54 2017 +0200

    Bluetooth: BT_HCIUART now depends on SERIAL_DEV_BUS
    
    commit 05e89fb576f580ac95e7a5d00bdb34830b09671a upstream.
    
    It is no longer possible to build BT_HCIUART into the kernel
    when SERIAL_DEV_BUS is a loadable module, even if none of the
    SERIAL_DEV_BUS based implementations are selected:
    
    drivers/bluetooth/hci_ldisc.o: In function `hci_uart_set_flow_control':
    hci_ldisc.c:(.text+0xb40): undefined reference to `serdev_device_set_flow_control'
    hci_ldisc.c:(.text+0xb5c): undefined reference to `serdev_device_set_tiocm'
    
    This adds a dependency to avoid the broken configuration.
    
    Fixes: 7841d554809b ("Bluetooth: hci_uart_set_flow_control: Fix NULL deref when using serdev")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 875758d79d8f6182aa2c76c09eb810a7c54249ec
Author: Hannes Reinecke <hare@suse.de>
Date:   Wed Dec 13 14:21:37 2017 +0100

    scsi: core: check for device state in __scsi_remove_target()
    
    commit 81b6c999897919d5a16fedc018fe375dbab091c5 upstream.
    
    As it turned out device_get() doesn't use kref_get_unless_zero(), so we
    will be always getting a device pointer.  Consequently, we need to check
    for the device state in __scsi_remove_target() to avoid tripping over
    deleted objects.
    
    Fixes: fbce4d97fd43 ("scsi: fixup kernel warning during rmmod()")
    Reported-by: Jason Yan <yanaijie@huawei.com>
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Max Ivanov <ivanov.maxim@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26f8c38bb466c1a2d232d7609fb4bfb4bc121678
Author: Tony Luck <tony.luck@intel.com>
Date:   Thu Jan 25 14:23:48 2018 -0800

    x86/mm, mm/hwpoison: Don't unconditionally unmap kernel 1:1 pages
    
    commit fd0e786d9d09024f67bd71ec094b110237dc3840 upstream.
    
    In the following commit:
    
      ce0fa3e56ad2 ("x86/mm, mm/hwpoison: Clear PRESENT bit for kernel 1:1 mappings of poison pages")
    
    ... we added code to memory_failure() to unmap the page from the
    kernel 1:1 virtual address space to avoid speculative access to the
    page logging additional errors.
    
    But memory_failure() may not always succeed in taking the page offline,
    especially if the page belongs to the kernel.  This can happen if
    there are too many corrected errors on a page and either mcelog(8)
    or drivers/ras/cec.c asks to take a page offline.
    
    Since we remove the 1:1 mapping early in memory_failure(), we can
    end up with the page unmapped, but still in use. On the next access
    the kernel crashes :-(
    
    There are also various debug paths that call memory_failure() to simulate
    occurrence of an error. Since there is no actual error in memory, we
    don't need to map out the page for those cases.
    
    Revert most of the previous attempt and keep the solution local to
    arch/x86/kernel/cpu/mcheck/mce.c. Unmap the page only when:
    
            1) there is a real error
            2) memory_failure() succeeds.
    
    All of this only applies to 64-bit systems. 32-bit kernel doesn't map
    all of memory into kernel space. It isn't worth adding the code to unmap
    the piece that is mapped because nobody would run a 32-bit kernel on a
    machine that has recoverable machine checks.
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave <dave.hansen@intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Robert (Persistent Memory) <elliott@hpe.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Cc: stable@vger.kernel.org #v4.14
    Fixes: ce0fa3e56ad2 ("x86/mm, mm/hwpoison: Clear PRESENT bit for kernel 1:1 mappings of poison pages")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4ea7c12229c5fec232120713abe74bd35164157
Author: James Hogan <jhogan@kernel.org>
Date:   Wed Jan 31 22:24:45 2018 +0000

    usb: Move USB_UHCI_BIG_ENDIAN_* out of USB_SUPPORT
    
    commit ec897569ad7dbc6d595873a487c3fac23f463f76 upstream.
    
    Move the Kconfig symbols USB_UHCI_BIG_ENDIAN_MMIO and
    USB_UHCI_BIG_ENDIAN_DESC out of drivers/usb/host/Kconfig, which is
    conditional upon USB && USB_SUPPORT, so that it can be freely selected
    by platform Kconfig symbols in architecture code.
    
    For example once the MIPS_GENERIC platform selects are fixed in commit
    2e6522c56552 ("MIPS: Fix typo BIG_ENDIAN to CPU_BIG_ENDIAN"), the MIPS
    32r6_defconfig warns like so:
    
    warning: (MIPS_GENERIC) selects USB_UHCI_BIG_ENDIAN_MMIO which has unmet direct dependencies (USB_SUPPORT && USB)
    warning: (MIPS_GENERIC) selects USB_UHCI_BIG_ENDIAN_DESC which has unmet direct dependencies (USB_SUPPORT && USB)
    
    Fixes: 2e6522c56552 ("MIPS: Fix typo BIG_ENDIAN to CPU_BIG_ENDIAN")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Corentin Labbe <clabbe.montjoie@gmail.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Paul Burton <paul.burton@mips.com>
    Cc: linux-usb@vger.kernel.org
    Cc: linux-mips@linux-mips.org
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Patchwork: https://patchwork.linux-mips.org/patch/18559/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac98d5a624fed603233421ddd808f2623f331ad8
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Feb 11 18:10:28 2018 -0500

    mvpp2: fix multicast address filter
    
    commit 7ac8ff95f48cbfa609a060fd6a1e361dd62feeb3 upstream.
    
    IPv6 doesn't work on the MacchiatoBIN board. It is caused by broken
    multicast address filter in the mvpp2 driver.
    
    The driver loads doesn't load any multicast entries if "allmulti" is not
    set. This condition should be reversed.
    
    The condition !netdev_mc_empty(dev) is useless (because
    netdev_for_each_mc_addr is nop if the list is empty).
    
    This patch also fixes a possible overflow of the multicast list - if
    mvpp2_prs_mac_da_accept fails, we set the allmulti flag and retry.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7466294dad8963e29f051d8ab2f4d3f67d2f62a6
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 12 15:20:51 2018 +0100

    ALSA: seq: Fix racy pool initializations
    
    commit d15d662e89fc667b90cd294b0eb45694e33144da upstream.
    
    ALSA sequencer core initializes the event pool on demand by invoking
    snd_seq_pool_init() when the first write happens and the pool is
    empty.  Meanwhile user can reset the pool size manually via ioctl
    concurrently, and this may lead to UAF or out-of-bound accesses since
    the function tries to vmalloc / vfree the buffer.
    
    A simple fix is to just wrap the snd_seq_pool_init() call with the
    recently introduced client->ioctl_mutex; as the calls for
    snd_seq_pool_init() from other side are always protected with this
    mutex, we can avoid the race.
    
    Reported-by: 范龙飞 <long7573@126.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec5a08abefe6aa239ada078e6041f222eac52196
Author: Daniel Mack <daniel@zonque.org>
Date:   Sun Feb 11 09:50:27 2018 -0400

    ALSA: usb: add more device quirks for USB DSD devices
    
    commit 7c74866baef1827e18f8269aec85030063520bd4 upstream.
    
    Add some more devices that need quirks to handle DSD modes correctly.
    
    Signed-off-by: Daniel Mack <daniel@zonque.org>
    Reported-and-tested-by: Thomas Gresens <tgresens@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1b13eb16c98eb289751098f8f79ff220b8bfdff
Author: Lassi Ylikojola <lassi.ylikojola@gmail.com>
Date:   Fri Feb 9 16:51:36 2018 +0200

    ALSA: usb-audio: add implicit fb quirk for Behringer UFX1204
    
    commit 5e35dc0338d85ccebacf3f77eca1e5dea73155e8 upstream.
    
    Add quirk to ensure a sync endpoint is properly configured.
    This patch is a fix for same symptoms on Behringer UFX1204 as patch
    from Albertto Aquirre on Dec 8 2016 for Axe-Fx II.
    
    Signed-off-by: Lassi Ylikojola <lassi.ylikojola@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de3e8191756434f6fa4bd69d38ceb5bacd0f1028
Author: Jan-Marek Glogowski <glogow@fbihome.de>
Date:   Wed Feb 14 11:29:15 2018 +0100

    ALSA: hda/realtek: PCI quirk for Fujitsu U7x7
    
    commit fdcc968a3b290407bcba9d4c90e2fba6d8d928f1 upstream.
    
    These laptops have a combined jack to attach headsets, the U727 on
    the left, the U757 on the right, but a headsets microphone doesn't
    work. Using hdajacksensetest I found that pin 0x19 changed the
    present state when plugging the headset, in addition to 0x21, but
    didn't have the correct configuration (shown as "Not connected").
    
    So this sets the configuration to the same values as the headphone
    pin 0x21 except for the device type microphone, which makes it
    work correctly. With the patch the configured pins for U727 are
    
    Pin 0x12 (Internal Mic, Mobile-In): present = No
    Pin 0x14 (Internal Speaker): present = No
    Pin 0x19 (Black Mic, Left side): present = No
    Pin 0x1d (Internal Aux): present = No
    Pin 0x21 (Black Headphone, Left side): present = No
    
    Signed-off-by: Jan-Marek Glogowski <glogow@fbihome.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81ae4f7479f96a5123ace58cc3bdc11303de8a46
Author: Kailang Yang <kailang@realtek.com>
Date:   Fri Feb 2 15:26:46 2018 +0800

    ALSA: hda/realtek - Enable Thinkpad Dock device for ALC298 platform
    
    commit 61fcf8ece9b6b09450250c4ca40cc3b81a96a68d upstream.
    
    Thinkpad Dock device support for ALC298 platform.
    It need to use SSID for the quirk table.
    Because IdeaPad also has ALC298 platform.
    Use verb for the quirk table will confuse.
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5640397f06ada0800d734b98fced5e74fbd4b217
Author: Kailang Yang <kailang@realtek.com>
Date:   Fri Feb 2 15:13:09 2018 +0800

    ALSA: hda/realtek - Add headset mode support for Dell laptop
    
    commit 40e2c4e5a7efcd50983aacbddd3c617e776018bf upstream.
    
    This platform had two Dmic and single Dmic.
    This update was for single Dmic.
    
    This commit was for two Dmic.
    
    Fixes: 75ee94b20b46 ("ALSA: hda - fix headset mic problem for Dell machines...")
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f65cd77c97c033bade459958611b1c9126c553c
Author: Kirill Marinushkin <k.marinushkin@gmail.com>
Date:   Mon Jan 29 06:37:55 2018 +0100

    ALSA: usb-audio: Fix UAC2 get_ctl request with a RANGE attribute
    
    commit 447cae58cecd69392b74a4a42cd0ab9cabd816af upstream.
    
    The layout of the UAC2 Control request and response varies depending on
    the request type. With the current implementation, only the Layout 2
    Parameter Block (with the 2-byte sized RANGE attribute) is handled
    properly. For the Control requests with the 1-byte sized RANGE attribute
    (Bass Control, Mid Control, Tremble Control), the response is parsed
    incorrectly.
    
    This commit:
    * fixes the wLength field value in the request
    * fixes parsing the range values from the response
    
    Fixes: 23caaf19b11e ("ALSA: usb-mixer: Add support for Audio Class v2.0")
    Signed-off-by: Kirill Marinushkin <k.marinushkin@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0cf529a8f4df5d063816c59af8ea927d277c799
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Jan 29 14:23:15 2018 +0800

    ALSA: hda - Fix headset mic detection problem for two Dell machines
    
    commit 3f2f7c553d077be6a30cb96b2976a2c940bf5335 upstream.
    
    One of them has the codec of alc256 and the other one has the codec
    of alc289.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc74262f3a6524b5122cf1388965bd0c7d9cb5cb
Author: Stefan Agner <stefan@agner.ch>
Date:   Fri Feb 9 13:21:42 2018 +0100

    mtd: nand: vf610: set correct ooblayout
    
    commit ea56fb282368ea08c2a313af6b55cb597aec4db1 upstream.
    
    With commit 3cf32d180227 ("mtd: nand: vf610: switch to
    mtd_ooblayout_ops") the driver started to use the NAND cores
    default large page ooblayout. However, shortly after commit
    6a623e076944 ("mtd: nand: add ooblayout for old hamming layout")
    changed the default layout to the old hamming layout, which is
    not what vf610_nfc is using. Specify the default large page
    layout explicitly.
    
    Fixes: 6a623e076944 ("mtd: nand: add ooblayout for old hamming layout")
    Cc: <stable@vger.kernel.org> # v4.12+
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a8c9588c289bcd2dbaf7a198144293978833a7c
Author: Greg Kurz <groug@kaod.org>
Date:   Mon Jan 22 22:02:05 2018 +0100

    9p/trans_virtio: discard zero-length reply
    
    commit 26d99834f89e76514076d9cd06f61e56e6a509b8 upstream.
    
    When a 9p request is successfully flushed, the server is expected to just
    mark it as used without sending a 9p reply (ie, without writing data into
    the buffer). In this case, virtqueue_get_buf() will return len == 0 and
    we must not report a REQ_STATUS_RCVD status to the client, otherwise the
    client will erroneously assume the request has not been flushed.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kurz <groug@kaod.org>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61c07810bf2e53f348dbdba751ddf7ba31aba4aa
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:56 2018 -0700

    Btrfs: fix unexpected -EEXIST when creating new inode
    
    commit 900c9981680067573671ecc5cbfa7c5770be3a40 upstream.
    
    The highest objectid, which is assigned to new inode, is decided at
    the time of initializing fs roots.  However, in cases where log replay
    gets processed, the btree which fs root owns might be changed, so we
    have to search it again for the highest objectid, otherwise creating
    new inode would end up with -EEXIST.
    
    cc: <stable@vger.kernel.org> v4.4-rc6+
    Fixes: f32e48e92596 ("Btrfs: Initialize btrfs_root->highest_objectid when loading tree root and subvolume roots")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f30c7d95b4eb1fefe9ac0b31f4a8a3e9d4b04bb1
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:54 2018 -0700

    Btrfs: fix use-after-free on root->orphan_block_rsv
    
    commit 1a932ef4e47984dee227834667b5ff5a334e4805 upstream.
    
    I got these from running generic/475,
    
    WARNING: CPU: 0 PID: 26384 at fs/btrfs/inode.c:3326 btrfs_orphan_commit_root+0x1ac/0x2b0 [btrfs]
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000010
    IP: btrfs_block_rsv_release+0x1c/0x70 [btrfs]
    Call Trace:
      btrfs_orphan_release_metadata+0x9f/0x200 [btrfs]
      btrfs_orphan_del+0x10d/0x170 [btrfs]
      btrfs_setattr+0x500/0x640 [btrfs]
      notify_change+0x7ae/0x870
      do_truncate+0xca/0x130
      vfs_truncate+0x2ee/0x3d0
      do_sys_truncate+0xaf/0xf0
      SyS_truncate+0xe/0x10
      entry_SYSCALL_64_fastpath+0x1f/0x96
    
    The race is between btrfs_orphan_commit_root and btrfs_orphan_del,
            t1                                        t2
    btrfs_orphan_commit_root                     btrfs_orphan_del
       spin_lock
       check (&root->orphan_inodes)
       root->orphan_block_rsv = NULL;
       spin_unlock
                                                 atomic_dec(&root->orphan_inodes);
                                                 access root->orphan_block_rsv
    
    Accessing root->orphan_block_rsv must be done before decreasing
    root->orphan_inodes.
    
    cc: <stable@vger.kernel.org> v3.12+
    Fixes: 703c88e03524 ("Btrfs: fix tracking of orphan inode count")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1371798b92c84ddb06e0630fc1e2a9fcdeec2b57
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:53 2018 -0700

    Btrfs: fix btrfs_evict_inode to handle abnormal inodes correctly
    
    commit e8f1bc1493855e32b7a2a019decc3c353d94daf6 upstream.
    
    This regression is introduced in
    commit 3d48d9810de4 ("btrfs: Handle uninitialised inode eviction").
    
    There are two problems,
    
    a) it is ->destroy_inode() that does the final free on inode, not
       ->evict_inode(),
    b) clear_inode() must be called before ->evict_inode() returns.
    
    This could end up hitting BUG_ON(inode->i_state != (I_FREEING | I_CLEAR));
    in evict() because I_CLEAR is set in clear_inode().
    
    Fixes: commit 3d48d9810de4 ("btrfs: Handle uninitialised inode eviction")
    Cc: <stable@vger.kernel.org> # v4.7-rc6+
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a701c4fa563d3102b291de2531e0288ac4d7ee1
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:52 2018 -0700

    Btrfs: fix extent state leak from tree log
    
    commit 55237a5f2431a72435e3ed39e4306e973c0446b7 upstream.
    
    It's possible that btrfs_sync_log() bails out after one of the two
    btrfs_write_marked_extents() which convert extent state's state bit into
    EXTENT_NEED_WAIT from EXTENT_DIRTY/EXTENT_NEW, however only EXTENT_DIRTY
    and EXTENT_NEW are searched by free_log_tree() so that those extent states
    with EXTENT_NEED_WAIT lead to memory leak.
    
    cc: <stable@vger.kernel.org>
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fda3bb933b332a206730300a40ee71023548d0b0
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:51 2018 -0700

    Btrfs: fix crash due to not cleaning up tree log block's dirty bits
    
    commit 1846430c24d66e85cc58286b3319c82cd54debb2 upstream.
    
    In cases that the whole fs flips into readonly status due to failures in
    critical sections, then log tree's blocks are still dirty, and this leads
    to a crash during umount time, the crash is about use-after-free,
    
    umount
     -> close_ctree
        -> stop workers
        -> iput(btree_inode)
           -> iput_final
              -> write_inode_now
                 -> ...
                   -> queue job on stop'd workers
    
    cc: <stable@vger.kernel.org> v3.12+
    Fixes: 681ae50917df ("Btrfs: cleanup reserved space when freeing tree log on error")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c766cb48771b7604fb5beca646bfa9904d0a2b17
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:50 2018 -0700

    Btrfs: fix deadlock in run_delalloc_nocow
    
    commit e89166990f11c3f21e1649d760dd35f9e410321c upstream.
    
    @cur_offset is not set back to what it should be (@cow_start) if
    btrfs_next_leaf() returns something wrong, and the range [cow_start,
    cur_offset) remains locked forever.
    
    cc: <stable@vger.kernel.org>
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6318abd3a5458be821eb417969726622e1e09c4
Author: NeilBrown <neilb@suse.com>
Date:   Thu Feb 15 20:00:15 2018 +1100

    dm: correctly handle chained bios in dec_pending()
    
    commit 8dd601fa8317243be887458c49f6c29c2f3d719f upstream.
    
    dec_pending() is given an error status (possibly 0) to be recorded
    against a bio.  It can be called several times on the one 'struct
    dm_io', and it is careful to only assign a non-zero error to
    io->status.  However when it then assigned io->status to bio->bi_status,
    it is not careful and could overwrite a genuine error status with 0.
    
    This can happen when chained bios are in use.  If a bio is chained
    beneath the bio that this dm_io is handling, the child bio might
    complete and set bio->bi_status before the dm_io completes.
    
    This has been possible since chained bios were introduced in 3.14, and
    has become a lot easier to trigger with commit 18a25da84354 ("dm: ensure
    bio submission follows a depth-first tree walk") as that commit caused
    dm to start using chained bios itself.
    
    A particular failure mode is that if a bio spans an 'error' target and a
    working target, the 'error' fragment will complete instantly and set the
    ->bi_status, and the other fragment will normally complete a little
    later, and will clear ->bi_status.
    
    The fix is simply to only assign io_error to bio->bi_status when
    io_error is not zero.
    
    Reported-and-tested-by: Milan Broz <gmazyland@gmail.com>
    Cc: stable@vger.kernel.org (v3.14+)
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8d0f63c15851e7d6f41b455d74e4b2b0a862a09
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Jan 19 14:36:29 2018 +0100

    iscsi-target: make sure to wake up sleeping login worker
    
    commit 1c130ae00b769a2e2df41bad3d6051ee8234b636 upstream.
    
    Mike Christie reports:
      Starting in 4.14 iscsi logins will fail around 50% of the time.
    
    Problem appears to be that iscsi_target_sk_data_ready() callback may
    return without doing anything in case it finds the login work queue
    is still blocked in sock_recvmsg().
    
    Nicholas Bellinger says:
      It would indicate users providing their own ->sk_data_ready() callback
      must be responsible for waking up a kthread context blocked on
      sock_recvmsg(..., MSG_WAITALL), when a second ->sk_data_ready() is
      received before the first sock_recvmsg(..., MSG_WAITALL) completes.
    
    So, do this and invoke the original data_ready() callback -- in
    case of tcp sockets this takes care of waking the thread.
    
    Disclaimer: I do not understand why this problem did not show up before
    tcp prequeue removal.
    
    (Drop WARN_ON usage - nab)
    
    Reported-by: Mike Christie <mchristi@redhat.com>
    Bisected-by: Mike Christie <mchristi@redhat.com>
    Tested-by: Mike Christie <mchristi@redhat.com>
    Diagnosed-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Fixes: e7942d0633c4 ("tcp: remove prequeue support")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Cc: stable@vger.kernel.org # 4.14+
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cbb9fdf133cc5a5dcb1ac7153791792976c62c9
Author: David Disseldorp <ddiss@suse.de>
Date:   Wed Dec 13 18:22:30 2017 +0100

    target/iscsi: avoid NULL dereference in CHAP auth error path
    
    commit ce512d79d0466a604793addb6b769d12ee326822 upstream.
    
    If chap_server_compute_md5() fails early, e.g. via CHAP_N mismatch, then
    crypto_free_shash() is called with a NULL pointer which gets
    dereferenced in crypto_shash_tfm().
    
    Fixes: 69110e3cedbb ("iscsi-target: Use shash and ahash")
    Suggested-by: Markus Elfring <elfring@users.sourceforge.net>
    Signed-off-by: David Disseldorp <ddiss@suse.de>
    Cc: stable@vger.kernel.org # 4.6+
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0528a533f368c93efe752dbd52698dcea214554a
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Feb 5 13:16:56 2018 -0700

    blk-wbt: account flush requests correctly
    
    commit 5235553d821433e1f4fa720fd025d2c4b7ee9994 upstream.
    
    Mikulas reported a workload that saw bad performance, and figured
    out what it was due to various other types of requests being
    accounted as reads. Flush requests, for instance. Due to the
    high latency of those, we heavily throttle the writes to keep
    the latencies in balance. But they really should be accounted
    as writes.
    
    Fix this by checking the exact type of the request. If it's a
    read, account as a read, if it's a write or a flush, account
    as a write. Any other request we disregard. Previously everything
    would have been mistakenly accounted as reads.
    
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org # v4.12+
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67154fb8012152aed14dbd70e5b7fc79dcfd53f4
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Jan 31 12:34:13 2018 -0500

    xprtrdma: Fix BUG after a device removal
    
    commit e89e8d8fcdc6751e86ccad794b052fe67e6ad619 upstream.
    
    Michal Kalderon reports a BUG that occurs just after device removal:
    
    [  169.112490] rpcrdma: removing device qedr0 for 192.168.110.146:20049
    [  169.143909] BUG: unable to handle kernel NULL pointer dereference at 0000000000000010
    [  169.181837] IP: rpcrdma_dma_unmap_regbuf+0xa/0x60 [rpcrdma]
    
    The RPC/RDMA client transport attempts to allocate some resources
    on demand. Registered buffers are one such resource. These are
    allocated (or re-allocated) by xprt_rdma_allocate to hold RPC Call
    and Reply messages. A hardware resource is associated with each of
    these buffers, as they can be used for a Send or Receive Work
    Request.
    
    If a device is removed from under an NFS/RDMA mount, the transport
    layer is responsible for releasing all hardware resources before
    the device can be finally unplugged. A BUG results when the NFS
    mount hasn't yet seen much activity: the transport tries to release
    resources that haven't yet been allocated.
    
    rpcrdma_free_regbuf() already checks for this case, so just move
    that check to cover the DEVICE_REMOVAL case as well.
    
    Reported-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Fixes: bebd031866ca ("xprtrdma: Support unplugging an HCA ...")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Cc: stable@vger.kernel.org # v4.12+
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84b41e3708ac9869190dd09d47b548392b7a656a
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Jan 31 12:34:05 2018 -0500

    xprtrdma: Fix calculation of ri_max_send_sges
    
    commit 1179e2c27efe21167ec9d882b14becefba2ee990 upstream.
    
    Commit 16f906d66cd7 ("xprtrdma: Reduce required number of send
    SGEs") introduced the rpcrdma_ia::ri_max_send_sges field. This fixes
    a problem where xprtrdma would not work if the device's max_sge
    capability was small (low single digits).
    
    At least RPCRDMA_MIN_SEND_SGES are needed for the inline parts of
    each RPC. ri_max_send_sges is set to this value:
    
      ia->ri_max_send_sges = max_sge - RPCRDMA_MIN_SEND_SGES;
    
    Then when marshaling each RPC, rpcrdma_args_inline uses that value
    to determine whether the device has enough Send SGEs to convey an
    NFS WRITE payload inline, or whether instead a Read chunk is
    required.
    
    More recently, commit ae72950abf99 ("xprtrdma: Add data structure to
    manage RDMA Send arguments") used the ri_max_send_sges value to
    calculate the size of an array, but that commit erroneously assumed
    ri_max_send_sges contains a value similar to the device's max_sge,
    and not one that was reduced by the minimum SGE count.
    
    This assumption results in the calculated size of the sendctx's
    Send SGE array to be too small. When the array is used to marshal
    an RPC, the code can write Send SGEs into the following sendctx
    element in that array, corrupting it. When the device's max_sge is
    large, this issue is entirely harmless; but it results in an oops
    in the provider's post_send method, if dev.attrs.max_sge is small.
    
    So let's straighten this out: ri_max_send_sges will now contain a
    value with the same meaning as dev.attrs.max_sge, which makes
    the code easier to understand, and enables rpcrdma_sendctx_create
    to calculate the size of the SGE array correctly.
    
    Reported-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Fixes: 16f906d66cd7 ("xprtrdma: Reduce required number of send SGEs")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Cc: stable@vger.kernel.org # v4.10+
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 848dd9bf51544c8e5436960124f3d1f9c51cdb99
Author: Ray Strode <rstrode@redhat.com>
Date:   Mon Nov 27 16:50:10 2017 -0500

    drm/qxl: reapply cursor after resetting primary
    
    commit 9428088c90b6f7d5edd2a1b0d742c75339b36f6e upstream.
    
    QXL associates mouse state with its primary plane.
    
    Destroying a primary plane and putting a new one in place has the side
    effect of destroying the cursor as well.
    
    This commit changes the driver to reapply the cursor any time a new
    primary is created. It achieves this by keeping a reference to the
    cursor bo on the qxl_crtc struct.
    
    This fix is very similar to
    
    commit 4532b241a4b7 ("drm/qxl: reapply cursor after SetCrtc calls")
    
    which got implicitly reverted as part of implementing the atomic
    modeset feature.
    
    Cc: Gerd Hoffmann <kraxel@redhat.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1512097
    Fixes: 1277eed5fecb ("drm: qxl: Atomic phase 1: convert cursor to universal plane")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ray Strode <rstrode@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc0b764a7c1a3a03b56c5582bf9a9c4554bf5e96
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Thu Oct 19 08:21:50 2017 +0200

    qxl: alloc & use shadow for dumb buffers
    
    commit 62676d10b483a2ff6e8b08c5e7c7d63a831343f5 upstream.
    
    This patch changes the way the primary surface is used for dumb
    framebuffers.  Instead of configuring the bo itself as primary surface
    a shadow bo is created and used instead.  Framebuffers can share the
    shadow bo in case they have the same format and resolution.
    
    On atomic plane updates we don't have to update the primary surface in
    case we pageflip from one framebuffer to another framebuffer which
    shares the same shadow.  This in turn avoids the flicker caused by the
    primary-destroy + primary-create cycle, which is very annonying when
    running wayland on qxl.
    
    The qxl driver never actually writes to the shadow bo.  It sends qxl
    blit commands which update it though, and the spice server might
    actually execute them (and thereby write to the shadow) in case the
    local rendering is kicked for some reason.  This happens for example in
    case qemu is asked to write out a dump of the guest display (screendump
    monitor command).
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Reviewed-by: Dave Airlie <airlied@redhat.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20171019062150.28090-3-kraxel@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 851e2ea82303f3a543b32f5cc81adbc1929d053a
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Feb 13 13:14:09 2018 +0000

    arm64: proc: Set PTE_NG for table entries to avoid traversing them twice
    
    commit 2ce77f6d8a9ae9ce6d80397d88bdceb84a2004cd upstream.
    
    When KASAN is enabled, the swapper page table contains many identical
    mappings of the zero page, which can lead to a stall during boot whilst
    the G -> nG code continually walks the same page table entries looking
    for global mappings.
    
    This patch sets the nG bit (bit 11, which is IGNORED) in table entries
    after processing the subtree so we can easily skip them if we see them
    a second time.
    
    Tested-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff59e379234bb4b479deca97e29f685eabe22954
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Mon Feb 5 12:38:11 2018 -0600

    rtlwifi: rtl8821ae: Fix connection lost problem correctly
    
    commit c713fb071edc0efc01a955f65a006b0e1795d2eb upstream.
    
    There has been a coding error in rtl8821ae since it was first introduced,
    namely that an 8-bit register was read using a 16-bit read in
    _rtl8821ae_dbi_read(). This error was fixed with commit 40b368af4b75
    ("rtlwifi: Fix alignment issues"); however, this change led to
    instability in the connection. To restore stability, this change
    was reverted in commit b8b8b16352cd ("rtlwifi: rtl8821ae: Fix connection
    lost problem").
    
    Unfortunately, the unaligned access causes machine checks in ARM
    architecture, and we were finally forced to find the actual cause of the
    problem on x86 platforms. Following a suggestion from Pkshih
    <pkshih@realtek.com>, it was found that increasing the ASPM L1
    latency from 0 to 7 fixed the instability. This parameter was varied to
    see if a smaller value would work; however, it appears that 7 is the
    safest value. A new symbol is defined for this quantity, thus it can be
    easily changed if necessary.
    
    Fixes: b8b8b16352cd ("rtlwifi: rtl8821ae: Fix connection lost problem")
    Cc: Stable <stable@vger.kernel.org> # 4.14+
    Fix-suggested-by: Pkshih <pkshih@realtek.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Tested-by: James Cameron <quozl@laptop.org>  # x86_64 OLPC NL3
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 753fc48e595a24eac4d4476a421c36307a7fbcb5
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Feb 7 22:34:24 2018 -0800

    mpls, nospec: Sanitize array index in mpls_label_ok()
    
    commit 3968523f855050b8195134da951b87c20bd66130 upstream.
    
    mpls_label_ok() validates that the 'platform_label' array index from a
    userspace netlink message payload is valid. Under speculation the
    mpls_label_ok() result may not resolve in the CPU pipeline until after
    the index is used to access an array element. Sanitize the index to zero
    to prevent userspace-controlled arbitrary out-of-bounds speculation, a
    precursor for a speculative execution side channel vulnerability.
    
    Cc: <stable@vger.kernel.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 294975841483c08e84572713f348cd51b8408021
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Mon Feb 5 22:18:11 2018 -0500

    tracing: Fix parsing of globs with a wildcard at the beginning
    
    commit 07234021410bbc27b7c86c18de98616c29fbe667 upstream.
    
    Al Viro reported:
    
        For substring - sure, but what about something like "*a*b" and "a*b"?
        AFAICS, filter_parse_regex() ends up with identical results in both
        cases - MATCH_GLOB and *search = "a*b".  And no way for the caller
        to tell one from another.
    
    Testing this with the following:
    
     # cd /sys/kernel/tracing
     # echo '*raw*lock' > set_ftrace_filter
     bash: echo: write error: Invalid argument
    
    With this patch:
    
     # echo '*raw*lock' > set_ftrace_filter
     # cat set_ftrace_filter
    _raw_read_trylock
    _raw_write_trylock
    _raw_read_unlock
    _raw_spin_unlock
    _raw_write_unlock
    _raw_spin_trylock
    _raw_spin_lock
    _raw_write_lock
    _raw_read_lock
    
    Al recommended not setting the search buffer to skip the first '*' unless we
    know we are not using MATCH_GLOB. This implements his suggested logic.
    
    Link: http://lkml.kernel.org/r/20180127170748.GF13338@ZenIV.linux.org.uk
    
    Cc: stable@vger.kernel.org
    Fixes: 60f1d5e3bac44 ("ftrace: Support full glob matching")
    Reviewed-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Suggsted-by: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29b4af70409cfca62d045cd4e0170912ab262c66
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Nov 15 11:34:58 2017 +0100

    seq_file: fix incomplete reset on read from zero offset
    
    commit cf5eebae2cd28d37581507668605f4d23cd7218d upstream.
    
    When resetting iterator on a zero offset we need to discard any data
    already in the buffer (count), and private state of the iterator (version).
    
    For example this bug results in first line being repeated in /proc/mounts
    if doing a zero size read before a non-zero size read.
    
    Reported-by: Rich Felker <dalias@libc.org>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: e522751d605d ("seq_file: reset iterator to first record for zero offset")
    Cc: <stable@vger.kernel.org> # v4.10
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f0fd00739118302568ff8b57ddfc5898c1a3796
Author: Joao Martins <joao.m.martins@oracle.com>
Date:   Fri Feb 2 17:42:33 2018 +0000

    xenbus: track caller request id
    
    commit 29fee6eed2811ff1089b30fc579a2d19d78016ab upstream.
    
    Commit fd8aa9095a95 ("xen: optimize xenbus driver for multiple concurrent
    xenstore accesses") optimized xenbus concurrent accesses but in doing so
    broke UABI of /dev/xen/xenbus. Through /dev/xen/xenbus applications are in
    charge of xenbus message exchange with the correct header and body. Now,
    after the mentioned commit the replies received by application will no
    longer have the header req_id echoed back as it was on request (see
    specification below for reference), because that particular field is being
    overwritten by kernel.
    
    struct xsd_sockmsg
    {
      uint32_t type;  /* XS_??? */
      uint32_t req_id;/* Request identifier, echoed in daemon's response.  */
      uint32_t tx_id; /* Transaction id (0 if not related to a transaction). */
      uint32_t len;   /* Length of data following this. */
    
      /* Generally followed by nul-terminated string(s). */
    };
    
    Before there was only one request at a time so req_id could simply be
    forwarded back and forth. To allow simultaneous requests we need a
    different req_id for each message thus kernel keeps a monotonic increasing
    counter for this field and is written on every request irrespective of
    userspace value.
    
    Forwarding again the req_id on userspace requests is not a solution because
    we would open the possibility of userspace-generated req_id colliding with
    kernel ones. So this patch instead takes another route which is to
    artificially keep user req_id while keeping the xenbus logic as is. We do
    that by saving the original req_id before xs_send(), use the private kernel
    counter as req_id and then once reply comes and was validated, we restore
    back the original req_id.
    
    Cc: <stable@vger.kernel.org> # 4.11
    Fixes: fd8aa9095a ("xen: optimize xenbus driver for multiple concurrent xenstore accesses")
    Reported-by: Bhavesh Davda <bhavesh.davda@oracle.com>
    Signed-off-by: Joao Martins <joao.m.martins@oracle.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2fd6c0950337a39abd79046edb43c24ba91d033
Author: Simon Gaiser <simon@invisiblethingslab.com>
Date:   Wed Feb 7 21:47:40 2018 +0100

    xen: Fix {set,clear}_foreign_p2m_mapping on autotranslating guests
    
    commit 781198f1f373c3e350dbeb3af04a7d4c81c1b8d7 upstream.
    
    Commit 82616f9599a7 ("xen: remove tests for pvh mode in pure pv paths")
    removed the check for autotranslation from {set,clear}_foreign_p2m_mapping
    but those are called by grant-table.c also on PVH/HVM guests.
    
    Cc: <stable@vger.kernel.org> # 4.14
    Fixes: 82616f9599a7 ("xen: remove tests for pvh mode in pure pv paths")
    Signed-off-by: Simon Gaiser <simon@invisiblethingslab.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0569dd9beef44d33e4866bf2db2e03fd3644de4f
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Tue Jan 16 15:41:54 2018 +0100

    rbd: whitelist RBD_FEATURE_OPERATIONS feature bit
    
    commit e573427a440fd67d3f522357d7ac901d59281948 upstream.
    
    This feature bit restricts older clients from performing certain
    maintenance operations against an image (e.g. clone, snap create).
    krbd does not perform maintenance operations.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Jason Dillaman <dillaman@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3711b5c568cd651ca78d6623d5c0fc839eac9499
Author: Nicolas Pitre <nicolas.pitre@linaro.org>
Date:   Mon Jan 15 17:04:22 2018 +0100

    console/dummy: leave .con_font_get set to NULL
    
    commit 724ba8b30b044aa0d94b1cd374fc15806cdd6f18 upstream.
    
    When this method is set, the caller expects struct console_font fields
    to be properly initialized when it returns. Leave it unset otherwise
    nonsensical (leaked kernel stack) values are returned to user space.
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e6fd5b4ea9d568ac989a61b8d78ae0c5ce19bcf
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Dec 29 19:48:43 2017 +0100

    video: fbdev: atmel_lcdfb: fix display-timings lookup
    
    commit 9cb18db0701f6b74f0c45c23ad767b3ebebe37f6 upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at the parent rather than just matching
    on its children.
    
    To make things worse, the parent display node was also prematurely
    freed.
    
    Note that the display and timings node references are never put after a
    successful dt-initialisation so the nodes would leak on later probe
    deferrals and on driver unbind.
    
    Fixes: b985172b328a ("video: atmel_lcdfb: add device tree suport")
    Cc: stable <stable@vger.kernel.org>     # 3.13
    Cc: Jean-Christophe PLAGNIOL-VILLARD <plagnioj@jcrosoft.com>
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c77b388550368068a1615e164b9441937786a1de
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Nov 17 14:38:31 2017 +0100

    PCI: keystone: Fix interrupt-controller-node lookup
    
    commit eac56aa3bc8af3d9b9850345d0f2da9d83529134 upstream.
    
    Fix child-node lookup during initialisation which was using the wrong
    OF-helper and ended up searching the whole device tree depth-first
    starting at the parent rather than just matching on its children.
    
    To make things worse, the parent pci node could end up being prematurely
    freed as of_find_node_by_name() drops a reference to its first argument.
    Any matching child interrupt-controller node was also leaked.
    
    Fixes: 0c4ffcfe1fbc ("PCI: keystone: Add TI Keystone PCIe driver")
    Cc: stable <stable@vger.kernel.org>     # 3.18
    Acked-by: Murali Karicheri <m-karicheri2@ti.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    [lorenzo.pieralisi@arm.com: updated commit subject]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c125f391333a1e4fb1f760f5ed14657a1894bcf
Author: Ray Jui <ray.jui@broadcom.com>
Date:   Thu Jan 11 12:36:16 2018 -0800

    PCI: iproc: Fix NULL pointer dereference for BCMA
    
    commit 3b65ca50d24ce33cb92d88840e289135c92b40ed upstream.
    
    With the inbound DMA mapping supported added, the iProc PCIe driver
    parses DT property "dma-ranges" through call to
    "of_pci_dma_range_parser_init()". In the case of BCMA, this results in a
    NULL pointer deference due to a missing of_node.
    
    Fix this by adding a guard in pcie-iproc-platform.c to only enable the
    inbound DMA mapping logic when DT property "dma-ranges" is present.
    
    Fixes: dd9d4e7498de3 ("PCI: iproc: Add inbound DMA mapping support")
    Reported-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: Ray Jui <ray.jui@broadcom.com>
    [lorenzo.pieralisi@arm.com: updated commit log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Tested-by: Rafał Miłecki <rafal@milecki.pl>
    cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 990bb6eb9ec21bbf5925c9def1db53958041ce3b
Author: Dongdong Liu <liudongdong3@huawei.com>
Date:   Thu Dec 28 17:53:32 2017 +0800

    PCI: Disable MSI for HiSilicon Hip06/Hip07 only in Root Port mode
    
    commit deb86999323661c019ef2740eb9d479d1e526b5c upstream.
    
    HiSilicon Hip06/Hip07 can operate as either a Root Port or an Endpoint.  It
    always advertises an MSI capability, but it can only generate MSIs when in
    Endpoint mode.
    
    The device has the same Vendor and Device IDs in both modes, so check the
    Class Code and disable MSI only when operating as a Root Port.
    
    [bhelgaas: changelog]
    Fixes: 72f2ff0deb87 ("PCI: Disable MSI for HiSilicon Hip06/Hip07 Root Ports")
    Signed-off-by: Dongdong Liu <liudongdong3@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Zhou Wang <wangzhou1@hisilicon.com>
    Cc: stable@vger.kernel.org      # v4.11+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 524a886aa8c98e6220e844afffa47439343db612
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Thu Feb 1 12:37:21 2018 +0100

    MIPS: Fix incorrect mem=X@Y handling
    
    commit 67a3ba25aa955198196f40b76b329b3ab9ad415a upstream.
    
    Commit 73fbc1eba7ff ("MIPS: fix mem=X@Y commandline processing") added a
    fix to ensure that the memory range between PHYS_OFFSET and low memory
    address specified by mem= cmdline argument is not later processed by
    free_all_bootmem.  This change was incorrect for systems where the
    commandline specifies more than 1 mem argument, as it will cause all
    memory between PHYS_OFFSET and each of the memory offsets to be marked
    as reserved, which results in parts of the RAM marked as reserved
    (Creator CI20's u-boot has a default commandline argument 'mem=256M@0x0
    mem=768M@0x30000000').
    
    Change the behaviour to ensure that only the range between PHYS_OFFSET
    and the lowest start address of the memories is marked as protected.
    
    This change also ensures that the range is marked protected even if it's
    only defined through the devicetree and not only via commandline
    arguments.
    
    Reported-by: Mathieu Malaterre <mathieu.malaterre@gmail.com>
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@mips.com>
    Fixes: 73fbc1eba7ff ("MIPS: fix mem=X@Y commandline processing")
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # v4.11+
    Tested-by: Mathieu Malaterre <malat@debian.org>
    Patchwork: https://patchwork.linux-mips.org/patch/18562/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4f261974c6bf60f6b4cf3b6f1ea836504dc95b3
Author: Corentin Labbe <clabbe.montjoie@gmail.com>
Date:   Wed Jan 17 19:56:38 2018 +0100

    MIPS: Fix typo BIG_ENDIAN to CPU_BIG_ENDIAN
    
    commit 2e6522c565522a2e18409c315c49d78c8b74807b upstream.
    
    MIPS_GENERIC selects some options conditional on BIG_ENDIAN which does
    not exist.
    
    Replace BIG_ENDIAN with CPU_BIG_ENDIAN which is the correct kconfig
    name. Note that BMIPS_GENERIC does the same which confirms that this
    patch is needed.
    
    Fixes: eed0eabd12ef0 ("MIPS: generic: Introduce generic DT-based board support")
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Reviewed-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # 4.9+
    Patchwork: https://patchwork.linux-mips.org/patch/18495/
    [jhogan@kernel.org: Clean up commit message]
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f21cd46cacae0fe7429d27c8781370317fe4a67
Author: Jan H. Schönherr <jschoenh@amazon.de>
Date:   Fri Jan 19 16:27:54 2018 -0800

    mm: Fix memory size alignment in devm_memremap_pages_release()
    
    commit 10a0cd6e4932b5078215b1ec2c896597eec0eff9 upstream.
    
    The functions devm_memremap_pages() and devm_memremap_pages_release() use
    different ways to calculate the section-aligned amount of memory. The
    latter function may use an incorrect size if the memory region is small
    but straddles a section border.
    
    Use the same code for both.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 5f29a77cd957 ("mm: fix mixed zone detection in devm_memremap_pages")
    Signed-off-by: Jan H. Schönherr <jschoenh@amazon.de>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 568c61facce6b0bddbfa04ec634b34904c6e2f1c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 16 16:25:53 2018 +0100

    mm: hide a #warning for COMPILE_TEST
    
    commit af27d9403f5b80685b79c88425086edccecaf711 upstream.
    
    We get a warning about some slow configurations in randconfig kernels:
    
      mm/memory.c:83:2: error: #warning Unfortunate NUMA and NUMA Balancing config, growing page-frame for last_cpupid. [-Werror=cpp]
    
    The warning is reasonable by itself, but gets in the way of randconfig
    build testing, so I'm hiding it whenever CONFIG_COMPILE_TEST is set.
    
    The warning was added in 2013 in commit 75980e97dacc ("mm: fold
    page->_last_nid into page->flags where possible").
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef7fd28b1137c4023a5fc9fc0497a92838d81910
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Thu Jan 11 13:43:33 2018 -0500

    ext4: correct documentation for grpid mount option
    
    commit 9f0372488cc9243018a812e8cfbf27de650b187b upstream.
    
    The grpid option is currently described as being the same as nogrpid.
    
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e38988253c165a8b81d3ceea55fb68cb2d19e1c
Author: Zhouyi Zhou <zhouzhouyi@gmail.com>
Date:   Wed Jan 10 00:34:19 2018 -0500

    ext4: save error to disk in __ext4_grp_locked_error()
    
    commit 06f29cc81f0350261f59643a505010531130eea0 upstream.
    
    In the function __ext4_grp_locked_error(), __save_error_info()
    is called to save error info in super block block, but does not sync
    that information to disk to info the subsequence fsck after reboot.
    
    This patch writes the error information to disk.  After this patch,
    I think there is no obvious EXT4 error handle branches which leads to
    "Remounting filesystem read-only" will leave the disk partition miss
    the subsequence fsck.
    
    Signed-off-by: Zhouyi Zhou <zhouzhouyi@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d4d103a1b7e2990bcdbf83a24a83b3e351b6838
Author: Harshad Shirwadkar <harshads@google.com>
Date:   Wed Jan 10 00:13:13 2018 -0500

    ext4: fix a race in the ext4 shutdown path
    
    commit abbc3f9395c76d554a9ed27d4b1ebfb5d9b0e4ca upstream.
    
    This patch fixes a race between the shutdown path and bio completion
    handling. In the ext4 direct io path with async io, after submitting a
    bio to the block layer, if journal starting fails,
    ext4_direct_IO_write() would bail out pretending that the IO
    failed. The caller would have had no way of knowing whether or not the
    IO was successfully submitted. So instead, we return -EIOCBQUEUED in
    this case. Now, the caller knows that the IO was submitted.  The bio
    completion handler takes care of the error.
    
    Tested: Ran the shutdown xfstest test 461 in loop for over 2 hours across
    4 machines resulting in over 400 runs. Verified that the race didn't
    occur. Usually the race was seen in about 20-30 iterations.
    
    Signed-off-by: Harshad Shirwadkar <harshads@google.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 879bcbe0913fb6f938157af821d10f48235c166c
Author: Tobin C. Harding <me@tobin.cc>
Date:   Wed Jan 10 00:27:29 2018 -0500

    jbd2: fix sphinx kernel-doc build warnings
    
    commit f69120ce6c024aa634a8fc25787205e42f0ccbe6 upstream.
    
    Sphinx emits various (26) warnings when building make target 'htmldocs'.
    Currently struct definitions contain duplicate documentation, some as
    kernel-docs and some as standard c89 comments.  We can reduce
    duplication while cleaning up the kernel docs.
    
    Move all kernel-docs to right above each struct member.  Use the set of
    all existing comments (kernel-doc and c89).  Add documentation for
    missing struct members and function arguments.
    
    Signed-off-by: Tobin C. Harding <me@tobin.cc>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 598b21708ec09ad33cd66d162d2fea2dd66d9f64
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Jan 24 19:35:45 2018 +0100

    Revert "apple-gmux: lock iGP IO to protect from vgaarb changes"
    
    commit d6fa7588fd7a8def4c747c0c574ce85d453e3788 upstream.
    
    Commit 4eebd5a4e726 ("apple-gmux: lock iGP IO to protect from vgaarb
    changes") amended this driver's ->probe hook to lock decoding of normal
    (non-legacy) I/O space accesses to the integrated GPU on dual-GPU
    MacBook Pros.  The lock stays in place until the driver is unbound.
    
    The change was made to work around an issue with the out-of-tree nvidia
    graphics driver (available at http://www.nvidia.com/object/unix.html).
    It contains the following sequence in nvidia/nv.c:
    
            #if defined(CONFIG_VGA_ARB) && !defined(NVCPU_PPC64LE)
            #if defined(VGA_DEFAULT_DEVICE)
                vga_tryget(VGA_DEFAULT_DEVICE, VGA_RSRC_LEGACY_MASK);
            #endif
                vga_set_legacy_decoding(dev, VGA_RSRC_NONE);
            #endif
    
    This code was reported to cause deadlocks with VFIO already in 2013:
    https://devtalk.nvidia.com/default/topic/545560
    
    I've reported the issue to Nvidia developers once more in 2017:
    https://www.spinics.net/lists/dri-devel/msg138754.html
    
    On the MacBookPro10,1, this code apparently breaks backlight control
    (which is handled by apple-gmux via an I/O region starting at 0x700),
    as reported by Petri Hodju:
    https://bugzilla.kernel.org/show_bug.cgi?id=86121
    
    I tried to replicate Petri's observations on my MacBook9,1, which uses
    the same Intel Ivy Bridge + Nvidia GeForce GT 650M architecture, to no
    avail.  On my machine apple-gmux' I/O region remains accessible even
    with the nvidia driver loaded and commit 4eebd5a4e726 reverted.
    Petri reported that apple-gmux becomes accessible again after a
    suspend/resume cycle because the BIOS changed the VGA routing on the
    root port to the Nvidia GPU.  Perhaps this is a BIOS issue after all
    that can be fixed with an update?
    
    In any case, the change made by commit 4eebd5a4e726 has turned out to
    cause two new issues:
    
    * Wilfried Klaebe reports a deadlock when launching Xorg because it
      opens /dev/vga_arbiter and calls vga_get(), but apple-gmux is holding
      a lock on I/O space indefinitely.  It looks like apple-gmux' current
      behavior is an abuse of the vgaarb API as locks are not meant to be
      held for longer periods:
      https://bugzilla.kernel.org/show_bug.cgi?id=88861#c11
      https://bugzilla.kernel.org/attachment.cgi?id=217541
    
    * On dual GPU MacBook Pros introduced since 2013, the integrated GPU is
      powergated on boot und thus becomes invisible to Linux unless a custom
      EFI protocol is used to leave it powered on.  (A patch exists but is
      not in mainline yet due to several negative side effects.)  On these
      machines, locking I/O to the integrated GPU (as done by 4eebd5a4e726)
      fails and backlight control is therefore broken:
      https://bugzilla.kernel.org/show_bug.cgi?id=105051
    
    So let's revert commit 4eebd5a4e726 please.  Users experiencing the
    issue with the proprietary nvidia driver can comment out the above-
    quoted problematic code as a workaround (or try updating the BIOS).
    
    Cc: Petri Hodju <petrihodju@yahoo.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Bruno Prémont <bonbons@linux-vserver.org>
    Cc: Andy Ritger <aritger@nvidia.com>
    Cc: Ronald Tschalär <ronald@innovation.ch>
    Tested-by: Wilfried Klaebe <linux-kernel@lebenslange-mailadresse.de>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7cedb56ae9a1c00b76df98d2adebb6208d2b71e
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Feb 5 16:24:52 2018 +0200

    mlx5: fix mlx5_get_vector_affinity to start from completion vector 0
    
    commit 2572cf57d75a7f91835d9a38771e9e76d575d122 upstream.
    
    The consumers of this routine expects the affinity map of of vector
    index relative to the first completion vector. The upper layers are
    not aware of internal/private completion vectors that mlx5 allocates
    for its own usage.
    
    Hence, return the affinity map of vector index relative to the first
    completion vector.
    
    Fixes: 05e0cc84e00c ("net/mlx5: Fix get vector affinity helper function")
    Reported-by: Logan Gunthorpe <logang@deltatee.com>
    Tested-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Cc: <stable@vger.kernel.org> # v4.15
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 723cc3aeba9be034c7509860dbf445e1bd25467f
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Mon Feb 12 14:13:59 2018 +0100

    Revert "mmc: meson-gx: include tx phase in the tuning process"
    
    commit fe0e58048f005fdce315eb4d185e5c160be4ac01 upstream.
    
    This reverts commit 0a44697627d17a66d7dc98f17aeca07ca79c5c20.
    
    This commit was initially intended to fix problems with hs200 and hs400
    on some boards, mainly the odroid-c2. The OC2 (Rev 0.2) I have performs
    well in this modes, so I could not confirm these issues.
    
    We've had several reports about the issues being still present on (some)
    OC2, so apparently, this change does not do what it was supposed to do.
    Maybe the eMMC signal quality is on the edge on the board. This may
    explain the variability we see in term of stability, but this is just a
    guess. Lowering the max_frequency to 100Mhz seems to do trick for those
    affected by the issue
    
    Worse, the commit created new issues (CRC errors and hangs) on other
    boards, such as the kvim 1 and 2, the p200 or the libretech-cc.
    
    According to amlogic, the Tx phase should not be tuned and left in its
    default configuration, so it is best to just revert the commit.
    
    Fixes: 0a44697627d1 ("mmc: meson-gx: include tx phase in the tuning process")
    Cc: <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8012ff8779378a650aab3d088239053bfbdc57f
Author: Phil Elwell <phil@raspberrypi.org>
Date:   Mon Feb 12 21:13:44 2018 +0100

    mmc: bcm2835: Don't overwrite max frequency unconditionally
    
    commit 118032be389009b07ecb5a03ffe219a89d421def upstream.
    
    The optional DT parameter max-frequency could init the max bus frequency.
    So take care of this, before setting the max bus frequency.
    
    Fixes: 660fc733bd74 ("mmc: bcm2835: Add new driver for the sdhost controller.")
    Signed-off-by: Phil Elwell <phil@raspberrypi.org>
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Cc: <stable@vger.kernel.org> # 4.12+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1341cac93fa9d54f49f5fedf7a577bfc7a7665c
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Jan 29 00:44:53 2018 +0100

    mmc: sdhci: Implement an SDHCI-specific bounce buffer
    
    commit bd9b902798ab14d19ca116b10bde581ddff8f905 upstream.
    
    The bounce buffer is gone from the MMC core, and now we found out
    that there are some (crippled) i.MX boards out there that have broken
    ADMA (cannot do scatter-gather), and also broken PIO so they must
    use SDMA. Closer examination shows a less significant slowdown
    also on SDMA-only capable Laptop hosts.
    
    SDMA sets down the number of segments to one, so that each segment
    gets turned into a singular request that ping-pongs to the block
    layer before the next request/segment is issued.
    
    Apparently it happens a lot that the block layer send requests
    that include a lot of physically discontiguous segments. My guess
    is that this phenomenon is coming from the file system.
    
    These devices that cannot handle scatterlists in hardware can see
    major benefits from a DMA-contiguous bounce buffer.
    
    This patch accumulates those fragmented scatterlists in a physically
    contiguous bounce buffer so that we can issue bigger DMA data chunks
    to/from the card.
    
    When tested with a PCI-integrated host (1217:8221) that
    only supports SDMA:
    0b:00.0 SD Host controller: O2 Micro, Inc. OZ600FJ0/OZ900FJ0/OZ600FJS
            SD/MMC Card Reader Controller (rev 05)
    This patch gave ~1Mbyte/s improved throughput on large reads and
    writes when testing using iozone than without the patch.
    
    dmesg:
    sdhci-pci 0000:0b:00.0: SDHCI controller found [1217:8221] (rev 5)
    mmc0 bounce up to 128 segments into one, max segment size 65536 bytes
    mmc0: SDHCI controller on PCI [0000:0b:00.0] using DMA
    
    On the i.MX SDHCI controllers on the crippled i.MX 25 and i.MX 35
    the patch restores the performance to what it was before we removed
    the bounce buffers.
    
    Cc: Pierre Ossman <pierre@ossman.eu>
    Cc: Benoît Thébaudeau <benoit@wsystem.com>
    Cc: Fabio Estevam <fabio.estevam@nxp.com>
    Cc: Benjamin Beckmeyer <beckmeyer.b@rittal.de>
    Cc: stable@vger.kernel.org # v4.14+
    Fixes: de3ee99b097d ("mmc: Delete bounce buffer handling")
    Tested-by: Benjamin Beckmeyer <beckmeyer.b@rittal.de>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e96a219899740432662b58c60a93505ab3dced5c
Author: Alexander Potapenko <glider@google.com>
Date:   Sun Jan 7 16:22:35 2018 -0500

    mbcache: initialize entry->e_referenced in mb_cache_entry_create()
    
    commit 3876bbe27d04b848750d5310a37d6b76b593f648 upstream.
    
    KMSAN reported use of uninitialized |entry->e_referenced| in a condition
    in mb_cache_shrink():
    
    ==================================================================
    BUG: KMSAN: use of uninitialized memory in mb_cache_shrink+0x3b4/0xc50 fs/mbcache.c:287
    CPU: 2 PID: 816 Comm: kswapd1 Not tainted 4.11.0-rc5+ #2877
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs
    01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:16 [inline]
     dump_stack+0x172/0x1c0 lib/dump_stack.c:52
     kmsan_report+0x12a/0x180 mm/kmsan/kmsan.c:927
     __msan_warning_32+0x61/0xb0 mm/kmsan/kmsan_instr.c:469
     mb_cache_shrink+0x3b4/0xc50 fs/mbcache.c:287
     mb_cache_scan+0x67/0x80 fs/mbcache.c:321
     do_shrink_slab mm/vmscan.c:397 [inline]
     shrink_slab+0xc3d/0x12d0 mm/vmscan.c:500
     shrink_node+0x208f/0x2fd0 mm/vmscan.c:2603
     kswapd_shrink_node mm/vmscan.c:3172 [inline]
     balance_pgdat mm/vmscan.c:3289 [inline]
     kswapd+0x160f/0x2850 mm/vmscan.c:3478
     kthread+0x46c/0x5f0 kernel/kthread.c:230
     ret_from_fork+0x29/0x40 arch/x86/entry/entry_64.S:430
    chained origin:
     save_stack_trace+0x37/0x40 arch/x86/kernel/stacktrace.c:59
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:302 [inline]
     kmsan_save_stack mm/kmsan/kmsan.c:317 [inline]
     kmsan_internal_chain_origin+0x12a/0x1f0 mm/kmsan/kmsan.c:547
     __msan_store_shadow_origin_1+0xac/0x110 mm/kmsan/kmsan_instr.c:257
     mb_cache_entry_create+0x3b3/0xc60 fs/mbcache.c:95
     ext4_xattr_cache_insert fs/ext4/xattr.c:1647 [inline]
     ext4_xattr_block_set+0x4c82/0x5530 fs/ext4/xattr.c:1022
     ext4_xattr_set_handle+0x1332/0x20a0 fs/ext4/xattr.c:1252
     ext4_xattr_set+0x4d2/0x680 fs/ext4/xattr.c:1306
     ext4_xattr_trusted_set+0x8d/0xa0 fs/ext4/xattr_trusted.c:36
     __vfs_setxattr+0x703/0x790 fs/xattr.c:149
     __vfs_setxattr_noperm+0x27a/0x6f0 fs/xattr.c:180
     vfs_setxattr fs/xattr.c:223 [inline]
     setxattr+0x6ae/0x790 fs/xattr.c:449
     path_setxattr+0x1eb/0x380 fs/xattr.c:468
     SYSC_lsetxattr+0x8d/0xb0 fs/xattr.c:490
     SyS_lsetxattr+0x77/0xa0 fs/xattr.c:486
     entry_SYSCALL_64_fastpath+0x13/0x94
    origin:
     save_stack_trace+0x37/0x40 arch/x86/kernel/stacktrace.c:59
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:302 [inline]
     kmsan_internal_poison_shadow+0xb1/0x1a0 mm/kmsan/kmsan.c:198
     kmsan_kmalloc+0x7f/0xe0 mm/kmsan/kmsan.c:337
     kmem_cache_alloc+0x1c2/0x1e0 mm/slub.c:2766
     mb_cache_entry_create+0x283/0xc60 fs/mbcache.c:86
     ext4_xattr_cache_insert fs/ext4/xattr.c:1647 [inline]
     ext4_xattr_block_set+0x4c82/0x5530 fs/ext4/xattr.c:1022
     ext4_xattr_set_handle+0x1332/0x20a0 fs/ext4/xattr.c:1252
     ext4_xattr_set+0x4d2/0x680 fs/ext4/xattr.c:1306
     ext4_xattr_trusted_set+0x8d/0xa0 fs/ext4/xattr_trusted.c:36
     __vfs_setxattr+0x703/0x790 fs/xattr.c:149
     __vfs_setxattr_noperm+0x27a/0x6f0 fs/xattr.c:180
     vfs_setxattr fs/xattr.c:223 [inline]
     setxattr+0x6ae/0x790 fs/xattr.c:449
     path_setxattr+0x1eb/0x380 fs/xattr.c:468
     SYSC_lsetxattr+0x8d/0xb0 fs/xattr.c:490
     SyS_lsetxattr+0x77/0xa0 fs/xattr.c:486
     entry_SYSCALL_64_fastpath+0x13/0x94
    ==================================================================
    
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Cc: stable@vger.kernel.org # v4.6
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3bdd547042fa2e71825d7cc5e871b558d4153e9
Author: Stewart Smith <stewart@linux.vnet.ibm.com>
Date:   Tue Aug 2 11:50:16 2016 +1000

    rtc-opal: Fix handling of firmware error codes, prevent busy loops
    
    commit 5b8b58063029f02da573120ef4dc9079822e3cda upstream.
    
    According to the OPAL docs:
      skiboot-5.2.5/doc/opal-api/opal-rtc-read-3.txt
      skiboot-5.2.5/doc/opal-api/opal-rtc-write-4.txt
    
    OPAL_HARDWARE may be returned from OPAL_RTC_READ or OPAL_RTC_WRITE and
    this indicates either a transient or permanent error.
    
    Prior to this patch, Linux was not dealing with OPAL_HARDWARE being a
    permanent error particularly well, in that you could end up in a busy
    loop.
    
    This was not too hard to trigger on an AMI BMC based OpenPOWER machine
    doing a continuous "ipmitool mc reset cold" to the BMC, the result of
    that being that we'd get stuck in an infinite loop in
    opal_get_rtc_time().
    
    We now retry a few times before returning the error higher up the
    stack.
    
    Fixes: 16b1d26e77b1 ("rtc/tpo: Driver to support rtc and wakeup on PowerNV platform")
    Cc: stable@vger.kernel.org # v3.19+
    Signed-off-by: Stewart Smith <stewart@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a29adc04cb6d5ec4ac71c63ceeb67efc011a4b65
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Sat Jan 27 15:28:15 2018 +0100

    drm/radeon: adjust tested variable
    
    commit 3a61b527b4e1f285d21b6e9e623dc45cf8bb391f upstream.
    
    Check the variable that was most recently initialized.
    
    The semantic match that finds this problem is as follows:
    (http://coccinelle.lip6.fr/)
    
    // <smpl>
    @@
    expression x, y, f, g, e, m;
    statement S1,S2,S3,S4;
    @@
    
    x = f(...);
    if (\(<+...x...+>\&e\)) S1 else S2
    (
    x = g(...);
    |
    m = g(...,&x,...);
    |
    y = g(...);
    *if (e)
     S3 else S4
    )
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 808700475218f382591313acabd4812c30ec7fa3
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Nov 21 12:09:38 2017 -0500

    drm/radeon: Add dpm quirk for Jet PRO (v2)
    
    commit 239b5f64e12b1f09f506c164dff0374924782979 upstream.
    
    Fixes stability issues.
    
    v2: clamp sclk to 600 Mhz
    
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=103370
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 254d48c8cc3b1f478f2c75349930da6e12abdd39
Author: Shanker Donthineni <shankerd@codeaurora.org>
Date:   Sun Feb 11 19:16:15 2018 -0600

    arm64: Add missing Falkor part number for branch predictor hardening
    
    commit 16e574d762ac5512eb922ac0ac5eed360b7db9d8 upstream.
    
    References to CPU part number MIDR_QCOM_FALKOR were dropped from the
    mailing list patch due to mainline/arm64 branch dependency. So this
    patch adds the missing part number.
    
    Fixes: ec82b567a74f ("arm64: Implement branch predictor hardening for Falkor")
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4a6d687e5d9e603f7188ca2ee88040c5fdd03dd
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Thu Jan 18 16:40:16 2018 +0100

    drm/ast: Load lut in crtc_commit
    
    commit 24b8ef699e8221d2b7f813adaab13eec053e1507 upstream.
    
    In the past the ast driver relied upon the fbdev emulation helpers to
    call ->load_lut at boot-up. But since
    
    commit b8e2b0199cc377617dc238f5106352c06dcd3fa2
    Author: Peter Rosin <peda@axentia.se>
    Date:   Tue Jul 4 12:36:57 2017 +0200
    
        drm/fb-helper: factor out pseudo-palette
    
    that's cleaned up and drivers are expected to boot into a consistent
    lut state. This patch fixes that.
    
    Fixes: b8e2b0199cc3 ("drm/fb-helper: factor out pseudo-palette")
    Cc: Peter Rosin <peda@axenita.se>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # v4.14+
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=198123
    Cc: Bill Fraser <bill.fraser@gmail.com>
    Reported-and-Tested-by: Bill Fraser <bill.fraser@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc2b0e41fc5e6d11fe4539317e57cf84c67cd18d
Author: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
Date:   Wed Jan 17 17:24:13 2018 -0500

    drm/amd/powerplay: Fix smu_table_entry.handle type
    
    commit adab595d16abe48e9c097f000bf8921d35b28fb7 upstream.
    
    The handle describes kernel logical address, should be
    unsigned long and not uint32_t.
    Fixes KASAN error and GFP on driver unload.
    
    Reviewed-by: Rex Zhu <Rex.Zhu@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b51521c9a191083033d3d8d7174e41d33b71a9bf
Author: Ray Strode <rstrode@redhat.com>
Date:   Mon Nov 27 16:50:09 2017 -0500

    drm/qxl: unref cursor bo when finished with it
    
    commit 16c6db3688734b27487a42d0c2a1062d0b2bad03 upstream.
    
    qxl_cursor_atomic_update allocs a bo for the cursor that
    it never frees up at the end of the function.
    
    This commit fixes that.
    
    Signed-off-by: Ray Strode <rstrode@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15cdc016f109e2b8b7ede8c68c413c9b97c09fa8
Author: Tom St Denis <tom.stdenis@amd.com>
Date:   Fri Jan 26 09:32:29 2018 -0500

    drm/ttm: Fix 'buf' pointer update in ttm_bo_vm_access_kmap() (v2)
    
    commit 95244db2d3f743f37e69446a2807dd1a42750542 upstream.
    
    The buf pointer was not being incremented inside the loop
    meaning the same block of data would be read or written
    repeatedly.
    (v2) Change 'buf' pointer to uint8_t* type
    
    Cc: stable@vger.kernel.org
    Fixes: 09ac4fcb3f25 ("drm/ttm: Implement vm_operations_struct.access v2")
    
    Signed-off-by: Tom St Denis <tom.stdenis@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f02c3f7f6d30fb7d0f245594c7d4a033763baa67
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Wed Jan 17 23:52:03 2018 -0500

    drm/ttm: Don't add swapped BOs to swap-LRU list
    
    commit fd5002d6a3c602664b07668a24df4ef7a43bf078 upstream.
    
    A BO that's already swapped would be added back to the swap-LRU list
    for example if its validation failed under high memory pressure. This
    could later lead to swapping it out again and leaking previous swap
    storage.
    
    This commit adds a condition to prevent that from happening.
    
    v2: Check page_flags instead of swap_storage
    
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c0398cfebf5d3f6d5ebc6924a3faf26a12935f4
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Feb 14 08:39:11 2018 +0100

    x86/entry/64: Fix CR3 restore in paranoid_exit()
    
    commit e48657573481a5dff7cfdc3d57005c80aa816500 upstream.
    
    Josh Poimboeuf noticed the following bug:
    
     "The paranoid exit code only restores the saved CR3 when it switches back
      to the user GS.  However, even in the kernel GS case, it's possible that
      it needs to restore a user CR3, if for example, the paranoid exception
      occurred in the syscall exit path between SWITCH_TO_USER_CR3_STACK and
      SWAPGS."
    
    Josh also confirmed via targeted testing that it's possible to hit this bug.
    
    Fix the bug by also restoring CR3 in the paranoid_exit_no_swapgs branch.
    
    The reason we haven't seen this bug reported by users yet is probably because
    "paranoid" entry points are limited to the following cases:
    
     idtentry double_fault       do_double_fault  has_error_code=1  paranoid=2
     idtentry debug              do_debug         has_error_code=0  paranoid=1 shift_ist=DEBUG_STACK
     idtentry int3               do_int3          has_error_code=0  paranoid=1 shift_ist=DEBUG_STACK
     idtentry machine_check      do_mce           has_error_code=0  paranoid=1
    
    Amongst those entry points only machine_check is one that will interrupt an
    IRQS-off critical section asynchronously - and machine check events are rare.
    
    The other main asynchronous entries are NMI entries, which can be very high-freq
    with perf profiling, but they are special: they don't use the 'idtentry' macro but
    are open coded and restore user CR3 unconditionally so don't have this bug.
    
    Reported-and-tested-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20180214073910.boevmg65upbk3vqb@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 231d0c70be748bba8982b6bda3daa613bf5c8a29
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Tue Feb 13 13:22:08 2018 -0600

    x86/cpu: Change type of x86_cache_size variable to unsigned int
    
    commit 24dbc6000f4b9b0ef5a9daecb161f1907733765a upstream.
    
    Currently, x86_cache_size is of type int, which makes no sense as we
    will never have a valid cache size equal or less than 0. So instead of
    initializing this variable to -1, it can perfectly be initialized to 0
    and use it as an unsigned variable instead.
    
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Addresses-Coverity-ID: 1464429
    Link: http://lkml.kernel.org/r/20180213192208.GA26414@embeddedor.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d7ebee6ce113fff252f1b923fbbbad83b1221b8
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 14 10:14:17 2018 +0300

    x86/spectre: Fix an error message
    
    commit 9de29eac8d2189424d81c0d840cd0469aa3d41c8 upstream.
    
    If i == ARRAY_SIZE(mitigation_options) then we accidentally print
    garbage from one space beyond the end of the mitigation_options[] array.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: KarimAllah Ahmed <karahmed@amazon.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kernel-janitors@vger.kernel.org
    Fixes: 9005c6834c0f ("x86/spectre: Simplify spectre_v2 command line parsing")
    Link: http://lkml.kernel.org/r/20180214071416.GA26677@mwanda
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 325cbb04dc61692ba01445c34fd551ad91df9e6d
Author: Jia Zhang <qianyue.zj@alibaba-inc.com>
Date:   Mon Jan 1 09:52:10 2018 +0800

    x86/cpu: Rename cpu_data.x86_mask to cpu_data.x86_stepping
    
    commit b399151cb48db30ad1e0e93dd40d68c6d007b637 upstream.
    
    x86_mask is a confusing name which is hard to associate with the
    processor's stepping.
    
    Additionally, correct an indent issue in lib/cpu.c.
    
    Signed-off-by: Jia Zhang <qianyue.zj@alibaba-inc.com>
    [ Updated it to more recent kernels. ]
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: bp@alien8.de
    Cc: tony.luck@intel.com
    Link: http://lkml.kernel.org/r/1514771530-70829-1-git-send-email-qianyue.zj@alibaba-inc.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73f231c7ee696cdc53ee0922e6d3bf0480a5ae90
Author: Rui Wang <rui.y.wang@intel.com>
Date:   Mon Dec 18 16:34:10 2017 +0800

    selftests/x86/mpx: Fix incorrect bounds with old _sigfault
    
    commit 961888b1d76d84efc66a8f5604b06ac12ac2f978 upstream.
    
    For distributions with old userspace header files, the _sigfault
    structure is different. mpx-mini-test fails with the following
    error:
    
      [root@Purley]# mpx-mini-test_64 tabletest
      XSAVE is supported by HW & OS
      XSAVE processor supported state mask: 0x2ff
      XSAVE OS supported state mask: 0x2ff
       BNDREGS: size: 64 user: 1 supervisor: 0 aligned: 0
        BNDCSR: size: 64 user: 1 supervisor: 0 aligned: 0
      starting mpx bounds table test
      ERROR: siginfo bounds do not match shadow bounds for register 0
    
    Fix it by using the correct offset of _lower/_upper in _sigfault.
    RHEL needs this patch to work.
    
    Signed-off-by: Rui Wang <rui.y.wang@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dave.hansen@linux.intel.com
    Fixes: e754aedc26ef ("x86/mpx, selftests: Add MPX self test")
    Link: http://lkml.kernel.org/r/1513586050-1641-1-git-send-email-rui.y.wang@intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 208beef6d8f223a0cc57e2fcecc9ca28fc778f50
Author: Andy Lutomirski <luto@kernel.org>
Date:   Wed Jan 31 08:03:10 2018 -0800

    x86/mm: Rename flush_tlb_single() and flush_tlb_one() to __flush_tlb_one_[user|kernel]()
    
    commit 1299ef1d8870d2d9f09a5aadf2f8b2c887c2d033 upstream.
    
    flush_tlb_single() and flush_tlb_one() sound almost identical, but
    they really mean "flush one user translation" and "flush one kernel
    translation".  Rename them to flush_tlb_one_user() and
    flush_tlb_one_kernel() to make the semantics more obvious.
    
    [ I was looking at some PTI-related code, and the flush-one-address code
      is unnecessarily hard to understand because the names of the helpers are
      uninformative.  This came up during PTI review, but no one got around to
      doing it. ]
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Linux-MM <linux-mm@kvack.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Link: http://lkml.kernel.org/r/3303b02e3c3d049dc5235d5651e0ae6d29a34354.1517414378.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6d0c0a618a15ba4dadd7ad6131a814359a53973
Author: Michal Hocko <mhocko@suse.com>
Date:   Wed Dec 6 11:27:57 2017 +0100

    kmemcheck: rip it out for real
    
    commit f335195adf043168ee69d78ea72ac3e30f0c57ce upstream.
    
    Commit 4675ff05de2d ("kmemcheck: rip it out") has removed the code but
    for some reason SPDX header stayed in place.  This looks like a rebase
    mistake in the mmotm tree or the merge mistake.  Let's drop those
    leftovers as well.
    
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f369f1486116b0f3e9630a2481addde6854df541
Author: Levin, Alexander (Sasha Levin) <alexander.levin@verizon.com>
Date:   Wed Nov 15 17:36:02 2017 -0800

    kmemcheck: rip it out
    
    commit 4675ff05de2d76d167336b368bd07f3fef6ed5a6 upstream.
    
    Fix up makefiles, remove references, and git rm kmemcheck.
    
    Link: http://lkml.kernel.org/r/20171007030159.22241-4-alexander.levin@verizon.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Vegard Nossum <vegardno@ifi.uio.no>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Tim Hansen <devtimhansen@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9870f85817ebb331d7496d50a0b99088e240e20
Author: Levin, Alexander (Sasha Levin) <alexander.levin@verizon.com>
Date:   Wed Nov 15 17:35:58 2017 -0800

    kmemcheck: remove whats left of NOTRACK flags
    
    commit d8be75663cec0069b85f80191abd2682ce4a512f upstream.
    
    Now that kmemcheck is gone, we don't need the NOTRACK flags.
    
    Link: http://lkml.kernel.org/r/20171007030159.22241-5-alexander.levin@verizon.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Tim Hansen <devtimhansen@gmail.com>
    Cc: Vegard Nossum <vegardno@ifi.uio.no>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae63fd26b2d81eaaf3cf35693dc01c0148bd7a9b
Author: Levin, Alexander (Sasha Levin) <alexander.levin@verizon.com>
Date:   Wed Nov 15 17:35:54 2017 -0800

    kmemcheck: stop using GFP_NOTRACK and SLAB_NOTRACK
    
    commit 75f296d93bcebcfe375884ddac79e30263a31766 upstream.
    
    Convert all allocations that used a NOTRACK flag to stop using it.
    
    Link: http://lkml.kernel.org/r/20171007030159.22241-3-alexander.levin@verizon.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Tim Hansen <devtimhansen@gmail.com>
    Cc: Vegard Nossum <vegardno@ifi.uio.no>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2abfcdf8e77d3719aa1d37b1f9de800fa596eda3
Author: Levin, Alexander (Sasha Levin) <alexander.levin@verizon.com>
Date:   Wed Nov 15 17:35:51 2017 -0800

    kmemcheck: remove annotations
    
    commit 4950276672fce5c241857540f8561c440663673d upstream.
    
    Patch series "kmemcheck: kill kmemcheck", v2.
    
    As discussed at LSF/MM, kill kmemcheck.
    
    KASan is a replacement that is able to work without the limitation of
    kmemcheck (single CPU, slow).  KASan is already upstream.
    
    We are also not aware of any users of kmemcheck (or users who don't
    consider KASan as a suitable replacement).
    
    The only objection was that since KASAN wasn't supported by all GCC
    versions provided by distros at that time we should hold off for 2
    years, and try again.
    
    Now that 2 years have passed, and all distros provide gcc that supports
    KASAN, kill kmemcheck again for the very same reasons.
    
    This patch (of 4):
    
    Remove kmemcheck annotations, and calls to kmemcheck from the kernel.
    
    [alexander.levin@verizon.com: correctly remove kmemcheck call from dma_map_sg_attrs]
      Link: http://lkml.kernel.org/r/20171012192151.26531-1-alexander.levin@verizon.com
    Link: http://lkml.kernel.org/r/20171007030159.22241-2-alexander.levin@verizon.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Tim Hansen <devtimhansen@gmail.com>
    Cc: Vegard Nossum <vegardno@ifi.uio.no>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fed58f610b57c1190862819eba6f7bc5396b08d
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Feb 13 14:28:19 2018 +0100

    x86/speculation: Add <asm/msr-index.h> dependency
    
    commit ea00f301285ea2f07393678cd2b6057878320c9d upstream.
    
    Joe Konno reported a compile failure resulting from using an MSR
    without inclusion of <asm/msr-index.h>, and while the current code builds
    fine (by accident) this needs fixing for future patches.
    
    Reported-by: Joe Konno <joe.konno@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan@linux.intel.com
    Cc: bp@alien8.de
    Cc: dan.j.williams@intel.com
    Cc: dave.hansen@linux.intel.com
    Cc: dwmw2@infradead.org
    Cc: dwmw@amazon.co.uk
    Cc: gregkh@linuxfoundation.org
    Cc: hpa@zytor.com
    Cc: jpoimboe@redhat.com
    Cc: linux-tip-commits@vger.kernel.org
    Cc: luto@kernel.org
    Fixes: 20ffa1caecca ("x86/speculation: Add basic IBPB (Indirect Branch Prediction Barrier) support")
    Link: http://lkml.kernel.org/r/20180213132819.GJ25201@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b4cdbbb29d4eb34f02d5e1419789b53c3cbb930
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Feb 5 14:16:06 2018 +0000

    nospec: Move array_index_nospec() parameter checking into separate macro
    
    commit 8fa80c503b484ddc1abbd10c7cb2ab81f3824a50 upstream.
    
    For architectures providing their own implementation of
    array_index_mask_nospec() in asm/barrier.h, attempting to use WARN_ONCE() to
    complain about out-of-range parameters using WARN_ON() results in a mess
    of mutually-dependent include files.
    
    Rather than unpick the dependencies, simply have the core code in nospec.h
    perform the checking for us.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/1517840166-15399-1-git-send-email-will.deacon@arm.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d4cb4dc7a110ef253e99808b66b45c726ba5596
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Feb 6 18:22:40 2018 -0800

    x86/speculation: Fix up array_index_nospec_mask() asm constraint
    
    commit be3233fbfcb8f5acb6e3bcd0895c3ef9e100d470 upstream.
    
    Allow the compiler to handle @size as an immediate value or memory
    directly rather than allocating a register.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/151797010204.1289.1510000292250184993.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41d315482500e9612d1906b7a057fbe9c4b6c676
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Feb 9 13:16:59 2018 +0100

    x86/debug: Use UD2 for WARN()
    
    commit 3b3a371cc9bc980429baabe0a8e5f307f3d1f463 upstream.
    
    Since the Intel SDM added an ModR/M byte to UD0 and binutils followed
    that specification, we now cannot disassemble our kernel anymore.
    
    This now means Intel and AMD disagree on the encoding of UD0. And instead
    of playing games with additional bytes that are valid ModR/M and single
    byte instructions (0xd6 for instance), simply use UD2 for both WARN() and
    BUG().
    
    Requested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180208194406.GD25181@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e0067c22d6b38a7b882e560b3db4c103166575e
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu Feb 8 17:09:26 2018 -0600

    x86/debug, objtool: Annotate WARN()-related UD2 as reachable
    
    commit 2b5db66862b95532cb6cca8165ae6eb73633cf85 upstream.
    
    By default, objtool assumes that a UD2 is a dead end.  This is mainly
    because GCC 7+ sometimes inserts a UD2 when it detects a divide-by-zero
    condition.
    
    Now that WARN() is moving back to UD2, annotate the code after it as
    reachable so objtool can follow the code flow.
    
    Reported-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kbuild test robot <fengguang.wu@intel.com>
    Link: http://lkml.kernel.org/r/0e483379275a42626ba8898117f918e1bf661e40.1518130694.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 842a0d95ef16d8e3f85cd5316efc8c25934ff3ce
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu Feb 8 17:09:25 2018 -0600

    objtool: Fix segfault in ignore_unreachable_insn()
    
    commit fe24e27128252c230a34a6c628da2bf1676781ea upstream.
    
    Peter Zijlstra's patch for converting WARN() to use UD2 triggered a
    bunch of false "unreachable instruction" warnings, which then triggered
    a seg fault in ignore_unreachable_insn().
    
    The seg fault happened when it tried to dereference a NULL 'insn->func'
    pointer.  Thanks to static_cpu_has(), some functions can jump to a
    non-function area in the .altinstr_aux section.  That breaks
    ignore_unreachable_insn()'s assumption that it's always inside the
    original function.
    
    Make sure ignore_unreachable_insn() only follows jumps within the
    current function.
    
    Reported-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kbuild test robot <fengguang.wu@intel.com>
    Link: http://lkml.kernel.org/r/bace77a60d5af9b45eddb8f8fb9c776c8de657ef.1518130694.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 410d273ecc8ed1f30ef0d06acb2d22ffa29cd732
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Tue Feb 13 09:15:19 2018 +0100

    selftests/x86: Disable tests requiring 32-bit support on pure 64-bit systems
    
    commit 9279ddf23ce78ff2676e8e8e19fec0f022c26d04 upstream.
    
    The ldt_gdt and ptrace_syscall selftests, even in their 64-bit variant, use
    hard-coded 32-bit syscall numbers and call "int $0x80".
    
    This will fail on 64-bit systems with CONFIG_IA32_EMULATION=y disabled.
    
    Therefore, do not build these tests if we cannot build 32-bit binaries
    (which should be a good approximation for CONFIG_IA32_EMULATION=y being enabled).
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Link: http://lkml.kernel.org/r/20180211111013.16888-6-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8520ea2a043842b3b52d95210ee774ed16748ef5
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Tue Feb 13 09:13:21 2018 +0100

    selftests/x86: Do not rely on "int $0x80" in single_step_syscall.c
    
    commit 4105c69703cdeba76f384b901712c9397b04e9c2 upstream.
    
    On 64-bit builds, we should not rely on "int $0x80" working (it only does if
    CONFIG_IA32_EMULATION=y is enabled). To keep the "Set TF and check int80"
    test running on 64-bit installs with CONFIG_IA32_EMULATION=y enabled, build
    this test only if we can also build 32-bit binaries (which should be a
    good approximation for that).
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Link: http://lkml.kernel.org/r/20180211111013.16888-5-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf4db6342da4c433b814ccdad0461e1ca7477695
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 12:10:11 2018 +0100

    selftests/x86: Do not rely on "int $0x80" in test_mremap_vdso.c
    
    commit 2cbc0d66de0480449c75636f55697c7ff3af61fc upstream.
    
    On 64-bit builds, we should not rely on "int $0x80" working (it only does if
    CONFIG_IA32_EMULATION=y is enabled).
    
    Without this patch, the move test may succeed, but the "int $0x80" causes
    a segfault, resulting in a false negative output of this self-test.
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Link: http://lkml.kernel.org/r/20180211111013.16888-4-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6eced764e1a18665212c349f100188a337d8fa8
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Feb 13 08:26:17 2018 +0100

    selftests/x86/pkeys: Remove unused functions
    
    commit ce676638fe7b284132a7d7d5e7e7ad81bab9947e upstream.
    
    This also gets rid of two build warnings:
    
      protection_keys.c: In function ‘dumpit’:
      protection_keys.c:419:3: warning: ignoring return value of ‘write’, declared with attribute warn_unused_result [-Wunused-result]
         write(1, buf, nr_read);
         ^~~~~~~~~~~~~~~~~~~~~~
    
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Shuah Khan <shuahkh@osg.samsung.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3eb95d5187a3df8c0aa1d5f531a6b9f567fcd9a7
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 21:59:24 2018 +0100

    selftests/x86: Clean up and document sscanf() usage
    
    commit d8e92de8ef952bed88c56c7a44c02d8dcae0984e upstream.
    
    Replace a couple of magically connected buffer length literal constants with
    a common definition that makes their relationship obvious. Also document
    why our sscanf() usage is safe.
    
    No intended functional changes.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andrew Lutomirski <luto@kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Link: http://lkml.kernel.org/r/20180211205924.GA23210@light.dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 301e6fe0915c8b2eab4da812de4f16c583e5b113
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 12:10:10 2018 +0100

    selftests/x86: Fix vDSO selftest segfault for vsyscall=none
    
    commit 198ee8e17502da2634f7366395db1d77630e0219 upstream.
    
    The vDSO selftest tries to execute a vsyscall unconditionally, even if it
    is not present on the test system (e.g. if booted with vsyscall=none or
    with CONFIG_LEGACY_VSYSCALL_NONE=y set. Fix this by copying (and tweaking)
    the vsyscall check from test_vsyscall.c
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andrew Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Link: http://lkml.kernel.org/r/20180211111013.16888-3-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cf7b883bcbaca7b85002770915e39eb6d510309
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Feb 12 21:13:18 2018 +0100

    x86/entry/64: Remove the unused 'icebp' macro
    
    commit b498c261107461d5c42140dfddd05df83d8ca078 upstream.
    
    That macro was touched around 2.5.8 times, judging by the full history
    linux repo, but it was unused even then. Get rid of it already.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux@dominikbrodowski.net
    Link: http://lkml.kernel.org/r/20180212201318.GD14640@pd.tnic
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdcf05c64a64743f512f12b17d4f9d8b14d2ad31
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Feb 12 11:45:03 2018 -0600

    x86/entry/64: Fix paranoid_entry() frame pointer warning
    
    commit b3ccefaed922529e6a67de7b30af5aa38c76ace9 upstream.
    
    With the following commit:
    
      f09d160992d1 ("x86/entry/64: Get rid of the ALLOC_PT_GPREGS_ON_STACK and SAVE_AND_CLEAR_REGS macros")
    
    ... one of my suggested improvements triggered a frame pointer warning:
    
      arch/x86/entry/entry_64.o: warning: objtool: paranoid_entry()+0x11: call without frame pointer save/setup
    
    The warning is correct for the build-time code, but it's actually not
    relevant at runtime because of paravirt patching.  The paravirt swapgs
    call gets replaced with either a SWAPGS instruction or NOPs at runtime.
    
    Go back to the previous behavior by removing the ELF function annotation
    for paranoid_entry() and adding an unwind hint, which effectively
    silences the warning.
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kbuild-all@01.org
    Cc: tipbuild@zytor.com
    Fixes: f09d160992d1 ("x86/entry/64: Get rid of the ALLOC_PT_GPREGS_ON_STACK and SAVE_AND_CLEAR_REGS macros")
    Link: http://lkml.kernel.org/r/20180212174503.5acbymg5z6p32snu@treble
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a816dd2fa2dcbde206bc67ebbdf8bbf75a54936c
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:48 2018 +0100

    x86/entry/64: Indent PUSH_AND_CLEAR_REGS and POP_REGS properly
    
    commit 92816f571af81e9a71cc6f3dc8ce1e2fcdf7b6b8 upstream.
    
    ... same as the other macros in arch/x86/entry/calling.h
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-8-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de66c3a3b0a6403702d6d6ead20ccd38bae615d7
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:47 2018 +0100

    x86/entry/64: Get rid of the ALLOC_PT_GPREGS_ON_STACK and SAVE_AND_CLEAR_REGS macros
    
    commit dde3036d62ba3375840b10ab9ec0d568fd773b07 upstream.
    
    Previously, error_entry() and paranoid_entry() saved the GP registers
    onto stack space previously allocated by its callers. Combine these two
    steps in the callers, and use the generic PUSH_AND_CLEAR_REGS macro
    for that.
    
    This adds a significant amount ot text size. However, Ingo Molnar points
    out that:
    
            "these numbers also _very_ significantly over-represent the
            extra footprint. The assumptions that resulted in
            us compressing the IRQ entry code have changed very
            significantly with the new x86 IRQ allocation code we
            introduced in the last year:
    
            - IRQ vectors are usually populated in tightly clustered
              groups.
    
              With our new vector allocator code the typical per CPU
              allocation percentage on x86 systems is ~3 device vectors
              and ~10 fixed vectors out of ~220 vectors - i.e. a very
              low ~6% utilization (!). [...]
    
              The days where we allocated a lot of vectors on every
              CPU and the compression of the IRQ entry code text
              mattered are over.
    
            - Another issue is that only a small minority of vectors
              is frequent enough to actually matter to cache utilization
              in practice: 3-4 key IPIs and 1-2 device IRQs at most - and
              those vectors tend to be tightly clustered as well into about
              two groups, and are probably already on 2-3 cache lines in
              practice.
    
              For the common case of 'cache cold' IRQs it's the depth of
              the call chain and the fragmentation of the resulting I$
              that should be the main performance limit - not the overall
              size of it.
    
            - The CPU side cost of IRQ delivery is still very expensive
              even in the best, most cached case, as in 'over a thousand
              cycles'. So much stuff is done that maybe contemporary x86
              IRQ entry microcode already prefetches the IDT entry and its
              expected call target address."[*]
    
    [*] http://lkml.kernel.org/r/20180208094710.qnjixhm6hybebdv7@gmail.com
    
    The "testb $3, CS(%rsp)" instruction in the idtentry macro does not need
    modification. Previously, %rsp was manually decreased by 15*8; with
    this patch, %rsp is decreased by 15 pushq instructions.
    
    [jpoimboe@redhat.com: unwind hint improvements]
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-7-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd25388691c041903c084c68dc7da0fc45265d98
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:46 2018 +0100

    x86/entry/64: Use PUSH_AND_CLEAN_REGS in more cases
    
    commit 30907fd13bb593202574bb20af58d67c70a1ee14 upstream.
    
    entry_SYSCALL_64_after_hwframe() and nmi() can be converted to use
    PUSH_AND_CLEAN_REGS instead of opencoded variants thereof. Due to
    the interleaving, the additional XOR-based clearing of R8 and R9
    in entry_SYSCALL_64_after_hwframe() should not have any noticeable
    negative implications.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-6-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ce4863a44ff4e7e8d48d480853eea79cfd27bf6
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:45 2018 +0100

    x86/entry/64: Introduce the PUSH_AND_CLEAN_REGS macro
    
    commit 3f01daecd545e818098d84fd1ad43e19a508d705 upstream.
    
    Those instances where ALLOC_PT_GPREGS_ON_STACK is called just before
    SAVE_AND_CLEAR_REGS can trivially be replaced by PUSH_AND_CLEAN_REGS.
    This macro uses PUSH instead of MOV and should therefore be faster, at
    least on newer CPUs.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-5-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47d9c905ae7af1c16b58a41be627a74027f5b601
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:44 2018 +0100

    x86/entry/64: Interleave XOR register clearing with PUSH instructions
    
    commit f7bafa2b05ef25eda1d9179fd930b0330cf2b7d1 upstream.
    
    Same as is done for syscalls, interleave XOR with PUSH instructions
    for exceptions/interrupts, in order to minimize the cost of the
    additional instructions required for register clearing.
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-4-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb68735527648cc3439bcacab5e6a30ab8219c46
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:43 2018 +0100

    x86/entry/64: Merge the POP_C_REGS and POP_EXTRA_REGS macros into a single POP_REGS macro
    
    commit 502af0d70843c2a9405d7ba1f79b4b0305aaf5f5 upstream.
    
    The two special, opencoded cases for POP_C_REGS can be handled by ASM
    macros.
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-3-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51209eec238ffd1b4edec999a024159bbae51a3d
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:42 2018 +0100

    x86/entry/64: Merge SAVE_C_REGS and SAVE_EXTRA_REGS, remove unused extensions
    
    commit 2e3f0098bc45f710a2f4cbcc94b80a1fae7a99a1 upstream.
    
    All current code paths call SAVE_C_REGS and then immediately
    SAVE_EXTRA_REGS. Therefore, merge these two macros and order the MOV
    sequeneces properly.
    
    While at it, remove the macros to save all except specific registers,
    as these macros have been unused for a long time.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-2-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d10d0bb86d974c41ccbbf1f22044e700597a84d0
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Feb 5 17:18:11 2018 -0800

    x86/entry/64: Clear registers for exceptions/interrupts, to reduce speculation attack surface
    
    commit 3ac6d8c787b835b997eb23e43e09aa0895ef7d58 upstream.
    
    Clear the 'extra' registers on entering the 64-bit kernel for exceptions
    and interrupts. The common registers are not cleared since they are
    likely clobbered well before they can be exploited in a speculative
    execution attack.
    
    Originally-From: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: <stable@vger.kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/151787989146.7847.15749181712358213254.stgit@dwillia2-desk3.amr.corp.intel.com
    [ Made small improvements to the changelog and the code comments. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e578fedba81e72e195fe71f893828d4597714db5
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Feb 12 11:34:22 2018 +0100

    PM: cpuidle: Fix cpuidle_poll_state_init() prototype
    
    commit d7212cfb05ba802bea4dd6c90d61cfe6366ea224 upstream.
    
    Commit f85942207516 (x86: PM: Make APM idle driver initialize polling
    state) made apm_init() call cpuidle_poll_state_init(), but that only
    is defined for CONFIG_CPU_IDLE set, so make the empty stub of it
    available for CONFIG_CPU_IDLE unset too to fix the resulting build
    issue.
    
    Fixes: f85942207516 (x86: PM: Make APM idle driver initialize polling state)
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c59cce7943dff0fbafcaa4e71149ee1da879d03f
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sat Feb 10 19:13:58 2018 +0100

    PM / runtime: Update links_count also if !CONFIG_SRCU
    
    commit 433986c2c265d106d6a8e88006e0131fefc92b7b upstream.
    
    Commit baa8809f6097 (PM / runtime: Optimize the use of device links)
    added an invocation of pm_runtime_drop_link() to __device_link_del().
    However there are two variants of that function, one for CONFIG_SRCU and
    another for !CONFIG_SRCU, and the commit only modified the former.
    
    Fixes: baa8809f6097 (PM / runtime: Optimize the use of device links)
    Cc: v4.10+ <stable@vger.kernel.org> # v4.10+
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2efd067aa4ef25386d4abbe2fe9b2c7f22cd9302
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Feb 13 09:03:08 2018 +0100

    x86/speculation: Clean up various Spectre related details
    
    commit 21e433bdb95bdf3aa48226fd3d33af608437f293 upstream.
    
    Harmonize all the Spectre messages so that a:
    
        dmesg | grep -i spectre
    
    ... gives us most Spectre related kernel boot messages.
    
    Also fix a few other details:
    
     - clarify a comment about firmware speculation control
    
     - s/KPTI/PTI
    
     - remove various line-breaks that made the code uglier
    
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a15bdf6579b23f62bb0130941158dd2f9b94f079
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Sat Feb 10 23:39:26 2018 +0000

    KVM/nVMX: Set the CPU_BASED_USE_MSR_BITMAPS if we have a valid L02 MSR bitmap
    
    commit 3712caeb14dcb33fb4d5114f14c0beef10aca101 upstream.
    
    We either clear the CPU_BASED_USE_MSR_BITMAPS and end up intercepting all
    MSR accesses or create a valid L02 MSR bitmap and use that. This decision
    has to be made every time we evaluate whether we are going to generate the
    L02 MSR bitmap.
    
    Before commit:
    
      d28b387fb74d ("KVM/VMX: Allow direct access to MSR_IA32_SPEC_CTRL")
    
    ... this was probably OK since the decision was always identical.
    
    This is no longer the case now since the MSR bitmap might actually
    change once we decide to not intercept SPEC_CTRL and PRED_CMD.
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: kvm@vger.kernel.org
    Cc: sironi@amazon.de
    Link: http://lkml.kernel.org/r/1518305967-31356-6-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07a3a99ed7f99d207328fae0da73c83be0799722
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Sat Feb 10 23:39:25 2018 +0000

    X86/nVMX: Properly set spec_ctrl and pred_cmd before merging MSRs
    
    commit 206587a9fb764d71f035dc7f6d3b6488f5d5b304 upstream.
    
    These two variables should check whether SPEC_CTRL and PRED_CMD are
    supposed to be passed through to L2 guests or not. While
    msr_write_intercepted_l01 would return 'true' if it is not passed through.
    
    So just invert the result of msr_write_intercepted_l01 to implement the
    correct semantics.
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: kvm@vger.kernel.org
    Cc: sironi@amazon.de
    Fixes: 086e7d4118cc ("KVM: VMX: Allow direct access to MSR_IA32_SPEC_CTRL")
    Link: http://lkml.kernel.org/r/1518305967-31356-5-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 474bd0b82e24e8b928910aba876c20c49098ae6d
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Feb 10 23:39:24 2018 +0000

    KVM/x86: Reduce retpoline performance impact in slot_handle_level_range(), by always inlining iterator helper methods
    
    commit 928a4c39484281f8ca366f53a1db79330d058401 upstream.
    
    With retpoline, tight loops of "call this function for every XXX" are
    very much pessimised by taking a prediction miss *every* time. This one
    is by far the biggest contributor to the guest launch time with retpoline.
    
    By marking the iterator slot_handle_…() functions always_inline, we can
    ensure that the indirect function call can be optimised away into a
    direct call and it actually generates slightly smaller code because
    some of the other conditionals can get optimised away too.
    
    Performance is now pretty close to what we see with nospectre_v2 on
    the command line.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Tested-by: Filippo Sironi <sironi@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Filippo Sironi <sironi@amazon.de>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: rkrcmar@redhat.com
    Link: http://lkml.kernel.org/r/1518305967-31356-4-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdc69a2ffa0105c1e736fbe4bfaa0b53bd3e915f
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Feb 10 23:39:23 2018 +0000

    Revert "x86/speculation: Simplify indirect_branch_prediction_barrier()"
    
    commit f208820a321f9b23d77d7eed89945d862d62a3ed upstream.
    
    This reverts commit 64e16720ea0879f8ab4547e3b9758936d483909b.
    
    We cannot call C functions like that, without marking all the
    call-clobbered registers as, well, clobbered. We might have got away
    with it for now because the __ibp_barrier() function was *fairly*
    unlikely to actually use any other registers. But no. Just no.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Cc: sironi@amazon.de
    Link: http://lkml.kernel.org/r/1518305967-31356-3-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7451cb6159a573736cf674e586c75daabd62ae5
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Mon Feb 12 15:27:34 2018 +0000

    x86/speculation: Correct Speculation Control microcode blacklist again
    
    commit d37fc6d360a404b208547ba112e7dabb6533c7fc upstream.
    
    Arjan points out that the Intel document only clears the 0xc2 microcode
    on *some* parts with CPUID 506E3 (INTEL_FAM6_SKYLAKE_DESKTOP stepping 3).
    For the Skylake H/S platform it's OK but for Skylake E3 which has the
    same CPUID it isn't (yet) cleared.
    
    So removing it from the blacklist was premature. Put it back for now.
    
    Also, Arjan assures me that the 0x84 microcode for Kaby Lake which was
    featured in one of the early revisions of the Intel document was never
    released to the public, and won't be until/unless it is also validated
    as safe. So those can change to 0x80 which is what all *other* versions
    of the doc have identified.
    
    Once the retrospective testing of existing public microcodes is done, we
    should be back into a mode where new microcodes are only released in
    batches and we shouldn't even need to update the blacklist for those
    anyway, so this tweaking of the list isn't expected to be a thing which
    keeps happening.
    
    Requested-by: Arjan van de Ven <arjan.van.de.ven@intel.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Link: http://lkml.kernel.org/r/1518449255-2182-1-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5a1b559235a38d527e8e363a325705fa0325602
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Feb 10 23:39:22 2018 +0000

    x86/speculation: Update Speculation Control microcode blacklist
    
    commit 1751342095f0d2b36fa8114d8e12c5688c455ac4 upstream.
    
    Intel have retroactively blessed the 0xc2 microcode on Skylake mobile
    and desktop parts, and the Gemini Lake 0x22 microcode is apparently fine
    too. We blacklisted the latter purely because it was present with all
    the other problematic ones in the 2018-01-08 release, but now it's
    explicitly listed as OK.
    
    We still list 0x84 for the various Kaby Lake / Coffee Lake parts, as
    that appeared in one version of the blacklist and then reverted to
    0x80 again. We can change it if 0x84 is actually announced to be safe.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Cc: sironi@amazon.de
    Link: http://lkml.kernel.org/r/1518305967-31356-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 372ed448263dcc733f4ef3d24d704d2f016d734c
Author: Nadav Amit <namit@vmware.com>
Date:   Fri Feb 9 09:06:38 2018 -0800

    x86/mm/pti: Fix PTI comment in entry_SYSCALL_64()
    
    commit 14b1fcc62043729d12e8ae00f8297ab2ffe9fa91 upstream.
    
    The comment is confusing since the path is taken when
    CONFIG_PAGE_TABLE_ISOLATION=y is disabled (while the comment says it is not
    taken).
    
    Signed-off-by: Nadav Amit <namit@vmware.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: nadav.amit@gmail.com
    Link: http://lkml.kernel.org/r/20180209170638.15161-1-namit@vmware.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b973685e70c3b418ad46a03d6a9c81554c5c4ba2
Author: Balbir Singh <bsingharora@gmail.com>
Date:   Wed Feb 7 17:35:51 2018 +1100

    powerpc/mm/radix: Split linear mapping on hot-unplug
    
    commit 4dd5f8a99e791a8c6500e3592f3ce81ae7edcde1 upstream.
    
    This patch splits the linear mapping if the hot-unplug range is
    smaller than the mapping size. The code detects if the mapping needs
    to be split into a smaller size and if so, uses the stop machine
    infrastructure to clear the existing mapping and then remap the
    remaining range using a smaller page size.
    
    The code will skip any region of the mapping that overlaps with kernel
    text and warn about it once. We don't want to remove a mapping where
    the kernel text and the LMB we intend to remove overlap in the same
    TLB mapping as it may affect the currently executing code.
    
    I've tested these changes under a kvm guest with 2 vcpus, from a split
    mapping point of view, some of the caveats mentioned above applied to
    the testing I did.
    
    Fixes: 4b5d62ca17a1 ("powerpc/mm: add radix__remove_section_mapping()")
    Signed-off-by: Balbir Singh <bsingharora@gmail.com>
    [mpe: Tweak change log to match updated behaviour]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14d87b710338145e46940d0f751c5b7dd5b4c38f
Author: Artem Savkov <artem.savkov@gmail.com>
Date:   Tue Feb 6 22:20:22 2018 +0100

    crypto: sun4i_ss_prng - convert lock to _bh in sun4i_ss_prng_generate
    
    commit 2e7d1d61ea6c0f1c4da5eb82cafac750d55637a7 upstream.
    
    Lockdep detects a possible deadlock in sun4i_ss_prng_generate() and
    throws an "inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage" warning.
    Disabling softirqs to fix this.
    
    Fixes: b8ae5c7387ad ("crypto: sun4i-ss - support the Security System PRNG")
    Signed-off-by: Artem Savkov <artem.savkov@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3d33c5f296b36a05e24828f96c8ea5e02a15b06
Author: Artem Savkov <artem.savkov@gmail.com>
Date:   Tue Feb 6 22:20:21 2018 +0100

    crypto: sun4i_ss_prng - fix return value of sun4i_ss_prng_generate
    
    commit dd78c832ffaf86eb6434e56de4bc3bc31f03f771 upstream.
    
    According to crypto/rng.h generate function should return 0 on success
    and < 0 on error.
    
    Fixes: b8ae5c7387ad ("crypto: sun4i-ss - support the Security System PRNG")
    Signed-off-by: Artem Savkov <artem.savkov@gmail.com>
    Acked-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fff8ad7c18a238a32a56056980fccd40ed8cce83
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu Feb 1 11:21:59 2018 +0100

    compiler-gcc.h: __nostackprotector needs gcc-4.4 and up
    
    commit d9afaaa4ff7af8b87d4a205e48cb8a6f666d7f01 upstream.
    
    Gcc versions before 4.4 do not recognize the __optimize__ compiler
    attribute:
    
        warning: ‘__optimize__’ attribute directive ignored
    
    Fixes: 7375ae3a0b79ea07 ("compiler-gcc.h: Introduce __nostackprotector function attribute")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 045e5161abfcfefce5b2777788e5913d85bb5c6f
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu Feb 1 11:21:58 2018 +0100

    compiler-gcc.h: Introduce __optimize function attribute
    
    commit df5d45aa08f848b79caf395211b222790534ccc7 upstream.
    
    Create a new function attribute __optimize, which allows to specify an
    optimization level on a per-function basis.
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec35f83de1c80e4decdbda0d61cd1f8924ae606f
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Feb 5 17:18:17 2018 -0800

    x86/entry/64/compat: Clear registers for compat syscalls, to reduce speculation attack surface
    
    commit 6b8cf5cc9965673951f1ab3f0e3cf23d06e3e2ee upstream.
    
    At entry userspace may have populated registers with values that could
    otherwise be useful in a speculative execution attack. Clear them to
    minimize the kernel's attack surface.
    
    Originally-From: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: <stable@vger.kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/151787989697.7847.4083702787288600552.stgit@dwillia2-desk3.amr.corp.intel.com
    [ Made small improvements to the changelog. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bc19b518cb25150572ae4fe34ea6d623d733e2e
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Feb 5 17:18:05 2018 -0800

    x86/entry/64: Clear extra registers beyond syscall arguments, to reduce speculation attack surface
    
    commit 8e1eb3fa009aa7c0b944b3c8b26b07de0efb3200 upstream.
    
    At entry userspace may have (maliciously) populated the extra registers
    outside the syscall calling convention with arbitrary values that could
    be useful in a speculative execution (Spectre style) attack.
    
    Clear these registers to minimize the kernel's attack surface.
    
    Note, this only clears the extra registers and not the unused
    registers for syscalls less than 6 arguments, since those registers are
    likely to be clobbered well before their values could be put to use
    under speculation.
    
    Note, Linus found that the XOR instructions can be executed with
    minimized cost if interleaved with the PUSH instructions, and Ingo's
    analysis found that R10 and R11 should be included in the register
    clearing beyond the typical 'extra' syscall calling convention
    registers.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: <stable@vger.kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/151787988577.7847.16733592218894189003.stgit@dwillia2-desk3.amr.corp.intel.com
    [ Made small improvements to the changelog and the code comments. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43d38b079ca7466a9eebf2936584e091f8c20349
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Feb 6 18:55:12 2018 +0100

    x86: PM: Make APM idle driver initialize polling state
    
    commit f859422075165e32c00c8d75d63f300015cc07ae upstream.
    
    Update the APM driver overlooked by commit 1b39e3f813b4 (cpuidle: Make
    drivers initialize polling state) to initialize the polling state like
    the other cpuidle drivers modified by that commit to prevent cpuidle
    from crashing.
    
    Fixes: 1b39e3f813b4 (cpuidle: Make drivers initialize polling state)
    Reported-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Tested-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: 4.14+ <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41fd295d90a7d8518f3d3d705884fb05df9596f0
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Feb 1 13:40:19 2018 +0100

    x86/xen: init %gs very early to avoid page faults with stack protector
    
    commit 4f277295e54c5b7340e48efea3fc5cc21a2872b7 upstream.
    
    When running as Xen pv guest %gs is initialized some time after
    C code is started. Depending on stack protector usage this might be
    too late, resulting in page faults.
    
    So setup %gs and MSR_GS_BASE in assembly code already.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Tested-by: Chris Patterson <cjp256@gmail.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04f048fad32e191d48c1a260d6aa74e27cfe846e
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Mon Jan 29 14:08:45 2018 +0300

    x86/kexec: Make kexec (mostly) work in 5-level paging mode
    
    commit 5bf30316991d5bcda046343ee77d823cf16fdd03 upstream.
    
    Currently kexec() will crash when switching into a 5-level paging
    enabled kernel.
    
    I missed that we need to change relocate_kernel() to set CR4.LA57
    flag if the kernel has 5-level paging enabled.
    
    I avoided using #ifdef CONFIG_X86_5LEVEL here and inferred if we need to
    enable 5-level paging from previous CR4 value. This way the code is
    ready for boot-time switching between paging modes.
    
    With this patch applied, in addition to kexec 4-to-4 which always worked,
    we can kexec 4-to-5 and 5-to-5 - while 5-to-4 will need more work.
    
    Reported-by: Baoquan He <bhe@redhat.com>
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Tested-by: Baoquan He <bhe@redhat.com>
    Cc: <stable@vger.kernel.org> # v4.14+
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Fixes: 77ef56e4f0fb ("x86: Enable 5-level paging support via CONFIG_X86_5LEVEL=y")
    Link: http://lkml.kernel.org/r/20180129110845.26633-1-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fe1e5ec1c27115afdaf245cc1a8b42765448381
Author: Lucas De Marchi <lucas.demarchi@intel.com>
Date:   Wed Dec 13 12:04:25 2017 -0800

    x86/gpu: add CFL to early quirks
    
    commit 33aa69ed8aacd92dea12671e52eb3ca6ac2d7a49 upstream.
    
    CFL was missing from intel_early_ids[]. The PCI ID needs to be there to
    allow the memory region to be stolen, otherwise we could have RAM being
    arbitrarily overwritten if for example we keep using the UEFI framebuffer,
    depending on how BIOS has set up the e820 map.
    
    Fixes: b056f8f3d6b9 ("drm/i915/cfl: Add Coffee Lake PCI IDs for S Skus.")
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Anusha Srivatsa <anusha.srivatsa@intel.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: David Airlie <airlied@linux.ie>
    Cc: intel-gfx@lists.freedesktop.org
    Cc: dri-devel@lists.freedesktop.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86@kernel.org
    Cc: <stable@vger.kernel.org> # v4.13+ 0890540e21cf drm/i915: add GT number to intel_device_info
    Cc: <stable@vger.kernel.org> # v4.13+ 41693fd52373 drm/i915/kbl: Change a KBL pci id to GT2 from GT1.5
    Cc: <stable@vger.kernel.org> # v4.13+
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Acked-by: Jani Nikula <jani.nikula@intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171213200425.2954-1-lucas.demarchi@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba86431b7b588d887aca002596a42890edee9bd0
Author: Anuj Phogat <anuj.phogat@gmail.com>
Date:   Wed Sep 20 13:31:26 2017 -0700

    drm/i915/kbl: Change a KBL pci id to GT2 from GT1.5
    
    commit 41693fd5237397d3c61b311af0fda1f6f39297c2 upstream.
    
    See Mesa commit 9c588ff
    
    Cc: Matt Turner <mattst88@gmail.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Anuj Phogat <anuj.phogat@gmail.com>
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170920203126.1323-1-anuj.phogat@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc2759b7bb7c55a4bed674a8223c89a8b88fb3d7
Author: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
Date:   Wed Aug 30 17:12:05 2017 +0100

    drm/i915: add GT number to intel_device_info
    
    commit 0890540e21cf1156b4cf960a4c1c734db4e816f9 upstream.
    
    Up to Coffeelake we could deduce this GT number from the device ID.
    This doesn't seem to be the case anymore. This change reorders pciids
    per GT and adds a gt field to intel_device_info. We set this field on
    the following platforms :
    
       - SNB/IVB/HSW/BDW/SKL/KBL/CFL/CNL
    
    Before & After :
    
    $ modinfo drivers/gpu/drm/i915/i915.ko | grep ^alias | wc -l
    209
    
    v2: Add SNB & IVB (Chris)
    
    v3: Fix compilation error in early-quirks (Lionel)
    
    v4: Fix inconsistency between FEATURE/PLATFORM macros (Ville)
    
    Signed-off-by: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170830161208.29221-2-lionel.g.landwerlin@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce6ec5b8dc5a15b830022dd6ee5a040ead0debb9
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Jan 11 11:28:53 2018 +0530

    arm: spear13xx: Fix spics gpio controller's warning
    
    commit f8975cb1b8a36d0839b6365235778dd9df1d04ca upstream.
    
    This fixes the following warning by also sending the flags argument for
    gpio controllers:
    
    Property 'cs-gpios', cell 6 is not a phandle reference in
    /ahb/apb/spi@e0100000
    
    Fixes: 8113ba917dfa ("ARM: SPEAr: DT: Update device nodes")
    Cc: stable@vger.kernel.org # v3.8+
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 349d03cb5378e97e6bfd4fed5c78d3bab115b36e
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Jan 11 11:28:52 2018 +0530

    arm: spear13xx: Fix dmas cells
    
    commit cdd10409914184c7eee5ae3e11beb890c9c16c61 upstream.
    
    The "dmas" cells for the designware DMA controller need to have only 3
    properties apart from the phandle: request line, src master and
    destination master. But the commit 6e8887f60f60 updated it incorrectly
    while moving from platform code to DT. Fix it.
    
    Cc: stable@vger.kernel.org # v3.10+
    Fixes: 6e8887f60f60 ("ARM: SPEAr13xx: Pass generic DW DMAC platform data from DT")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1637c1236d0e0240277b616f94882022cd2a55e
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Jan 11 11:28:51 2018 +0530

    arm: spear600: Add missing interrupt-parent of rtc
    
    commit 6ffb5b4f248fe53e0361b8cbc2a523b432566442 upstream.
    
    The interrupt-parent of rtc was missing, add it.
    
    Fixes: 8113ba917dfa ("ARM: SPEAr: DT: Update device nodes")
    Cc: stable@vger.kernel.org # v3.8+
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbcc2ff13af5664804f0c2622aff9159f79f249f
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Thu Dec 7 14:43:24 2017 +0800

    arm: dts: mt7623: fix card detection issue on bananapi-r2
    
    commit b96a696fb2a8dd1ee4e6cfee48dcac270fc53287 upstream.
    
    Fix that bananapi-r2 booting from SD-card would fail since incorrect
    polarity is applied to the previous setup with GPIO_ACTIVE_HIGH.
    
    Cc: stable@vger.kernel.org
    Fixes: 0eed8d097612 ("arm: dts: mt7623: Add SD-card and EMMC to bananapi-r2")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Tested-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be1965486122417edcd95893e8414902696e8e11
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jan 15 17:37:08 2018 +0100

    ARM: dts: nomadik: add interrupt-parent for clcd
    
    commit e8bfa0422469cdfc86be3f525f621b1d44d2481b upstream.
    
    The clcd device is lacking an interrupt-parent property, which makes
    the interrupt unusable and shows up as a warning with the latest
    dtc version:
    
    arch/arm/boot/dts/ste-nomadik-s8815.dtb: Warning (interrupts_property): Missing interrupt-parent for /amba/clcd@10120000
    arch/arm/boot/dts/ste-nomadik-nhk15.dtb: Warning (interrupts_property): Missing interrupt-parent for /amba/clcd@10120000
    
    I looked up the old board files and found that this interrupt has
    the same irqchip as all the other on-chip device, it just needs one
    extra line.
    
    Fixes: 17470b7da11c ("ARM: dts: add the CLCD LCD display to the NHK15")
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9be4b2f6d024c89affe63360475fba9b167d7230
Author: Patrice Chotard <patrice.chotard@st.com>
Date:   Wed Jan 10 09:21:02 2018 +0100

    ARM: dts: STi: Add gpio polarity for "hdmi,hpd-gpio" property
    
    commit 7ac1f59c09a61e6af6622df6809e003b0af07f3d upstream.
    
    The GPIO polarity is missing in the hdmi,hpd-gpio property, this
    fixes the following DT warnings:
    
    arch/arm/boot/dts/stih410-b2120.dtb: Warning (gpios_property): hdmi,hpd-gpio property
    size (8) too small for cell size 2 in /soc/sti-display-subsystem/sti-hdmi@8d04000
    
    arch/arm/boot/dts/stih407-b2120.dtb: Warning (gpios_property): hdmi,hpd-gpio property
    size (8) too small for cell size 2 in /soc/sti-display-subsystem/sti-hdmi@8d04000
    
    arch/arm/boot/dts/stih410-b2260.dtb: Warning (gpios_property): hdmi,hpd-gpio property
    size (8) too small for cell size 2 in /soc/sti-display-subsystem/sti-hdmi@8d04000
    
    [arnd: marked Cc:stable since this warning shows up with the latest dtc
           by default, and is more likely to actually cause problems than the
           other patches from this series]
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Patrice Chotard <patrice.chotard@st.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34d58f7ccb65c9a2d2c9221b282e556e08e5a801
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 10 17:22:00 2018 +0100

    ARM: lpc3250: fix uda1380 gpio numbers
    
    commit ca32e0c4bf9ca4b87089c5a5ce945e5f2ec890da upstream.
    
    dtc warns about obviously incorrect GPIO numbers for the audio codec
    on both lpc32xx boards:
    
    arch/arm/boot/dts/lpc3250-phy3250.dtb: Warning (gpios_property): reset-gpio property size (12) too small for cell size 3 in /ahb/apb/i2c@400A0000/uda1380@18
    arch/arm/boot/dts/lpc3250-phy3250.dtb: Warning (gpios_property): power-gpio property size (12) too small for cell size 3 in /ahb/apb/i2c@400A0000/uda1380@18
    arch/arm/boot/dts/lpc3250-ea3250.dtb: Warning (gpios_property): reset-gpio property size (12) too small for cell size 3 in /ahb/apb/i2c@400A0000/uda1380@18
    arch/arm/boot/dts/lpc3250-ea3250.dtb: Warning (gpios_property): power-gpio property size (12) too small for cell size 3 in /ahb/apb/i2c@400A0000/uda1380@18
    
    It looks like the nodes are written for a different binding that combines
    the GPIO number into a single number rather than a bank/number pair.
    I found the right numbers on stackexchange.com, so this patch fixes
    the warning and has a reasonable chance of getting things to actually
    work.
    
    Cc: stable@vger.kernel.org
    Link: https://unix.stackexchange.com/questions/59497/alsa-asoc-how-to-correctly-load-devices-drivers/62217#62217
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd420093636759d081bb31b343807efc5bbc58d3
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Thu Nov 30 21:27:32 2017 -0800

    arm64: dts: msm8916: Correct ipc references for smsm
    
    commit 566bd8902e7fa20bd412ed753e09e89c1c96939c upstream.
    
    SMSM is not symmetrical, the incoming bits from WCNSS are available at
    index 6, but the outgoing host id for WCNSS is 3. Further more, upstream
    references the base of APCS (in contrast to downstream), so the register
    offset of 8 must be included.
    
    Fixes: 1fb47e0a9ba4 ("arm64: dts: qcom: msm8916: Add smsm and smp2p nodes")
    Cc: stable@vger.kernel.org
    Reported-by: Ramon Fried <rfried@codeaurora.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27f97375fcb86750cdf82a65dab8174bb991c238
Author: Eugene Syromiatnikov <esyr@redhat.com>
Date:   Mon Jan 15 20:38:17 2018 +0100

    s390: fix handling of -1 in set{,fs}[gu]id16 syscalls
    
    commit 6dd0d2d22aa363fec075cb2577ba273ac8462e94 upstream.
    
    For some reason, the implementation of some 16-bit ID system calls
    (namely, setuid16/setgid16 and setfsuid16/setfsgid16) used type cast
    instead of low2highgid/low2highuid macros for converting [GU]IDs, which
    led to incorrect handling of value of -1 (which ought to be considered
    invalid).
    
    Discovered by strace test suite.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Eugene Syromiatnikov <esyr@redhat.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f25dfc9359cc5e173a5b94e407c6417f5889c9c6
Author: Christian König <ckoenig.leichtzumerken@gmail.com>
Date:   Mon Jan 22 21:00:03 2018 +0100

    dma-buf: fix reservation_object_wait_timeout_rcu once more v2
    
    commit 5bffee867df7494ecd32c1e6ec4e8fc934c521b7 upstream.
    
    We need to set shared_count even if we already have a fence to wait for.
    
    v2: init i to -1 as well
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Cc: stable@vger.kernel.org
    Tested-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180122200003.6665-1-christian.koenig@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40be210c830e80642ce5f4e3d726864ec22d5f50
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Nov 10 12:15:00 2017 +1100

    powerpc: Fix DABR match on hash based systems
    
    commit f23ab3efb1b30cc5c5ef5ae4ef294ed467f30675 upstream.
    
    Commit 398a719d34a1 ("powerpc/mm: Update bits used to skip hash_page")
    mistakenly dropped the DSISR_DABRMATCH bit from the mask of bit tested
    to skip trying to hash a page.
    
    As a result, the DABR matches would no longer be detected.
    
    This adds it back. We open code it in the 2 places where it matters
    rather than fold it into DSISR_BAD_FAULT_32S/64S because this isn't
    technically a bad fault and while we would never hit it with the
    current code, I prefer if page_fault_is_bad() didn't trigger on these.
    
    Fixes: 398a719d34a1 ("powerpc/mm: Update bits used to skip hash_page")
    Cc: stable@vger.kernel.org # v4.14
    Tested-by: Pedro Miraglia Franco de Carvalho <pedromfc@br.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b09911d3beb326a117bfb05c717c3021e5458ca
Author: Cédric Le Goater <clg@kaod.org>
Date:   Tue Feb 13 09:47:12 2018 +0100

    powerpc/xive: Use hw CPU ids when configuring the CPU queues
    
    commit 8e036c8d30a2cd9d8fc7442fbf6824e0a3e986e7 upstream.
    
    The CPU event notification queues on sPAPR should be configured using
    a hardware CPU identifier.
    
    The problem did not show up on the Power Hypervisor because pHyp
    supports 8 threads per core which keeps CPU number contiguous. This is
    not the case on all sPAPR virtual machines, some use SMT=1.
    
    Also improve error logging by adding the CPU number.
    
    Fixes: eac1e731b59e ("powerpc/xive: guest exploitation of the XIVE interrupt controller")
    Cc: stable@vger.kernel.org # v4.14+
    Signed-off-by: Cédric Le Goater <clg@kaod.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 892674b5058a2b15d35d1185f5d09d8f4c257a7e
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Thu Feb 1 16:09:44 2018 +1100

    powerpc/mm: Flush radix process translations when setting MMU type
    
    commit 62e984ddfd6b056d399e24113f5e6a7145e579d8 upstream.
    
    Radix guests do normally invalidate process-scoped translations when a
    new pid is allocated but migrated guests do not invalidate these so
    migrated guests crash sometime, especially easy to reproduce with
    migration happening within first 10 seconds after the guest boot start
    on the same machine.
    
    This adds the "Invalidate process-scoped translations" flush to fix
    radix guests migration.
    
    Fixes: 2ee13be34b13 ("KVM: PPC: Book3S HV: Update kvmppc_set_arch_compat() for ISA v3.00")
    Cc: stable@vger.kernel.org # v4.10+
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Tested-by: Laurent Vivier <lvivier@redhat.com>
    Tested-by: Daniel Henrique Barboza <danielhb@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4386f223b41868197080bd74882c2d31aca92a1a
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Fri Jan 26 13:41:59 2018 -0600

    powerpc/numa: Invalidate numa_cpu_lookup_table on cpu remove
    
    commit 1d9a090783bef19fe8cdec878620d22f05191316 upstream.
    
    When DLPAR removing a CPU, the unmapping of the cpu from a node in
    unmap_cpu_from_node() should also invalidate the CPUs entry in the
    numa_cpu_lookup_table. There is not a guarantee that on a subsequent
    DLPAR add of the CPU the associativity will be the same and thus
    could be in a different node. Invalidating the entry in the
    numa_cpu_lookup_table causes the associativity to be read from the
    device tree at the time of the add.
    
    The current behavior of not invalidating the CPUs entry in the
    numa_cpu_lookup_table can result in scenarios where the the topology
    layout of CPUs in the partition does not match the device tree
    or the topology reported by the HMC.
    
    This bug looks like it was introduced in 2004 in the commit titled
    "ppc64: cpu hotplug notifier for numa", which is 6b15e4e87e32 in the
    linux-fullhist tree. Hence tag it for all stable releases.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b98d31481f9e216e6df6b31e5a959db259c055e
Author: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
Date:   Thu Nov 30 14:35:54 2017 +0530

    powerpc/radix: Remove trace_tlbie call from radix__flush_tlb_all
    
    commit 8d81296cfcce89013a714feb8d25004a156f8181 upstream.
    
    radix__flush_tlb_all() is called only in kexec path in real mode and any
    tracepoints at this stage will make kexec to fail if enabled.
    
    To verify enable tlbie trace before kexec.
    
    $ echo 1 > /sys/kernel/debug/tracing/events/powerpc/tlbie/enable
    == kexec into new kernel and kexec fails.
    
    Fix this by not calling trace_tlbie from radix__flush_tlb_all().
    
    Fixes: 0428491cba92 ("powerpc/mm: Trace tlbie(l) instructions")
    Cc: stable@vger.kernel.org # v4.13+
    Signed-off-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e7e8bd8f19550c56ebc56158f60626546b7c564
Author: Gang He <ghe@suse.com>
Date:   Wed Jan 31 16:14:48 2018 -0800

    ocfs2: try a blocking lock before return AOP_TRUNCATED_PAGE
    
    commit ff26cc10aec128c3f86b5611fd5f59c71d49c0e3 upstream.
    
    If we can't get inode lock immediately in the function
    ocfs2_inode_lock_with_page() when reading a page, we should not return
    directly here, since this will lead to a softlockup problem when the
    kernel is configured with CONFIG_PREEMPT is not set.  The method is to
    get a blocking lock and immediately unlock before returning, this can
    avoid CPU resource waste due to lots of retries, and benefits fairness
    in getting lock among multiple nodes, increase efficiency in case
    modifying the same file frequently from multiple nodes.
    
    The softlockup crash (when set /proc/sys/kernel/softlockup_panic to 1)
    looks like:
    
      Kernel panic - not syncing: softlockup: hung tasks
      CPU: 0 PID: 885 Comm: multi_mmap Tainted: G L 4.12.14-6.1-default #1
      Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011
      Call Trace:
        <IRQ>
        dump_stack+0x5c/0x82
        panic+0xd5/0x21e
        watchdog_timer_fn+0x208/0x210
        __hrtimer_run_queues+0xcc/0x200
        hrtimer_interrupt+0xa6/0x1f0
        smp_apic_timer_interrupt+0x34/0x50
        apic_timer_interrupt+0x96/0xa0
        </IRQ>
       RIP: 0010:unlock_page+0x17/0x30
       RSP: 0000:ffffaf154080bc88 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff10
       RAX: dead000000000100 RBX: fffff21e009f5300 RCX: 0000000000000004
       RDX: dead0000000000ff RSI: 0000000000000202 RDI: fffff21e009f5300
       RBP: 0000000000000000 R08: 0000000000000000 R09: ffffaf154080bb00
       R10: ffffaf154080bc30 R11: 0000000000000040 R12: ffff993749a39518
       R13: 0000000000000000 R14: fffff21e009f5300 R15: fffff21e009f5300
        ocfs2_inode_lock_with_page+0x25/0x30 [ocfs2]
        ocfs2_readpage+0x41/0x2d0 [ocfs2]
        filemap_fault+0x12b/0x5c0
        ocfs2_fault+0x29/0xb0 [ocfs2]
        __do_fault+0x1a/0xa0
        __handle_mm_fault+0xbe8/0x1090
        handle_mm_fault+0xaa/0x1f0
        __do_page_fault+0x235/0x4b0
        trace_do_page_fault+0x3c/0x110
        async_page_fault+0x28/0x30
       RIP: 0033:0x7fa75ded638e
       RSP: 002b:00007ffd6657db18 EFLAGS: 00010287
       RAX: 000055c7662fb700 RBX: 0000000000000001 RCX: 000055c7662fb700
       RDX: 0000000000001770 RSI: 00007fa75e909000 RDI: 000055c7662fb700
       RBP: 0000000000000003 R08: 000000000000000e R09: 0000000000000000
       R10: 0000000000000483 R11: 00007fa75ded61b0 R12: 00007fa75e90a770
       R13: 000000000000000e R14: 0000000000001770 R15: 0000000000000000
    
    About performance improvement, we can see the testing time is reduced,
    and CPU utilization decreases, the detailed data is as follows.  I ran
    multi_mmap test case in ocfs2-test package in a three nodes cluster.
    
    Before applying this patch:
        PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
       2754 ocfs2te+  20   0  170248   6980   4856 D 80.73 0.341   0:18.71 multi_mmap
       1505 root      rt   0  222236 123060  97224 S 2.658 6.015   0:01.44 corosync
          5 root      20   0       0      0      0 S 1.329 0.000   0:00.19 kworker/u8:0
         95 root      20   0       0      0      0 S 1.329 0.000   0:00.25 kworker/u8:1
       2728 root      20   0       0      0      0 S 0.997 0.000   0:00.24 jbd2/sda1-33
       2721 root      20   0       0      0      0 S 0.664 0.000   0:00.07 ocfs2dc-3C8CFD4
       2750 ocfs2te+  20   0  142976   4652   3532 S 0.664 0.227   0:00.28 mpirun
    
      ocfs2test@tb-node2:~>multiple_run.sh -i ens3 -k ~/linux-4.4.21-69.tar.gz -o ~/ocfs2mullog -C hacluster -s pcmk -n tb-node2,tb-node1,tb-node3 -d /dev/sda1 -b 4096 -c 32768 -t multi_mmap /mnt/shared
      Tests with "-b 4096 -C 32768"
      Thu Dec 28 14:44:52 CST 2017
      multi_mmap..................................................Passed.
      Runtime 783 seconds.
    
    After apply this patch:
    
        PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
       2508 ocfs2te+  20   0  170248   6804   4680 R 54.00 0.333   0:55.37 multi_mmap
        155 root      20   0       0      0      0 S 2.667 0.000   0:01.20 kworker/u8:3
         95 root      20   0       0      0      0 S 2.000 0.000   0:01.58 kworker/u8:1
       2504 ocfs2te+  20   0  142976   4604   3480 R 1.667 0.225   0:01.65 mpirun
          5 root      20   0       0      0      0 S 1.000 0.000   0:01.36 kworker/u8:0
       2482 root      20   0       0      0      0 S 1.000 0.000   0:00.86 jbd2/sda1-33
        299 root       0 -20       0      0      0 S 0.333 0.000   0:00.13 kworker/2:1H
        335 root       0 -20       0      0      0 S 0.333 0.000   0:00.17 kworker/1:1H
        535 root      20   0   12140   7268   1456 S 0.333 0.355   0:00.34 haveged
       1282 root      rt   0  222284 123108  97224 S 0.333 6.017   0:01.33 corosync
    
      ocfs2test@tb-node2:~>multiple_run.sh -i ens3 -k ~/linux-4.4.21-69.tar.gz -o ~/ocfs2mullog -C hacluster -s pcmk -n tb-node2,tb-node1,tb-node3 -d /dev/sda1 -b 4096 -c 32768 -t multi_mmap /mnt/shared
      Tests with "-b 4096 -C 32768"
      Thu Dec 28 15:04:12 CST 2017
      multi_mmap..................................................Passed.
      Runtime 487 seconds.
    
    Link: http://lkml.kernel.org/r/1514447305-30814-1-git-send-email-ghe@suse.com
    Fixes: 1cce4df04f37 ("ocfs2: do not lock/unlock() inode DLM lock")
    Signed-off-by: Gang He <ghe@suse.com>
    Reviewed-by: Eric Ren <zren@suse.com>
    Acked-by: alex chen <alex.chen@huawei.com>
    Acked-by: piaojun <piaojun@huawei.com>
    Cc: Mark Fasheh <mfasheh@versity.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joseph Qi <jiangqi903@gmail.com>
    Cc: Changwei Ge <ge.changwei@h3c.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ec4c78e3444c317c724820f0f40324e65470654
Author: Brian Norris <briannorris@chromium.org>
Date:   Fri Jan 12 13:08:37 2018 -0800

    mwifiex: resolve reset vs. remove()/shutdown() deadlocks
    
    commit a64e7a79dd6030479caad603c8d78e6c9c14904f upstream.
    
    Commit b014e96d1abb ("PCI: Protect pci_error_handlers->reset_notify()
    usage with device_lock()") resolves races between driver reset and
    removal, but it introduces some new deadlock problems. If we see a
    timeout while we've already started suspending, removing, or shutting
    down the driver, we might see:
    
    (a) a worker thread, running mwifiex_pcie_work() ->
        mwifiex_pcie_card_reset_work() -> pci_reset_function()
    (b) a removal thread, running mwifiex_pcie_remove() ->
        mwifiex_free_adapter() -> mwifiex_unregister() ->
        mwifiex_cleanup_pcie() -> cancel_work_sync(&card->work)
    
    Unfortunately, mwifiex_pcie_remove() already holds the device lock that
    pci_reset_function() is now requesting, and so we see a deadlock.
    
    It's necessary to cancel and synchronize our outstanding work before
    tearing down the driver, so we can't have this work wait indefinitely
    for the lock.
    
    It's reasonable to only "try" to reset here, since this will mostly
    happen for cases where it's already difficult to reset the firmware
    anyway (e.g., while we're suspending or powering off the system). And if
    reset *really* needs to happen, we can always try again later.
    
    Fixes: b014e96d1abb ("PCI: Protect pci_error_handlers->reset_notify() usage with device_lock()")
    Cc: <stable@vger.kernel.org>
    Cc: Xinming Hu <huxm@marvell.com>
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62def1d604a5473055b1cce23b55b7639302710a
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Sun Nov 5 21:27:41 2017 -0800

    PM / devfreq: Propagate error from devfreq_add_device()
    
    commit d1bf2d30728f310f72296b54f0651ecdb09cbb12 upstream.
    
    Propagate the error of devfreq_add_device() in devm_devfreq_add_device()
    rather than statically returning ENOMEM. This makes it slightly faster
    to pinpoint the cause of a returned error.
    
    Fixes: 8cd84092d35e ("PM / devfreq: Add resource-managed function for devfreq device")
    Cc: stable@vger.kernel.org
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37efa60e167036b3eaed20e70095bbdcb72a55ce
Author: Christian König <ckoenig.leichtzumerken@gmail.com>
Date:   Thu Jan 4 14:24:19 2018 +0100

    swiotlb: suppress warning when __GFP_NOWARN is set
    
    commit d0bc0c2a31c95002d37c3cc511ffdcab851b3256 upstream.
    
    TTM tries to allocate coherent memory in chunks of 2MB first to improve
    TLB efficiency and falls back to allocating 4K pages if that fails.
    
    Suppress the warning when the 2MB allocations fails since there is a
    valid fall back path.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reported-by: Mike Galbraith <efault@gmx.de>
    Acked-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=104082
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e56a935a4b751bc8cb5288480b23827f8d2564d
Author: Shilpasri G Bhat <shilpa.bhat@linux.vnet.ibm.com>
Date:   Fri Jan 12 12:43:53 2018 +0530

    cpufreq: powernv: Dont assume distinct pstate values for nominal and pmin
    
    commit 3fa4680b860bf48b437d6a2c039789c4abe202ae upstream.
    
    Some OpenPOWER boxes can have same pstate values for nominal and
    pmin pstates. In these boxes the current code will not initialize
    'powernv_pstate_info.min' variable and result in erroneous CPU
    frequency reporting. This patch fixes this problem.
    
    Fixes: 09ca4c9b5958 (cpufreq: powernv: Replacing pstate_id with frequency table index)
    Reported-by: Alvin Wang <wangat@tw.ibm.com>
    Signed-off-by: Shilpasri G Bhat <shilpa.bhat@linux.vnet.ibm.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Cc: 4.8+ <stable@vger.kernel.org> # 4.8+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75a3f11c7bad580dc5fbf4175f5dc39192f088d5
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Fri Jan 12 15:11:59 2018 -0800

    RDMA/rxe: Fix rxe_qp_cleanup()
    
    commit bb3ffb7ad48a21e98a5c64eb21103a74fd9f03f6 upstream.
    
    rxe_qp_cleanup() can sleep so it must be run in thread context and
    not in atomic context. This patch avoids that the following bug is
    triggered:
    
    Kernel BUG at 00000000560033f3 [verbose debug info unavailable]
    BUG: sleeping function called from invalid context at net/core/sock.c:2761
    in_atomic(): 1, irqs_disabled(): 0, pid: 7, name: ksoftirqd/0
    INFO: lockdep is turned off.
    Preemption disabled at:
    [<00000000b6e69628>] __do_softirq+0x4e/0x540
    CPU: 0 PID: 7 Comm: ksoftirqd/0 Not tainted 4.15.0-rc7-dbg+ #4
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
    Call Trace:
     dump_stack+0x85/0xbf
     ___might_sleep+0x177/0x260
     lock_sock_nested+0x1d/0x90
     inet_shutdown+0x2e/0xd0
     rxe_qp_cleanup+0x107/0x140 [rdma_rxe]
     rxe_elem_release+0x18/0x80 [rdma_rxe]
     rxe_requester+0x1cf/0x11b0 [rdma_rxe]
     rxe_do_task+0x78/0xf0 [rdma_rxe]
     tasklet_action+0x99/0x270
     __do_softirq+0xc0/0x540
     run_ksoftirqd+0x1c/0x70
     smpboot_thread_fn+0x1be/0x270
     kthread+0x117/0x130
     ret_from_fork+0x24/0x30
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 571cb36fac2f62bfe5fe7fa488f0ea7271db9c2f
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Fri Jan 12 15:11:58 2018 -0800

    RDMA/rxe: Fix a race condition in rxe_requester()
    
    commit 65567e41219888feec72fee1de98ccf1efbbc16d upstream.
    
    The rxe driver works as follows:
    * The send queue, receive queue and completion queues are implemented as
      circular buffers.
    * ib_post_send() and ib_post_recv() calls are serialized through a spinlock.
    * Removing elements from various queues happens from tasklet
      context. Tasklets are guaranteed to run on at most one CPU. This serializes
      access to these queues. See also rxe_completer(), rxe_requester() and
      rxe_responder().
    * rxe_completer() processes the skbs queued onto qp->resp_pkts.
    * rxe_requester() handles the send queue (qp->sq.queue).
    * rxe_responder() processes the skbs queued onto qp->req_pkts.
    
    Since rxe_drain_req_pkts() processes qp->req_pkts, calling
    rxe_drain_req_pkts() from rxe_requester() is racy. Hence this patch.
    
    Reported-by: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b4e8a46d4cf2592910275dee6036ceb1d351975
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Tue Jan 9 11:23:40 2018 -0800

    RDMA/rxe: Fix a race condition related to the QP error state
    
    commit 6f301e06de4cf9ab7303f5acd43e64fcd4aa04be upstream.
    
    The following sequence:
    * Change queue pair state into IB_QPS_ERR.
    * Post a work request on the queue pair.
    
    Triggers the following race condition in the rdma_rxe driver:
    * rxe_qp_error() triggers an asynchronous call of rxe_completer(), the function
      that examines the QP send queue.
    * rxe_post_send() posts a work request on the QP send queue.
    
    If rxe_completer() runs prior to rxe_post_send(), it will drain the send
    queue and the driver will assume no further action is necessary.
    However, once we post the send to the send queue, because the queue is
    in error, no send completion will ever happen and the send will get
    stuck.  In order to process the send, we need to make sure that
    rxe_completer() gets run after a send is posted to a queue pair in an
    error state.  This patch ensures that happens.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Moni Shoua <monis@mellanox.com>
    Cc: <stable@vger.kernel.org> # v4.8
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dd2dbdd4606fc44da2cbb59fcd1c560c3f3fb94
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 9 17:26:24 2018 +0100

    kselftest: fix OOM in memory compaction test
    
    commit 4c1baad223906943b595a887305f2e8124821dad upstream.
    
    Running the compaction_test sometimes results in out-of-memory
    failures. When I debugged this, it turned out that the code to
    reset the number of hugepages to the initial value is simply
    broken since we write into an open sysctl file descriptor
    multiple times without seeking back to the start.
    
    Adding the lseek here fixes the problem.
    
    Cc: stable@vger.kernel.org
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Link: https://bugs.linaro.org/show_bug.cgi?id=3145
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c2e7a048d19dce8b82e0dc169feb1721d856d37
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Fri Jan 5 17:31:18 2018 +0100

    selftests: seccomp: fix compile error seccomp_bpf
    
    commit 912ec316686df352028afb6efec59e47a958a24d upstream.
    
    aarch64-linux-gnu-gcc -Wl,-no-as-needed -Wall
        -lpthread seccomp_bpf.c -o seccomp_bpf
    seccomp_bpf.c: In function 'tracer_ptrace':
    seccomp_bpf.c:1720:12: error: '__NR_open' undeclared
        (first use in this function)
      if (nr == __NR_open)
                ^~~~~~~~~
    seccomp_bpf.c:1720:12: note: each undeclared identifier is reported
        only once for each function it appears in
    In file included from seccomp_bpf.c:48:0:
    seccomp_bpf.c: In function 'TRACE_syscall_ptrace_syscall_dropped':
    seccomp_bpf.c:1795:39: error: '__NR_open' undeclared
        (first use in this function)
      EXPECT_SYSCALL_RETURN(EPERM, syscall(__NR_open));
                                           ^
    open(2) is a legacy syscall, replaced with openat(2) since 2.6.16.
    Thus new architectures in the kernel, such as arm64, don't implement
    these legacy syscalls.
    
    Fixes: a33b2d0359a0 ("selftests/seccomp: Add tests for basic ptrace actions")
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Tested-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Cc: stable@vger.kernel.org
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d6eb826e65d8b92d1f8cb081b33bb0786a5a4ab
Author: Michael J. Ruhl <michael.j.ruhl@intel.com>
Date:   Thu Feb 1 12:31:06 2018 -0800

    IB/core: Avoid a potential OOPs for an unused optional parameter
    
    commit 2ff124d597c2df8696169ce0006fc974c49a4569 upstream.
    
    The ev_file is an optional parameter for CQ creation. If the parameter
    is not passed, the ev_file pointer will be NULL.  Using that pointer
    to set the cq_context will result in an OOPs.
    
    Verify that ev_file is not NULL before using.
    
    Cc: <stable@vger.kernel.org> # 4.14.x
    Fixes: 9ee79fce3642 ("IB/core: Add completion queue (cq) object actions")
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Signed-off-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d40ad865704b0a3547ca199acba102020ebb947e
Author: Bodong Wang <bodong@mellanox.com>
Date:   Fri Jan 12 07:58:41 2018 +0200

    IB/core: Fix ib_wc structure size to remain in 64 bytes boundary
    
    commit cd2a6e7d384b043d5d029e39663061cebc949385 upstream.
    
    The change of slid from u16 to u32 results in sizeof(struct ib_wc)
    cross 64B boundary, which causes more cache misses. This patch
    rearranges the fields and remain the size to 64B.
    
    Pahole output before this change:
    
    struct ib_wc {
            union {
                    u64                wr_id;                /*           8 */
                    struct ib_cqe *    wr_cqe;               /*           8 */
            };                                               /*     0     8 */
            enum ib_wc_status          status;               /*     8     4 */
            enum ib_wc_opcode          opcode;               /*    12     4 */
            u32                        vendor_err;           /*    16     4 */
            u32                        byte_len;             /*    20     4 */
            struct ib_qp *             qp;                   /*    24     8 */
            union {
                    __be32             imm_data;             /*           4 */
                    u32                invalidate_rkey;      /*           4 */
            } ex;                                            /*    32     4 */
            u32                        src_qp;               /*    36     4 */
            int                        wc_flags;             /*    40     4 */
            u16                        pkey_index;           /*    44     2 */
    
            /* XXX 2 bytes hole, try to pack */
    
            u32                        slid;                 /*    48     4 */
            u8                         sl;                   /*    52     1 */
            u8                         dlid_path_bits;       /*    53     1 */
            u8                         port_num;             /*    54     1 */
            u8                         smac[6];              /*    55     6 */
    
            /* XXX 1 byte hole, try to pack */
    
            u16                        vlan_id;              /*    62     2 */
            /* --- cacheline 1 boundary (64 bytes) --- */
            u8                         network_hdr_type;     /*    64     1 */
    
            /* size: 72, cachelines: 2, members: 17 */
            /* sum members: 62, holes: 2, sum holes: 3 */
            /* padding: 7 */
            /* last cacheline: 8 bytes */
    };
    
    Pahole output after this change:
    
    struct ib_wc {
            union {
                    u64                wr_id;                /*           8 */
                    struct ib_cqe *    wr_cqe;               /*           8 */
            };                                               /*     0     8 */
            enum ib_wc_status          status;               /*     8     4 */
            enum ib_wc_opcode          opcode;               /*    12     4 */
            u32                        vendor_err;           /*    16     4 */
            u32                        byte_len;             /*    20     4 */
            struct ib_qp *             qp;                   /*    24     8 */
            union {
                    __be32             imm_data;             /*           4 */
                    u32                invalidate_rkey;      /*           4 */
            } ex;                                            /*    32     4 */
            u32                        src_qp;               /*    36     4 */
            u32                        slid;                 /*    40     4 */
            int                        wc_flags;             /*    44     4 */
            u16                        pkey_index;           /*    48     2 */
            u8                         sl;                   /*    50     1 */
            u8                         dlid_path_bits;       /*    51     1 */
            u8                         port_num;             /*    52     1 */
            u8                         smac[6];              /*    53     6 */
    
            /* XXX 1 byte hole, try to pack */
    
            u16                        vlan_id;              /*    60     2 */
            u8                         network_hdr_type;     /*    62     1 */
    
            /* size: 64, cachelines: 1, members: 17 */
            /* sum members: 62, holes: 1, sum holes: 1 */
            /* padding: 1 */
    };
    
    Fixes: 7db20ecd1d97 ("IB/core: Change wc.slid from 16 to 32 bits")
    Signed-off-by: Bodong Wang <bodong@mellanox.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18c0ee900c8d93ae48a99cc1f46d372897b8e9a6
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Wed Jan 3 13:28:18 2018 -0800

    IB/core: Fix two kernel warnings triggered by rxe registration
    
    commit 02ee9da347873699603d9ce0112a80b5dd69dea1 upstream.
    
    Eliminate the WARN_ONs that create following two warnings when
    registering an rxe device:
    
    WARNING: CPU: 2 PID: 1005 at drivers/infiniband/core/device.c:449 ib_register_device+0x591/0x640 [ib_core]
    CPU: 2 PID: 1005 Comm: run_tests Not tainted 4.15.0-rc4-dbg+ #2
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
    RIP: 0010:ib_register_device+0x591/0x640 [ib_core]
    Call Trace:
     rxe_register_device+0x3c6/0x470 [rdma_rxe]
     rxe_add+0x543/0x5e0 [rdma_rxe]
     rxe_net_add+0x37/0xb0 [rdma_rxe]
     rxe_param_set_add+0x5a/0x120 [rdma_rxe]
     param_attr_store+0x5e/0xc0
     module_attr_store+0x19/0x30
     sysfs_kf_write+0x3d/0x50
     kernfs_fop_write+0x116/0x1a0
     __vfs_write+0x23/0x120
     vfs_write+0xbe/0x1b0
     SyS_write+0x44/0xa0
     entry_SYSCALL_64_fastpath+0x23/0x9a
    
    WARNING: CPU: 2 PID: 1005 at drivers/infiniband/core/sysfs.c:1279 ib_device_register_sysfs+0x11d/0x160 [ib_core]
    CPU: 2 PID: 1005 Comm: run_tests Tainted: G        W        4.15.0-rc4-dbg+ #2
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
    RIP: 0010:ib_device_register_sysfs+0x11d/0x160 [ib_core]
    Call Trace:
     ib_register_device+0x3f7/0x640 [ib_core]
     rxe_register_device+0x3c6/0x470 [rdma_rxe]
     rxe_add+0x543/0x5e0 [rdma_rxe]
     rxe_net_add+0x37/0xb0 [rdma_rxe]
     rxe_param_set_add+0x5a/0x120 [rdma_rxe]
     param_attr_store+0x5e/0xc0
     module_attr_store+0x19/0x30
     sysfs_kf_write+0x3d/0x50
     kernfs_fop_write+0x116/0x1a0
     __vfs_write+0x23/0x120
     vfs_write+0xbe/0x1b0
     SyS_write+0x44/0xa0
     entry_SYSCALL_64_fastpath+0x23/0x9a
    
    The code should accept either a parent pointer or a fully specified DMA
    specification without producing warnings.
    
    Fixes: 99db9494035f ("IB/core: Remove ib_device.dma_device")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ade57e9031fac0c972c488acfce58e9a50e2c8dc
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Fri Jan 12 07:58:40 2018 +0200

    IB/mlx4: Fix incorrectly releasing steerable UD QPs when have only ETH ports
    
    commit 852f6927594d0d3e8632c889b2ab38cbc46476ad upstream.
    
    Allocating steerable UD QPs depends on having at least one IB port,
    while releasing those QPs does not.
    
    As a result, when there are only ETH ports, the IB (RoCE) driver
    requests releasing a qp range whose base qp is zero, with
    qp count zero.
    
    When SR-IOV is enabled, and the VF driver is running on a VM over
    a hypervisor which treats such qp release calls as errors
    (rather than NOPs), we see lines in the VM message log like:
    
     mlx4_core 0002:00:02.0: Failed to release qp range base:0 cnt:0
    
    Fix this by adding a check for a zero count in mlx4_release_qp_range()
    (which thus treats releasing 0 qps as a nop), and eliminating the
    check for device managed flow steering when releasing steerable UD QPs.
    (Freeing ib_uc_qpns_bitmap unconditionally is also OK, since it
    remains NULL when steerable UD QPs are not allocated).
    
    Fixes: 4196670be786 ("IB/mlx4: Don't allocate range of steerable UD QPs for Ethernet-only device")
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a4255467cd8ce9e2c5f9a25b50f2fe692cf1bb8
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Tue Nov 14 04:34:52 2017 -0800

    IB/qib: Fix comparison error with qperf compare/swap test
    
    commit 87b3524cb5058fdc7c2afdb92bdb2e079661ddc4 upstream.
    
    This failure exists with qib:
    
    ver_rc_compare_swap:
    mismatch, sequence 2, expected 123456789abcdef, got 0
    
    The request builder was using the incorrect inlines to
    build the request header resulting in incorrect data
    in the atomic header.
    
    Fix by using the appropriate inlines to create the request.
    
    Fixes: 261a4351844b ("IB/qib,IB/hfi: Use core common header file")
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a748f0bb2e4aca2c18223585523eb07199a4715
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Sun Jan 28 11:25:29 2018 +0200

    IB/umad: Fix use of unprotected device pointer
    
    commit f23a5350e43c810ca36b26d4ed4ecd9a08686f47 upstream.
    
    The ib_write_umad() is protected by taking the umad file mutex.
    However, it accesses file->port->ib_dev -- which is protected only by the
    port's mutex (field file_mutex).
    
    The ib_umad_remove_one() calls ib_umad_kill_port() which sets
    port->ib_dev to NULL under the port mutex (NOT the file mutex).
    It then sets the mad agent to "dead" under the umad file mutex.
    
    This is a race condition -- because there is a window where
    port->ib_dev is NULL, while the agent is not "dead".
    
    As a result, we saw stack traces like:
    
    [16490.678059] BUG: unable to handle kernel NULL pointer dereference at 00000000000000b0
    [16490.678246] IP: ib_umad_write+0x29c/0xa3a [ib_umad]
    [16490.678333] PGD 0 P4D 0
    [16490.678404] Oops: 0000 [#1] SMP PTI
    [16490.678466] Modules linked in: rdma_ucm(OE) ib_ucm(OE) rdma_cm(OE) iw_cm(OE) ib_ipoib(OE) ib_cm(OE) ib_uverbs(OE) ib_umad(OE) mlx4_en(OE) ptp pps_core mlx4_ib(OE-) ib_core(OE) mlx4_core(OE) mlx_compat
    (OE) memtrack(OE) devlink mst_pciconf(OE) mst_pci(OE) netconsole nfsv3 nfs_acl nfs lockd grace fscache cfg80211 rfkill esp6_offload esp6 esp4_offload esp4 sunrpc kvm_intel kvm ppdev parport_pc irqbypass
    parport joydev i2c_piix4 virtio_balloon cirrus drm_kms_helper ttm drm e1000 serio_raw virtio_pci virtio_ring virtio ata_generic pata_acpi qemu_fw_cfg [last unloaded: mlxfw]
    [16490.679202] CPU: 4 PID: 3115 Comm: sminfo Tainted: G           OE   4.14.13-300.fc27.x86_64 #1
    [16490.679339] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu2 04/01/2014
    [16490.679477] task: ffff9cf753890000 task.stack: ffffaf70c26b0000
    [16490.679571] RIP: 0010:ib_umad_write+0x29c/0xa3a [ib_umad]
    [16490.679664] RSP: 0018:ffffaf70c26b3d90 EFLAGS: 00010202
    [16490.679747] RAX: 0000000000000010 RBX: ffff9cf75610fd80 RCX: 0000000000000000
    [16490.679856] RDX: 0000000000000001 RSI: 00007ffdf2bfd714 RDI: ffff9cf6bb2a9c00
    
    In the above trace, ib_umad_write is trying to dereference the NULL
    file->port->ib_dev pointer.
    
    Fix this by using the agent's device pointer (the device field
    in struct ib_mad_agent) -- which IS protected by the umad file mutex.
    
    Fixes: 44c58487d51a ("IB/core: Define 'ib' and 'roce' rdma_ah_attr types")
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e99306bb4f6741d5482f924585975db5a6934953
Author: Steffen Weber <steffen.weber@gmail.com>
Date:   Tue Jan 2 19:24:09 2018 +0100

    scsi: smartpqi: allow static build ("built-in")
    
    commit dc2db1dc5fb9ab3a43b305c2720fee5278dbee2a upstream.
    
    If CONFIG_SCSI_SMARTPQI=y then don't build this driver as a module.
    
    Signed-off-by: Steffen Weber <steffen.weber@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6f2efb86440af16ecdf08e23924a4dc52c1bd4a
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Jan 15 11:07:27 2018 -0800

    tracing: Prevent PROFILE_ALL_BRANCHES when FORTIFY_SOURCE=y
    
    commit 68e76e034b6b1c1ce2eece1ab8ae4008e14be470 upstream.
    
    I regularly get 50 MB - 60 MB files during kernel randconfig builds.
    These large files mostly contain (many repeats of; e.g., 124,594):
    
    In file included from ../include/linux/string.h:6:0,
                     from ../include/linux/uuid.h:20,
                     from ../include/linux/mod_devicetable.h:13,
                     from ../scripts/mod/devicetable-offsets.c:3:
    ../include/linux/compiler.h:64:4: warning: '______f' is static but declared in inline function 'strcpy' which is not static [enabled by default]
        ______f = {     \
        ^
    ../include/linux/compiler.h:56:23: note: in expansion of macro '__trace_if'
                           ^
    ../include/linux/string.h:425:2: note: in expansion of macro 'if'
      if (p_size == (size_t)-1 && q_size == (size_t)-1)
      ^
    
    This only happens when CONFIG_FORTIFY_SOURCE=y and
    CONFIG_PROFILE_ALL_BRANCHES=y, so prevent PROFILE_ALL_BRANCHES if
    FORTIFY_SOURCE=y.
    
    Link: http://lkml.kernel.org/r/9199446b-a141-c0c3-9678-a3f9107f2750@infradead.org
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e83b2ff485cacbf73d27f821e07a8c78ad8cc68
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Feb 16 20:23:12 2018 +0100

    Linux 4.14.20

commit 1dbdcf117b227eb966691818e850a2fde589f2a2
Author: Uma Krishnan <ukrishn@linux.vnet.ibm.com>
Date:   Wed Jan 3 16:54:02 2018 -0600

    scsi: cxlflash: Reset command ioasc
    
    commit 96cf727fe8f102bf92150b741db71ee39fb8c521 upstream.
    
    In the event of a command failure, cxlflash returns the failure to the upper
    layers to process. After processing the error, when the command is queued
    again, the private command structure will not be zeroed and the ioasc could be
    stale. Per the SISLite specification, the AFU only sets the ioasc in the
    presence of a failure. Thus, even though the original command succeeds the
    second time, the command is considered a failure due to stale ioasc. This
    cycle repeats indefinitely and can cause a hang or IO failure.
    
    To fix the issue, clear the ioasc before queuing any command.
    
    [mkp: added Cc: stable per request]
    
    Fixes: 479ad8e9d48c ("scsi: cxlflash: Remove zeroing of private command data")
    Signed-off-by: Uma Krishnan <ukrishn@linux.vnet.ibm.com>
    Acked-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fc77964eaa97884e630487254e4c265644fb116
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Nov 20 16:00:31 2017 -0800

    scsi: lpfc: Fix crash after bad bar setup on driver attachment
    
    commit e4b9794efdce13242f4af6682f3ed48ce3864a87 upstream.
    
    In test cases where an instance of the driver is detached and
    reattached, the driver will crash on reattachment. There is a compound
    if statement that will skip over the bar setup if the pci_resource_start
    call is not successful. The driver erroneously returns success to its
    bar setup in this scenario even though the bars aren't properly
    configured.
    
    Rework the offending code segment for proper initialization steps.  If
    the pci_resource_start call fails, -ENOMEM is now returned.
    
    Sample stack:
    
    rport-5:0-10: blocked FC remote port time out: removing rport
    BUG: unable to handle kernel NULL pointer dereference at           (null)
    ... lpfc_sli4_wait_bmbx_ready+0x32/0x70 [lpfc]
    ...
    ...  RIP: 0010:...  ... lpfc_sli4_wait_bmbx_ready+0x32/0x70 [lpfc]
     Call Trace:
      ... lpfc_sli4_post_sync_mbox+0x106/0x4d0 [lpfc]
      ... ? __alloc_pages_nodemask+0x176/0x420
      ... ? __kmalloc+0x2e/0x230
      ... lpfc_sli_issue_mbox_s4+0x533/0x720 [lpfc]
      ... ? mempool_alloc+0x69/0x170
      ... ? dma_generic_alloc_coherent+0x8f/0x140
      ... lpfc_sli_issue_mbox+0xf/0x20 [lpfc]
      ... lpfc_sli4_driver_resource_setup+0xa6f/0x1130 [lpfc]
      ... ? lpfc_pci_probe_one+0x23e/0x16f0 [lpfc]
      ... lpfc_pci_probe_one+0x445/0x16f0 [lpfc]
      ... local_pci_probe+0x45/0xa0
      ... work_for_cpu_fn+0x14/0x20
      ... process_one_work+0x17a/0x440
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce6faf10fd6544febcf5c3efe453193def873c60
Author: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
Date:   Thu Dec 7 09:40:38 2017 -0800

    rcu: Export init_rcu_head() and destroy_rcu_head() to GPL modules
    
    commit 156baec39732f025dc778e00da95fc10d6e45885 upstream.
    
    Use of init_rcu_head() and destroy_rcu_head() from modules results in
    the following build-time error with CONFIG_DEBUG_OBJECTS_RCU_HEAD=y:
    
            ERROR: "init_rcu_head" [drivers/scsi/scsi_mod.ko] undefined!
            ERROR: "destroy_rcu_head" [drivers/scsi/scsi_mod.ko] undefined!
    
    This commit therefore adds EXPORT_SYMBOL_GPL() for each to allow them to
    be used by GPL-licensed kernel modules.
    
    Reported-by: Bart Van Assche <Bart.VanAssche@wdc.com>
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c561093ed6843684690436dea034af53b462cfe5
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Mon Dec 4 10:06:23 2017 -0800

    scsi: core: Ensure that the SCSI error handler gets woken up
    
    commit 3bd6f43f5cb3714f70c591514f344389df593501 upstream.
    
    If scsi_eh_scmd_add() is called concurrently with
    scsi_host_queue_ready() while shost->host_blocked > 0 then it can
    happen that neither function wakes up the SCSI error handler. Fix
    this by making every function that decreases the host_busy counter
    wake up the error handler if necessary and by protecting the
    host_failed checks with the SCSI host lock.
    
    Reported-by: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    References: https://marc.info/?l=linux-kernel&m=150461610630736
    Fixes: commit 746650160866 ("scsi: convert host_busy to atomic_t")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Reviewed-by: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Tested-by: Stuart Hayes <stuart.w.hayes@gmail.com>
    Cc: Konstantin Khorenko <khorenko@virtuozzo.com>
    Cc: Stuart Hayes <stuart.w.hayes@gmail.com>
    Cc: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b470fb7b791039d8afea0e4ebcbd6f4a41723c47
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Mon Feb 5 22:05:31 2018 -0500

    ftrace: Remove incorrect setting of glob search field
    
    commit 7b6586562708d2b3a04fe49f217ddbadbbbb0546 upstream.
    
    __unregister_ftrace_function_probe() will incorrectly parse the glob filter
    because it resets the search variable that was setup by filter_parse_regex().
    
    Al Viro reported this:
    
        After that call of filter_parse_regex() we could have func_g.search not
        equal to glob only if glob started with '!' or '*'.  In the former case
        we would've buggered off with -EINVAL (not = 1).  In the latter we
        would've set func_g.search equal to glob + 1, calculated the length of
        that thing in func_g.len and proceeded to reset func_g.search back to
        glob.
    
        Suppose the glob is e.g. *foo*.  We end up with
                func_g.type = MATCH_MIDDLE_ONLY;
                func_g.len = 3;
                func_g.search = "*foo";
        Feeding that to ftrace_match_record() will not do anything sane - we
        will be looking for names containing "*foo" (->len is ignored for that
        one).
    
    Link: http://lkml.kernel.org/r/20180127031706.GE13338@ZenIV.linux.org.uk
    
    Fixes: 3ba009297149f ("ftrace: Introduce ftrace_glob structure")
    Reviewed-by: Dmitry Safonov <0x7f454c46@gmail.com>
    Reviewed-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9ef4003744321041b8cd2495a576c0be83c4b91
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 31 00:49:18 2018 -0800

    devpts: fix error handling in devpts_mntget()
    
    commit c9cc8d01fb04117928830449388512a5047569c9 upstream.
    
    If devpts_ptmx_path() returns an error code, then devpts_mntget()
    dereferences an ERR_PTR():
    
        BUG: unable to handle kernel paging request at fffffffffffffff5
        IP: devpts_mntget+0x13f/0x280 fs/devpts/inode.c:173
    
    Fix it by returning early in the error paths.
    
    Reproducer:
    
        #define _GNU_SOURCE
        #include <fcntl.h>
        #include <sched.h>
        #include <sys/ioctl.h>
        #define TIOCGPTPEER _IO('T', 0x41)
    
        int main()
        {
            for (;;) {
                int fd = open("/dev/ptmx", 0);
                unshare(CLONE_NEWNS);
                ioctl(fd, TIOCGPTPEER, 0);
            }
        }
    
    Fixes: 311fc65c9fb9 ("pty: Repair TIOCGPTPEER")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dff5406432ffd805e6917d7b7005e1098354596b
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Tue Aug 1 05:02:38 2017 -0500

    mn10300/misalignment: Use SIGSEGV SEGV_MAPERR to report a failed user copy
    
    commit 6ac1dc736b323011a55ecd1fc5897c24c4f77cbd upstream.
    
    Setting si_code to 0 is the same a setting si_code to SI_USER which is definitely
    not correct.  With si_code set to SI_USER si_pid and si_uid will be copied to
    userspace instead of si_addr.  Which is very wrong.
    
    So fix this by using a sensible si_code (SEGV_MAPERR) for this failure.
    
    Fixes: b920de1b77b7 ("mn10300: add the MN10300/AM33 architecture to the kernel")
    Cc: David Howells <dhowells@redhat.com>
    Cc: Masakazu Urade <urade.masakazu@jp.panasonic.com>
    Cc: Koichi Yasutake <yasutake.koichi@jp.panasonic.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7aee3941e1e10a662e5b22f345933280f0caac8
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Wed Jan 3 18:54:42 2018 +0200

    ovl: take mnt_want_write() for removing impure xattr
    
    commit a5a927a7c82e28ea76599dee4019c41e372c911f upstream.
    
    The optimization in ovl_cache_get_impure() that tries to remove an
    unneeded "impure" xattr needs to take mnt_want_write() on upper fs.
    
    Fixes: 4edb83bb1041 ("ovl: constant d_ino for non-merge dirs")
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e822be7502707b994a4847f618b49f17d1c02dae
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Wed Nov 8 09:39:46 2017 +0200

    ovl: fix failure to fsync lower dir
    
    commit d796e77f1dd541fe34481af2eee6454688d13982 upstream.
    
    As a writable mount, it is not expected for overlayfs to return
    EINVAL/EROFS for fsync, even if dir/file is not changed.
    
    This commit fixes the case of fsync of directory, which is easier to
    address, because overlayfs already implements fsync file operation for
    directories.
    
    The problem reported by Raphael is that new PostgreSQL 10.0 with a
    database in overlayfs where lower layer in squashfs fails to start.
    The failure is due to fsync error, when PostgreSQL does fsync on all
    existing db directories on startup and a specific directory exists
    lower layer with no changes.
    
    Reported-by: Raphael Hertzog <raphael@ouaza.com>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Tested-by: Raphaël Hertzog <hertzog@debian.org>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fc03876355ac0bbbb774d15a362e35805c9db85
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Fri Feb 2 14:00:36 2018 -0700

    acpi, nfit: fix register dimm error handling
    
    commit 23fbd7c70aec7600e3227eb24259fc55bf6e4881 upstream.
    
    A NULL pointer reference kernel bug was observed when
    acpi_nfit_add_dimm() called in acpi_nfit_register_dimms() failed. This
    error path does not set nfit_mem->nvdimm, but the 2nd
    list_for_each_entry() loop in the function assumes it's always set. Add
    a check to nfit_mem->nvdimm.
    
    Fixes: ba9c8dd3c222 ("acpi, nfit: add dimm device notification support")
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f232bfdcdd768bb6ba5945f1f8f28faa94fc10b8
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Jan 19 10:06:03 2018 +0100

    ACPI: sbshc: remove raw pointer from printk() message
    
    commit 43cdd1b716b26f6af16da4e145b6578f98798bf6 upstream.
    
    There's no need to be printing a raw kernel pointer to the kernel log at
    every boot.  So just remove it, and change the whole message to use the
    correct dev_info() call at the same time.
    
    Reported-by: Wang Qize <wang_qize@venustech.com.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a51421b4cb099ce36cbc85689cabc0b3525d0e29
Author: Imre Deak <imre.deak@intel.com>
Date:   Wed Nov 29 19:51:37 2017 +0200

    drm/i915: Avoid PPS HW/SW state mismatch due to rounding
    
    commit 5643205c6340b565a3be0fe0e7305dc4aa551c74 upstream.
    
    We store a SW state of the t11_t12 timing in 100usec units but have to
    program it in 100msec as required by HW. The rounding used during
    programming means there will be a mismatch between the SW and HW states
    of this value triggering a "PPS state mismatch" error. Avoid this by
    storing the already rounded-up value in the SW state.
    
    Note that we still calculate panel_power_cycle_delay with the finer
    100usec granularity to avoid any needless waits using that version of
    the delay.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=103903
    Cc: joks <joks@linux.pl>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171129175137.2889-1-imre.deak@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 812245b4dbf663aa8c4d5483e2e7c5d2c0fb01fb
Author: Yan Markman <ymarkman@marvell.com>
Date:   Wed Jan 3 16:18:52 2018 +0100

    arm64: dts: marvell: add Ethernet aliases
    
    commit 474c5885582c4a79c21bcf01ed98f98c935f1f4a upstream.
    
    This patch adds Ethernet aliases in the Marvell Armada 7040 DB, 8040 DB
    and 8040 mcbin device trees so that the bootloader setup the MAC
    addresses correctly.
    
    Signed-off-by: Yan Markman <ymarkman@marvell.com>
    [Antoine: commit message, small fixes]
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a3d3015a73cff4a701db85b935f464492e49901
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Feb 8 14:02:32 2018 +0100

    objtool: Fix switch-table detection
    
    commit 99ce7962d52d1948ad6f2785e308d48e76e0a6ef upstream.
    
    Linus reported that GCC-7.3 generated a switch-table construct that
    confused objtool. It turns out that, in particular due to KASAN, it is
    possible to have unrelated .rodata usage in between the .rodata setup
    for the switch-table and the following indirect jump.
    
    The simple linear reverse search from the indirect jump would hit upon
    the KASAN .rodata usage first and fail to find a switch_table,
    resulting in a spurious 'sibling call with modified stack frame'
    warning.
    
    Fix this by creating a 'jump-stack' which we can 'unwind' during
    reversal, thereby skipping over much of the in-between code.
    
    This is not fool proof by any means, but is sufficient to make the
    known cases work. Future work would be to construct more comprehensive
    flow analysis code.
    
    Reported-and-tested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180208130232.GF25235@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4063cd5683ce4d4a18e89a61b9dbf8492c9faf31
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Tue Dec 5 09:29:19 2017 +0200

    btrfs: Handle btrfs_set_extent_delalloc failure in fixup worker
    
    commit f3038ee3a3f1017a1cbe9907e31fa12d366c5dcb upstream.
    
    This function was introduced by 247e743cbe6e ("Btrfs: Use async helpers
    to deal with pages that have been improperly dirtied") and it didn't do
    any error handling then. This function might very well fail in ENOMEM
    situation, yet it's not handled, this could lead to inconsistent state.
    So let's handle the failure by setting the mapping error bit.
    
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2617e62c2f120fe02a14e01232db4127f8e414a2
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Tue Feb 6 15:40:42 2018 -0800

    lib/ubsan: add type mismatch handler for new GCC/Clang
    
    commit 42440c1f9911b4b7b8ba3dc4e90c1197bc561211 upstream.
    
    UBSAN=y fails to build with new GCC/clang:
    
        arch/x86/kernel/head64.o: In function `sanitize_boot_params':
        arch/x86/include/asm/bootparam_utils.h:37: undefined reference to `__ubsan_handle_type_mismatch_v1'
    
    because Clang and GCC 8 slightly changed ABI for 'type mismatch' errors.
    Compiler now uses new __ubsan_handle_type_mismatch_v1() function with
    slightly modified 'struct type_mismatch_data'.
    
    Let's add new 'struct type_mismatch_data_common' which is independent from
    compiler's layout of 'struct type_mismatch_data'.  And make
    __ubsan_handle_type_mismatch[_v1]() functions transform compiler-dependent
    type mismatch data to our internal representation.  This way, we can
    support both old and new compilers with minimal amount of change.
    
    Link: http://lkml.kernel.org/r/20180119152853.16806-1-aryabinin@virtuozzo.com
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Reported-by: Sodagudi Prasad <psodagud@codeaurora.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a5df7771064defa931d44ed28fec673fe66752f
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Tue Feb 6 15:40:38 2018 -0800

    lib/ubsan.c: s/missaligned/misaligned/
    
    commit b8fe1120b4ba342b4f156d24e952d6e686b20298 upstream.
    
    A vist from the spelling fairy.
    
    Cc: David Laight <David.Laight@ACULAB.COM>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c87806a8e565e1253cad5072577b759f76f79fdb
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Mon Jan 8 14:28:50 2018 +0100

    clocksource/drivers/stm32: Fix kernel panic with multiple timers
    
    commit e0aeca3d8cbaea514eb98df1149faa918f9ec42d upstream.
    
    The current code hides a couple of bugs:
    
     - The global variable 'clock_event_ddata' is overwritten each time the
       init function is invoked.
    
    This is fixed with a kmemdup() instead of assigning the global variable. That
    prevents a memory corruption when several timers are defined in the DT.
    
     - The clockevent's event_handler is NULL if the time framework does
       not select the clockevent when registering it, this is fine but the init
       code generates in any case an interrupt leading to dereference this
       NULL pointer.
    
    The stm32 timer works with shadow registers, a mechanism to cache the
    registers. When a change is done in one buffered register, we need to
    artificially generate an event to force the timer to copy the content
    of the register to the shadowed register.
    
    The auto-reload register (ARR) is one of the shadowed register as well as
    the prescaler register (PSC), so in order to force the copy, we issue an
    event which in turn leads to an interrupt and the NULL dereference.
    
    This is fixed by inverting two lines where we clear the status register
    before enabling the update event interrupt.
    
    As this kernel crash is resulting from the combination of these two bugs,
    the fixes are grouped into a single patch.
    
    Tested-by: Benjamin Gaignard <benjamin.gaignard@st.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Acked-by: Benjamin Gaignard <benjamin.gaignard@st.com>
    Cc: Alexandre Torgue <alexandre.torgue@st.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Maxime Coquelin <mcoquelin.stm32@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1515418139-23276-11-git-send-email-daniel.lezcano@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 392640fd18f8f7433820d618c02e7d3d696f3d64
Author: Ming Lei <ming.lei@redhat.com>
Date:   Sat Jan 6 16:27:37 2018 +0800

    blk-mq: quiesce queue before freeing queue
    
    commit c2856ae2f315d754a0b6a268e4c6745b332b42e7 upstream.
    
    After queue is frozen, dispatch still may happen, for example:
    
    1) requests are submitted from several contexts
    2) requests from all these contexts are inserted to queue, but may dispatch
    to LLD in one of these paths, but other paths sill need to move on even all
    these requests are completed(that means blk_mq_freeze_queue_wait() returns
    at that time)
    3) dispatch after queue freezing still moves on and causes use-after-free,
    because request queue is freed
    
    This patch quiesces queue after it is frozen, and makes sure all
    in-progress dispatch are completed.
    
    This patch fixes the following kernel crash when running heavy IOs vs.
    deleting device:
    
    [   36.719251] BUG: unable to handle kernel NULL pointer dereference at 0000000000000008
    [   36.720318] IP: kyber_has_work+0x14/0x40
    [   36.720847] PGD 254bf5067 P4D 254bf5067 PUD 255e6a067 PMD 0
    [   36.721584] Oops: 0000 [#1] PREEMPT SMP
    [   36.722105] Dumping ftrace buffer:
    [   36.722570]    (ftrace buffer empty)
    [   36.723057] Modules linked in: scsi_debug ebtable_filter ebtables ip6table_filter ip6_tables tcm_loop iscsi_target_mod target_core_file target_core_iblock target_core_pscsi target_core_mod xt_CHECKSUM iptable_mangle ipt_MASQUERADE nf_nat_masquerade_ipv4 iptable_nat nf_conntrack_ipv4 nf_defrag_ipv4 nf_nat_ipv4 nf_nat nf_conntrack libcrc32c bridge stp llc fuse iptable_filter ip_tables sd_mod sg btrfs xor zstd_decompress zstd_compress xxhash raid6_pq mptsas mptscsih bcache crc32c_intel ahci mptbase libahci serio_raw scsi_transport_sas nvme libata shpchp lpc_ich virtio_scsi nvme_core binfmt_misc dm_mod iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi null_blk configs
    [   36.733438] CPU: 2 PID: 2374 Comm: fio Not tainted 4.15.0-rc2.blk_mq_quiesce+ #714
    [   36.735143] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.9.3-1.fc25 04/01/2014
    [   36.736688] RIP: 0010:kyber_has_work+0x14/0x40
    [   36.737515] RSP: 0018:ffffc9000209bca0 EFLAGS: 00010202
    [   36.738431] RAX: 0000000000000008 RBX: ffff88025578bfc8 RCX: ffff880257bf4ed0
    [   36.739581] RDX: 0000000000000038 RSI: ffffffff81a98c6d RDI: ffff88025578bfc8
    [   36.740730] RBP: ffff880253cebfc8 R08: ffffc9000209bda0 R09: ffff8802554f3480
    [   36.741885] R10: ffffc9000209be60 R11: ffff880263f72538 R12: ffff88025573e9e8
    [   36.743036] R13: ffff88025578bfd0 R14: 0000000000000001 R15: 0000000000000000
    [   36.744189] FS:  00007f9b9bee67c0(0000) GS:ffff88027fc80000(0000) knlGS:0000000000000000
    [   36.746617] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   36.748483] CR2: 0000000000000008 CR3: 0000000254bf4001 CR4: 00000000003606e0
    [   36.750164] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   36.751455] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   36.752796] Call Trace:
    [   36.753992]  blk_mq_do_dispatch_sched+0x7f/0xe0
    [   36.755110]  blk_mq_sched_dispatch_requests+0x119/0x190
    [   36.756179]  __blk_mq_run_hw_queue+0x83/0x90
    [   36.757144]  __blk_mq_delay_run_hw_queue+0xaf/0x110
    [   36.758046]  blk_mq_run_hw_queue+0x24/0x70
    [   36.758845]  blk_mq_flush_plug_list+0x1e7/0x270
    [   36.759676]  blk_flush_plug_list+0xd6/0x240
    [   36.760463]  blk_finish_plug+0x27/0x40
    [   36.761195]  do_io_submit+0x19b/0x780
    [   36.761921]  ? entry_SYSCALL_64_fastpath+0x1a/0x7d
    [   36.762788]  entry_SYSCALL_64_fastpath+0x1a/0x7d
    [   36.763639] RIP: 0033:0x7f9b9699f697
    [   36.764352] RSP: 002b:00007ffc10f991b8 EFLAGS: 00000206 ORIG_RAX: 00000000000000d1
    [   36.765773] RAX: ffffffffffffffda RBX: 00000000008f6f00 RCX: 00007f9b9699f697
    [   36.766965] RDX: 0000000000a5e6c0 RSI: 0000000000000001 RDI: 00007f9b8462a000
    [   36.768377] RBP: 0000000000000000 R08: 0000000000000001 R09: 00000000008f6420
    [   36.769649] R10: 00007f9b846e5000 R11: 0000000000000206 R12: 00007f9b795d6a70
    [   36.770807] R13: 00007f9b795e4140 R14: 00007f9b795e3fe0 R15: 0000000100000000
    [   36.771955] Code: 83 c7 10 e9 3f 68 d1 ff 0f 1f 44 00 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 8b 97 b0 00 00 00 48 8d 42 08 48 83 c2 38 <48> 3b 00 74 06 b8 01 00 00 00 c3 48 3b 40 08 75 f4 48 83 c0 10
    [   36.775004] RIP: kyber_has_work+0x14/0x40 RSP: ffffc9000209bca0
    [   36.776012] CR2: 0000000000000008
    [   36.776690] ---[ end trace 4045cbce364ff2a4 ]---
    [   36.777527] Kernel panic - not syncing: Fatal exception
    [   36.778526] Dumping ftrace buffer:
    [   36.779313]    (ftrace buffer empty)
    [   36.780081] Kernel Offset: disabled
    [   36.780877] ---[ end Kernel panic - not syncing: Fatal exception
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Yi Zhang <yi.zhang@redhat.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c846868070d0426667902c55a89008333584af50
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Tue Jan 2 11:39:48 2018 -0800

    pktcdvd: Fix a recently introduced NULL pointer dereference
    
    commit 882d4171a8950646413b1a3cbe0e4a6a612fe82e upstream.
    
    Call bdev_get_queue(bdev) after bdev->bd_disk has been initialized
    instead of just before that pointer has been initialized. This patch
    avoids that the following command
    
    pktsetup 1 /dev/sr0
    
    triggers the following kernel crash:
    
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000548
    IP: pkt_setup_dev+0x2db/0x670 [pktcdvd]
    CPU: 2 PID: 724 Comm: pktsetup Not tainted 4.15.0-rc4-dbg+ #1
    Call Trace:
     pkt_ctl_ioctl+0xce/0x1c0 [pktcdvd]
     do_vfs_ioctl+0x8e/0x670
     SyS_ioctl+0x3c/0x70
     entry_SYSCALL_64_fastpath+0x23/0x9a
    
    Reported-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Fixes: commit ca18d6f769d2 ("block: Make most scsi_req_init() calls implicit")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Tested-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Cc: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 030dcf7d1af39b0dc341702cb7d2482df93d3c71
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Tue Jan 2 11:39:47 2018 -0800

    pktcdvd: Fix pkt_setup_dev() error path
    
    commit 5a0ec388ef0f6e33841aeb810d7fa23f049ec4cd upstream.
    
    Commit 523e1d399ce0 ("block: make gendisk hold a reference to its queue")
    modified add_disk() and disk_release() but did not update any of the
    error paths that trigger a put_disk() call after disk->queue has been
    assigned. That introduced the following behavior in the pktcdvd driver
    if pkt_new_dev() fails:
    
    Kernel BUG at 00000000e98fd882 [verbose debug info unavailable]
    
    Since disk_release() calls blk_put_queue() anyway if disk->queue != NULL,
    fix this by removing the blk_cleanup_queue() call from the pkt_setup_dev()
    error path.
    
    Fixes: commit 523e1d399ce0 ("block: make gendisk hold a reference to its queue")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f04fe1192e5607f203e7c0096340fc867da8e84c
Author: Peter Rosin <peda@axentia.se>
Date:   Wed Jan 17 14:34:23 2018 +0100

    pinctrl: sx150x: Add a static gpio/pinctrl pin range mapping
    
    commit b930151e5b55a0e62a3aad06876de891ac980471 upstream.
    
    Without such a range, gpiolib fails with -EPROBE_DEFER, pending the
    addition of the range. So, without a range, gpiolib will keep
    deferring indefinitely.
    
    Fixes: 9e80f9064e73 ("pinctrl: Add SX150X GPIO Extender Pinctrl Driver")
    Fixes: e10f72bf4b3e ("gpio: gpiolib: Generalise state persistence beyond sleep")
    Suggested-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5219eedf2d5e19fdcd03aa685426eb891be85af6
Author: Peter Rosin <peda@axentia.se>
Date:   Wed Jan 17 14:34:22 2018 +0100

    pinctrl: sx150x: Register pinctrl before adding the gpiochip
    
    commit 1a1d39e1b8dd1d0f92a79da4fcc1ab0be3ae9bfc upstream.
    
    Various gpiolib activity depend on the pinctrl to be up and kicking.
    Therefore, register the pinctrl before adding a gpiochip.
    
    Suggested-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89cad3fa54919ba00004e0e202f549391a074a7c
Author: Peter Rosin <peda@axentia.se>
Date:   Wed Jan 17 14:34:21 2018 +0100

    pinctrl: sx150x: Unregister the pinctrl on release
    
    commit 0657cb50b5a75abd92956028727dc255d690a4a6 upstream.
    
    There is no matching call to pinctrl_unregister, so switch to the
    managed devm_pinctrl_register to clean up properly when done.
    
    Fixes: 9e80f9064e73 ("pinctrl: Add SX150X GPIO Extender Pinctrl Driver")
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 688d1b8c4721e247649383bbfcafedca3cdff89a
Author: Dmitry Mastykin <mastichi@gmail.com>
Date:   Thu Dec 28 18:19:24 2017 +0300

    pinctrl: mcp23s08: fix irq setup order
    
    commit 02e389e63e3523828fc3832f27e0341885f60f6f upstream.
    
    When using mcp23s08 module with gpio-keys, often (50% of boots)
    it fails to get irq numbers with message:
    "gpio-keys keys: Unable to get irq number for GPIO 0, error -6".
    Seems that irqs must be setup before devm_gpiochip_add_data().
    
    Signed-off-by: Dmitry Mastykin <mastichi@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05c9297f34053ca2f6aea1fd9a07ddea1d4793a4
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Nov 29 16:25:44 2017 +0300

    pinctrl: intel: Initialize GPIO properly when used through irqchip
    
    commit f5a26acf0162477af6ee4c11b4fb9cffe5d3e257 upstream.
    
    When a GPIO is requested using gpiod_get_* APIs the intel pinctrl driver
    switches the pin to GPIO mode and makes sure interrupts are routed to
    the GPIO hardware instead of IOAPIC. However, if the GPIO is used
    directly through irqchip, as is the case with many I2C-HID devices where
    I2C core automatically configures interrupt for the device, the pin is
    not initialized as GPIO. Instead we rely that the BIOS configures the
    pin accordingly which seems not to be the case at least in Asus X540NA
    SKU3 with Focaltech touchpad.
    
    When the pin is not properly configured it might result weird behaviour
    like interrupts suddenly stop firing completely and the touchpad stops
    responding to user input.
    
    Fix this by properly initializing the pin to GPIO mode also when it is
    used directly through irqchip.
    
    Fixes: 7981c0015af2 ("pinctrl: intel: Add Intel Sunrisepoint pin controller and GPIO support")
    Reported-by: Daniel Drake <drake@endlessm.com>
    Reported-and-tested-by: Chris Chiu <chiu@endlessm.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bed938ba673c9c5045fda278305ec541e5d13fc8
Author: James Hogan <jhogan@kernel.org>
Date:   Mon Nov 13 16:12:06 2017 +0000

    EDAC, octeon: Fix an uninitialized variable warning
    
    commit 544e92581a2ac44607d7cc602c6b54d18656f56d upstream.
    
    Fix an uninitialized variable warning in the Octeon EDAC driver, as seen
    in MIPS cavium_octeon_defconfig builds since v4.14 with Codescape GNU
    Tools 2016.05-03:
    
      drivers/edac/octeon_edac-lmc.c In function ‘octeon_lmc_edac_poll_o2’:
      drivers/edac/octeon_edac-lmc.c:87:24: warning: ‘((long unsigned int*)&int_reg)[1]’ may \
        be used uninitialized in this function [-Wmaybe-uninitialized]
        if (int_reg.s.sec_err || int_reg.s.ded_err) {
                            ^
    Iinitialise the whole int_reg variable to zero before the conditional
    assignments in the error injection case.
    
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Acked-by: David Daney <david.daney@cavium.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Cc: linux-mips@linux-mips.org
    Fixes: 1bc021e81565 ("EDAC: Octeon: Add error injection support")
    Link: http://lkml.kernel.org/r/20171113161206.20990-1-james.hogan@mips.com
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e68d638e4931236aebcf3bf66f18136ba59f852e
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Fri Jan 5 14:27:58 2018 -0800

    xtensa: fix futex_atomic_cmpxchg_inatomic
    
    commit ca47480921587ae30417dd234a9f79af188e3666 upstream.
    
    Return 0 if the operation was successful, not the userspace memory
    value. Check that userspace value equals passed oldval, not itself.
    Don't update *uval if the value wasn't read from userspace memory.
    
    This fixes process hang due to infinite loop in futex_lock_pi.
    It also fixes a bunch of glibc tests nptl/tst-mutexpi*.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12ab9e1e8d61b2384f97e2e6fb2a17aec677b01a
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Jan 2 14:00:32 2018 -0500

    alpha: fix formating of stack content
    
    commit 4b01abdb32fc36abe877503bfbd33019159fad71 upstream.
    
    Since version 4.9, the kernel automatically breaks printk calls into
    multiple newlines unless pr_cont is used. Fix the alpha stacktrace code,
    so that it prints stack trace in four columns, as it was initially
    intended.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bef0563f39cd457d090c0d0713f4699b670fd918
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Jan 2 13:59:54 2018 -0500

    alpha: fix reboot on Avanti platform
    
    commit 55fc633c41a08ce9244ff5f528f420b16b1e04d6 upstream.
    
    We need to define NEED_SRM_SAVE_RESTORE on the Avanti, otherwise we get
    machine check exception when attempting to reboot the machine.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 371c5ada2af7fc456d2c4ea5aa1e0ab6cb7a5efe
Author: Michael Cree <mcree@orcon.net.nz>
Date:   Fri Nov 24 21:25:01 2017 +1300

    alpha: Fix mixed up args in EXC macro in futex operations
    
    commit 84e455361ec97ea6037d31d42a2955628ea2094b upstream.
    
    Fix the typo (mixed up arguments) in the EXC macro in the futex
    definitions introduced by commit ca282f697381 (alpha: add a
    helper for emitting exception table entries).
    
    Signed-off-by: Michael Cree <mcree@orcon.net.nz>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90d17505219a7f382e6a295580e4382091bef7f6
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Nov 8 16:02:13 2017 +0100

    alpha: osf_sys.c: fix put_tv32 regression
    
    commit 47669fb6b5951d0e09fc99719653e0ac92b50b99 upstream.
    
    There was a typo in the new version of put_tv32() that caused an unguarded
    access of a user space pointer, and failed to return the correct result in
    gettimeofday(), wait4(), usleep_thread() and old_adjtimex().
    
    This fixes it to give the correct behavior again.
    
    Fixes: 1cc6c4635e9f ("osf_sys.c: switch handling of timeval32/itimerval32 to copy_{to,from}_user()")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 632a537b3c6b031834a7480f95fbf98132262376
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Jan 2 14:01:34 2018 -0500

    alpha: fix crash if pthread_create races with signal delivery
    
    commit 21ffceda1c8b3807615c40d440d7815e0c85d366 upstream.
    
    On alpha, a process will crash if it attempts to start a thread and a
    signal is delivered at the same time. The crash can be reproduced with
    this program: https://cygwin.com/ml/cygwin/2014-11/msg00473.html
    
    The reason for the crash is this:
    * we call the clone syscall
    * we go to the function copy_process
    * copy process calls copy_thread_tls, it is a wrapper around copy_thread
    * copy_thread sets the tls pointer: childti->pcb.unique = regs->r20
    * copy_thread sets regs->r20 to zero
    * we go back to copy_process
    * copy process checks "if (signal_pending(current))" and returns
      -ERESTARTNOINTR
    * the clone syscall is restarted, but this time, regs->r20 is zero, so
      the new thread is created with zero tls pointer
    * the new thread crashes in start_thread when attempting to access tls
    
    The comment in the code says that setting the register r20 is some
    compatibility with OSF/1. But OSF/1 doesn't use the CLONE_SETTLS flag, so
    we don't have to zero r20 if CLONE_SETTLS is set. This patch fixes the bug
    by zeroing regs->r20 only if CLONE_SETTLS is not set.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16256f2658806cbd84d649ac700e673b16a06168
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Jul 24 17:30:30 2017 -0500

    signal/sh: Ensure si_signo is initialized in do_divide_error
    
    commit 0e88bb002a9b2ee8cc3cc9478ce2dc126f849696 upstream.
    
    Set si_signo.
    
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Rich Felker <dalias@libc.org>
    Cc: Paul Mundt <lethal@linux-sh.org>
    Cc: linux-sh@vger.kernel.org
    Fixes: 0983b31849bb ("sh: Wire up division and address error exceptions on SH-2A.")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34ad59099ead42461b968e36f939020821e82cef
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Tue Aug 1 04:16:47 2017 -0500

    signal/openrisc: Fix do_unaligned_access to send the proper signal
    
    commit 500d58300571b6602341b041f97c082a461ef994 upstream.
    
    While reviewing the signal sending on openrisc the do_unaligned_access
    function stood out because it is obviously wrong.  A comment about an
    si_code set above when actually si_code is never set.  Leading to a
    random si_code being sent to userspace in the event of an unaligned
    access.
    
    Looking further SIGBUS BUS_ADRALN is the proper pair of signal and
    si_code to send for an unaligned access. That is what other
    architectures do and what is required by posix.
    
    Given that do_unaligned_access is broken in a way that no one can be
    relying on it on openrisc fix the code to just do the right thing.
    
    Fixes: 769a8a96229e ("OpenRISC: Traps")
    Cc: Jonas Bonn <jonas@southpole.se>
    Cc: Stefan Kristiansson <stefan.kristiansson@saunalahti.fi>
    Cc: Stafford Horne <shorne@gmail.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: openrisc@lists.librecores.org
    Acked-by: Stafford Horne <shorne@gmail.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 765ae618ad9f106f6231570f29d0d5be3b56d269
Author: John Garry <john.garry@huawei.com>
Date:   Thu Jan 18 00:36:57 2018 +0800

    ipmi: use dynamic memory for DMI driver override
    
    commit 5516e21a1e95e9b9f39985598431a25477d91643 upstream.
    
    Currently a crash can be seen if we reach the "err"
    label in dmi_add_platform_ipmi(), calling
    platform_device_put(), like here:
    [    7.270584]  (null): ipmi:dmi: Unable to add resources: -16
    [    7.330229] ------------[ cut here ]------------
    [    7.334889] kernel BUG at mm/slub.c:3894!
    [    7.338936] Internal error: Oops - BUG: 0 [#1] PREEMPT SMP
    [    7.344475] Modules linked in:
    [    7.347556] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 4.15.0-rc2-00004-gbe9cb7b-dirty #114
    [    7.355907] Hardware name: Huawei Taishan 2280 /D05, BIOS Hisilicon D05 IT17 Nemo 2.0 RC0 11/29/2017
    [    7.365137] task: 00000000c211f6d3 task.stack: 00000000f276e9af
    [    7.371116] pstate: 60000005 (nZCv daif -PAN -UAO)
    [    7.375957] pc : kfree+0x194/0x1b4
    [    7.379389] lr : platform_device_release+0xcc/0xd8
    [    7.384225] sp : ffff0000092dba90
    [    7.387567] x29: ffff0000092dba90 x28: ffff000008a83000
    [    7.392933] x27: ffff0000092dbc10 x26: 00000000000000e6
    [    7.398297] x25: 0000000000000003 x24: ffff0000085b51e8
    [    7.403662] x23: 0000000000000100 x22: ffff7e0000234cc0
    [    7.409027] x21: ffff000008af3660 x20: ffff8017d21acc10
    [    7.414392] x19: ffff8017d21acc00 x18: 0000000000000002
    [    7.419757] x17: 0000000000000001 x16: 0000000000000008
    [    7.425121] x15: 0000000000000001 x14: 6666666678303d65
    [    7.430486] x13: 6469727265766f5f x12: 7265766972642e76
    [    7.435850] x11: 6564703e2d617020 x10: 6530326435373638
    [    7.441215] x9 : 3030303030303030 x8 : 3d76656420657361
    [    7.446580] x7 : ffff000008f59df8 x6 : ffff8017fbe0ea50
    [    7.451945] x5 : 0000000000000000 x4 : 0000000000000000
    [    7.457309] x3 : ffffffffffffffff x2 : 0000000000000000
    [    7.462674] x1 : 0fffc00000000800 x0 : ffff7e0000234ce0
    [    7.468039] Process swapper/0 (pid: 1, stack limit = 0x00000000f276e9af)
    [    7.474809] Call trace:
    [    7.477272]  kfree+0x194/0x1b4
    [    7.480351]  platform_device_release+0xcc/0xd8
    [    7.484837]  device_release+0x34/0x90
    [    7.488531]  kobject_put+0x70/0xcc
    [    7.491961]  put_device+0x14/0x1c
    [    7.495304]  platform_device_put+0x14/0x1c
    [    7.499439]  dmi_add_platform_ipmi+0x348/0x3ac
    [    7.503923]  scan_for_dmi_ipmi+0xfc/0x10c
    [    7.507970]  do_one_initcall+0x38/0x124
    [    7.511840]  kernel_init_freeable+0x188/0x228
    [    7.516238]  kernel_init+0x10/0x100
    [    7.519756]  ret_from_fork+0x10/0x18
    [    7.523362] Code: f94002c0 37780080 f94012c0 37000040 (d4210000)
    [    7.529552] ---[ end trace 11750e4787deef9e ]---
    [    7.534228] Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
    [    7.534228]
    
    This is because when the device is released in
    platform_device_release(), we try to free
    pdev.driver_override. This is a const string, hence
    the crash.
    Fix by using dynamic memory for pdev->driver_override.
    
    Signed-off-by: John Garry <john.garry@huawei.com>
    [Removed the free of driver_override from ipmi_si_remove_by_dev().  The
     free is done in platform_device_release(), and would result in a double
     free, and ipmi_si_remove_by_dev() is called by non-platform devices.]
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fed016a79b42943f7dea7409d107b641fe3d1080
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Jan 8 10:44:16 2018 +0100

    Bluetooth: btusb: Restore QCA Rome suspend/resume fix with a "rewritten" version
    
    commit 61f5acea8737d9b717fcc22bb6679924f3c82b98 upstream.
    
    Commit 7d06d5895c15 ("Revert "Bluetooth: btusb: fix QCA...suspend/resume"")
    removed the setting of the BTUSB_RESET_RESUME quirk for QCA Rome devices,
    instead favoring adding USB_QUIRK_RESET_RESUME quirks in usb/core/quirks.c.
    
    This was done because the DIY BTUSB_RESET_RESUME reset-resume handling
    has several issues (see the original commit message). An added advantage
    of moving over to the USB-core reset-resume handling is that it also
    disables autosuspend for these devices, which is similarly broken on these.
    
    But there are 2 issues with this approach:
    1) It leaves the broken DIY BTUSB_RESET_RESUME code in place for Realtek
       devices.
    2) Sofar only 2 of the 10 QCA devices known to the btusb code have been
       added to usb/core/quirks.c and if we fix the Realtek case the same way
       we need to add an additional 14 entries. So in essence we need to
       duplicate a large part of the usb_device_id table in btusb.c in
       usb/core/quirks.c and manually keep them in sync.
    
    This commit instead restores setting a reset-resume quirk for QCA devices
    in the btusb.c code, avoiding the duplicate usb_device_id table problem.
    
    This commit avoids the problems with the original DIY BTUSB_RESET_RESUME
    code by simply setting the USB_QUIRK_RESET_RESUME quirk directly on the
    usb_device.
    
    This commit also moves the BTUSB_REALTEK case over to directly setting the
    USB_QUIRK_RESET_RESUME on the usb_device and removes the now unused
    BTUSB_RESET_RESUME code.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1514836
    Fixes: 7d06d5895c15 ("Revert "Bluetooth: btusb: fix QCA...suspend/resume"")
    Cc: Leif Liddy <leif.linux@gmail.com>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Cc: Brian Norris <briannorris@chromium.org>
    Cc: Daniel Drake <drake@endlessm.com>
    Cc: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a2ee0c1fee7268f0cdf29415ba2708d3c2bfa33
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Dec 20 19:00:07 2017 +0800

    Revert "Bluetooth: btusb: fix QCA Rome suspend/resume"
    
    commit 7d06d5895c159f64c46560dc258e553ad8670fe0 upstream.
    
    This reverts commit fd865802c66bc451dc515ed89360f84376ce1a56.
    
    This commit causes a regression on some QCA ROME chips. The USB device
    reset happens in btusb_open(), hence firmware loading gets interrupted.
    
    Furthermore, this commit stops working after commit
    ("a0085f2510e8976614ad8f766b209448b385492f Bluetooth: btusb: driver to
    enable the usb-wakeup feature"). Reset-resume quirk only gets enabled in
    btusb_suspend() when it's not a wakeup source.
    
    If we really want to reset the USB device, we need to do it before
    btusb_open(). Let's handle it in drivers/usb/core/quirks.c.
    
    Cc: Leif Liddy <leif.linux@gmail.com>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Cc: Brian Norris <briannorris@chromium.org>
    Cc: Daniel Drake <drake@endlessm.com>
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Tested-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed72fcf6436271f63a4afc122770ae6537c8d3ce
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Nov 29 20:29:07 2017 +0100

    Bluetooth: btsdio: Do not bind to non-removable BCM43341
    
    commit b4cdaba274247c9c841c6a682c08fa91fb3aa549 upstream.
    
    BCM43341 devices soldered onto the PCB (non-removable) always (AFAICT)
    use an UART connection for bluetooth. But they also advertise btsdio
    support on their 3th sdio function, this causes 2 problems:
    
    1) A non functioning BT HCI getting registered
    
    2) Since the btsdio driver does not have suspend/resume callbacks,
    mmc_sdio_pre_suspend will return -ENOSYS, causing mmc_pm_notify()
    to react as if the SDIO-card is removed and since the slot is
    marked as non-removable it will never get detected as inserted again.
    Which results in wifi no longer working after a suspend/resume.
    
    This commit fixes both by making btsdio ignore BCM43341 devices
    when connected to a slot which is marked non-removable.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e4ac4aed9f92796c4177f065f4dbd1bc9c3a432
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Jan 17 21:05:55 2018 +0100

    HID: quirks: Fix keyboard + touchpad on Toshiba Click Mini not working
    
    commit edfc3722cfef4217c7fe92b272cbe0288ba1ff57 upstream.
    
    The Toshiba Click Mini uses an i2c attached keyboard/touchpad combo
    (single i2c_hid device for both) which has a vid:pid of 04F3:0401,
    which is also used by a bunch of Elan touchpads which are handled by the
    drivers/input/mouse/elan_i2c driver, but that driver deals with pure
    touchpads and does not work for a combo device such as the one on the
    Toshiba Click Mini.
    
    The combo on the Mini has an ACPI id of ELAN0800, which is not claimed
    by the elan_i2c driver, so check for that and if it is found do not ignore
    the device. This fixes the keyboard/touchpad combo on the Mini not working
    (although with the touchpad in mouse emulation mode).
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 703b37d845987cedd76c534df7719bb8024ad66e
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Feb 6 15:41:56 2018 -0800

    pipe: fix off-by-one error when checking buffer limits
    
    commit 9903a91c763ecdae333a04a9d89d79d2b8966503 upstream.
    
    With pipe-user-pages-hard set to 'N', users were actually only allowed up
    to 'N - 1' buffers; and likewise for pipe-user-pages-soft.
    
    Fix this to allow up to 'N' buffers, as would be expected.
    
    Link: http://lkml.kernel.org/r/20180111052902.14409-5-ebiggers3@gmail.com
    Fixes: b0b91d18e2e9 ("pipe: fix limit checking in pipe_set_size()")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Willy Tarreau <w@1wt.eu>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: "Luis R . Rodriguez" <mcgrof@kernel.org>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a125e9a42302c5dc3c85b88eebc32c43bb65dd07
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Feb 6 15:41:53 2018 -0800

    pipe: actually allow root to exceed the pipe buffer limits
    
    commit 85c2dd5473b2718b4b63e74bfeb1ca876868e11f upstream.
    
    pipe-user-pages-hard and pipe-user-pages-soft are only supposed to apply
    to unprivileged users, as documented in both Documentation/sysctl/fs.txt
    and the pipe(7) man page.
    
    However, the capabilities are actually only checked when increasing a
    pipe's size using F_SETPIPE_SZ, not when creating a new pipe.  Therefore,
    if pipe-user-pages-hard has been set, the root user can run into it and be
    unable to create pipes.  Similarly, if pipe-user-pages-soft has been set,
    the root user can run into it and have their pipes limited to 1 page each.
    
    Fix this by allowing the privileged override in both cases.
    
    Link: http://lkml.kernel.org/r/20180111052902.14409-4-ebiggers3@gmail.com
    Fixes: 759c01142a5d ("pipe: limit the per-user amount of pages allocated in pipes")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: "Luis R . Rodriguez" <mcgrof@kernel.org>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75526a9bd3f4fe83161ae2f723fbc036e07194ae
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Feb 6 15:40:24 2018 -0800

    kernel/relay.c: revert "kernel/relay.c: fix potential memory leak"
    
    commit a1be1f3931bfe0a42b46fef77a04593c2b136e7f upstream.
    
    This reverts commit ba62bafe942b ("kernel/relay.c: fix potential memory leak").
    
    This commit introduced a double free bug, because 'chan' is already
    freed by the line:
    
        kref_put(&chan->kref, relay_destroy_channel);
    
    This bug was found by syzkaller, using the BLKTRACESETUP ioctl.
    
    Link: http://lkml.kernel.org/r/20180127004759.101823-1-ebiggers3@gmail.com
    Fixes: ba62bafe942b ("kernel/relay.c: fix potential memory leak")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Zhouyi Zhou <yizhouzhou@ict.ac.cn>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 838f9cc948b00a31a56c0aa115a1ceca507b084b
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Tue Feb 6 15:37:55 2018 -0800

    kernel/async.c: revert "async: simplify lowest_in_progress()"
    
    commit 4f7e988e63e336827f4150de48163bed05d653bd upstream.
    
    This reverts commit 92266d6ef60c ("async: simplify lowest_in_progress()")
    which was simply wrong: In the case where domain is NULL, we now use the
    wrong offsetof() in the list_first_entry macro, so we don't actually
    fetch the ->cookie value, but rather the eight bytes located
    sizeof(struct list_head) further into the struct async_entry.
    
    On 64 bit, that's the data member, while on 32 bit, that's a u64 built
    from func and data in some order.
    
    I think the bug happens to be harmless in practice: It obviously only
    affects callers which pass a NULL domain, and AFAICT the only such
    caller is
    
      async_synchronize_full() ->
      async_synchronize_full_domain(NULL) ->
      async_synchronize_cookie_domain(ASYNC_COOKIE_MAX, NULL)
    
    and the ASYNC_COOKIE_MAX means that in practice we end up waiting for
    the async_global_pending list to be empty - but it would break if
    somebody happened to pass (void*)-1 as the data element to
    async_schedule, and of course also if somebody ever does a
    async_synchronize_cookie_domain(, NULL) with a "finite" cookie value.
    
    Maybe the "harmless in practice" means this isn't -stable material.  But
    I'm not completely confident my quick git grep'ing is enough, and there
    might be affected code in one of the earlier kernels that has since been
    removed, so I'll leave the decision to the stable guys.
    
    Link: http://lkml.kernel.org/r/20171128104938.3921-1-linux@rasmusvillemoes.dk
    Fixes: 92266d6ef60c "async: simplify lowest_in_progress()"
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Acked-by: Tejun Heo <tj@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Adam Wallis <awallis@codeaurora.org>
    Cc: Lai Jiangshan <laijs@cn.fujitsu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e54b58285e1e5b3f2430342d40f98a53401bb91
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Tue Feb 6 15:37:13 2018 -0800

    fs/proc/kcore.c: use probe_kernel_read() instead of memcpy()
    
    commit d0290bc20d4739b7a900ae37eb5d4cc3be2b393f upstream.
    
    Commit df04abfd181a ("fs/proc/kcore.c: Add bounce buffer for ktext
    data") added a bounce buffer to avoid hardened usercopy checks.  Copying
    to the bounce buffer was implemented with a simple memcpy() assuming
    that it is always valid to read from kernel memory iff the
    kern_addr_valid() check passed.
    
    A simple, but pointless, test case like "dd if=/proc/kcore of=/dev/null"
    now can easily crash the kernel, since the former execption handling on
    invalid kernel addresses now doesn't work anymore.
    
    Also adding a kern_addr_valid() implementation wouldn't help here.  Most
    architectures simply return 1 here, while a couple implemented a page
    table walk to figure out if something is mapped at the address in
    question.
    
    With DEBUG_PAGEALLOC active mappings are established and removed all the
    time, so that relying on the result of kern_addr_valid() before
    executing the memcpy() also doesn't work.
    
    Therefore simply use probe_kernel_read() to copy to the bounce buffer.
    This also allows to simplify read_kcore().
    
    At least on s390 this fixes the observed crashes and doesn't introduce
    warnings that were removed with df04abfd181a ("fs/proc/kcore.c: Add
    bounce buffer for ktext data"), even though the generic
    probe_kernel_read() implementation uses uaccess functions.
    
    While looking into this I'm also wondering if kern_addr_valid() could be
    completely removed...(?)
    
    Link: http://lkml.kernel.org/r/20171202132739.99971-1-heiko.carstens@de.ibm.com
    Fixes: df04abfd181a ("fs/proc/kcore.c: Add bounce buffer for ktext data")
    Fixes: f5509cc18daa ("mm: Hardened usercopy")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebe2ba53851e785243d4ee3d7f4fcf64653a987b
Author: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
Date:   Wed Jan 24 06:01:57 2018 -0500

    media: cxusb, dib0700: ignore XC2028_I2C_FLUSH
    
    commit 9893b905e743ded332575ca04486bd586c0772f7 upstream.
    
    The XC2028_I2C_FLUSH only needs to be implemented on a few
    devices. Others can safely ignore it.
    
    That prevents filling the dmesg with lots of messages like:
    
            dib0700: stk7700ph_xc3028_callback: unknown command 2, arg 0
    
    Fixes: 4d37ece757a8 ("[media] tuner/xc2028: Add I2C flush callback")
    Reported-by: Enrico Mioso <mrkiko.rs@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a401e25f0a5909abf3f3e4fc7518b173cc5328f
Author: Mauro Carvalho Chehab <mchehab@s-opensource.com>
Date:   Wed Jan 10 07:20:39 2018 -0500

    media: ts2020: avoid integer overflows on 32 bit machines
    
    commit 81742be14b6a90c9fd0ff6eb4218bdf696ad8e46 upstream.
    
    Before this patch, when compiled for arm32, the signal strength
    were reported as:
    
    Lock   (0x1f) Signal= 4294908.66dBm C/N= 12.79dB
    
    Because of a 32 bit integer overflow. After it, it is properly
    reported as:
    
            Lock   (0x1f) Signal= -58.64dBm C/N= 12.79dB
    
    Fixes: 0f91c9d6bab9 ("[media] TS2020: Calculate tuner gain correctly")
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad91b2e392be4339e09eefd8479675b4232ddfa1
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Nov 30 11:55:46 2017 -0500

    media: dvb-frontends: fix i2c access helpers for KASAN
    
    commit 3cd890dbe2a4f14cc44c85bb6cf37e5e22d4dd0e upstream.
    
    A typical code fragment was copied across many dvb-frontend drivers and
    causes large stack frames when built with with CONFIG_KASAN on gcc-5/6/7:
    
    drivers/media/dvb-frontends/cxd2841er.c:3225:1: error: the frame size of 3992 bytes is larger than 3072 bytes [-Werror=frame-larger-than=]
    drivers/media/dvb-frontends/cxd2841er.c:3404:1: error: the frame size of 3136 bytes is larger than 3072 bytes [-Werror=frame-larger-than=]
    drivers/media/dvb-frontends/stv0367.c:3143:1: error: the frame size of 4016 bytes is larger than 3072 bytes [-Werror=frame-larger-than=]
    drivers/media/dvb-frontends/stv090x.c:3430:1: error: the frame size of 5312 bytes is larger than 3072 bytes [-Werror=frame-larger-than=]
    drivers/media/dvb-frontends/stv090x.c:4248:1: error: the frame size of 4872 bytes is larger than 3072 bytes [-Werror=frame-larger-than=]
    
    gcc-8 now solves this by consolidating the stack slots for the argument
    variables, but on older compilers we can get the same behavior by taking
    the pointer of a local variable rather than the inline function argument.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=81715
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 062cd3463c176c71d23e6ca92cda76500ad158d3
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 6 15:41:41 2018 -0800

    kasan: rework Kconfig settings
    
    commit e7c52b84fb18f08ce49b6067ae6285aca79084a8 upstream.
    
    We get a lot of very large stack frames using gcc-7.0.1 with the default
    -fsanitize-address-use-after-scope --param asan-stack=1 options, which can
    easily cause an overflow of the kernel stack, e.g.
    
      drivers/gpu/drm/i915/gvt/handlers.c:2434:1: warning: the frame size of 46176 bytes is larger than 3072 bytes
      drivers/net/wireless/ralink/rt2x00/rt2800lib.c:5650:1: warning: the frame size of 23632 bytes is larger than 3072 bytes
      lib/atomic64_test.c:250:1: warning: the frame size of 11200 bytes is larger than 3072 bytes
      drivers/gpu/drm/i915/gvt/handlers.c:2621:1: warning: the frame size of 9208 bytes is larger than 3072 bytes
      drivers/media/dvb-frontends/stv090x.c:3431:1: warning: the frame size of 6816 bytes is larger than 3072 bytes
      fs/fscache/stats.c:287:1: warning: the frame size of 6536 bytes is larger than 3072 bytes
    
    To reduce this risk, -fsanitize-address-use-after-scope is now split out
    into a separate CONFIG_KASAN_EXTRA Kconfig option, leading to stack
    frames that are smaller than 2 kilobytes most of the time on x86_64.  An
    earlier version of this patch also prevented combining KASAN_EXTRA with
    KASAN_INLINE, but that is no longer necessary with gcc-7.0.1.
    
    All patches to get the frame size below 2048 bytes with CONFIG_KASAN=y
    and CONFIG_KASAN_EXTRA=n have been merged by maintainers now, so we can
    bring back that default now.  KASAN_EXTRA=y still causes lots of
    warnings but now defaults to !COMPILE_TEST to disable it in
    allmodconfig, and it remains disabled in all other defconfigs since it
    is a new option.  I arbitrarily raise the warning limit for KASAN_EXTRA
    to 3072 to reduce the noise, but an allmodconfig kernel still has around
    50 warnings on gcc-7.
    
    I experimented a bit more with smaller stack frames and have another
    follow-up series that reduces the warning limit for 64-bit architectures
    to 1280 bytes (without CONFIG_KASAN).
    
    With earlier versions of this patch series, I also had patches to address
    the warnings we get with KASAN and/or KASAN_EXTRA, using a
    "noinline_if_stackbloat" annotation.
    
    That annotation now got replaced with a gcc-8 bugfix (see
    https://gcc.gnu.org/bugzilla/show_bug.cgi?id=81715) and a workaround for
    older compilers, which means that KASAN_EXTRA is now just as bad as
    before and will lead to an instant stack overflow in a few extreme
    cases.
    
    This reverts parts of commit 3f181b4d8652 ("lib/Kconfig.debug: disable
    -Wframe-larger-than warnings with KASAN=y").  Two patches in linux-next
    should be merged first to avoid introducing warnings in an allmodconfig
    build:
      3cd890dbe2a4 ("media: dvb-frontends: fix i2c access helpers for KASAN")
      16c3ada89cff ("media: r820t: fix r820t_write_reg for KASAN")
    
    Do we really need to backport this?
    
    I think we do: without this patch, enabling KASAN will lead to
    unavoidable kernel stack overflow in certain device drivers when built
    with gcc-7 or higher on linux-4.10+ or any version that contains a
    backport of commit c5caf21ab0cf8.  Most people are probably still on
    older compilers, but it will get worse over time as they upgrade their
    distros.
    
    The warnings we get on kernels older than this should all be for code
    that uses dangerously large stack frames, though most of them do not
    cause an actual stack overflow by themselves.The asan-stack option was
    added in linux-4.0, and commit 3f181b4d8652 ("lib/Kconfig.debug:
    disable -Wframe-larger-than warnings with KASAN=y") effectively turned
    off the warning for allmodconfig kernels, so I would like to see this
    fix backported to any kernels later than 4.0.
    
    I have done dozens of fixes for individual functions with stack frames
    larger than 2048 bytes with asan-stack, and I plan to make sure that
    all those fixes make it into the stable kernels as well (most are
    already there).
    
    Part of the complication here is that asan-stack (from 4.0) was
    originally assumed to always require much larger stacks, but that
    turned out to be a combination of multiple gcc bugs that we have now
    worked around and fixed, but sanitize-address-use-after-scope (from
    v4.10) has a much higher inherent stack usage and also suffers from at
    least three other problems that we have analyzed but not yet fixed
    upstream, each of them makes the stack usage more severe than it should
    be.
    
    Link: http://lkml.kernel.org/r/20171221134744.2295529-1-arnd@arndb.de
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e186d8bfdabddcff429b3231948d4af860ae7fc7
Author: Andrey Konovalov <andreyknvl@google.com>
Date:   Tue Feb 6 15:36:00 2018 -0800

    kasan: don't emit builtin calls when sanitization is off
    
    commit 0e410e158e5baa1300bdf678cea4f4e0cf9d8b94 upstream.
    
    With KASAN enabled the kernel has two different memset() functions, one
    with KASAN checks (memset) and one without (__memset).  KASAN uses some
    macro tricks to use the proper version where required.  For example
    memset() calls in mm/slub.c are without KASAN checks, since they operate
    on poisoned slab object metadata.
    
    The issue is that clang emits memset() calls even when there is no
    memset() in the source code.  They get linked with improper memset()
    implementation and the kernel fails to boot due to a huge amount of KASAN
    reports during early boot stages.
    
    The solution is to add -fno-builtin flag for files with KASAN_SANITIZE :=
    n marker.
    
    Link: http://lkml.kernel.org/r/8ffecfffe04088c52c42b92739c2bd8a0bcb3f5e.1516384594.git.andreyknvl@google.com
    Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
    Acked-by: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Michal Marek <michal.lkml@markovi.net>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d16919a3fe2d83ae159b82808933fefb54fc2f6e
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Fri Jan 12 18:07:01 2018 -0700

    Btrfs: raid56: iterate raid56 internal bio with bio_for_each_segment_all
    
    commit 0198e5b707cfeb5defbd1b71b1ec6e71580d7db9 upstream.
    
    Bio iterated by set_bio_pages_uptodate() is raid56 internal one, so it
    will never be a BIO_CLONED bio, and since this is called by end_io
    functions, bio->bi_iter.bi_size is zero, we mustn't use
    bio_for_each_segment() as that is a no-op if bi_size is zero.
    
    Fixes: 6592e58c6b68e61f003a01ba29a3716e7e2e9484 ("Btrfs: fix write corruption due to bio cloning on raid5/6")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e06f7b686daa871c4a4cf745be30fd1864b6f9c8
Author: Martin Kaiser <martin@kaiser.cx>
Date:   Mon Jan 1 18:26:47 2018 +0100

    watchdog: imx2_wdt: restore previous timeout after suspend+resume
    
    commit 0be267255cef64e1c58475baa7b25568355a3816 upstream.
    
    When the watchdog device is suspended, its timeout is set to the maximum
    value. During resume, the previously set timeout should be restored.
    This does not work at the moment.
    
    The suspend function calls
    
    imx2_wdt_set_timeout(wdog, IMX2_WDT_MAX_TIME);
    
    and resume reverts this by calling
    
    imx2_wdt_set_timeout(wdog, wdog->timeout);
    
    However, imx2_wdt_set_timeout() updates wdog->timeout. Therefore,
    wdog->timeout is set to IMX2_WDT_MAX_TIME when we enter the resume
    function.
    
    Fix this by adding a new function __imx2_wdt_set_timeout() which
    only updates the hardware settings. imx2_wdt_set_timeout() now calls
    __imx2_wdt_set_timeout() and then saves the new timeout to
    wdog->timeout.
    
    During suspend, we call __imx2_wdt_set_timeout() directly so that
    wdog->timeout won't be updated and we can restore the previous value
    during resume. This approach makes wdog->timeout different from the
    actual setting in the hardware which is usually not a good thing.
    However, the two differ only while we're suspended and no kernel code is
    running, so it should be ok in this case.
    
    Signed-off-by: Martin Kaiser <martin@kaiser.cx>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b897f1dc780e1ac019977297f2f32369776a30b1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 3 16:38:46 2018 +0100

    ASoC: skl: Fix kernel warning due to zero NHTL entry
    
    commit 20a1ea2222e7cbf96e9bf8579362e971491e6aea upstream.
    
    I got the following kernel warning when loading snd-soc-skl module on
    Dell Latitude 7270 laptop:
     memremap attempted on mixed range 0x0000000000000000 size: 0x0
     WARNING: CPU: 0 PID: 484 at kernel/memremap.c:98 memremap+0x8a/0x180
     Call Trace:
      skl_nhlt_init+0x82/0xf0 [snd_soc_skl]
      skl_probe+0x2ee/0x7c0 [snd_soc_skl]
      ....
    
    It seems that the machine doesn't support the SKL DSP gives the empty
    NHLT entry, and it triggers the warning.  For avoiding it, let do the
    zero check before calling memremap().
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4562bfdeac8708371dec016f868a2a18ec6d1285
Author: John Keeping <john@metanate.com>
Date:   Mon Jan 8 16:01:04 2018 +0000

    ASoC: rockchip: i2s: fix playback after runtime resume
    
    commit c66234cfedfc3e6e3b62563a5f2c1562be09a35d upstream.
    
    When restoring registers during runtime resume, we must not write to
    I2S_TXDR which is the transmit FIFO as this queues up a sample to be
    output and pushes all of the output channels down by one.
    
    This can be demonstrated with the speaker-test utility:
    
            for i in a b c; do speaker-test -c 2 -s 1; done
    
    which should play a test through the left speaker three times but if the
    I2S hardware starts runtime suspended the first sample will be played
    through the right speaker.
    
    Fix this by marking I2S_TXDR as volatile (which also requires marking it
    as readble, even though it technically isn't).  This seems to be the
    most robust fix, the alternative of giving I2S_TXDR a default value is
    more fragile since it does not prevent regcache writing to the register
    in all circumstances.
    
    While here, also fix the configuration of I2S_RXDR and I2S_FIFOLR; these
    are not writable so they do not suffer from the same problem as I2S_TXDR
    but reading from I2S_RXDR does suffer from a similar problem.
    
    Fixes: f0447f6cbb20 ("ASoC: rockchip: i2s: restore register during runtime_suspend/resume cycle", 2016-09-07)
    Signed-off-by: John Keeping <john@metanate.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e747a02d9fcf76c4146a5f151e2136591df5b0a3
Author: Ulf Magnusson <ulfalizer@gmail.com>
Date:   Mon Feb 5 02:21:14 2018 +0100

    KVM: PPC: Book3S PR: Fix broken select due to misspelling
    
    commit 57ea5f161a7de5b1913c212d04f57a175b159fdf upstream.
    
    Commit 76d837a4c0f9 ("KVM: PPC: Book3S PR: Don't include SPAPR TCE code
    on non-pseries platforms") added a reference to the globally undefined
    symbol PPC_SERIES. Looking at the rest of the commit, PPC_PSERIES was
    probably intended.
    
    Change PPC_SERIES to PPC_PSERIES.
    
    Discovered with the
    https://github.com/ulfalizer/Kconfiglib/blob/master/examples/list_undefined.py
    script.
    
    Fixes: 76d837a4c0f9 ("KVM: PPC: Book3S PR: Don't include SPAPR TCE code on non-pseries platforms")
    Signed-off-by: Ulf Magnusson <ulfalizer@gmail.com>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 985bf39913428d1797427e779d747ae76b144901
Author: James Morse <james.morse@arm.com>
Date:   Mon Jan 22 18:19:06 2018 +0000

    KVM: arm/arm64: Handle CPU_PM_ENTER_FAILED
    
    commit 58d6b15e9da5042a99c9c30ad725792e4569150e upstream.
    
    cpu_pm_enter() calls the pm notifier chain with CPU_PM_ENTER, then if
    there is a failure: CPU_PM_ENTER_FAILED.
    
    When KVM receives CPU_PM_ENTER it calls cpu_hyp_reset() which will
    return us to the hyp-stub. If we subsequently get a CPU_PM_ENTER_FAILED,
    KVM does nothing, leaving the CPU running with the hyp-stub, at odds
    with kvm_arm_hardware_enabled.
    
    Add CPU_PM_ENTER_FAILED as a fallthrough for CPU_PM_EXIT, this reloads
    KVM based on kvm_arm_hardware_enabled. This is safe even if CPU_PM_ENTER
    never gets as far as KVM, as cpu_hyp_reinit() calls cpu_hyp_reset()
    to make sure the hyp-stub is loaded before reloading KVM.
    
    Fixes: 67f691976662 ("arm64: kvm: allows kvm cpu hotplug")
    CC: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be54d79b43fdb796787d004afbacef57bbab3074
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Tue Jan 30 10:51:32 2018 +1100

    KVM: PPC: Book3S HV: Drop locks before reading guest memory
    
    commit 36ee41d161c67a6fcf696d4817a0da31f778938c upstream.
    
    Running with CONFIG_DEBUG_ATOMIC_SLEEP reveals that HV KVM tries to
    read guest memory, in order to emulate guest instructions, while
    preempt is disabled and a vcore lock is held.  This occurs in
    kvmppc_handle_exit_hv(), called from post_guest_process(), when
    emulating guest doorbell instructions on POWER9 systems, and also
    when checking whether we have hit a hypervisor breakpoint.
    Reading guest memory can cause a page fault and thus cause the
    task to sleep, so we need to avoid reading guest memory while
    holding a spinlock or when preempt is disabled.
    
    To fix this, we move the preempt_enable() in kvmppc_run_core() to
    before the loop that calls post_guest_process() for each vcore that
    has just run, and we drop and re-take the vcore lock around the calls
    to kvmppc_emulate_debug_inst() and kvmppc_emulate_doorbell_instr().
    
    Dropping the lock is safe with respect to the iteration over the
    runnable vcpus in post_guest_process(); for_each_runnable_thread
    is actually safe to use locklessly.  It is possible for a vcpu
    to become runnable and add itself to the runnable_threads array
    (code near the beginning of kvmppc_run_vcpu()) and then get included
    in the iteration in post_guest_process despite the fact that it
    has not just run.  This is benign because vcpu->arch.trap and
    vcpu->arch.ceded will be zero.
    
    Fixes: 579006944e0d ("KVM: PPC: Book3S HV: Virtualize doorbell facility on POWER9")
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88b64450cc0a9340145331b2ffefdff15a0f96d3
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Thu Jan 11 14:31:43 2018 +1100

    KVM: PPC: Book3S HV: Make sure we don't re-enter guest without XIVE loaded
    
    commit 43ff3f65234061e08d234bdef5a9aadc19832b74 upstream.
    
    This fixes a bug where it is possible to enter a guest on a POWER9
    system without having the XIVE (interrupt controller) context loaded.
    This can happen because we unload the XIVE context from the CPU
    before doing the real-mode handling for machine checks.  After the
    real-mode handler runs, it is possible that we re-enter the guest
    via a fast path which does not load the XIVE context.
    
    To fix this, we move the unloading of the XIVE context to come after
    the real-mode machine check handler is called.
    
    Fixes: 5af50993850a ("KVM: PPC: Book3S HV: Native usage of the XIVE interrupt controller")
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe90a3a6f88179dfa427a758dbef47cb371b6be7
Author: Liran Alon <liran.alon@oracle.com>
Date:   Sun Nov 19 18:25:43 2017 +0200

    KVM: nVMX: Fix bug of injecting L2 exception into L1
    
    commit 5c7d4f9ad39d980728b39752304ce10bb2960cbf upstream.
    
    kvm_clear_exception_queue() should clear pending exception.
    This also includes exceptions which were only marked pending but not
    yet injected. This is because exception.pending is used for both L1
    and L2 to determine if an exception should be raised to guest.
    Note that an exception which is pending but not yet injected will
    be raised again once the guest will be resumed.
    
    Consider the following scenario:
    1) L0 KVM with ignore_msrs=false.
    2) L1 prepare vmcs12 with the following:
        a) No intercepts on MSR (MSR_BITMAP exist and is filled with 0).
        b) No intercept for #GP.
        c) vmx-preemption-timer is configured.
    3) L1 enters into L2.
    4) L2 reads an unhandled MSR that exists in MSR_BITMAP
    (such as 0x1fff).
    
    L2 RDMSR could be handled as described below:
    1) L2 exits to L0 on RDMSR and calls handle_rdmsr().
    2) handle_rdmsr() calls kvm_inject_gp() which sets
    KVM_REQ_EVENT, exception.pending=true and exception.injected=false.
    3) vcpu_enter_guest() consumes KVM_REQ_EVENT and calls
    inject_pending_event() which calls vmx_check_nested_events()
    which sees that exception.pending=true but
    nested_vmx_check_exception() returns 0 and therefore does nothing at
    this point. However let's assume it later sees vmx-preemption-timer
    expired and therefore exits from L2 to L1 by calling
    nested_vmx_vmexit().
    4) nested_vmx_vmexit() calls prepare_vmcs12()
    which calls vmcs12_save_pending_event() but it does nothing as
    exception.injected is false. Also prepare_vmcs12() calls
    kvm_clear_exception_queue() which does nothing as
    exception.injected is already false.
    5) We now return from vmx_check_nested_events() with 0 while still
    having exception.pending=true!
    6) Therefore inject_pending_event() continues
    and we inject L2 exception to L1!...
    
    This commit will fix above issue by changing step (4) to
    clear exception.pending in kvm_clear_exception_queue().
    
    Fixes: 664f8e26b00c ("KVM: X86: Fix loss of exception which has not yet been injected")
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
    Signed-off-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bad51166f875751657d11b9ff9cd79540302c90
Author: Liran Alon <liran.alon@oracle.com>
Date:   Thu Nov 9 20:27:20 2017 +0200

    KVM: nVMX: Fix races when sending nested PI while dest enters/leaves L2
    
    commit 6b6977117f50d60455ace86b2d256f6fb4f3de05 upstream.
    
    Consider the following scenario:
    1. CPU A calls vmx_deliver_nested_posted_interrupt() to send an IPI
    to CPU B via virtual posted-interrupt mechanism.
    2. CPU B is currently executing L2 guest.
    3. vmx_deliver_nested_posted_interrupt() calls
    kvm_vcpu_trigger_posted_interrupt() which will note that
    vcpu->mode == IN_GUEST_MODE.
    4. Assume that before CPU A sends the physical POSTED_INTR_NESTED_VECTOR
    IPI, CPU B exits from L2 to L0 during event-delivery
    (valid IDT-vectoring-info).
    5. CPU A now sends the physical IPI. The IPI is received in host and
    it's handler (smp_kvm_posted_intr_nested_ipi()) does nothing.
    6. Assume that before CPU A sets pi_pending=true and KVM_REQ_EVENT,
    CPU B continues to run in L0 and reach vcpu_enter_guest(). As
    KVM_REQ_EVENT is not set yet, vcpu_enter_guest() will continue and resume
    L2 guest.
    7. At this point, CPU A sets pi_pending=true and KVM_REQ_EVENT but
    it's too late! CPU B already entered L2 and KVM_REQ_EVENT will only be
    consumed at next L2 entry!
    
    Another scenario to consider:
    1. CPU A calls vmx_deliver_nested_posted_interrupt() to send an IPI
    to CPU B via virtual posted-interrupt mechanism.
    2. Assume that before CPU A calls kvm_vcpu_trigger_posted_interrupt(),
    CPU B is at L0 and is about to resume into L2. Further assume that it is
    in vcpu_enter_guest() after check for KVM_REQ_EVENT.
    3. At this point, CPU A calls kvm_vcpu_trigger_posted_interrupt() which
    will note that vcpu->mode != IN_GUEST_MODE. Therefore, do nothing and
    return false. Then, will set pi_pending=true and KVM_REQ_EVENT.
    4. Now CPU B continue and resumes into L2 guest without processing
    the posted-interrupt until next L2 entry!
    
    To fix both issues, we just need to change
    vmx_deliver_nested_posted_interrupt() to set pi_pending=true and
    KVM_REQ_EVENT before calling kvm_vcpu_trigger_posted_interrupt().
    
    It will fix the first scenario by chaging step (6) to note that
    KVM_REQ_EVENT and pi_pending=true and therefore process
    nested posted-interrupt.
    
    It will fix the second scenario by two possible ways:
    1. If kvm_vcpu_trigger_posted_interrupt() is called while CPU B has changed
    vcpu->mode to IN_GUEST_MODE, physical IPI will be sent and will be received
    when CPU resumes into L2.
    2. If kvm_vcpu_trigger_posted_interrupt() is called while CPU B hasn't yet
    changed vcpu->mode to IN_GUEST_MODE, then after CPU B will change
    vcpu->mode it will call kvm_request_pending() which will return true and
    therefore force another round of vcpu_enter_guest() which will note that
    KVM_REQ_EVENT and pi_pending=true and therefore process nested
    posted-interrupt.
    
    Fixes: 705699a13994 ("KVM: nVMX: Enable nested posted interrupt processing")
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
    [Add kvm_vcpu_kick to also handle the case where L1 doesn't intercept L2 HLT
     and L2 executes HLT instruction. - Paolo]
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dffdb31ad13e37c3037185d3ac04a5e44ebacbd
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:06 2018 +0000

    arm: KVM: Fix SMCCC handling of unimplemented SMC/HVC calls
    
    commit 20e8175d246e9f9deb377f2784b3e7dfb2ad3e86 upstream.
    
    KVM doesn't follow the SMCCC when it comes to unimplemented calls,
    and inject an UNDEF instead of returning an error. Since firmware
    calls are now used for security mitigation, they are becoming more
    common, and the undef is counter productive.
    
    Instead, let's follow the SMCCC which states that -1 must be returned
    to the caller when getting an unknown function number.
    
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f37a798e7724b2b8c008a45e7604bc2cc75870d2
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 24 00:31:27 2018 -0800

    crypto: sha512-mb - initialize pending lengths correctly
    
    commit eff84b379089cd8b4e83599639c1f5f6e34ef7bf upstream.
    
    The SHA-512 multibuffer code keeps track of the number of blocks pending
    in each lane.  The minimum of these values is used to identify the next
    lane that will be completed.  Unused lanes are set to a large number
    (0xFFFFFFFF) so that they don't affect this calculation.
    
    However, it was forgotten to set the lengths to this value in the
    initial state, where all lanes are unused.  As a result it was possible
    for sha512_mb_mgr_get_comp_job_avx2() to select an unused lane, causing
    a NULL pointer dereference.  Specifically this could happen in the case
    where ->update() was passed fewer than SHA512_BLOCK_SIZE bytes of data,
    so it then called sha_complete_job() without having actually submitted
    any blocks to the multi-buffer code.  This hit a NULL pointer
    dereference if another task happened to have submitted blocks
    concurrently to the same CPU and the flush timer had not yet expired.
    
    Fix this by initializing sha512_mb_mgr->lens correctly.
    
    As usual, this bug was found by syzkaller.
    
    Fixes: 45691e2d9b18 ("crypto: sha512-mb - submit/flush routines for AVX2")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f428567e005fa2a7f630266cb48f2036d7f01698
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Mon Feb 5 11:15:52 2018 +0200

    crypto: caam - fix endless loop when DECO acquire fails
    
    commit 225ece3e7dad4cfc44cca38ce7a3a80f255ea8f1 upstream.
    
    In case DECO0 cannot be acquired - i.e. run_descriptor_deco0() fails
    with -ENODEV, caam_probe() enters an endless loop:
    
    run_descriptor_deco0
            ret -ENODEV
            -> instantiate_rng
                    -ENODEV, overwritten by -EAGAIN
                    ret -EAGAIN
                    -> caam_probe
                            -EAGAIN results in endless loop
    
    It turns out the error path in instantiate_rng() is incorrect,
    the checks are done in the wrong order.
    
    Fixes: 1005bccd7a4a6 ("crypto: caam - enable instantiation of all RNG4 state handles")
    Reported-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Suggested-by: Auer Lukas <lukas.auer@aisec.fraunhofer.de>
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a4834092539674b68f03f9b4f13f48c6b424a27
Author: Hans Verkuil <hansverk@cisco.com>
Date:   Wed Feb 14 12:44:34 2018 +0100

    media: v4l2-compat-ioctl32.c: make ctrl_is_pointer work for subdevs
    
    commit 273caa260035c03d89ad63d72d8cd3d9e5c5e3f1 upstream.
    
    If the device is of type VFL_TYPE_SUBDEV then vdev->ioctl_ops
    is NULL so the 'if (!ops->vidioc_query_ext_ctrl)' check would crash.
    Add a test for !ops to the condition.
    
    All sub-devices that have controls will use the control framework,
    so they do not have an equivalent to ops->vidioc_query_ext_ctrl.
    Returning false if ops is NULL is the correct thing to do here.
    
    Fixes: b8c601e8af ("v4l2-compat-ioctl32.c: fix ctrl_is_pointer")
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reported-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad01b40bb9be0987e883655205606c710a8785a5
Author: Daniel Mentz <danielmentz@google.com>
Date:   Wed Feb 14 12:44:33 2018 +0100

    media: v4l2-compat-ioctl32.c: refactor compat ioctl32 logic
    
    commit a1dfb4c48cc1e64eeb7800a27c66a6f7e88d075a upstream.
    
    The 32-bit compat v4l2 ioctl handling is implemented based on its 64-bit
    equivalent. It converts 32-bit data structures into its 64-bit
    equivalents and needs to provide the data to the 64-bit ioctl in user
    space memory which is commonly allocated using
    compat_alloc_user_space().
    
    However, due to how that function is implemented, it can only be called
    a single time for every syscall invocation.
    
    Supposedly to avoid this limitation, the existing code uses a mix of
    memory from the kernel stack and memory allocated through
    compat_alloc_user_space().
    
    Under normal circumstances, this would not work, because the 64-bit
    ioctl expects all pointers to point to user space memory. As a
    workaround, set_fs(KERNEL_DS) is called to temporarily disable this
    extra safety check and allow kernel pointers. However, this might
    introduce a security vulnerability: The result of the 32-bit to 64-bit
    conversion is writeable by user space because the output buffer has been
    allocated via compat_alloc_user_space(). A malicious user space process
    could then manipulate pointers inside this output buffer, and due to the
    previous set_fs(KERNEL_DS) call, functions like get_user() or put_user()
    no longer prevent kernel memory access.
    
    The new approach is to pre-calculate the total amount of user space
    memory that is needed, allocate it using compat_alloc_user_space() and
    then divide up the allocated memory to accommodate all data structures
    that need to be converted.
    
    An alternative approach would have been to retain the union type karg
    that they allocated on the kernel stack in do_video_ioctl(), copy all
    data from user space into karg and then back to user space. However, we
    decided against this approach because it does not align with other
    compat syscall implementations. Instead, we tried to replicate the
    get_user/put_user pairs as found in other places in the kernel:
    
        if (get_user(clipcount, &up->clipcount) ||
            put_user(clipcount, &kp->clipcount)) return -EFAULT;
    
    Notes from hans.verkuil@cisco.com:
    
    This patch was taken from:
        https://github.com/LineageOS/android_kernel_samsung_apq8084/commit/97b733953c06e4f0398ade18850f0817778255f7
    
    Clearly nobody could be bothered to upstream this patch or at minimum
    tell us :-( We only heard about this a week ago.
    
    This patch was rebased and cleaned up. Compared to the original I
    also swapped the order of the convert_in_user arguments so that they
    matched copy_in_user. It was hard to review otherwise. I also replaced
    the ALLOC_USER_SPACE/ALLOC_AND_GET by a normal function.
    
    Fixes: 6b5a9492ca ("v4l: introduce string control support.")
    
    Signed-off-by: Daniel Mentz <danielmentz@google.com>
    Co-developed-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3f69836c92b336cd1ca08bcedf3250265e66e46
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:32 2018 +0100

    media: v4l2-compat-ioctl32.c: don't copy back the result for certain errors
    
    commit d83a8243aaefe62ace433e4384a4f077bed86acb upstream.
    
    Some ioctls need to copy back the result even if the ioctl returned
    an error. However, don't do this for the error code -ENOTTY.
    It makes no sense in that cases.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efabe94f8a0d1aedb1df67c2e1a56d310baf7ce2
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:31 2018 +0100

    media: v4l2-compat-ioctl32.c: drop pr_info for unknown buffer type
    
    commit 169f24ca68bf0f247d111aef07af00dd3a02ae88 upstream.
    
    There is nothing wrong with using an unknown buffer type. So
    stop spamming the kernel log whenever this happens. The kernel
    will just return -EINVAL to signal this.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a20ab4df701b76b10eedcdcbe0a108462d76d6b6
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:30 2018 +0100

    media: v4l2-compat-ioctl32.c: copy clip list in put_v4l2_window32
    
    commit a751be5b142ef6bcbbb96d9899516f4d9c8d0ef4 upstream.
    
    put_v4l2_window32() didn't copy back the clip list to userspace.
    Drivers can update the clip rectangles, so this should be done.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1b572d34648313a07856e5b315d8329eb649c93
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:29 2018 +0100

    media: v4l2-compat-ioctl32.c: fix ctrl_is_pointer
    
    commit b8c601e8af2d08f733d74defa8465303391bb930 upstream.
    
    ctrl_is_pointer just hardcoded two known string controls, but that
    caused problems when using e.g. custom controls that use a pointer
    for the payload.
    
    Reimplement this function: it now finds the v4l2_ctrl (if the driver
    uses the control framework) or it calls vidioc_query_ext_ctrl (if the
    driver implements that directly).
    
    In both cases it can now check if the control is a pointer control
    or not.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3df1197724661c15d23b8359ec42af04a648b848
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:28 2018 +0100

    media: v4l2-compat-ioctl32.c: copy m.userptr in put_v4l2_plane32
    
    commit 8ed5a59dcb47a6f76034ee760b36e089f3e82529 upstream.
    
    The struct v4l2_plane32 should set m.userptr as well. The same
    happens in v4l2_buffer32 and v4l2-compliance tests for this.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16c25072560fb30df50c766260b69b14e3795194
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:27 2018 +0100

    media: v4l2-compat-ioctl32.c: avoid sizeof(type)
    
    commit 333b1e9f96ce05f7498b581509bb30cde03018bf upstream.
    
    Instead of doing sizeof(struct foo) use sizeof(*up). There even were
    cases where 4 * sizeof(__u32) was used instead of sizeof(kp->reserved),
    which is very dangerous when the size of the reserved array changes.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a38becb087b20a34bdbfa63567f69671849025ad
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:26 2018 +0100

    media: v4l2-compat-ioctl32.c: move 'helper' functions to __get/put_v4l2_format32
    
    commit 486c521510c44a04cd756a9267e7d1e271c8a4ba upstream.
    
    These helper functions do not really help. Move the code to the
    __get/put_v4l2_format32 functions.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b7d6ac53606ab9991b76e95ab3e54348b3b9b89
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:25 2018 +0100

    media: v4l2-compat-ioctl32.c: fix the indentation
    
    commit b7b957d429f601d6d1942122b339474f31191d75 upstream.
    
    The indentation of this source is all over the place. Fix this.
    This patch only changes whitespace.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b991eeb5cfb34838c4e984334e5975d3351c026
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:24 2018 +0100

    media: v4l2-compat-ioctl32.c: add missing VIDIOC_PREPARE_BUF
    
    commit 3ee6d040719ae09110e5cdf24d5386abe5d1b776 upstream.
    
    The result of the VIDIOC_PREPARE_BUF ioctl was never copied back
    to userspace since it was missing in the switch.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d280dab382eef93311f089da0bb428336431208
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:23 2018 +0100

    media: v4l2-ioctl.c: don't copy back the result for -ENOTTY
    
    commit 181a4a2d5a0a7b43cab08a70710d727e7764ccdd upstream.
    
    If the ioctl returned -ENOTTY, then don't bother copying
    back the result as there is no point.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea96d8f676dd3caeb77e3dc509c880cc81d303a6
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 12:44:22 2018 +0100

    media: v4l2-ioctl.c: use check_fmt for enum/g/s/try_fmt
    
    commit b2469c814fbc8f1f19676dd4912717b798df511e upstream.
    
    Don't duplicate the buffer type checks in enum/g/s/try_fmt.
    The check_fmt function does that already.
    
    It is hard to keep the checks in sync for all these functions and
    in fact the check for VBI was wrong in the _fmt functions as it
    allowed SDR types as well. This caused a v4l2-compliance failure
    for /dev/swradio0 using vivid.
    
    This simplifies the code and keeps the check in one place and
    fixes the SDR/VBI bug.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f00eb27908895b46e807b632b53824d0844012f
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 3 11:16:27 2018 -0800

    crypto: hash - prevent using keyed hashes without setting key
    
    commit 9fa68f620041be04720d0cbfb1bd3ddfc6310b24 upstream.
    
    Currently, almost none of the keyed hash algorithms check whether a key
    has been set before proceeding.  Some algorithms are okay with this and
    will effectively just use a key of all 0's or some other bogus default.
    However, others will severely break, as demonstrated using
    "hmac(sha3-512-generic)", the unkeyed use of which causes a kernel crash
    via a (potentially exploitable) stack buffer overflow.
    
    A while ago, this problem was solved for AF_ALG by pairing each hash
    transform with a 'has_key' bool.  However, there are still other places
    in the kernel where userspace can specify an arbitrary hash algorithm by
    name, and the kernel uses it as unkeyed hash without checking whether it
    is really unkeyed.  Examples of this include:
    
        - KEYCTL_DH_COMPUTE, via the KDF extension
        - dm-verity
        - dm-crypt, via the ESSIV support
        - dm-integrity, via the "internal hash" mode with no key given
        - drbd (Distributed Replicated Block Device)
    
    This bug is especially bad for KEYCTL_DH_COMPUTE as that requires no
    privileges to call.
    
    Fix the bug for all users by adding a flag CRYPTO_TFM_NEED_KEY to the
    ->crt_flags of each hash transform that indicates whether the transform
    still needs to be keyed or not.  Then, make the hash init, import, and
    digest functions return -ENOKEY if the key is still needed.
    
    The new flag also replaces the 'has_key' bool which algif_hash was
    previously using, thereby simplifying the algif_hash implementation.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d906d183bce4b0eb812e5766ee5016f16dc201c
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 3 11:16:26 2018 -0800

    crypto: hash - annotate algorithms taking optional key
    
    commit a208fa8f33031b9e0aba44c7d1b7e68eb0cbd29e upstream.
    
    We need to consistently enforce that keyed hashes cannot be used without
    setting the key.  To do this we need a reliable way to determine whether
    a given hash algorithm is keyed or not.  AF_ALG currently does this by
    checking for the presence of a ->setkey() method.  However, this is
    actually slightly broken because the CRC-32 algorithms implement
    ->setkey() but can also be used without a key.  (The CRC-32 "key" is not
    actually a cryptographic key but rather represents the initial state.
    If not overridden, then a default initial state is used.)
    
    Prepare to fix this by introducing a flag CRYPTO_ALG_OPTIONAL_KEY which
    indicates that the algorithm has a ->setkey() method, but it is not
    required to be called.  Then set it on all the CRC-32 algorithms.
    
    The same also applies to the Adler-32 implementation in Lustre.
    
    Also, the cryptd and mcryptd templates have to pass through the flag
    from their underlying algorithm.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b806c0cc4c73511be382da411effdbb96f15919a
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 3 11:16:25 2018 -0800

    crypto: poly1305 - remove ->setkey() method
    
    commit a16e772e664b9a261424107784804cffc8894977 upstream.
    
    Since Poly1305 requires a nonce per invocation, the Linux kernel
    implementations of Poly1305 don't use the crypto API's keying mechanism
    and instead expect the key and nonce as the first 32 bytes of the data.
    But ->setkey() is still defined as a stub returning an error code.  This
    prevents Poly1305 from being used through AF_ALG and will also break it
    completely once we start enforcing that all crypto API users (not just
    AF_ALG) call ->setkey() if present.
    
    Fix it by removing crypto_poly1305_setkey(), leaving ->setkey as NULL.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16210524c424a5df0cdd9b2b6aaee037f995f6ad
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 3 11:16:24 2018 -0800

    crypto: mcryptd - pass through absence of ->setkey()
    
    commit fa59b92d299f2787e6bae1ff078ee0982e80211f upstream.
    
    When the mcryptd template is used to wrap an unkeyed hash algorithm,
    don't install a ->setkey() method to the mcryptd instance.  This change
    is necessary for mcryptd to keep working with unkeyed hash algorithms
    once we start enforcing that ->setkey() is called when present.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed7b0af0ca02877cb4e23546da0d44dd49156bd7
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 3 11:16:23 2018 -0800

    crypto: cryptd - pass through absence of ->setkey()
    
    commit 841a3ff329713f796a63356fef6e2f72e4a3f6a3 upstream.
    
    When the cryptd template is used to wrap an unkeyed hash algorithm,
    don't install a ->setkey() method to the cryptd instance.  This change
    is necessary for cryptd to keep working with unkeyed hash algorithms
    once we start enforcing that ->setkey() is called when present.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8b32e2e68f0a3dd67edb34710964dc3e67bdf3b
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jan 3 11:16:22 2018 -0800

    crypto: hash - introduce crypto_hash_alg_has_setkey()
    
    commit cd6ed77ad5d223dc6299fb58f62e0f5267f7e2ba upstream.
    
    Templates that use an shash spawn can use crypto_shash_alg_has_setkey()
    to determine whether the underlying algorithm requires a key or not.
    But there was no corresponding function for ahash spawns.  Add it.
    
    Note that the new function actually has to support both shash and ahash
    algorithms, since the ahash API can be used with either.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 449704d3ba6f45585da8cc033af2e3178d7344a7
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Thu Jan 11 15:55:50 2018 +0300

    ahci: Add Intel Cannon Lake PCH-H PCI ID
    
    commit f919dde0772a894c693a1eeabc77df69d6a9b937 upstream.
    
    Add Intel Cannon Lake PCH-H PCI ID to the list of supported controllers.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53c5963da84337b71abff8b85291cd25a1002c17
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Dec 6 16:41:09 2017 +0100

    ahci: Add PCI ids for Intel Bay Trail, Cherry Trail and Apollo Lake AHCI
    
    commit 998008b779e424bd7513c434d0ab9c1268459009 upstream.
    
    Add PCI ids for Intel Bay Trail, Cherry Trail and Apollo Lake AHCI
    SATA controllers. This commit is a preparation patch for allowing a
    different default sata link powermanagement policy for mobile chipsets.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e985f7c8ac3801ce6b684d1b248f63701190154b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Dec 6 16:41:08 2017 +0100

    ahci: Annotate PCI ids for mobile Intel chipsets as such
    
    commit ca1b4974bd237f2373b0e980b11957aac3499b56 upstream.
    
    Intel uses different SATA PCI ids for the Desktop and Mobile SKUs of their
    chipsets. For older models the comment describing which chipset the PCI id
    is for, aksi indicates when we're dealing with a mobile SKU. Extend the
    comments for recent chipsets to also indicate mobile SKUs.
    
    The information this commit adds comes from Intel's chipset datasheets.
    
    This commit is a preparation patch for allowing a different default
    sata link powermanagement policy for mobile chipsets.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 650d3d8512c6c542d7c11ece049b46d5f2337ce8
Author: Ivan Vecera <ivecera@redhat.com>
Date:   Fri Jan 19 09:18:54 2018 +0100

    kernfs: fix regression in kernfs_fop_write caused by wrong type
    
    commit ba87977a49913129962af8ac35b0e13e0fa4382d upstream.
    
    Commit b7ce40cff0b9 ("kernfs: cache atomic_write_len in
    kernfs_open_file") changes type of local variable 'len' from ssize_t
    to size_t. This change caused that the *ppos value is updated also
    when the previous write callback failed.
    
    Mentioned snippet:
    ...
    len = ops->write(...); <- return value can be negative
    ...
    if (len > 0)           <- true here in this case
            *ppos += len;
    ...
    
    Fixes: b7ce40cff0b9 ("kernfs: cache atomic_write_len in kernfs_open_file")
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ivan Vecera <ivecera@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1e31607e73d5f4546ff8d1e40e1153230392188
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Sun Jan 28 09:29:41 2018 -0500

    NFS: Fix a race between mmap() and O_DIRECT
    
    commit e231c6879cfd44e4fffd384bb6dd7d313249a523 upstream.
    
    When locking the file in order to do O_DIRECT on it, we must unmap
    any mmapped ranges on the pagecache so that we can flush out the
    dirty data.
    
    Fixes: a5864c999de67 ("NFS: Do not serialise O_DIRECT reads and writes")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c38ad2f26d8511cde75ce5767313e8c3e789d69
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Jan 19 15:15:34 2018 -0800

    NFS: reject request for id_legacy key without auxdata
    
    commit 49686cbbb3ebafe42e63868222f269d8053ead00 upstream.
    
    nfs_idmap_legacy_upcall() is supposed to be called with 'aux' pointing
    to a 'struct idmap', via the call to request_key_with_auxdata() in
    nfs_idmap_request_key().
    
    However it can also be reached via the request_key() system call in
    which case 'aux' will be NULL, causing a NULL pointer dereference in
    nfs_idmap_prepare_pipe_upcall(), assuming that the key description is
    valid enough to get that far.
    
    Fix this by making nfs_idmap_legacy_upcall() negate the key if no
    auxdata is provided.
    
    As usual, this bug was found by syzkaller.  A simple reproducer using
    the command-line keyctl program is:
    
        keyctl request2 id_legacy uid:0 '' @s
    
    Fixes: 57e62324e469 ("NFS: Store the legacy idmapper result in the keyring")
    Reported-by: syzbot+5dfdbcf7b3eb5912abbb@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Trond Myklebust <trondmy@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60017643c21060b600faeae9a58e450804ea288d
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Tue Jan 16 10:08:00 2018 -0500

    NFS: commit direct writes even if they fail partially
    
    commit 1b8d97b0a837beaf48a8449955b52c650a7114b4 upstream.
    
    If some of the WRITE calls making up an O_DIRECT write syscall fail,
    we neglect to commit, even if some of the WRITEs succeed.
    
    We also depend on the commit code to free the reference count on the
    nfs_page taken in the "if (request_commit)" case at the end of
    nfs_direct_write_completion().  The problem was originally noticed
    because ENOSPC's encountered partway through a write would result in a
    closed file being sillyrenamed when it should have been unlinked.
    
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6421f29eb8af8992fd8a85823b435d44bb055b1c
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Sat Jan 6 09:53:49 2018 -0500

    NFS: Fix nfsstat breakage due to LOOKUPP
    
    commit 8634ef5e05311f32d7f2aee06f6b27a8834a3bd6 upstream.
    
    The LOOKUPP operation was inserted into the nfs4_procedures array
    rather than being appended, which put /proc/net/rpc/nfs out of
    whack, and broke the nfsstat utility.
    Fix by moving the LOOKUPP operation to the end of the array, and
    by ensuring that it keeps the same length whether or not NFSV4.1
    and NFSv4.2 are compiled in.
    
    Fixes: 5b5faaf6df734 ("nfs4: add NFSv4 LOOKUPP handlers")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d03af006438b91dab7c1feb474a5c899554acac
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Dec 18 14:39:13 2017 -0500

    NFS: Add a cond_resched() to nfs_commit_release_pages()
    
    commit 7f1bda447c9bd48b415acedba6b830f61591601f upstream.
    
    The commit list can get very large, and so we need a cond_resched()
    in nfs_commit_release_pages() in order to ensure we don't hog the CPU
    for excessive periods of time.
    
    Reported-by: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ac2d17a6ed38d3e662e56ad79e0ba1a98247830
Author: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
Date:   Tue Jan 16 22:38:50 2018 +0100

    nfs41: do not return ENOMEM on LAYOUTUNAVAILABLE
    
    commit 7ff4cff637aa0bd2abbd81f53b2a6206c50afd95 upstream.
    
    A pNFS server may return LAYOUTUNAVAILABLE error on LAYOUTGET for files
    which don't have any layout. In this situation pnfs_update_layout
    currently returns NULL. As this NULL is converted into ENOMEM, IO
    requests fails instead of falling back to MDS.
    
    Do not return ENOMEM on LAYOUTUNAVAILABLE and let client retry through
    MDS.
    
    Fixes 8d40b0f14846f. I will suggest to backport this fix to affected
    stable branches.
    
    Signed-off-by: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
    [trondmy: Use IS_ERR_OR_NULL()]
    Fixes: 8d40b0f14846 ("NFS filelayout:call GETDEVICEINFO after...")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ace34428faa6be2098c9ac295394c11e65db2263
Author: Scott Mayhew <smayhew@redhat.com>
Date:   Fri Dec 15 16:12:32 2017 -0500

    nfs/pnfs: fix nfs_direct_req ref leak when i/o falls back to the mds
    
    commit ba4a76f703ab7eb72941fdaac848502073d6e9ee upstream.
    
    Currently when falling back to doing I/O through the MDS (via
    pnfs_{read|write}_through_mds), the client frees the nfs_pgio_header
    without releasing the reference taken on the dreq
    via pnfs_generic_pg_{read|write}pages -> nfs_pgheader_init ->
    nfs_direct_pgio_init.  It then takes another reference on the dreq via
    nfs_generic_pg_pgios -> nfs_pgheader_init -> nfs_direct_pgio_init and
    as a result the requester will become stuck in inode_dio_wait.  Once
    that happens, other processes accessing the inode will become stuck as
    well.
    
    Ensure that pnfs_read_through_mds() and pnfs_write_through_mds() clean
    up correctly by calling hdr->completion_ops->completion() instead of
    calling hdr->release() directly.
    
    This can be reproduced (sometimes) by performing "storage failover
    takeover" commands on NetApp filer while doing direct I/O from a client.
    
    This can also be reproduced using SystemTap to simulate a failure while
    doing direct I/O from a client (from Dave Wysochanski
    <dwysocha@redhat.com>):
    
    stap -v -g -e 'probe module("nfs_layout_nfsv41_files").function("nfs4_fl_prepare_ds").return { $return=NULL; exit(); }'
    
    Suggested-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Scott Mayhew <smayhew@redhat.com>
    Fixes: 1ca018d28d ("pNFS: Fix a memory leak when attempted pnfs fails")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 068e53f9b1921bd6a3ed2340dc5d85792bdde089
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jan 11 23:27:00 2018 -0500

    ubifs: free the encrypted symlink target
    
    commit 6b46d444146eb8d0b99562795cea8086639d7282 upstream.
    
    ubifs_symlink() forgot to free the kmalloc()'ed buffer holding the
    encrypted symlink target, creating a memory leak.  Fix it.
    
    (UBIFS could actually encrypt directly into ui->data, removing the
    temporary buffer, but that is left for the patch that switches to use
    the symlink helper functions.)
    
    Fixes: ca7f85be8d6c ("ubifs: Add support for encrypted symlinks")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9a35f8b73f10c605fba4548957c8317228848c7
Author: Bradley Bolen <bradleybolen@gmail.com>
Date:   Thu Jan 18 08:55:20 2018 -0500

    ubi: block: Fix locking for idr_alloc/idr_remove
    
    commit 7f29ae9f977bcdc3654e68bc36d170223c52fd48 upstream.
    
    This fixes a race with idr_alloc where gd->first_minor can be set to the
    same value for two simultaneous calls to ubiblock_create.  Each instance
    calls device_add_disk with the same first_minor.  device_add_disk calls
    bdi_register_owner which generates several warnings.
    
    WARNING: CPU: 1 PID: 179 at kernel-source/fs/sysfs/dir.c:31
    sysfs_warn_dup+0x68/0x88
    sysfs: cannot create duplicate filename '/devices/virtual/bdi/252:2'
    
    WARNING: CPU: 1 PID: 179 at kernel-source/lib/kobject.c:240
    kobject_add_internal+0x1ec/0x2f8
    kobject_add_internal failed for 252:2 with -EEXIST, don't try to
    register things with the same name in the same directory
    
    WARNING: CPU: 1 PID: 179 at kernel-source/fs/sysfs/dir.c:31
    sysfs_warn_dup+0x68/0x88
    sysfs: cannot create duplicate filename '/dev/block/252:2'
    
    However, device_add_disk does not error out when bdi_register_owner
    returns an error.  Control continues until reaching blk_register_queue.
    It then BUGs.
    
    kernel BUG at kernel-source/fs/sysfs/group.c:113!
    [<c01e26cc>] (internal_create_group) from [<c01e2950>]
    (sysfs_create_group+0x20/0x24)
    [<c01e2950>] (sysfs_create_group) from [<c00e3d38>]
    (blk_trace_init_sysfs+0x18/0x20)
    [<c00e3d38>] (blk_trace_init_sysfs) from [<c02bdfbc>]
    (blk_register_queue+0xd8/0x154)
    [<c02bdfbc>] (blk_register_queue) from [<c02cec84>]
    (device_add_disk+0x194/0x44c)
    [<c02cec84>] (device_add_disk) from [<c0436ec8>]
    (ubiblock_create+0x284/0x2e0)
    [<c0436ec8>] (ubiblock_create) from [<c0427bb8>]
    (vol_cdev_ioctl+0x450/0x554)
    [<c0427bb8>] (vol_cdev_ioctl) from [<c0189110>] (vfs_ioctl+0x30/0x44)
    [<c0189110>] (vfs_ioctl) from [<c01892e0>] (do_vfs_ioctl+0xa0/0x790)
    [<c01892e0>] (do_vfs_ioctl) from [<c0189a14>] (SyS_ioctl+0x44/0x68)
    [<c0189a14>] (SyS_ioctl) from [<c0010640>] (ret_fast_syscall+0x0/0x34)
    
    Locking idr_alloc/idr_remove removes the race and keeps gd->first_minor
    unique.
    
    Fixes: 2bf50d42f3a4 ("UBI: block: Dynamically allocate minor numbers")
    Signed-off-by: Bradley Bolen <bradleybolen@gmail.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5793f39de7f64938c23cc062b1e170505789b0b0
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Tue Dec 5 16:01:20 2017 +0100

    ubi: fastmap: Erase outdated anchor PEBs during attach
    
    commit f78e5623f45bab2b726eec29dc5cefbbab2d0b1c upstream.
    
    The fastmap update code might erase the current fastmap anchor PEB
    in case it doesn't find any new free PEB. When a power cut happens
    in this situation we must not have any outdated fastmap anchor PEB
    on the device, because that would be used to attach during next
    boot.
    The easiest way to make that sure is to erase all outdated fastmap
    anchor PEBs synchronously during attach.
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Fixes: dbb7d2a88d2a ("UBI: Add fastmap core")
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c94c39ac85f11698f3f0babb515f79656df3917e
Author: Clay McClure <clay@daemons.net>
Date:   Thu Sep 21 19:01:34 2017 -0700

    ubi: Fix race condition between ubi volume creation and udev
    
    commit a51a0c8d213594bc094cb8e54aad0cb6d7f7b9a6 upstream.
    
    Similar to commit 714fb87e8bc0 ("ubi: Fix race condition between ubi
    device creation and udev"), we should make the volume active before
    registering it.
    
    Signed-off-by: Clay McClure <clay@daemons.net>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7eb52a6889e90bcb1280cf2d93f8a80602191d5c
Author: Miquel Raynal <miquel.raynal@free-electrons.com>
Date:   Wed Jan 24 23:49:31 2018 +0100

    mtd: nand: sunxi: Fix ECC strength choice
    
    commit f4c6cd1a7f2275d5bc0e494b21fff26f8dde80f0 upstream.
    
    When the requested ECC strength does not exactly match the strengths
    supported by the ECC engine, the driver is selecting the closest
    strength meeting the 'selected_strength > requested_strength'
    constraint. Fix the fact that, in this particular case, ecc->strength
    value was not updated to match the 'selected_strength'.
    
    For instance, one can encounter this issue when no ECC requirement is
    filled in the device tree while the NAND chip minimum requirement is not
    a strength/step_size combo natively supported by the ECC engine.
    
    Fixes: 1fef62c1423b ("mtd: nand: add sunxi NAND flash controller support")
    Suggested-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@free-electrons.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16d11602c83b45f448355e02dd97a0d855016ef3
Author: Miquel Raynal <miquel.raynal@free-electrons.com>
Date:   Fri Jan 12 10:13:36 2018 +0100

    mtd: nand: Fix nand_do_read_oob() return value
    
    commit 87e89ce8d0d14f573c068c61bec2117751fb5103 upstream.
    
    Starting from commit 041e4575f034 ("mtd: nand: handle ECC errors in
    OOB"), nand_do_read_oob() (from the NAND core) did return 0 or a
    negative error, and the MTD layer expected it.
    
    However, the trend for the NAND layer is now to return an error or a
    positive number of bitflips. Deciding which status to return to the user
    belongs to the MTD layer.
    
    Commit e47f68587b82 ("mtd: check for max_bitflips in mtd_read_oob()")
    brought this logic to the mtd_read_oob() function while the return value
    coming from nand_do_read_oob() (called by the ->_read_oob() hook) was
    left unchanged.
    
    Fixes: e47f68587b82 ("mtd: check for max_bitflips in mtd_read_oob()")
    Signed-off-by: Miquel Raynal <miquel.raynal@free-electrons.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4527b0887bc5ae69513215f91233c27808cd1f04
Author: Kamal Dasu <kdasu.kdev@gmail.com>
Date:   Mon Jan 8 15:36:48 2018 -0500

    mtd: nand: brcmnand: Disable prefetch by default
    
    commit f953f0f89663c39f08f4baaa8a4a881401b65654 upstream.
    
    Brcm nand controller prefetch feature needs to be disabled
    by default. Enabling affects performance on random reads as
    well as dma reads.
    
    Signed-off-by: Kamal Dasu <kdasu.kdev@gmail.com>
    Fixes: 27c5b17cd1b1 ("mtd: nand: add NAND driver "library" for Broadcom STB NAND controller")
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0763f0418bb53f4724a6d711bf3b735a71ce3d24
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Oct 11 15:54:10 2017 +0200

    mtd: cfi: convert inline functions to macros
    
    commit 9e343e87d2c4c707ef8fae2844864d4dde3a2d13 upstream.
    
    The map_word_() functions, dating back to linux-2.6.8, try to perform
    bitwise operations on a 'map_word' structure. This may have worked
    with compilers that were current then (gcc-3.4 or earlier), but end
    up being rather inefficient on any version I could try now (gcc-4.4 or
    higher). Specifically we hit a problem analyzed in gcc PR81715 where we
    fail to reuse the stack space for local variables.
    
    This can be seen immediately in the stack consumption for
    cfi_staa_erase_varsize() and other functions that (with CONFIG_KASAN)
    can be up to 2200 bytes. Changing the inline functions into macros brings
    this down to 1280 bytes.  Without KASAN, the same problem exists, but
    the stack consumption is lower to start with, my patch shrinks it from
    920 to 496 bytes on with arm-linux-gnueabi-gcc-5.4, and saves around
    1KB in .text size for cfi_cmdset_0020.c, as it avoids copying map_word
    structures for each call to one of these helpers.
    
    With the latest gcc-8 snapshot, the problem is fixed in upstream gcc,
    but nobody uses that yet, so we should still work around it in mainline
    kernels and probably backport the workaround to stable kernels as well.
    We had a couple of other functions that suffered from the same gcc bug,
    and all of those had a simpler workaround involving dummy variables
    in the inline function. Unfortunately that did not work here, the
    macro hack was the best I could come up with.
    
    It would also be helpful to have someone to a little performance testing
    on the patch, to see how much it helps in terms of CPU utilitzation.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=81715
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c584c903bae9a1ec6e881847713df9c1b8b87df0
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:21 2018 +0000

    arm64: Kill PSCI_GET_VERSION as a variant-2 workaround
    
    
    Commit 3a0a397ff5ff upstream.
    
    Now that we've standardised on SMCCC v1.1 to perform the branch
    prediction invalidation, let's drop the previous band-aid.
    If vendors haven't updated their firmware to do SMCCC 1.1, they
    haven't updated PSCI either, so we don't loose anything.
    
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbca45b996550f1ab646011f48bede5b9c2e2ea9
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:20 2018 +0000

    arm64: Add ARM_SMCCC_ARCH_WORKAROUND_1 BP hardening support
    
    
    Commit b092201e0020 upstream.
    
    Add the detection and runtime code for ARM_SMCCC_ARCH_WORKAROUND_1.
    It is lovely. Really.
    
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac63fdb4a2b229bdd7ad8449a88791ad5da5f572
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:19 2018 +0000

    arm/arm64: smccc: Implement SMCCC v1.1 inline primitive
    
    
    Commit f2d3b2e8759a upstream.
    
    One of the major improvement of SMCCC v1.1 is that it only clobbers
    the first 4 registers, both on 32 and 64bit. This means that it
    becomes very easy to provide an inline version of the SMC call
    primitive, and avoid performing a function call to stash the
    registers that would otherwise be clobbered by SMCCC v1.0.
    
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37dc3e6c117eced753d6ce6cce85535cec3ad013
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:18 2018 +0000

    arm/arm64: smccc: Make function identifiers an unsigned quantity
    
    
    Commit ded4c39e93f3 upstream.
    
    Function identifiers are a 32bit, unsigned quantity. But we never
    tell so to the compiler, resulting in the following:
    
     4ac:   b26187e0        mov     x0, #0xffffffff80000001
    
    We thus rely on the firmware narrowing it for us, which is not
    always a reasonable expectation.
    
    Cc: stable@vger.kernel.org
    Reported-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 908ad7a1484d78228bc88d242121574f86eb35e8
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:17 2018 +0000

    firmware/psci: Expose SMCCC version through psci_ops
    
    
    Commit e78eef554a91 upstream.
    
    Since PSCI 1.0 allows the SMCCC version to be (indirectly) probed,
    let's do that at boot time, and expose the version of the calling
    convention as part of the psci_ops structure.
    
    Acked-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 906a9f396cc8005807f6741e881da0ad317c4091
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:16 2018 +0000

    firmware/psci: Expose PSCI conduit
    
    
    Commit 09a8d6d48499 upstream.
    
    In order to call into the firmware to apply workarounds, it is
    useful to find out whether we're using HVC or SMC. Let's expose
    this through the psci_ops.
    
    Acked-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6db26ad1dc4685843ab3c4d655b51777e04d131e
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:15 2018 +0000

    arm64: KVM: Add SMCCC_ARCH_WORKAROUND_1 fast handling
    
    
    Commit f72af90c3783 upstream.
    
    We want SMCCC_ARCH_WORKAROUND_1 to be fast. As fast as possible.
    So let's intercept it as early as we can by testing for the
    function call number as soon as we've identified a HVC call
    coming from the guest.
    
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e47273d086236d06c3c2851fa8599971086b2a73
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:14 2018 +0000

    arm64: KVM: Report SMCCC_ARCH_WORKAROUND_1 BP hardening support
    
    
    Commit 6167ec5c9145 upstream.
    
    A new feature of SMCCC 1.1 is that it offers firmware-based CPU
    workarounds. In particular, SMCCC_ARCH_WORKAROUND_1 provides
    BP hardening for CVE-2017-5715.
    
    If the host has some mitigation for this issue, report that
    we deal with it using SMCCC_ARCH_WORKAROUND_1, as we apply the
    host workaround on every guest exit.
    
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cfe8929f6247dbee8def7e94f334909fe5ac084
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:13 2018 +0000

    arm/arm64: KVM: Turn kvm_psci_version into a static inline
    
    
    Commit a4097b351118 upstream.
    
    We're about to need kvm_psci_version in HYP too. So let's turn it
    into a static inline, and pass the kvm structure as a second
    parameter (so that HYP can do a kern_hyp_va on it).
    
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98be7165d9f71f5df9802548b7d8ab2cf6ccb211
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Wed Jan 3 16:38:37 2018 +0000

    arm64: KVM: Make PSCI_VERSION a fast path
    
    
    Commit 90348689d500 upstream.
    
    For those CPUs that require PSCI to perform a BP invalidation,
    going all the way to the PSCI code for not much is a waste of
    precious cycles. Let's terminate that call as early as possible.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45e2061147c329fc08f81a7e2a551b92bcc2a6a3
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:12 2018 +0000

    arm/arm64: KVM: Advertise SMCCC v1.1
    
    
    Commit 09e6be12effd upstream.
    
    The new SMC Calling Convention (v1.1) allows for a reduced overhead
    when calling into the firmware, and provides a new feature discovery
    mechanism.
    
    Make it visible to KVM guests.
    
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ba100aa94a0f8c44de187c46fee4917ce1e06aa
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:11 2018 +0000

    arm/arm64: KVM: Implement PSCI 1.0 support
    
    
    Commit 58e0b2239a4d upstream.
    
    PSCI 1.0 can be trivially implemented by providing the FEATURES
    call on top of PSCI 0.2 and returning 1.0 as the PSCI version.
    
    We happily ignore everything else, as they are either optional or
    are clarifications that do not require any additional change.
    
    PSCI 1.0 is now the default until we decide to add a userspace
    selection API.
    
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce15f32d48840bbaf49bf5b9ba540befb59548cb
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:10 2018 +0000

    arm/arm64: KVM: Add smccc accessors to PSCI code
    
    
    Commit 84684fecd7ea upstream.
    
    Instead of open coding the accesses to the various registers,
    let's add explicit SMCCC accessors.
    
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4efa1a863a1218d4b884a67178735950aab85c2e
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:09 2018 +0000

    arm/arm64: KVM: Add PSCI_VERSION helper
    
    
    Commit d0a144f12a7c upstream.
    
    As we're about to trigger a PSCI version explosion, it doesn't
    hurt to introduce a PSCI_VERSION helper that is going to be
    used everywhere.
    
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 591862b560003518dfc369d44d1e177d96f7104c
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:08 2018 +0000

    arm/arm64: KVM: Consolidate the PSCI include files
    
    
    Commit 1a2fb94e6a77 upstream.
    
    As we're about to update the PSCI support, and because I'm lazy,
    let's move the PSCI include file to include/kvm so that both
    ARM architectures can find it.
    
    Acked-by: Christoffer Dall <christoffer.dall@linaro.org>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b3512fa7b0a4f1f187a5e38112c5bebaea87fc1
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Feb 6 17:56:07 2018 +0000

    arm64: KVM: Increment PC after handling an SMC trap
    
    
    Commit f5115e8869e1 upstream.
    
    When handling an SMC trap, the "preferred return address" is set
    to that of the SMC, and not the next PC (which is a departure from
    the behaviour of an SMC that isn't trapped).
    
    Increment PC in the handler, as the guest is otherwise forever
    stuck...
    
    Cc: stable@vger.kernel.org
    Fixes: acfb3b883f6d ("arm64: KVM: Fix SMCCC handling of unimplemented SMC/HVC calls")
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 402aeac58753ad5c3582eb8175a336f8e1fb62f4
Author: Jayachandran C <jnair@caviumnetworks.com>
Date:   Fri Jan 19 04:22:47 2018 -0800

    arm64: Branch predictor hardening for Cavium ThunderX2
    
    
    Commit f3d795d9b360 upstream.
    
    Use PSCI based mitigation for speculative execution attacks targeting
    the branch predictor. We use the same mechanism as the one used for
    Cortex-A CPUs, we expect the PSCI version call to have a side effect
    of clearing the BTBs.
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Jayachandran C <jnair@caviumnetworks.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b26a45c34e40575e53287365be7571b9cda21ab
Author: Shanker Donthineni <shankerd@codeaurora.org>
Date:   Fri Jan 5 14:28:59 2018 -0600

    arm64: Implement branch predictor hardening for Falkor
    
    
    Commit ec82b567a74f upstream.
    
    Falkor is susceptible to branch predictor aliasing and can
    theoretically be attacked by malicious code. This patch
    implements a mitigation for these attacks, preventing any
    malicious entries from affecting other victim contexts.
    
    Signed-off-by: Shanker Donthineni <shankerd@codeaurora.org>
    [will: fix label name when !CONFIG_KVM and remove references to MIDR_FALKOR]
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48993dfa1af8c719576a18c0e2ca1d611297e34e
Author: Will Deacon <will.deacon@arm.com>
Date:   Wed Jan 3 12:46:21 2018 +0000

    arm64: Implement branch predictor hardening for affected Cortex-A CPUs
    
    
    Commit aa6acde65e03 upstream.
    
    Cortex-A57, A72, A73 and A75 are susceptible to branch predictor aliasing
    and can theoretically be attacked by malicious code.
    
    This patch implements a PSCI-based mitigation for these CPUs when available.
    The call into firmware will invalidate the branch predictor state, preventing
    any malicious entries from affecting other victim contexts.
    
    Co-developed-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3317097b2b4affdd0b600ef0eb558a3e82964dc6
Author: Will Deacon <will.deacon@arm.com>
Date:   Wed Jan 3 11:19:34 2018 +0000

    arm64: cputype: Add missing MIDR values for Cortex-A72 and Cortex-A75
    
    
    Commit a65d219fe5dc upstream.
    
    Hook up MIDR values for the Cortex-A72 and Cortex-A75 CPUs, since they
    will soon need MIDR matches for hardening the branch predictor.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48c3538c35780838da19773b615ede148e6af2b0
Author: Will Deacon <will.deacon@arm.com>
Date:   Fri Feb 2 17:31:40 2018 +0000

    arm64: entry: Apply BP hardening for suspicious interrupts from EL0
    
    
    Commit 30d88c0e3ace upstream.
    
    It is possible to take an IRQ from EL0 following a branch to a kernel
    address in such a way that the IRQ is prioritised over the instruction
    abort. Whilst an attacker would need to get the stars to align here,
    it might be sufficient with enough calibration so perform BP hardening
    in the rare case that we see a kernel address in the ELR when handling
    an IRQ from EL0.
    
    Reported-by: Dan Hettena <dhettena@nvidia.com>
    Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b47a8256a56c261ab008863a548f245fdcc8b11
Author: Will Deacon <will.deacon@arm.com>
Date:   Fri Feb 2 17:31:39 2018 +0000

    arm64: entry: Apply BP hardening for high-priority synchronous exceptions
    
    
    Commit 5dfc6ed27710 upstream.
    
    Software-step and PC alignment fault exceptions have higher priority than
    instruction abort exceptions, so apply the BP hardening hooks there too
    if the user PC appears to reside in kernel space.
    
    Reported-by: Dan Hettena <dhettena@nvidia.com>
    Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aab3306701f10c5dc35d8da74431cde6249baf0b
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Wed Jan 3 16:38:35 2018 +0000

    arm64: KVM: Use per-CPU vector when BP hardening is enabled
    
    
    Commit 6840bdd73d07 upstream.
    
    Now that we have per-CPU vectors, let's plug then in the KVM/arm64 code.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9107ac4ea3da68af722d1b6820f90cf0c119b134
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Fri Jan 19 15:42:09 2018 +0000

    arm64: Move BP hardening to check_and_switch_context
    
    
    Commit a8e4c0a919ae upstream.
    
    We call arm64_apply_bp_hardening() from post_ttbr_update_workaround,
    which has the unexpected consequence of being triggered on every
    exception return to userspace when ARM64_SW_TTBR0_PAN is selected,
    even if no context switch actually occured.
    
    This is a bit suboptimal, and it would be more logical to only
    invalidate the branch predictor when we actually switch to
    a different mm.
    
    In order to solve this, move the call to arm64_apply_bp_hardening()
    into check_and_switch_context(), where we're guaranteed to pick
    a different mm context.
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5bee81c980297f3f5486539881ab4241c5f0dea3
Author: Will Deacon <will.deacon@arm.com>
Date:   Wed Jan 3 11:17:58 2018 +0000

    arm64: Add skeleton to harden the branch predictor against aliasing attacks
    
    
    Commit 0f15adbb2861 upstream.
    
    Aliasing attacks against CPU branch predictors can allow an attacker to
    redirect speculative control flow on some CPUs and potentially divulge
    information from one context to another.
    
    This patch adds initial skeleton code behind a new Kconfig option to
    enable implementation-specific mitigations against these attacks for
    CPUs that are affected.
    
    Co-developed-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c10e4aa77814063ac459fab673a5a392b7334b42
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Jan 2 18:19:39 2018 +0000

    arm64: Move post_ttbr_update_workaround to C code
    
    Commit 95e3de3590e3 upstream.
    
    We will soon need to invoke a CPU-specific function pointer after changing
    page tables, so move post_ttbr_update_workaround out into C code to make
    this possible.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f91f190708b25df0a5675800bcabae13bf2aa882
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Jan 2 21:45:41 2018 +0000

    drivers/firmware: Expose psci_get_version through psci_ops structure
    
    
    Commit d68e3ba5303f upstream.
    
    Entry into recent versions of ARM Trusted Firmware will invalidate the CPU
    branch predictor state in order to protect against aliasing attacks.
    
    This patch exposes the PSCI "VERSION" function via psci_ops, so that it
    can be invoked outside of the PSCI driver where necessary.
    
    Acked-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be53742befea9329b034f143e7e932cac54d3609
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Jan 2 21:37:25 2018 +0000

    arm64: cpufeature: Pass capability structure to ->enable callback
    
    
    Commit 0a0d111d40fd upstream.
    
    In order to invoke the CPU capability ->matches callback from the ->enable
    callback for applying local-CPU workarounds, we need a handle on the
    capability structure.
    
    This patch passes a pointer to the capability structure to the ->enable
    callback.
    
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9da836a476fe5f90348ca5edfb5af68c2ebb558b
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Wed Jan 17 17:42:20 2018 +0000

    arm64: Run enable method for errata work arounds on late CPUs
    
    
    Commit 55b35d070c25 upstream.
    
    When a CPU is brought up after we have finalised the system
    wide capabilities (i.e, features and errata), we make sure the
    new CPU doesn't need a new errata work around which has not been
    detected already. However we don't run enable() method on the new
    CPU for the errata work arounds already detected. This could
    cause the new CPU running without potential work arounds.
    It is upto the "enable()" method to decide if this CPU should
    do something about the errata.
    
    Fixes: commit 6a6efbb45b7d95c84 ("arm64: Verify CPU errata work arounds on hotplugged CPU")
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Andre Przywara <andre.przywara@arm.com>
    Cc: Dave Martin <dave.martin@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da1f67921d2ff82ac3dfbf193dc4596da569a5c6
Author: James Morse <james.morse@arm.com>
Date:   Mon Jan 15 19:38:54 2018 +0000

    arm64: cpufeature: __this_cpu_has_cap() shouldn't stop early
    
    
    Commit edf298cfce47 upstream.
    
    this_cpu_has_cap() tests caps->desc not caps->matches, so it stops
    walking the list when it finds a 'silent' feature, instead of
    walking to the end of the list.
    
    Prior to v4.6's 644c2ae198412 ("arm64: cpufeature: Test 'matches' pointer
    to find the end of the list") we always tested desc to find the end of
    a capability list. This was changed for dubious things like PAN_NOT_UAO.
    v4.7's e3661b128e53e ("arm64: Allow a capability to be checked on
    single CPU") added this_cpu_has_cap() using the old desc style test.
    
    CC: Suzuki K Poulose <suzuki.poulose@arm.com>
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9ef050f28953658ab1621a65c4090600e30bfde
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Feb 5 15:34:24 2018 +0000

    arm64: futex: Mask __user pointers prior to dereference
    
    
    Commit 91b2d3442f6a upstream.
    
    The arm64 futex code has some explicit dereferencing of user pointers
    where performing atomic operations in response to a futex command. This
    patch uses masking to limit any speculative futex operations to within
    the user address space.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba32050d308a8bcd8ea300daf00dc197523d47f8
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Feb 5 15:34:23 2018 +0000

    arm64: uaccess: Mask __user pointers for __arch_{clear, copy_*}_user
    
    
    Commit f71c2ffcb20d upstream.
    
    Like we've done for get_user and put_user, ensure that user pointers
    are masked before invoking the underlying __arch_{clear,copy_*}_user
    operations.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28d8886d985ccc84e4e8f567c60f491acb1ae51c
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Feb 5 15:34:22 2018 +0000

    arm64: uaccess: Don't bother eliding access_ok checks in __{get, put}_user
    
    
    Commit 84624087dd7e upstream.
    
    access_ok isn't an expensive operation once the addr_limit for the current
    thread has been loaded into the cache. Given that the initial access_ok
    check preceding a sequence of __{get,put}_user operations will take
    the brunt of the miss, we can make the __* variants identical to the
    full-fat versions, which brings with it the benefits of address masking.
    
    The likely cost in these sequences will be from toggling PAN/UAO, which
    we can address later by implementing the *_unsafe versions.
    
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ccaee9dea60f97e2f64fe17b8c23ff06fe95041
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Feb 5 15:34:21 2018 +0000

    arm64: uaccess: Prevent speculative use of the current addr_limit
    
    
    Commit c2f0ad4fc089 upstream.
    
    A mispredicted conditional call to set_fs could result in the wrong
    addr_limit being forwarded under speculation to a subsequent access_ok
    check, potentially forming part of a spectre-v1 attack using uaccess
    routines.
    
    This patch prevents this forwarding from taking place, but putting heavy
    barriers in set_fs after writing the addr_limit.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a51d7d2f7f77cea72fe0f73bd40d39852cd0702
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Feb 5 15:34:20 2018 +0000

    arm64: entry: Ensure branch through syscall table is bounded under speculation
    
    
    Commit 6314d90e6493 upstream.
    
    In a similar manner to array_index_mask_nospec, this patch introduces an
    assembly macro (mask_nospec64) which can be used to bound a value under
    speculation. This macro is then used to ensure that the indirect branch
    through the syscall table is bounded under speculation, with out-of-range
    addresses speculating as calls to sys_io_setup (0).
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e985d2647a07bad21892811e8eb85f5231a1d4a
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Mon Feb 5 15:34:19 2018 +0000

    arm64: Use pointer masking to limit uaccess speculation
    
    
    Commit 4d8efc2d5ee4 upstream.
    
    Similarly to x86, mitigate speculation past an access_ok() check by
    masking the pointer against the address limit before use.
    
    Even if we don't expect speculative writes per se, it is plausible that
    a CPU may still speculate at least as far as fetching a cache line for
    writing, hence we also harden put_user() and clear_user() for peace of
    mind.
    
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 535357c9d3e94115b87e11a3014ea29c8a0c26fb
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Mon Feb 5 15:34:18 2018 +0000

    arm64: Make USER_DS an inclusive limit
    
    
    Commit 51369e398d0d upstream.
    
    Currently, USER_DS represents an exclusive limit while KERNEL_DS is
    inclusive. In order to do some clever trickery for speculation-safe
    masking, we need them both to behave equivalently - there aren't enough
    bits to make KERNEL_DS exclusive, so we have precisely one option. This
    also happens to correct a longstanding false negative for a range
    ending on the very top byte of kernel memory.
    
    Mark Rutland points out that we've actually got the semantics of
    addresses vs. segments muddled up in most of the places we need to
    amend, so shuffle the {USER,KERNEL}_DS definitions around such that we
    can correct those properly instead of just pasting "-1"s everywhere.
    
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a532ea3ef1481c5af869728abac9179609acba8
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Mon Feb 5 15:34:17 2018 +0000

    arm64: Implement array_index_mask_nospec()
    
    
    Commit 022620eed3d0 upstream.
    
    Provide an optimised, assembly implementation of array_index_mask_nospec()
    for arm64 so that the compiler is not in a position to transform the code
    in ways which affect its ability to inhibit speculation (e.g. by introducing
    conditional branches).
    
    This is similar to the sequence used by x86, modulo architectural differences
    in the carry/borrow flags.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6afdaf109c34acd9cbc85ef687e3e4e991e5fd89
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Feb 5 15:34:16 2018 +0000

    arm64: barrier: Add CSDB macros to control data-value prediction
    
    
    Commit 669474e772b9 upstream.
    
    For CPUs capable of data value prediction, CSDB waits for any outstanding
    predictions to architecturally resolve before allowing speculative execution
    to continue. Provide macros to expose it to the arch code.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1449a173a2ee0db4fef6669c1bdc71a5561cb267
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Jan 29 12:00:00 2018 +0000

    arm64: idmap: Use "awx" flags for .idmap.text .pushsection directives
    
    
    Commit 439e70e27a51 upstream.
    
    The identity map is mapped as both writeable and executable by the
    SWAPPER_MM_MMUFLAGS and this is relied upon by the kpti code to manage
    a synchronisation flag. Update the .pushsection flags to reflect the
    actual mapping attributes.
    
    Reported-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8703f27d7c5db70ffd793a813160f28e810cc1bc
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Jan 29 11:59:58 2018 +0000

    arm64: entry: Reword comment about post_ttbr_update_workaround
    
    
    Commit f167211a93ac upstream.
    
    We don't fully understand the Cavium ThunderX erratum, but it appears
    that mapping the kernel as nG can lead to horrible consequences such as
    attempting to execute userspace from kernel context. Since kpti isn't
    enabled for these CPUs anyway, simplify the comment justifying the lack
    of post_ttbr_update_workaround in the exception trampoline.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e39247ca17146e8baae3b0703fe5f27298a60189
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Mon Jan 29 11:59:56 2018 +0000

    arm64: Force KPTI to be disabled on Cavium ThunderX
    
    
    Commit 6dc52b15c4a4 upstream.
    
    Cavium ThunderX's erratum 27456 results in a corruption of icache
    entries that are loaded from memory that is mapped as non-global
    (i.e. ASID-tagged).
    
    As KPTI is based on memory being mapped non-global, let's prevent
    it from kicking in if this erratum is detected.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    [will: Update comment]
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2feb36ebe4503551927d9c798cd454b7f01bd442
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Feb 6 22:22:50 2018 +0000

    arm64: kpti: Add ->enable callback to remap swapper using nG mappings
    
    
    Commit f992b4dfd58b upstream.
    
    Defaulting to global mappings for kernel space is generally good for
    performance and appears to be necessary for Cavium ThunderX. If we
    subsequently decide that we need to enable kpti, then we need to rewrite
    our existing page table entries to be non-global. This is fiddly, and
    made worse by the possible use of contiguous mappings, which require
    a strict break-before-make sequence.
    
    Since the enable callback runs on each online CPU from stop_machine
    context, we can have all CPUs enter the idmap, where secondaries can
    wait for the primary CPU to rewrite swapper with its MMU off. It's all
    fairly horrible, but at least it only runs once.
    
    Tested-by: Marc Zyngier <marc.zyngier@arm.com>
    Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee28fed5ccc66fbdef4119451aa6754501705a7e
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Jan 29 11:59:54 2018 +0000

    arm64: mm: Permit transitioning from Global to Non-Global without BBM
    
    
    Commit 4e6020565596 upstream.
    
    Break-before-make is not needed when transitioning from Global to
    Non-Global mappings, provided that the contiguous hint is not being used.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69288201803aecffd7f17ffa9c0c5043ffb8367c
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Jan 29 11:59:53 2018 +0000

    arm64: kpti: Make use of nG dependent on arm64_kernel_unmapped_at_el0()
    
    
    Commit 41acec624087 upstream.
    
    To allow systems which do not require kpti to continue running with
    global kernel mappings (which appears to be a requirement for Cavium
    ThunderX due to a CPU erratum), make the use of nG in the kernel page
    tables dependent on arm64_kernel_unmapped_at_el0(), which is resolved
    at runtime.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c98c8c23585643cbf255415b02cb32c95baac82e
Author: Jayachandran C <jnair@caviumnetworks.com>
Date:   Fri Jan 19 04:22:48 2018 -0800

    arm64: Turn on KPTI only on CPUs that need it
    
    
    Commit 0ba2e29c7fc1 upstream.
    
    Whitelist Broadcom Vulcan/Cavium ThunderX2 processors in
    unmap_kernel_at_el0(). These CPUs are not vulnerable to
    CVE-2017-5754 and do not need KPTI when KASLR is off.
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Jayachandran C <jnair@caviumnetworks.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7aca19ea5a45e575de769578d5d78ab7a540ebcc
Author: Jayachandran C <jnair@caviumnetworks.com>
Date:   Sun Jan 7 22:53:35 2018 -0800

    arm64: cputype: Add MIDR values for Cavium ThunderX2 CPUs
    
    
    Commit 0d90718871fe upstream.
    
    Add the older Broadcom ID as well as the new Cavium ID for ThunderX2
    CPUs.
    
    Signed-off-by: Jayachandran C <jnair@caviumnetworks.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fedf5a743cf2e024c5b557abfb1a45f3c06b3c81
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Wed Jan 10 13:18:30 2018 +0000

    arm64: kpti: Fix the interaction between ASID switching and software PAN
    
    
    Commit 6b88a32c7af6 upstream.
    
    With ARM64_SW_TTBR0_PAN enabled, the exception entry code checks the
    active ASID to decide whether user access was enabled (non-zero ASID)
    when the exception was taken. On return from exception, if user access
    was previously disabled, it re-instates TTBR0_EL1 from the per-thread
    saved value (updated in switch_mm() or efi_set_pgd()).
    
    Commit 7655abb95386 ("arm64: mm: Move ASID from TTBR0 to TTBR1") makes a
    TTBR0_EL1 + ASID switching non-atomic. Subsequently, commit 27a921e75711
    ("arm64: mm: Fix and re-enable ARM64_SW_TTBR0_PAN") changes the
    __uaccess_ttbr0_disable() function and asm macro to first write the
    reserved TTBR0_EL1 followed by the ASID=0 update in TTBR1_EL1. If an
    exception occurs between these two, the exception return code will
    re-instate a valid TTBR0_EL1. Similar scenario can happen in
    cpu_switch_mm() between setting the reserved TTBR0_EL1 and the ASID
    update in cpu_do_switch_mm().
    
    This patch reverts the entry.S check for ASID == 0 to TTBR0_EL1 and
    disables the interrupts around the TTBR0_EL1 and ASID switching code in
    __uaccess_ttbr0_disable(). It also ensures that, when returning from the
    EFI runtime services, efi_set_pgd() doesn't leave a non-zero ASID in
    TTBR1_EL1 by using uaccess_ttbr0_{enable,disable}.
    
    The accesses to current_thread_info()->ttbr0 are updated to use
    READ_ONCE/WRITE_ONCE.
    
    As a safety measure, __uaccess_ttbr0_enable() always masks out any
    existing non-zero ASID TTBR1_EL1 before writing in the new ASID.
    
    Fixes: 27a921e75711 ("arm64: mm: Fix and re-enable ARM64_SW_TTBR0_PAN")
    Acked-by: Will Deacon <will.deacon@arm.com>
    Reported-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Reviewed-by: James Morse <james.morse@arm.com>
    Tested-by: James Morse <james.morse@arm.com>
    Co-developed-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b2995145ea4fb9f5268f51c13d25213c039486e
Author: Will Deacon <will.deacon@arm.com>
Date:   Fri Dec 1 17:33:48 2017 +0000

    arm64: mm: Introduce TTBR_ASID_MASK for getting at the ASID in the TTBR
    
    
    Commit b519538dfefc upstream.
    
    There are now a handful of open-coded masks to extract the ASID from a
    TTBR value, so introduce a TTBR_ASID_MASK and use that instead.
    
    Suggested-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5385e5fe9724479b3b9d7f1b6466b4d85f4eafa9
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Tue Jan 9 16:12:18 2018 +0000

    arm64: capabilities: Handle duplicate entries for a capability
    
    
    Commit 67948af41f2e upstream.
    
    Sometimes a single capability could be listed multiple times with
    differing matches(), e.g, CPU errata for different MIDR versions.
    This breaks verify_local_cpu_feature() and this_cpu_has_cap() as
    we stop checking for a capability on a CPU with the first
    entry in the given table, which is not sufficient. Make sure we
    run the checks for all entries of the same capability. We do
    this by fixing __this_cpu_has_cap() to run through all the
    entries in the given table for a match and reuse it for
    verify_local_cpu_feature().
    
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83ae3355bdfbd44a594f18946d3a37a74529a801
Author: Will Deacon <will.deacon@arm.com>
Date:   Mon Nov 27 18:29:30 2017 +0000

    arm64: Take into account ID_AA64PFR0_EL1.CSV3
    
    
    Commit 179a56f6f9fb upstream.
    
    For non-KASLR kernels where the KPTI behaviour has not been overridden
    on the command line we can use ID_AA64PFR0_EL1.CSV3 to determine whether
    or not we should unmap the kernel whilst running at EL0.
    
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e319f4533bfa8df7f03df501d22a169b2f03719
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 16:19:39 2017 +0000

    arm64: Kconfig: Reword UNMAP_KERNEL_AT_EL0 kconfig entry
    
    
    Commit 0617052ddde3 upstream.
    
    Although CONFIG_UNMAP_KERNEL_AT_EL0 does make KASLR more robust, it's
    actually more useful as a mitigation against speculation attacks that
    can leak arbitrary kernel data to userspace through speculation.
    
    Reword the Kconfig help message to reflect this, and make the option
    depend on EXPERT so that it is on by default for the majority of users.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 332e0288200f6afe070e2c126680130195cec3d9
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 14:41:01 2017 +0000

    arm64: Kconfig: Add CONFIG_UNMAP_KERNEL_AT_EL0
    
    
    Commit 084eb77cd3a8 upstream.
    
    Add a Kconfig entry to control use of the entry trampoline, which allows
    us to unmap the kernel whilst running in userspace and improve the
    robustness of KASLR.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68a65ce7039aa247b911e00ed5c743db35167781
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 16:15:59 2017 +0000

    arm64: use RET instruction for exiting the trampoline
    
    
    Commit be04a6d1126b upstream.
    
    Speculation attacks against the entry trampoline can potentially resteer
    the speculative instruction stream through the indirect branch and into
    arbitrary gadgets within the kernel.
    
    This patch defends against these attacks by forcing a misprediction
    through the return stack: a dummy BL instruction loads an entry into
    the stack, so that the predicted program flow of the subsequent RET
    instruction is to a branch-to-self instruction which is finally resolved
    as a branch to the kernel vectors with speculation suppressed.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3882b5f63f3cfff225cee691dcb8357bf6714d07
Author: Will Deacon <will.deacon@arm.com>
Date:   Wed Dec 6 11:24:02 2017 +0000

    arm64: kaslr: Put kernel vectors address in separate data page
    
    
    Commit 6c27c4082f4f upstream.
    
    The literal pool entry for identifying the vectors base is the only piece
    of information in the trampoline page that identifies the true location
    of the kernel.
    
    This patch moves it into a page-aligned region of the .rodata section
    and maps this adjacent to the trampoline text via an additional fixmap
    entry, which protects against any accidental leakage of the trampoline
    contents.
    
    Suggested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fafcbb04f94d4709a5c8b7fb2c196b5bdf4fd7b
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 14:38:19 2017 +0000

    arm64: entry: Add fake CPU feature for unmapping the kernel at EL0
    
    
    Commit ea1e3de85e94 upstream.
    
    Allow explicit disabling of the entry trampoline on the kernel command
    line (kpti=off) by adding a fake CPU feature (ARM64_UNMAP_KERNEL_AT_EL0)
    that can be used to toggle the alternative sequences in our entry code and
    avoid use of the trampoline altogether if desired. This also allows us to
    make use of a static key in arm64_kernel_unmapped_at_el0().
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2843ade2dad2249900f508f61068d245921ce9f1
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 14:33:28 2017 +0000

    arm64: tls: Avoid unconditional zeroing of tpidrro_el0 for native tasks
    
    
    Commit 18011eac28c7 upstream.
    
    When unmapping the kernel at EL0, we use tpidrro_el0 as a scratch register
    during exception entry from native tasks and subsequently zero it in
    the kernel_ventry macro. We can therefore avoid zeroing tpidrro_el0
    in the context-switch path for native tasks using the entry trampoline.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e29f25b2bc1e3a5f545b2ce842911c030277309
Author: Stephen Boyd <sboyd@codeaurora.org>
Date:   Wed Dec 13 14:19:37 2017 -0800

    arm64: cpu_errata: Add Kryo to Falkor 1003 errata
    
    
    Commit bb48711800e6 upstream.
    
    The Kryo CPUs are also affected by the Falkor 1003 errata, so
    we need to do the same workaround on Kryo CPUs. The MIDR is
    slightly more complicated here, where the PART number is not
    always the same when looking at all the bits from 15 to 4. Drop
    the lower 8 bits and just look at the top 4 to see if it's '2'
    and then consider those as Kryo CPUs. This covers all the
    combinations without having to list them all out.
    
    Fixes: 38fd94b0275c ("arm64: Work around Falkor erratum 1003")
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15a511c0cbd1b1c8f800ce8c8921fb2390fb2d05
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 14:29:19 2017 +0000

    arm64: erratum: Work around Falkor erratum #E1003 in trampoline code
    
    
    Commit d1777e686ad1 upstream.
    
    We rely on an atomic swizzling of TTBR1 when transitioning from the entry
    trampoline to the kernel proper on an exception. We can't rely on this
    atomicity in the face of Falkor erratum #E1003, so on affected cores we
    can issue a TLB invalidation to invalidate the walk cache prior to
    jumping into the kernel. There is still the possibility of a TLB conflict
    here due to conflicting walk cache entries prior to the invalidation, but
    this doesn't appear to be the case on these CPUs in practice.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6472f1a3a54f061864a5091788778793661aa7c0
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 14:24:29 2017 +0000

    arm64: entry: Hook up entry trampoline to exception vectors
    
    
    Commit 4bf3286d29f3 upstream.
    
    Hook up the entry trampoline to our exception vectors so that all
    exceptions from and returns to EL0 go via the trampoline, which swizzles
    the vector base register accordingly. Transitioning to and from the
    kernel clobbers x30, so we use tpidrro_el0 and far_el1 as scratch
    registers for native tasks.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86200f218f98704fa4b78734d574a38519d5ef3c
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 14:20:21 2017 +0000

    arm64: entry: Explicitly pass exception level to kernel_ventry macro
    
    
    Commit 5b1f7fe41909 upstream.
    
    We will need to treat exceptions from EL0 differently in kernel_ventry,
    so rework the macro to take the exception level as an argument and
    construct the branch target using that.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63d13760abd7a819b6e95793c795cdc155bfff44
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 14:14:17 2017 +0000

    arm64: mm: Map entry trampoline into trampoline and kernel page tables
    
    
    Commit 51a0048beb44 upstream.
    
    The exception entry trampoline needs to be mapped at the same virtual
    address in both the trampoline page table (which maps nothing else)
    and also the kernel page table, so that we can swizzle TTBR1_EL1 on
    exceptions from and return to EL0.
    
    This patch maps the trampoline at a fixed virtual address in the fixmap
    area of the kernel virtual address space, which allows the kernel proper
    to be randomized with respect to the trampoline when KASLR is enabled.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78422a7b5160954aff02bc3655271adc5d21b04e
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 14:07:40 2017 +0000

    arm64: entry: Add exception trampoline page for exceptions from EL0
    
    
    Commit c7b9adaf85f8 upstream.
    
    To allow unmapping of the kernel whilst running at EL0, we need to
    point the exception vectors at an entry trampoline that can map/unmap
    the kernel on entry/exit respectively.
    
    This patch adds the trampoline page, although it is not yet plugged
    into the vector table and is therefore unused.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6c414013bb4c41c93fcef1ffa90df4f56c4cc53
Author: Will Deacon <will.deacon@arm.com>
Date:   Thu Aug 10 14:13:33 2017 +0100

    arm64: mm: Invalidate both kernel and user ASIDs when performing TLBI
    
    
    Commit 9b0de864b5bc upstream.
    
    Since an mm has both a kernel and a user ASID, we need to ensure that
    broadcast TLB maintenance targets both address spaces so that things
    like CoW continue to work with the uaccess primitives in the kernel.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53b13950886c8dd83fdb613cd5b3a150601120e9
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Nov 14 13:58:08 2017 +0000

    arm64: mm: Add arm64_kernel_unmapped_at_el0 helper
    
    
    Commit fc0e1299da54 upstream.
    
    In order for code such as TLB invalidation to operate efficiently when
    the decision to map the kernel at EL0 is determined at runtime, this
    patch introduces a helper function, arm64_kernel_unmapped_at_el0, to
    determine whether or not the kernel is mapped whilst running in userspace.
    
    Currently, this just reports the value of CONFIG_UNMAP_KERNEL_AT_EL0,
    but will later be hooked up to a fake CPU capability using a static key.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8bad38cff23eaed7b962c0bd7b0553fb31dec15
Author: Will Deacon <will.deacon@arm.com>
Date:   Thu Aug 10 14:10:28 2017 +0100

    arm64: mm: Allocate ASIDs in pairs
    
    
    Commit 0c8ea531b774 upstream.
    
    In preparation for separate kernel/user ASIDs, allocate them in pairs
    for each mm_struct. The bottom bit distinguishes the two: if it is set,
    then the ASID will map only userspace.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00ff7de671f87cf7b330b563c16ee6fb8f5e3cab
Author: Will Deacon <will.deacon@arm.com>
Date:   Thu Aug 10 13:58:16 2017 +0100

    arm64: mm: Fix and re-enable ARM64_SW_TTBR0_PAN
    
    
    Commit 27a921e75711 upstream.
    
    With the ASID now installed in TTBR1, we can re-enable ARM64_SW_TTBR0_PAN
    by ensuring that we switch to a reserved ASID of zero when disabling
    user access and restore the active user ASID on the uaccess enable path.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95ce0d51f9a8ee5417a3d1d8699d6f654dd90a62
Author: Will Deacon <will.deacon@arm.com>
Date:   Thu Aug 10 13:34:30 2017 +0100

    arm64: mm: Rename post_ttbr0_update_workaround
    
    
    Commit 158d495899ce upstream.
    
    The post_ttbr0_update_workaround hook applies to any change to TTBRx_EL1.
    Since we're using TTBR1 for the ASID, rename the hook to make it clearer
    as to what it's doing.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4445cb04410fb5ea845e2991144f77d00a78ba0c
Author: Will Deacon <will.deacon@arm.com>
Date:   Thu Aug 10 13:29:06 2017 +0100

    arm64: mm: Remove pre_ttbr0_update_workaround for Falkor erratum #E1003
    
    
    Commit 85d13c001497 upstream.
    
    The pre_ttbr0_update_workaround hook is called prior to context-switching
    TTBR0 because Falkor erratum E1003 can cause TLB allocation with the wrong
    ASID if both the ASID and the base address of the TTBR are updated at
    the same time.
    
    With the ASID sitting safely in TTBR1, we no longer update things
    atomically, so we can remove the pre_ttbr0_update_workaround macro as
    it's no longer required. The erratum infrastructure and documentation
    is left around for #E1003, as it will be required by the entry
    trampoline code in a future patch.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d26f0a5dc6a6d8237b024a150de6be30fce7b467
Author: Will Deacon <will.deacon@arm.com>
Date:   Thu Aug 10 13:19:09 2017 +0100

    arm64: mm: Move ASID from TTBR0 to TTBR1
    
    
    Commit 7655abb95386 upstream.
    
    In preparation for mapping kernelspace and userspace with different
    ASIDs, move the ASID to TTBR1 and update switch_mm to context-switch
    TTBR0 via an invalid mapping (the zero page).
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59f47f9dcdcde20e0a20c434f18bcc50c7c824e4
Author: Will Deacon <will.deacon@arm.com>
Date:   Thu Aug 10 13:04:48 2017 +0100

    arm64: mm: Temporarily disable ARM64_SW_TTBR0_PAN
    
    
    Commit 376133b7edc2 upstream.
    
    We're about to rework the way ASIDs are allocated, switch_mm is
    implemented and low-level kernel entry/exit is handled, so keep the
    ARM64_SW_TTBR0_PAN code out of the way whilst we do the heavy lifting.
    
    It will be re-enabled in a subsequent patch.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78299fafcd78bec4f4ce145decefff5b7f664d80
Author: Will Deacon <will.deacon@arm.com>
Date:   Thu Aug 10 12:56:18 2017 +0100

    arm64: mm: Use non-global mappings for kernel space
    
    
    Commit e046eb0c9bf2 upstream.
    
    In preparation for unmapping the kernel whilst running in userspace,
    make the kernel mappings non-global so we can avoid expensive TLB
    invalidation on kernel exit to userspace.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63380839c575e5ea13c8005332665e31897b2740
Author: Yury Norov <ynorov@caviumnetworks.com>
Date:   Thu Aug 31 11:30:50 2017 +0300

    arm64: move TASK_* definitions to <asm/processor.h>
    
    
    Commit eef94a3d09aa upstream.
    
    ILP32 series [1] introduces the dependency on <asm/is_compat.h> for
    TASK_SIZE macro. Which in turn requires <asm/thread_info.h>, and
    <asm/thread_info.h> include <asm/memory.h>, giving a circular dependency,
    because TASK_SIZE is currently located in <asm/memory.h>.
    
    In other architectures, TASK_SIZE is defined in <asm/processor.h>, and
    moving TASK_SIZE there fixes the problem.
    
    Discussion: https://patchwork.kernel.org/patch/9929107/
    
    [1] https://github.com/norov/linux/tree/ilp32-next
    
    CC: Will Deacon <will.deacon@arm.com>
    CC: Laura Abbott <labbott@redhat.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: James Morse <james.morse@arm.com>
    Suggested-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Yury Norov <ynorov@caviumnetworks.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd24d173b50af3aadb1ea2e04edaa8d68ca59b23
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Fri Sep 22 09:07:06 2017 -0400

    media: hdpvr: Fix an error handling path in hdpvr_probe()
    
    commit c0f71bbb810237a38734607ca4599632f7f5d47f upstream.
    
    Here, hdpvr_register_videodev() is responsible for setup and
    register a video device. Also defining and initializing a worker.
    hdpvr_register_videodev() is calling by hdpvr_probe at last.
    So no need to flush any work here.
    Unregister v4l2, free buffers and memory. If hdpvr_probe() will fail.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bd6279a4a8cd6c8d108b694c5ddb9cb53f6e35c
Author: Malcolm Priestley <tvboxspy@gmail.com>
Date:   Tue Sep 26 17:10:21 2017 -0400

    media: dvb-usb-v2: lmedm04: move ts2020 attach to dm04_lme2510_tuner
    
    commit 7bf7a7116ed313c601307f7e585419369926ab05 upstream.
    
    When the tuner was split from m88rs2000 the attach function is in wrong
    place.
    
    Move to dm04_lme2510_tuner to trap errors on failure and removing
    a call to lme_coldreset.
    
    Prevents driver starting up without any tuner connected.
    
    Fixes to trap for ts2020 fail.
    LME2510(C): FE Found M88RS2000
    ts2020: probe of 0-0060 failed with error -11
    ...
    LME2510(C): TUN Found RS2000 tuner
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] PREEMPT SMP KASAN
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Malcolm Priestley <tvboxspy@gmail.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd31a38d268f50afe9c5cd3d4beafa020ad39e90
Author: Malcolm Priestley <tvboxspy@gmail.com>
Date:   Tue Sep 26 17:10:20 2017 -0400

    media: dvb-usb-v2: lmedm04: Improve logic checking of warm start
    
    commit 3d932ee27e852e4904647f15b64dedca51187ad7 upstream.
    
    Warm start has no check as whether a genuine device has
    connected and proceeds to next execution path.
    
    Check device should read 0x47 at offset of 2 on USB descriptor read
    and it is the amount requested of 6 bytes.
    
    Fix for
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access as
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Malcolm Priestley <tvboxspy@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5e1e153ecd40c2b09c23d2b2c161a6c8ddbba07
Author: Mohamed Ghannam <simo.ghannam@gmail.com>
Date:   Tue Dec 5 20:58:35 2017 +0000

    dccp: CVE-2017-8824: use-after-free in DCCP code
    
    commit 69c64866ce072dea1d1e59a0d61e0f66c0dffb76 upstream.
    
    Whenever the sock object is in DCCP_CLOSED state,
    dccp_disconnect() must free dccps_hc_tx_ccid and
    dccps_hc_rx_ccid and set to NULL.
    
    Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 050b86b5bf2040a4be87f93510ffd780113c2065
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Nov 29 14:54:11 2017 +0200

    drm/i915: Fix deadlock in i830_disable_pipe()
    
    commit 4488496d58200c7511842e049a4cc891d928da56 upstream.
    
    i830_disable_pipe() gets called from the power well code, and thus
    we're already holding the power domain mutex. That means we can't
    call plane->get_hw_state() as it will also try to grab the
    same mutex and will thus deadlock.
    
    Replace the assert_plane() calls (which calls ->get_hw_state()) with
    just raw register reads in i830_disable_pipe(). As a bonus we can
    now get a warning if plane C is enabled even though we don't even
    expose it as a drm plane.
    
    v2: Do a separate WARN_ON() for each plane (Chris)
    
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Fixes: d87ce7640295 ("drm/i915: Add .get_hw_state() method for planes")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171129125411.29055-1-ville.syrjala@linux.intel.com
    (cherry picked from commit 5816d9cbc0a0fbf232fe297cefcb85361a3cde90)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50018d09843cc4813f1c2b89ff8fbcdf883ab0a3
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Nov 17 21:19:09 2017 +0200

    drm/i915: Redo plane sanitation during readout
    
    commit 23ac12732825901b3fc6ac720958d8bff9a0d6ec upstream.
    
    Unify the plane disabling during state readout by pulling the code into
    a new helper intel_plane_disable_noatomic(). We'll also read out the
    state of all planes, so that we know which planes really need to be
    diabled.
    
    Additonally we change the plane<->pipe mapping sanitation to work by
    simply disabling the offending planes instead of entire pipes. And
    we do it before we otherwise sanitize the crtcs, which means we don't
    have to worry about misassigned planes during crtc sanitation anymore.
    
    v2: Reoder patches to not depend on enum old_plane_id
    v3: s/for_each_pipe/for_each_intel_crtc/
    
    Cc: Thierry Reding <thierry.reding@gmail.com>
    Cc: Alex Villacís Lasso <alexvillacislasso@hotmail.com>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=103223
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Tested-by: Thierry Reding <thierry.reding@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171117191917.11506-3-ville.syrjala@linux.intel.com
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    (cherry picked from commit b1e01595a66dc206a2c75401ec4c285740537f3f)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19d8e5122fefc3e424050a78063f0d385433e191
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Nov 17 21:19:08 2017 +0200

    drm/i915: Add .get_hw_state() method for planes
    
    commit d87ce76402950b8e4d5117276d44465658e886a4 upstream.
    
    Add a .get_hw_state() method for planes, returning true or false
    depending on whether the plane is enabled. Use it to rewrite the
    plane enabled/disabled asserts in platform agnostic fashion.
    
    We do lose the pre-gen4 plane<->pipe mapping checks, but since we're
    supposed sanitize that anyway it doesn't really matter.
    
    v2: Reoder patches to not depend on enum old_plane_id
        Just call assert_plane_disabled() from assert_planes_disabled()
    v3: Deal with disabled power wells in .get_hw_state()
    v4: Rebase due skl primary plane code removal
    
    Cc: Thierry Reding <thierry.reding@gmail.com>
    Cc: Alex Villacís Lasso <alexvillacislasso@hotmail.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> #v2
    Tested-by: Thierry Reding <thierry.reding@gmail.com> #v2
    Link: https://patchwork.freedesktop.org/patch/msgid/20171117191917.11506-2-ville.syrjala@linux.intel.com
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    (cherry picked from commit 51f5a096398433a881e845d3685a2c1dac756019)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9c3131f2ab45eacb6641b29ea6ee69039c727a7
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Tue Jan 23 20:45:38 2018 -0500

    sched/rt: Up the root domain ref count when passing it around via IPIs
    
    commit 364f56653708ba8bcdefd4f0da2a42904baa8eeb upstream.
    
    When issuing an IPI RT push, where an IPI is sent to each CPU that has more
    than one RT task scheduled on it, it references the root domain's rto_mask,
    that contains all the CPUs within the root domain that has more than one RT
    task in the runable state. The problem is, after the IPIs are initiated, the
    rq->lock is released. This means that the root domain that is associated to
    the run queue could be freed while the IPIs are going around.
    
    Add a sched_get_rd() and a sched_put_rd() that will increment and decrement
    the root domain's ref count respectively. This way when initiating the IPIs,
    the scheduler will up the root domain's ref count before releasing the
    rq->lock, ensuring that the root domain does not go away until the IPI round
    is complete.
    
    Reported-by: Pavan Kondeti <pkondeti@codeaurora.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 4bdced5c9a292 ("sched/rt: Simplify the IPI based RT balancing logic")
    Link: http://lkml.kernel.org/r/CAEU1=PkiHO35Dzna8EQqNSKW1fr1y1zRQ5y66X117MG06sQtNA@mail.gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c41a8453c826b58e470d23302d0e10aba3fd168
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Tue Jan 23 20:45:37 2018 -0500

    sched/rt: Use container_of() to get root domain in rto_push_irq_work_func()
    
    commit ad0f1d9d65938aec72a698116cd73a980916895e upstream.
    
    When the rto_push_irq_work_func() is called, it looks at the RT overloaded
    bitmask in the root domain via the runqueue (rq->rd). The problem is that
    during CPU up and down, nothing here stops rq->rd from changing between
    taking the rq->rd->rto_lock and releasing it. That means the lock that is
    released is not the same lock that was taken.
    
    Instead of using this_rq()->rd to get the root domain, as the irq work is
    part of the root domain, we can simply get the root domain from the irq work
    that is passed to the routine:
    
     container_of(work, struct root_domain, rto_push_work)
    
    This keeps the root domain consistent.
    
    Reported-by: Pavan Kondeti <pkondeti@codeaurora.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 4bdced5c9a292 ("sched/rt: Simplify the IPI based RT balancing logic")
    Link: http://lkml.kernel.org/r/CAEU1=PkiHO35Dzna8EQqNSKW1fr1y1zRQ5y66X117MG06sQtNA@mail.gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fea5349eb88bf8e95b0574a7c7d30040c2f07c9c
Author: Haozhong Zhang <haozhong.zhang@intel.com>
Date:   Wed Jan 10 21:44:42 2018 +0800

    KVM MMU: check pending exception before injecting APF
    
    commit 2a266f23550be997d783f27e704b9b40c4010292 upstream.
    
    For example, when two APF's for page ready happen after one exit and
    the first one becomes pending, the second one will result in #DF.
    Instead, just handle the second page fault synchronously.
    
    Reported-by: Ross Zwisler <zwisler@gmail.com>
    Message-ID: <CAOxpaSUBf8QoOZQ1p4KfUp0jq76OKfGY4Uxs-Gg8ngReD99xww@mail.gmail.com>
    Reported-by: Alec Blayne <ab@tevsa.net>
    Signed-off-by: Haozhong Zhang <haozhong.zhang@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c54eab372f8cd3f3b1f0a07bc484b06eed3c5a0
Author: Shanker Donthineni <shankerd@codeaurora.org>
Date:   Mon Dec 11 16:42:32 2017 -0600

    arm64: Add software workaround for Falkor erratum 1041
    
    commit 932b50c7c1c65e6f23002e075b97ee083c4a9e71 upstream.
    
    The ARM architecture defines the memory locations that are permitted
    to be accessed as the result of a speculative instruction fetch from
    an exception level for which all stages of translation are disabled.
    Specifically, the core is permitted to speculatively fetch from the
    4KB region containing the current program counter 4K and next 4K.
    
    When translation is changed from enabled to disabled for the running
    exception level (SCTLR_ELn[M] changed from a value of 1 to 0), the
    Falkor core may errantly speculatively access memory locations outside
    of the 4KB region permitted by the architecture. The errant memory
    access may lead to one of the following unexpected behaviors.
    
    1) A System Error Interrupt (SEI) being raised by the Falkor core due
       to the errant memory access attempting to access a region of memory
       that is protected by a slave-side memory protection unit.
    2) Unpredictable device behavior due to a speculative read from device
       memory. This behavior may only occur if the instruction cache is
       disabled prior to or coincident with translation being changed from
       enabled to disabled.
    
    The conditions leading to this erratum will not occur when either of the
    following occur:
     1) A higher exception level disables translation of a lower exception level
       (e.g. EL2 changing SCTLR_EL1[M] from a value of 1 to 0).
     2) An exception level disabling its stage-1 translation if its stage-2
        translation is enabled (e.g. EL1 changing SCTLR_EL1[M] from a value of 1
        to 0 when HCR_EL2[VM] has a value of 1).
    
    To avoid the errant behavior, software must execute an ISB immediately
    prior to executing the MSR that will change SCTLR_ELn[M] from 1 to 0.
    
    Signed-off-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Timur Tabi <timur@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b69ec336d3d5c50710e19aaf0ca5f738fc20bc3
Author: Shanker Donthineni <shankerd@codeaurora.org>
Date:   Mon Dec 11 16:42:31 2017 -0600

    arm64: Define cputype macros for Falkor CPU
    
    commit c622cc013cece073722592cff1ac6643a33b1622 upstream.
    
    Add cputype definition macros for Qualcomm Datacenter Technologies
    Falkor CPU in cputype.h. It's unfortunate that the first revision
    of the Falkor CPU used the wrong part number 0x800, got fixed in v2
    chip with part number 0xC00, and would be used the same value for
    future revisions.
    
    Signed-off-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Timur Tabi <timur@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd7467f82e58e7b6579cac0c9e883495df15f163
Author: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
Date:   Thu Nov 9 14:39:55 2017 +0100

    watchdog: gpio_wdt: set WDOG_HW_RUNNING in gpio_wdt_stop
    
    commit bc137dfdbec27c0ec5731a89002daded4a4aa1ea upstream.
    
    The first patch above (https://patchwork.kernel.org/patch/9970181/)
    makes the oops go away, but it just papers over the problem. The real
    problem is that the watchdog core clears WDOG_HW_RUNNING in
    watchdog_stop, and the gpio driver fails to set it in its stop
    function when it doesn't actually stop it. This means that the core
    doesn't know that it now has responsibility for petting the device, in
    turn causing the device to reset the system (I hadn't noticed this
    because the board I'm working on has that reset logic disabled).
    
    How about this (other drivers may of course have the same problem, I
    haven't checked). One might say that ->stop should return an error
    when the device can't be stopped, but OTOH this brings parity between
    a device without a ->stop method and a GPIO wd that has always-running
    set. IOW, I think ->stop should only return an error when an actual
    attempt to stop the hardware failed.
    
    From: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    
    The watchdog framework clears WDOG_HW_RUNNING before calling
    ->stop. If the driver is unable to stop the device, it is supposed to
    set that bit again so that the watchdog core takes care of sending
    heart-beats while the device is not open from user-space. Update the
    gpio_wdt driver to honour that contract (and get rid of the redundant
    clearing of WDOG_HW_RUNNING).
    
    Fixes: 3c10bbde10 ("watchdog: core: Clear WDOG_HW_RUNNING before calling the stop function")
    Signed-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e94a7de2a3d2da42f0d124c7501195f1cdffa232
Author: Omar Sandoval <osandov@fb.com>
Date:   Tue Dec 5 23:15:31 2017 -0800

    sched/wait: Fix add_wait_queue() behavioral change
    
    commit c6b9d9a33029014446bd9ed84c1688f6d3d4eab9 upstream.
    
    The following cleanup commit:
    
      50816c48997a ("sched/wait: Standardize internal naming of wait-queue entries")
    
    ... unintentionally changed the behavior of add_wait_queue() from
    inserting the wait entry at the head of the wait queue to the tail
    of the wait queue.
    
    Beyond a negative performance impact this change in behavior
    theoretically also breaks wait queues which mix exclusive and
    non-exclusive waiters, as non-exclusive waiters will not be
    woken up if they are queued behind enough exclusive waiters.
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Jens Axboe <axboe@kernel.dk>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kernel-team@fb.com
    Fixes: ("sched/wait: Standardize internal naming of wait-queue entries")
    Link: http://lkml.kernel.org/r/a16c8ccffd39bd08fdaa45a5192294c784b803a7.1512544324.git.osandov@fb.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69373cdc4ae4eacac2eb19da03eb0ad2bb0eda7f
Author: Yang Shunyong <shunyong.yang@hxt-semitech.com>
Date:   Mon Jan 29 14:40:11 2018 +0800

    dmaengine: dmatest: fix container_of member in dmatest_callback
    
    commit 66b3bd2356e0a1531c71a3dcf96944621e25c17c upstream.
    
    The type of arg passed to dmatest_callback is struct dmatest_done.
    It refers to test_done in struct dmatest_thread, not done_wait.
    
    Fixes: 6f6a23a213be ("dmaengine: dmatest: move callback wait ...")
    Signed-off-by: Yang Shunyong <shunyong.yang@hxt-semitech.com>
    Acked-by: Adam Wallis <awallis@codeaurora.org>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7adf1d63ef6567924695e3965418d0ded8c896c8
Author: Andrew-sh Cheng <andrew-sh.cheng@mediatek.com>
Date:   Fri Dec 8 14:07:56 2017 +0800

    cpufreq: mediatek: add mediatek related projects into blacklist
    
    commit 6066998cbd2b1012a8d5bc9a2957cfd0ad53150e upstream.
    
    mediatek projects will use mediate-cpufreq.c as cpufreq driver,
    instead of using cpufreq_dt.c
    Add mediatek related projects into cpufreq-dt blacklist
    
    Signed-off-by: Andrew-sh Cheng <andrew-sh.cheng@mediatek.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4126cdb73193eb0778ae05d2162cbb3bcd778331
Author: Aurelien Aptel <aaptel@suse.com>
Date:   Thu Jan 25 15:59:39 2018 +0100

    CIFS: zero sensitive data when freeing
    
    commit 97f4b7276b829a8927ac903a119bef2f963ccc58 upstream.
    
    also replaces memset()+kfree() by kzfree().
    
    Signed-off-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be6874b4d480d12ec120e195f35091d831ca97bc
Author: Daniel N Pettersson <danielnp@axis.com>
Date:   Thu Jan 11 16:00:12 2018 +0100

    cifs: Fix autonegotiate security settings mismatch
    
    commit 9aca7e454415f7878b28524e76bebe1170911a88 upstream.
    
    Autonegotiation gives a security settings mismatch error if the SMB
    server selects an SMBv3 dialect that isn't SMB3.02. The exact error is
    "protocol revalidation - security settings mismatch".
    This can be tested using Samba v4.2 or by setting the global Samba
    setting max protocol = SMB3_00.
    
    The check that fails in smb3_validate_negotiate is the dialect
    verification of the negotiate info response. This is because it tries
    to verify against the protocol_id in the global smbdefault_values. The
    protocol_id in smbdefault_values is SMB3.02.
    In SMB2_negotiate the protocol_id in smbdefault_values isn't updated,
    it is global so it probably shouldn't be, but server->dialect is.
    
    This patch changes the check in smb3_validate_negotiate to use
    server->dialect instead of server->vals->protocol_id. The patch works
    with autonegotiate and when using a specific version in the vers mount
    option.
    
    Signed-off-by: Daniel N Pettersson <danielnp@axis.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 061df7705a53179ecb7f73a6b995bf7170a794d8
Author: Matthew Wilcox <mawilcox@microsoft.com>
Date:   Fri Dec 15 12:48:32 2017 -0800

    cifs: Fix missing put_xid in cifs_file_strict_mmap
    
    commit f04a703c3d613845ae3141bfaf223489de8ab3eb upstream.
    
    If cifs_zap_mapping() returned an error, we would return without putting
    the xid that we got earlier.  Restructure cifs_file_strict_mmap() and
    cifs_file_mmap() to be more similar to each other and have a single
    point of return that always puts the xid.
    
    Signed-off-by: Matthew Wilcox <mawilcox@microsoft.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4a9ffad970244d0a349e4e06e5bb332790d7715
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Mon Jan 15 14:30:03 2018 +0100

    powerpc/pseries: include linux/types.h in asm/hvcall.h
    
    commit 1b689a95ce7427075f9ac9fb4aea1af530742b7f upstream.
    
    Commit 6e032b350cd1 ("powerpc/powernv: Check device-tree for RFI flush
    settings") uses u64 in asm/hvcall.h without including linux/types.h
    
    This breaks hvcall.h users that do not include the header themselves.
    
    Fixes: 6e032b350cd1 ("powerpc/powernv: Check device-tree for RFI flush settings")
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8caab9edccf57540770352825f9d3fa2d8343ae2
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Tue Nov 14 10:52:54 2017 +0000

    watchdog: indydog: Add dependency on SGI_HAS_INDYDOG
    
    commit 24f8d233074badd4c18e4dafd2fb97d65838afed upstream.
    
    Commit da2a68b3eb47 ("watchdog: Enable COMPILE_TEST where possible")
    enabled building the Indy watchdog driver when COMPILE_TEST is enabled.
    However, the driver makes reference to symbols that are only defined for
    certain platforms are selected in the config. These platforms select
    SGI_HAS_INDYDOG. Without this, link time errors result, for example
    when building a MIPS allyesconfig.
    
    drivers/watchdog/indydog.o: In function `indydog_write':
    indydog.c:(.text+0x18): undefined reference to `sgimc'
    indydog.c:(.text+0x1c): undefined reference to `sgimc'
    drivers/watchdog/indydog.o: In function `indydog_start':
    indydog.c:(.text+0x54): undefined reference to `sgimc'
    indydog.c:(.text+0x58): undefined reference to `sgimc'
    drivers/watchdog/indydog.o: In function `indydog_stop':
    indydog.c:(.text+0xa4): undefined reference to `sgimc'
    drivers/watchdog/indydog.o:indydog.c:(.text+0xa8): more undefined
    references to `sgimc' follow
    make: *** [Makefile:1005: vmlinux] Error 1
    
    Fix this by ensuring that CONFIG_INDIDOG can only be selected when the
    necessary dependent platform symbols are built in.
    
    Fixes: da2a68b3eb47 ("watchdog: Enable COMPILE_TEST where possible")
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Suggested-by: James Hogan <james.hogan@mips.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1722fe3727845178e5d7fe3fdf35b8a5de230fdf
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Feb 13 10:19:50 2018 +0100

    Linux 4.14.19

commit d2aeb4e2bd8db42589fd7624cb9453894ab455ec
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Feb 13 10:14:14 2018 +0100

    Revert "x86/alternative: Print unadorned pointers"
    
    This reverts commit 67eb59b8ecfb319438706cee2cb67a3045b54494.
    
    It's not needed in 4.14.y and only causes messy debugging messages, if
    anyone actually cares about these random debug messages in the first
    place (doubtful).
    
    Reported-by: Kees Cook <keescook@google.com>
    Acked-by: Borislav Petkov <bp@suse.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: riel@redhat.com
    Cc: ak@linux.intel.com
    Cc: peterz@infradead.org
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: jikos@kernel.org
    Cc: luto@amacapital.net
    Cc: dave.hansen@intel.com
    Cc: torvalds@linux-foundation.org
    Cc: keescook@google.com
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Cc: pjt@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22f16a74c4744f8b0d83fd0d031be2137e764cbf
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jan 16 13:40:22 2018 +0300

    scsi: storvsc: missing error code in storvsc_probe()
    
    commit ca8dc694045e9aa248e9916e0f614deb0494cb3d upstream.
    
    We should set the error code if fc_remote_port_add() fails.
    
    Cc: <stable@vger.kernel.org> #v4.12+
    Fixes: daf0cd445a21 ("scsi: storvsc: Add support for FC rport.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Cathy Avery <cavery@redhat.com>
    Acked-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Long Li <longli@microsoft.com>

commit f18046f7a50accf76dab9c6ab274a7e38143a0dc
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Thu Jan 4 16:17:56 2018 -0800

    kernel/exit.c: export abort() to modules
    
    commit dc8635b78cd8669c37e230058d18c33af7451ab1 upstream.
    
    gcc -fisolate-erroneous-paths-dereference can generate calls to abort()
    from modular code too.
    
    [arnd@arndb.de: drop duplicate exports of abort()]
      Link: http://lkml.kernel.org/r/20180102103311.706364-1-arnd@arndb.de
    Reported-by: Vineet Gupta <Vineet.Gupta1@synopsys.com>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Alexey Brodkin <Alexey.Brodkin@synopsys.com>
    Cc: Russell King <rmk+kernel@armlinux.org.uk>
    Cc: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Evgeniy Didin <Evgeniy.Didin@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5c91d8305074ce1ae72df29c7446850fc927a4f
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Thu Dec 14 15:33:19 2017 -0800

    arch: define weak abort()
    
    commit 7c2c11b208be09c156573fc0076b7b3646e05219 upstream.
    
    gcc toggle -fisolate-erroneous-paths-dereference (default at -O2
    onwards) isolates faulty code paths such as null pointer access, divide
    by zero etc.  If gcc port doesnt implement __builtin_trap, an abort() is
    generated which causes kernel link error.
    
    In this case, gcc is generating abort due to 'divide by zero' in
    lib/mpi/mpih-div.c.
    
    Currently 'frv' and 'arc' are failing.  Previously other arch was also
    broken like m32r was fixed by commit d22e3d69ee1a ("m32r: fix build
    failure").
    
    Let's define this weak function which is common for all arch and fix the
    problem permanently.  We can even remove the arch specific 'abort' after
    this is done.
    
    Link: http://lkml.kernel.org/r/1513118956-8718-1-git-send-email-sudipm.mukherjee@gmail.com
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Cc: Alexey Brodkin <Alexey.Brodkin@synopsys.com>
    Cc: Vineet Gupta <Vineet.Gupta1@synopsys.com>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Evgeniy Didin <Evgeniy.Didin@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a570cfe785a1d031ee56e3c4a3534cb36e26b65
Author: Robert Baronescu <robert.baronescu@nxp.com>
Date:   Tue Oct 10 13:21:59 2017 +0300

    crypto: tcrypt - fix S/G table for test_aead_speed()
    
    commit 5c6ac1d4f8fbdbed65dbeb8cf149d736409d16a1 upstream.
    
    In case buffer length is a multiple of PAGE_SIZE,
    the S/G table is incorrectly generated.
    Fix this by handling buflen = k * PAGE_SIZE separately.
    
    Signed-off-by: Robert Baronescu <robert.baronescu@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68a9f19264fd23ec78c18724d56fd71dbe5f23b1
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 15:56:28 2017 -0500

    media: soc_camera: soc_scale_crop: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit 5331aec1bf9c9da557668174e0a4bfcee39f1121 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/media/platform/soc_camera/soc_scale_crop.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bf81cff1bad67632e4ba68cbe0c843541439de8
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 02:47:54 2017 -0500

    media: mtk-vcodec: add missing MODULE_LICENSE/DESCRIPTION
    
    commit ccbc1e3876d5476fc23429690a683294ef0f755b upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/media/platform/mtk-vcodec/mtk-vcodec-common.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION is also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 981f20bc75952ffa1ebe5b1bb2b9f35ed490a354
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Feb 2 10:27:27 2018 -0800

    soreuseport: fix mem leak in reuseport_add_sock()
    
    
    [ Upstream commit 4db428a7c9ab07e08783e0fcdc4ca0f555da0567 ]
    
    reuseport_add_sock() needs to deal with attaching a socket having
    its own sk_reuseport_cb, after a prior
    setsockopt(SO_ATTACH_REUSEPORT_?BPF)
    
    Without this fix, not only a WARN_ONCE() was issued, but we were also
    leaking memory.
    
    Thanks to sysbot and Eric Biggers for providing us nice C repros.
    
    ------------[ cut here ]------------
    socket already in reuseport group
    WARNING: CPU: 0 PID: 3496 at net/core/sock_reuseport.c:119  
    reuseport_add_sock+0x742/0x9b0 net/core/sock_reuseport.c:117
    Kernel panic - not syncing: panic_on_warn set ...
    
    CPU: 0 PID: 3496 Comm: syzkaller869503 Not tainted 4.15.0-rc6+ #245
    Hardware name: Google Google Compute Engine/Google Compute Engine,
    BIOS  
    Google 01/01/2011
    Call Trace:
      __dump_stack lib/dump_stack.c:17 [inline]
      dump_stack+0x194/0x257 lib/dump_stack.c:53
      panic+0x1e4/0x41c kernel/panic.c:183
      __warn+0x1dc/0x200 kernel/panic.c:547
      report_bug+0x211/0x2d0 lib/bug.c:184
      fixup_bug.part.11+0x37/0x80 arch/x86/kernel/traps.c:178
      fixup_bug arch/x86/kernel/traps.c:247 [inline]
      do_error_trap+0x2d7/0x3e0 arch/x86/kernel/traps.c:296
      do_invalid_op+0x1b/0x20 arch/x86/kernel/traps.c:315
      invalid_op+0x22/0x40 arch/x86/entry/entry_64.S:1079
    
    Fixes: ef456144da8e ("soreuseport: define reuseport groups")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot+c0ea2226f77a42936bf7@syzkaller.appspotmail.com
    Acked-by: Craig Gallek <kraig@google.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 456add4c9bd3bd97a6ab34fc9a5866358ca18d25
Author: Martin KaFai Lau <kafai@fb.com>
Date:   Wed Jan 24 23:15:27 2018 -0800

    ipv6: Fix SO_REUSEPORT UDP socket with implicit sk_ipv6only
    
    
    [ Upstream commit 7ece54a60ee2ba7a386308cae73c790bd580589c ]
    
    If a sk_v6_rcv_saddr is !IPV6_ADDR_ANY and !IPV6_ADDR_MAPPED, it
    implicitly implies it is an ipv6only socket.  However, in inet6_bind(),
    this addr_type checking and setting sk->sk_ipv6only to 1 are only done
    after sk->sk_prot->get_port(sk, snum) has been completed successfully.
    
    This inconsistency between sk_v6_rcv_saddr and sk_ipv6only confuses
    the 'get_port()'.
    
    In particular, when binding SO_REUSEPORT UDP sockets,
    udp_reuseport_add_sock(sk,...) is called.  udp_reuseport_add_sock()
    checks "ipv6_only_sock(sk2) == ipv6_only_sock(sk)" before adding sk to
    sk2->sk_reuseport_cb.  In this case, ipv6_only_sock(sk2) could be
    1 while ipv6_only_sock(sk) is still 0 here.  The end result is,
    reuseport_alloc(sk) is called instead of adding sk to the existing
    sk2->sk_reuseport_cb.
    
    It can be reproduced by binding two SO_REUSEPORT UDP sockets on an
    IPv6 address (!ANY and !MAPPED).  Only one of the socket will
    receive packet.
    
    The fix is to set the implicit sk_ipv6only before calling get_port().
    The original sk_ipv6only has to be saved such that it can be restored
    in case get_port() failed.  The situation is similar to the
    inet_reset_saddr(sk) after get_port() has failed.
    
    Thanks to Calvin Owens <calvinowens@fb.com> who created an easy
    reproduction which leads to a fix.
    
    Fixes: e32ea7e74727 ("soreuseport: fast reuseport UDP socket selection")
    Signed-off-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c04818abad468f5abb45f191eee618b159e1a215
Author: Neal Cardwell <ncardwell@google.com>
Date:   Wed Jan 31 15:43:05 2018 -0500

    tcp_bbr: fix pacing_gain to always be unity when using lt_bw
    
    
    [ Upstream commit 3aff3b4b986e51bcf4ab249e5d48d39596e0df6a ]
    
    This commit fixes the pacing_gain to remain at BBR_UNIT (1.0) when
    using lt_bw and returning from the PROBE_RTT state to PROBE_BW.
    
    Previously, when using lt_bw, upon exiting PROBE_RTT and entering
    PROBE_BW the bbr_reset_probe_bw_mode() code could sometimes randomly
    end up with a cycle_idx of 0 and hence have bbr_advance_cycle_phase()
    set a pacing gain above 1.0. In such cases this would result in a
    pacing rate that is 1.25x higher than intended, potentially resulting
    in a high loss rate for a little while until we stop using the lt_bw a
    bit later.
    
    This commit is a stable candidate for kernels back as far as 4.9.
    
    Fixes: 0f8782ea1497 ("tcp_bbr: add BBR congestion control")
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Soheil Hassas Yeganeh <soheil@google.com>
    Reported-by: Beyers Cronje <bcronje@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1da27118f419208acd895fc95713dcd9ef25a289
Author: Jiri Pirko <jiri@mellanox.com>
Date:   Thu Feb 1 12:21:15 2018 +0100

    rocker: fix possible null pointer dereference in rocker_router_fib_event_work
    
    
    [ Upstream commit a83165f00f16c0e0ef5b7cec3cbd0d4788699265 ]
    
    Currently, rocker user may experience following null pointer
    derefence bug:
    
    [    3.062141] BUG: unable to handle kernel NULL pointer dereference at 00000000000000d0
    [    3.065163] IP: rocker_router_fib_event_work+0x36/0x110 [rocker]
    
    The problem is uninitialized rocker->wops pointer that is initialized
    only with the first initialized port. So move the port initialization
    before registering the fib events.
    
    Fixes: 936bd486564a ("rocker: use FIB notifications instead of switchdev calls")
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07ca93e3176bfdc5e954b79c0dcee0fb95aef6fb
Author: David Ahern <dsahern@gmail.com>
Date:   Thu Jan 25 20:16:29 2018 -0800

    net: ipv6: send unsolicited NA after DAD
    
    
    [ Upstream commit c76fe2d98c726224a975a0d0198c3fb50406d325 ]
    
    Unsolicited IPv6 neighbor advertisements should be sent after DAD
    completes. Update ndisc_send_unsol_na to skip tentative, non-optimistic
    addresses and have those sent by addrconf_dad_completed after DAD.
    
    Fixes: 4a6e3c5def13c ("net: ipv6: send unsolicited NA on admin up")
    Reported-by: Vivek Venkatraman <vivek@cumulusnetworks.com>
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 799a34d5b048644a918b295627c3594124d96d4c
Author: Roman Gushchin <guro@fb.com>
Date:   Fri Feb 2 15:26:57 2018 +0000

    Revert "defer call to mem_cgroup_sk_alloc()"
    
    
    [ Upstream commit edbe69ef2c90fc86998a74b08319a01c508bd497 ]
    
    This patch effectively reverts commit 9f1c2674b328 ("net: memcontrol:
    defer call to mem_cgroup_sk_alloc()").
    
    Moving mem_cgroup_sk_alloc() to the inet_csk_accept() completely breaks
    memcg socket memory accounting, as packets received before memcg
    pointer initialization are not accounted and are causing refcounting
    underflow on socket release.
    
    Actually the free-after-use problem was fixed by
    commit c0576e397508 ("net: call cgroup_sk_alloc() earlier in
    sk_clone_lock()") for the cgroup pointer.
    
    So, let's revert it and call mem_cgroup_sk_alloc() just before
    cgroup_sk_alloc(). This is safe, as we hold a reference to the socket
    we're cloning, and it holds a reference to the memcg.
    
    Also, let's drop BUG_ON(mem_cgroup_is_root()) check from
    mem_cgroup_sk_alloc(). I see no reasons why bumping the root
    memcg counter is a good reason to panic, and there are no realistic
    ways to hit it.
    
    Signed-off-by: Roman Gushchin <guro@fb.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Tejun Heo <tj@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9b70c876a7a73d494cb9d9f32a227dcfac54a4c
Author: Jason Wang <jasowang@redhat.com>
Date:   Thu Jan 25 22:03:52 2018 +0800

    vhost_net: stop device during reset owner
    
    
    [ Upstream commit 4cd879515d686849eec5f718aeac62a70b067d82 ]
    
    We don't stop device before reset owner, this means we could try to
    serve any virtqueue kick before reset dev->worker. This will result a
    warn since the work was pending at llist during owner resetting. Fix
    this by stopping device during owner reset.
    
    Reported-by: syzbot+eb17c6162478cc50632c@syzkaller.appspotmail.com
    Fixes: 3a4d5c94e9593 ("vhost_net: a kernel-level virtio server")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d35430fdaf47880cacda975a7d1b1588f933357
Author: Li RongQing <lirongqing@baidu.com>
Date:   Fri Jan 26 16:40:41 2018 +0800

    tcp: release sk_frag.page in tcp_disconnect
    
    
    [ Upstream commit 9b42d55a66d388e4dd5550107df051a9637564fc ]
    
    socket can be disconnected and gets transformed back to a listening
    socket, if sk_frag.page is not released, which will be cloned into
    a new socket by sk_clone_lock, but the reference count of this page
    is increased, lead to a use after free or double free issue
    
    Signed-off-by: Li RongQing <lirongqing@baidu.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8513f250d1b632f17cf909ff6b76293adc5f682
Author: Chunhao Lin <hau@realtek.com>
Date:   Wed Jan 31 01:32:36 2018 +0800

    r8169: fix RTL8168EP take too long to complete driver initialization.
    
    
    [ Upstream commit 086ca23d03c0d2f4088f472386778d293e15c5f6 ]
    
    Driver check the wrong register bit in rtl_ocp_tx_cond() that keep driver
    waiting until timeout.
    
    Fix this by waiting for the right register bit.
    
    Signed-off-by: Chunhao Lin <hau@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7c2cf702a4021f40a8948b9c5abcb8a81668ca4
Author: Kristian Evensen <kristian.evensen@gmail.com>
Date:   Tue Jan 30 14:12:55 2018 +0100

    qmi_wwan: Add support for Quectel EP06
    
    
    [ Upstream commit c0b91a56a2e57a5a370655b25d677ae0ebf8a2d0 ]
    
    The Quectel EP06 is a Cat. 6 LTE modem. It uses the same interface as
    the EC20/EC25 for QMI, and requires the same "set DTR"-quirk to work.
    
    Signed-off-by: Kristian Evensen <kristian.evensen@gmail.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcee7812ea05e0a9031f723a8f4206c2e0d74f5e
Author: Junxiao Bi <junxiao.bi@oracle.com>
Date:   Mon Jan 29 17:53:42 2018 +0800

    qlcnic: fix deadlock bug
    
    
    [ Upstream commit 233ac3891607f501f08879134d623b303838f478 ]
    
    The following soft lockup was caught. This is a deadlock caused by
    recusive locking.
    
    Process kworker/u40:1:28016 was holding spin lock "mbx->queue_lock" in
    qlcnic_83xx_mailbox_worker(), while a softirq came in and ask the same spin
    lock in qlcnic_83xx_enqueue_mbx_cmd(). This lock should be hold by disable
    bh..
    
    [161846.962125] NMI watchdog: BUG: soft lockup - CPU#1 stuck for 22s! [kworker/u40:1:28016]
    [161846.962367] Modules linked in: tun ocfs2 xen_netback xen_blkback xen_gntalloc xen_gntdev xen_evtchn xenfs xen_privcmd autofs4 ocfs2_dlmfs ocfs2_stack_o2cb ocfs2_dlm ocfs2_nodemanager ocfs2_stackglue configfs bnx2fc fcoe libfcoe libfc sunrpc 8021q mrp garp bridge stp llc bonding dm_round_robin dm_multipath iTCO_wdt iTCO_vendor_support pcspkr sb_edac edac_core i2c_i801 shpchp lpc_ich mfd_core ioatdma ipmi_devintf ipmi_si ipmi_msghandler sg ext4 jbd2 mbcache2 sr_mod cdrom sd_mod igb i2c_algo_bit i2c_core ahci libahci megaraid_sas ixgbe dca ptp pps_core vxlan udp_tunnel ip6_udp_tunnel qla2xxx scsi_transport_fc qlcnic crc32c_intel be2iscsi bnx2i cnic uio cxgb4i cxgb4 cxgb3i libcxgbi ipv6 cxgb3 mdio libiscsi_tcp qla4xxx iscsi_boot_sysfs libiscsi scsi_transport_iscsi dm_mirror dm_region_hash dm_log dm_mod
    [161846.962454]
    [161846.962460] CPU: 1 PID: 28016 Comm: kworker/u40:1 Not tainted 4.1.12-94.5.9.el6uek.x86_64 #2
    [161846.962463] Hardware name: Oracle Corporation SUN SERVER X4-2L      /ASSY,MB,X4-2L         , BIOS 26050100 09/19/2017
    [161846.962489] Workqueue: qlcnic_mailbox qlcnic_83xx_mailbox_worker [qlcnic]
    [161846.962493] task: ffff8801f2e34600 ti: ffff88004ca5c000 task.ti: ffff88004ca5c000
    [161846.962496] RIP: e030:[<ffffffff810013aa>]  [<ffffffff810013aa>] xen_hypercall_sched_op+0xa/0x20
    [161846.962506] RSP: e02b:ffff880202e43388  EFLAGS: 00000206
    [161846.962509] RAX: 0000000000000000 RBX: ffff8801f6996b70 RCX: ffffffff810013aa
    [161846.962511] RDX: ffff880202e433cc RSI: ffff880202e433b0 RDI: 0000000000000003
    [161846.962513] RBP: ffff880202e433d0 R08: 0000000000000000 R09: ffff8801fe893200
    [161846.962516] R10: ffff8801fe400538 R11: 0000000000000206 R12: ffff880202e4b000
    [161846.962518] R13: 0000000000000050 R14: 0000000000000001 R15: 000000000000020d
    [161846.962528] FS:  0000000000000000(0000) GS:ffff880202e40000(0000) knlGS:ffff880202e40000
    [161846.962531] CS:  e033 DS: 0000 ES: 0000 CR0: 0000000080050033
    [161846.962533] CR2: 0000000002612640 CR3: 00000001bb796000 CR4: 0000000000042660
    [161846.962536] Stack:
    [161846.962538]  ffff880202e43608 0000000000000000 ffffffff813f0442 ffff880202e433b0
    [161846.962543]  0000000000000000 ffff880202e433cc ffffffff00000001 0000000000000000
    [161846.962547]  00000009813f03d6 ffff880202e433e0 ffffffff813f0460 ffff880202e43440
    [161846.962552] Call Trace:
    [161846.962555]  <IRQ>
    [161846.962565]  [<ffffffff813f0442>] ? xen_poll_irq_timeout+0x42/0x50
    [161846.962570]  [<ffffffff813f0460>] xen_poll_irq+0x10/0x20
    [161846.962578]  [<ffffffff81014222>] xen_lock_spinning+0xe2/0x110
    [161846.962583]  [<ffffffff81013f01>] __raw_callee_save_xen_lock_spinning+0x11/0x20
    [161846.962592]  [<ffffffff816e5c57>] ? _raw_spin_lock+0x57/0x80
    [161846.962609]  [<ffffffffa028acfc>] qlcnic_83xx_enqueue_mbx_cmd+0x7c/0xe0 [qlcnic]
    [161846.962623]  [<ffffffffa028e008>] qlcnic_83xx_issue_cmd+0x58/0x210 [qlcnic]
    [161846.962636]  [<ffffffffa028caf2>] qlcnic_83xx_sre_macaddr_change+0x162/0x1d0 [qlcnic]
    [161846.962649]  [<ffffffffa028cb8b>] qlcnic_83xx_change_l2_filter+0x2b/0x30 [qlcnic]
    [161846.962657]  [<ffffffff8160248b>] ? __skb_flow_dissect+0x18b/0x650
    [161846.962670]  [<ffffffffa02856e5>] qlcnic_send_filter+0x205/0x250 [qlcnic]
    [161846.962682]  [<ffffffffa0285c77>] qlcnic_xmit_frame+0x547/0x7b0 [qlcnic]
    [161846.962691]  [<ffffffff8160ac22>] xmit_one+0x82/0x1a0
    [161846.962696]  [<ffffffff8160ad90>] dev_hard_start_xmit+0x50/0xa0
    [161846.962701]  [<ffffffff81630112>] sch_direct_xmit+0x112/0x220
    [161846.962706]  [<ffffffff8160b80f>] __dev_queue_xmit+0x1df/0x5e0
    [161846.962710]  [<ffffffff8160bc33>] dev_queue_xmit_sk+0x13/0x20
    [161846.962721]  [<ffffffffa0575bd5>] bond_dev_queue_xmit+0x35/0x80 [bonding]
    [161846.962729]  [<ffffffffa05769fb>] __bond_start_xmit+0x1cb/0x210 [bonding]
    [161846.962736]  [<ffffffffa0576a71>] bond_start_xmit+0x31/0x60 [bonding]
    [161846.962740]  [<ffffffff8160ac22>] xmit_one+0x82/0x1a0
    [161846.962745]  [<ffffffff8160ad90>] dev_hard_start_xmit+0x50/0xa0
    [161846.962749]  [<ffffffff8160bb1e>] __dev_queue_xmit+0x4ee/0x5e0
    [161846.962754]  [<ffffffff8160bc33>] dev_queue_xmit_sk+0x13/0x20
    [161846.962760]  [<ffffffffa05cfa72>] vlan_dev_hard_start_xmit+0xb2/0x150 [8021q]
    [161846.962764]  [<ffffffff8160ac22>] xmit_one+0x82/0x1a0
    [161846.962769]  [<ffffffff8160ad90>] dev_hard_start_xmit+0x50/0xa0
    [161846.962773]  [<ffffffff8160bb1e>] __dev_queue_xmit+0x4ee/0x5e0
    [161846.962777]  [<ffffffff8160bc33>] dev_queue_xmit_sk+0x13/0x20
    [161846.962789]  [<ffffffffa05adf74>] br_dev_queue_push_xmit+0x54/0xa0 [bridge]
    [161846.962797]  [<ffffffffa05ae4ff>] br_forward_finish+0x2f/0x90 [bridge]
    [161846.962807]  [<ffffffff810b0dad>] ? ttwu_do_wakeup+0x1d/0x100
    [161846.962811]  [<ffffffff815f929b>] ? __alloc_skb+0x8b/0x1f0
    [161846.962818]  [<ffffffffa05ae04d>] __br_forward+0x8d/0x120 [bridge]
    [161846.962822]  [<ffffffff815f613b>] ? __kmalloc_reserve+0x3b/0xa0
    [161846.962829]  [<ffffffff810be55e>] ? update_rq_runnable_avg+0xee/0x230
    [161846.962836]  [<ffffffffa05ae176>] br_forward+0x96/0xb0 [bridge]
    [161846.962845]  [<ffffffffa05af85e>] br_handle_frame_finish+0x1ae/0x420 [bridge]
    [161846.962853]  [<ffffffffa05afc4f>] br_handle_frame+0x17f/0x260 [bridge]
    [161846.962862]  [<ffffffffa05afad0>] ? br_handle_frame_finish+0x420/0x420 [bridge]
    [161846.962867]  [<ffffffff8160d057>] __netif_receive_skb_core+0x1f7/0x870
    [161846.962872]  [<ffffffff8160d6f2>] __netif_receive_skb+0x22/0x70
    [161846.962877]  [<ffffffff8160d913>] netif_receive_skb_internal+0x23/0x90
    [161846.962884]  [<ffffffffa07512ea>] ? xenvif_idx_release+0xea/0x100 [xen_netback]
    [161846.962889]  [<ffffffff816e5a10>] ? _raw_spin_unlock_irqrestore+0x20/0x50
    [161846.962893]  [<ffffffff8160e624>] netif_receive_skb_sk+0x24/0x90
    [161846.962899]  [<ffffffffa075269a>] xenvif_tx_submit+0x2ca/0x3f0 [xen_netback]
    [161846.962906]  [<ffffffffa0753f0c>] xenvif_tx_action+0x9c/0xd0 [xen_netback]
    [161846.962915]  [<ffffffffa07567f5>] xenvif_poll+0x35/0x70 [xen_netback]
    [161846.962920]  [<ffffffff8160e01b>] napi_poll+0xcb/0x1e0
    [161846.962925]  [<ffffffff8160e1c0>] net_rx_action+0x90/0x1c0
    [161846.962931]  [<ffffffff8108aaba>] __do_softirq+0x10a/0x350
    [161846.962938]  [<ffffffff8108ae75>] irq_exit+0x125/0x130
    [161846.962943]  [<ffffffff813f03a9>] xen_evtchn_do_upcall+0x39/0x50
    [161846.962950]  [<ffffffff816e7ffe>] xen_do_hypervisor_callback+0x1e/0x40
    [161846.962952]  <EOI>
    [161846.962959]  [<ffffffff816e5c4a>] ? _raw_spin_lock+0x4a/0x80
    [161846.962964]  [<ffffffff816e5b1e>] ? _raw_spin_lock_irqsave+0x1e/0xa0
    [161846.962978]  [<ffffffffa028e279>] ? qlcnic_83xx_mailbox_worker+0xb9/0x2a0 [qlcnic]
    [161846.962991]  [<ffffffff810a14e1>] ? process_one_work+0x151/0x4b0
    [161846.962995]  [<ffffffff8100c3f2>] ? check_events+0x12/0x20
    [161846.963001]  [<ffffffff810a1960>] ? worker_thread+0x120/0x480
    [161846.963005]  [<ffffffff816e187b>] ? __schedule+0x30b/0x890
    [161846.963010]  [<ffffffff810a1840>] ? process_one_work+0x4b0/0x4b0
    [161846.963015]  [<ffffffff810a1840>] ? process_one_work+0x4b0/0x4b0
    [161846.963021]  [<ffffffff810a6b3e>] ? kthread+0xce/0xf0
    [161846.963025]  [<ffffffff810a6a70>] ? kthread_freezable_should_stop+0x70/0x70
    [161846.963031]  [<ffffffff816e6522>] ? ret_from_fork+0x42/0x70
    [161846.963035]  [<ffffffff810a6a70>] ? kthread_freezable_should_stop+0x70/0x70
    [161846.963037] Code: cc 51 41 53 b8 1c 00 00 00 0f 05 41 5b 59 c3 cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 51 41 53 b8 1d 00 00 00 0f 05 <41> 5b 59 c3 cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc
    
    Signed-off-by: Junxiao Bi <junxiao.bi@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 166f27322f8c89a3580a30c339ff34a66544500c
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Feb 1 10:26:57 2018 -0800

    net: igmp: add a missing rcu locking section
    
    
    [ Upstream commit e7aadb27a5415e8125834b84a74477bfbee4eff5 ]
    
    Newly added igmpv3_get_srcaddr() needs to be called under rcu lock.
    
    Timer callbacks do not ensure this locking.
    
    =============================
    WARNING: suspicious RCU usage
    4.15.0+ #200 Not tainted
    -----------------------------
    ./include/linux/inetdevice.h:216 suspicious rcu_dereference_check() usage!
    
    other info that might help us debug this:
    
    rcu_scheduler_active = 2, debug_locks = 1
    3 locks held by syzkaller616973/4074:
     #0:  (&mm->mmap_sem){++++}, at: [<00000000bfce669e>] __do_page_fault+0x32d/0xc90 arch/x86/mm/fault.c:1355
     #1:  ((&im->timer)){+.-.}, at: [<00000000619d2f71>] lockdep_copy_map include/linux/lockdep.h:178 [inline]
     #1:  ((&im->timer)){+.-.}, at: [<00000000619d2f71>] call_timer_fn+0x1c6/0x820 kernel/time/timer.c:1316
     #2:  (&(&im->lock)->rlock){+.-.}, at: [<000000005f833c5c>] spin_lock_bh include/linux/spinlock.h:315 [inline]
     #2:  (&(&im->lock)->rlock){+.-.}, at: [<000000005f833c5c>] igmpv3_send_report+0x98/0x5b0 net/ipv4/igmp.c:600
    
    stack backtrace:
    CPU: 0 PID: 4074 Comm: syzkaller616973 Not tainted 4.15.0+ #200
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x257 lib/dump_stack.c:53
     lockdep_rcu_suspicious+0x123/0x170 kernel/locking/lockdep.c:4592
     __in_dev_get_rcu include/linux/inetdevice.h:216 [inline]
     igmpv3_get_srcaddr net/ipv4/igmp.c:329 [inline]
     igmpv3_newpack+0xeef/0x12e0 net/ipv4/igmp.c:389
     add_grhead.isra.27+0x235/0x300 net/ipv4/igmp.c:432
     add_grec+0xbd3/0x1170 net/ipv4/igmp.c:565
     igmpv3_send_report+0xd5/0x5b0 net/ipv4/igmp.c:605
     igmp_send_report+0xc43/0x1050 net/ipv4/igmp.c:722
     igmp_timer_expire+0x322/0x5c0 net/ipv4/igmp.c:831
     call_timer_fn+0x228/0x820 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x7ee/0xb70 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2d7/0xb85 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1cc/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:541 [inline]
     smp_apic_timer_interrupt+0x16b/0x700 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xa9/0xb0 arch/x86/entry/entry_64.S:938
    
    Fixes: a46182b00290 ("net: igmp: Use correct source address on IGMPv3 reports")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2726946dfcd2b2f1863dfae198687c6ec6d976dd
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Wed Jan 31 16:29:30 2018 +0200

    ip6mr: fix stale iterator
    
    
    [ Upstream commit 4adfa79fc254efb7b0eb3cd58f62c2c3f805f1ba ]
    
    When we dump the ip6mr mfc entries via proc, we initialize an iterator
    with the table to dump but we don't clear the cache pointer which might
    be initialized from a prior read on the same descriptor that ended. This
    can result in lock imbalance (an unnecessary unlock) leading to other
    crashes and hangs. Clear the cache pointer like ipmr does to fix the issue.
    Thanks for the reliable reproducer.
    
    Here's syzbot's trace:
     WARNING: bad unlock balance detected!
     4.15.0-rc3+ #128 Not tainted
     syzkaller971460/3195 is trying to release lock (mrt_lock) at:
     [<000000006898068d>] ipmr_mfc_seq_stop+0xe1/0x130 net/ipv6/ip6mr.c:553
     but there are no more locks to release!
    
     other info that might help us debug this:
     1 lock held by syzkaller971460/3195:
      #0:  (&p->lock){+.+.}, at: [<00000000744a6565>] seq_read+0xd5/0x13d0
     fs/seq_file.c:165
    
     stack backtrace:
     CPU: 1 PID: 3195 Comm: syzkaller971460 Not tainted 4.15.0-rc3+ #128
     Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
     Google 01/01/2011
     Call Trace:
      __dump_stack lib/dump_stack.c:17 [inline]
      dump_stack+0x194/0x257 lib/dump_stack.c:53
      print_unlock_imbalance_bug+0x12f/0x140 kernel/locking/lockdep.c:3561
      __lock_release kernel/locking/lockdep.c:3775 [inline]
      lock_release+0x5f9/0xda0 kernel/locking/lockdep.c:4023
      __raw_read_unlock include/linux/rwlock_api_smp.h:225 [inline]
      _raw_read_unlock+0x1a/0x30 kernel/locking/spinlock.c:255
      ipmr_mfc_seq_stop+0xe1/0x130 net/ipv6/ip6mr.c:553
      traverse+0x3bc/0xa00 fs/seq_file.c:135
      seq_read+0x96a/0x13d0 fs/seq_file.c:189
      proc_reg_read+0xef/0x170 fs/proc/inode.c:217
      do_loop_readv_writev fs/read_write.c:673 [inline]
      do_iter_read+0x3db/0x5b0 fs/read_write.c:897
      compat_readv+0x1bf/0x270 fs/read_write.c:1140
      do_compat_preadv64+0xdc/0x100 fs/read_write.c:1189
      C_SYSC_preadv fs/read_write.c:1209 [inline]
      compat_SyS_preadv+0x3b/0x50 fs/read_write.c:1203
      do_syscall_32_irqs_on arch/x86/entry/common.c:327 [inline]
      do_fast_syscall_32+0x3ee/0xf9d arch/x86/entry/common.c:389
      entry_SYSENTER_compat+0x51/0x60 arch/x86/entry/entry_64_compat.S:125
     RIP: 0023:0xf7f73c79
     RSP: 002b:00000000e574a15c EFLAGS: 00000292 ORIG_RAX: 000000000000014d
     RAX: ffffffffffffffda RBX: 000000000000000f RCX: 0000000020a3afb0
     RDX: 0000000000000001 RSI: 0000000000000067 RDI: 0000000000000000
     RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
     R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
     R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
     BUG: sleeping function called from invalid context at lib/usercopy.c:25
     in_atomic(): 1, irqs_disabled(): 0, pid: 3195, name: syzkaller971460
     INFO: lockdep is turned off.
     CPU: 1 PID: 3195 Comm: syzkaller971460 Not tainted 4.15.0-rc3+ #128
     Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
     Google 01/01/2011
     Call Trace:
      __dump_stack lib/dump_stack.c:17 [inline]
      dump_stack+0x194/0x257 lib/dump_stack.c:53
      ___might_sleep+0x2b2/0x470 kernel/sched/core.c:6060
      __might_sleep+0x95/0x190 kernel/sched/core.c:6013
      __might_fault+0xab/0x1d0 mm/memory.c:4525
      _copy_to_user+0x2c/0xc0 lib/usercopy.c:25
      copy_to_user include/linux/uaccess.h:155 [inline]
      seq_read+0xcb4/0x13d0 fs/seq_file.c:279
      proc_reg_read+0xef/0x170 fs/proc/inode.c:217
      do_loop_readv_writev fs/read_write.c:673 [inline]
      do_iter_read+0x3db/0x5b0 fs/read_write.c:897
      compat_readv+0x1bf/0x270 fs/read_write.c:1140
      do_compat_preadv64+0xdc/0x100 fs/read_write.c:1189
      C_SYSC_preadv fs/read_write.c:1209 [inline]
      compat_SyS_preadv+0x3b/0x50 fs/read_write.c:1203
      do_syscall_32_irqs_on arch/x86/entry/common.c:327 [inline]
      do_fast_syscall_32+0x3ee/0xf9d arch/x86/entry/common.c:389
      entry_SYSENTER_compat+0x51/0x60 arch/x86/entry/entry_64_compat.S:125
     RIP: 0023:0xf7f73c79
     RSP: 002b:00000000e574a15c EFLAGS: 00000292 ORIG_RAX: 000000000000014d
     RAX: ffffffffffffffda RBX: 000000000000000f RCX: 0000000020a3afb0
     RDX: 0000000000000001 RSI: 0000000000000067 RDI: 0000000000000000
     RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
     R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
     R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
     WARNING: CPU: 1 PID: 3195 at lib/usercopy.c:26 _copy_to_user+0xb5/0xc0
     lib/usercopy.c:26
    
    Reported-by: syzbot <bot+eceb3204562c41a438fa1f2335e0fe4f6886d669@syzkaller.appspotmail.com>
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 806d61d66900b999c908823471ea9ff64cf7344e
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Sat Sep 30 10:10:10 2017 +0900

    kbuild: rpm-pkg: keep spec file until make mrproper
    
    commit af60e207087975d069858741c44ed4f450330ac4 upstream.
    
    If build fails during (bin)rpm-pkg, the spec file is not cleaned by
    anyone until the next successful build of the package.
    
    We do not have to immediately delete the spec file in case somebody
    may want to take a look at it.  Instead, make them ignored by git,
    and cleaned up by make mrproper.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abc5896b778581fb2396f018a82334c701a1c261
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Tue Oct 31 00:33:46 2017 +0900

    .gitignore: move *.dtb and *.dtb.S patterns to the top-level .gitignore
    
    commit 10b62a2f785ab55857380f0c63d9fa468fd8c676 upstream.
    
    Most of DT files are compiled under arch/*/boot/dts/, but we have some
    other directories, like drivers/of/unittest-data/.  We often miss to
    add gitignore patterns per directory.  Since there are no source files
    that end with .dtb or .dtb.S, we can ignore the patterns globally.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bafda5d375270277a140d3b70f0ea3c5fe6aacf8
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Tue Oct 31 00:33:45 2017 +0900

    .gitignore: sort normal pattern rules alphabetically
    
    commit 1377dd3e29878b8f5d9f5c9000975f50a428a0cd upstream.
    
    We are having more and more ignore patterns.  Sort the list
    alphabetically.  We will easily catch duplicated patterns if any.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81d0cc85caabe062991ea45ddada814835d47fb0
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 7 11:12:26 2018 -0800

    Linux 4.14.18

commit 8d1ed7d4e1ce6d4d08676f5b2bb1a4e83b3ad5f7
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed Nov 15 16:33:12 2017 -0600

    fpga: region: release of_parse_phandle nodes after use
    
    commit 0f5eb1545907edeea7672a9c1652c4231150ff22 upstream.
    
    Both fpga_region_get_manager() and fpga_region_get_bridges() call
    of_parse_phandle(), but nothing calls of_node_put() on the returned
    struct device_node pointers.  Make sure to do that to stop their
    reference counters getting out of whack.
    
    Fixes: 0fa20cdfcc1f ("fpga: fpga-region: device tree control for FPGA")
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Alan Tull <atull@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a252f37c5f8b998ccd419d1562a3c069890eb1d4
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Thu Jan 11 18:57:26 2018 +0100

    serial: core: mark port as initialized after successful IRQ change
    
    commit 44117a1d1732c513875d5a163f10d9adbe866c08 upstream.
    
    setserial changes the IRQ via uart_set_info(). It invokes
    uart_shutdown() which free the current used IRQ and clear
    TTY_PORT_INITIALIZED. It will then update the IRQ number and invoke
    uart_startup() before returning to the caller leaving
    TTY_PORT_INITIALIZED cleared.
    
    The next open will crash with
    |  list_add double add: new=ffffffff839fcc98, prev=ffffffff839fcc98, next=ffffffff839fcc98.
    since the close from the IOCTL won't free the IRQ (and clean the list)
    due to the TTY_PORT_INITIALIZED check in uart_shutdown().
    
    There is same pattern in uart_do_autoconfig() and I *think* it also
    needs to set TTY_PORT_INITIALIZED there.
    Is there a reason why uart_startup() does not set the flag by itself
    after the IRQ has been acquired (since it is cleared in uart_shutdown)?
    
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6d90612c96c99d98f204c7641becfd7295a6fc2
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Sat Feb 3 15:56:23 2018 +0100

    KVM/SVM: Allow direct access to MSR_IA32_SPEC_CTRL
    
    commit b2ac58f90540e39324e7a29a7ad471407ae0bf48
    
    [ Based on a patch from Paolo Bonzini <pbonzini@redhat.com> ]
    
    ... basically doing exactly what we do for VMX:
    
    - Passthrough SPEC_CTRL to guests (if enabled in guest CPUID)
    - Save and restore SPEC_CTRL around VMExit and VMEntry only if the guest
      actually used it.
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Darren Kenny <darren.kenny@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: kvm@vger.kernel.org
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Link: https://lkml.kernel.org/r/1517669783-20732-1-git-send-email-karahmed@amazon.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a82531c96a20ab008e7f5a903e85d46a81fd3a3
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Thu Feb 1 22:59:45 2018 +0100

    KVM/VMX: Allow direct access to MSR_IA32_SPEC_CTRL
    
    commit d28b387fb74da95d69d2615732f50cceb38e9a4d
    
    [ Based on a patch from Ashok Raj <ashok.raj@intel.com> ]
    
    Add direct access to MSR_IA32_SPEC_CTRL for guests. This is needed for
    guests that will only mitigate Spectre V2 through IBRS+IBPB and will not
    be using a retpoline+IBPB based approach.
    
    To avoid the overhead of saving and restoring the MSR_IA32_SPEC_CTRL for
    guests that do not actually use the MSR, only start saving and restoring
    when a non-zero is written to it.
    
    No attempt is made to handle STIBP here, intentionally. Filtering STIBP
    may be added in a future patch, which may require trapping all writes
    if we don't want to pass it through directly to the guest.
    
    [dwmw2: Clean up CPUID bits, save/restore manually, handle reset]
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Darren Kenny <darren.kenny@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: kvm@vger.kernel.org
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Link: https://lkml.kernel.org/r/1517522386-18410-5-git-send-email-karahmed@amazon.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0716f551d5a29dc3abb128996aa02269b527fa45
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Thu Feb 1 22:59:44 2018 +0100

    KVM/VMX: Emulate MSR_IA32_ARCH_CAPABILITIES
    
    commit 28c1c9fabf48d6ad596273a11c46e0d0da3e14cd
    
    Intel processors use MSR_IA32_ARCH_CAPABILITIES MSR to indicate RDCL_NO
    (bit 0) and IBRS_ALL (bit 1). This is a read-only MSR. By default the
    contents will come directly from the hardware, but user-space can still
    override it.
    
    [dwmw2: The bit in kvm_cpuid_7_0_edx_x86_features can be unconditional]
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Darren Kenny <darren.kenny@oracle.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: kvm@vger.kernel.org
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Link: https://lkml.kernel.org/r/1517522386-18410-4-git-send-email-karahmed@amazon.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d395d69de67ea95760e1f207eb0f6fdfbcb6e069
Author: Ashok Raj <ashok.raj@intel.com>
Date:   Thu Feb 1 22:59:43 2018 +0100

    KVM/x86: Add IBPB support
    
    commit 15d45071523d89b3fb7372e2135fbd72f6af9506
    
    The Indirect Branch Predictor Barrier (IBPB) is an indirect branch
    control mechanism. It keeps earlier branches from influencing
    later ones.
    
    Unlike IBRS and STIBP, IBPB does not define a new mode of operation.
    It's a command that ensures predicted branch targets aren't used after
    the barrier. Although IBRS and IBPB are enumerated by the same CPUID
    enumeration, IBPB is very different.
    
    IBPB helps mitigate against three potential attacks:
    
    * Mitigate guests from being attacked by other guests.
      - This is addressed by issing IBPB when we do a guest switch.
    
    * Mitigate attacks from guest/ring3->host/ring3.
      These would require a IBPB during context switch in host, or after
      VMEXIT. The host process has two ways to mitigate
      - Either it can be compiled with retpoline
      - If its going through context switch, and has set !dumpable then
        there is a IBPB in that path.
        (Tim's patch: https://patchwork.kernel.org/patch/10192871)
      - The case where after a VMEXIT you return back to Qemu might make
        Qemu attackable from guest when Qemu isn't compiled with retpoline.
      There are issues reported when doing IBPB on every VMEXIT that resulted
      in some tsc calibration woes in guest.
    
    * Mitigate guest/ring0->host/ring0 attacks.
      When host kernel is using retpoline it is safe against these attacks.
      If host kernel isn't using retpoline we might need to do a IBPB flush on
      every VMEXIT.
    
    Even when using retpoline for indirect calls, in certain conditions 'ret'
    can use the BTB on Skylake-era CPUs. There are other mitigations
    available like RSB stuffing/clearing.
    
    * IBPB is issued only for SVM during svm_free_vcpu().
      VMX has a vmclear and SVM doesn't.  Follow discussion here:
      https://lkml.org/lkml/2018/1/15/146
    
    Please refer to the following spec for more details on the enumeration
    and control.
    
    Refer here to get documentation about mitigations.
    
    https://software.intel.com/en-us/side-channel-security-support
    
    [peterz: rebase and changelog rewrite]
    [karahmed: - rebase
               - vmx: expose PRED_CMD if guest has it in CPUID
               - svm: only pass through IBPB if guest has it in CPUID
               - vmx: support !cpu_has_vmx_msr_bitmap()]
               - vmx: support nested]
    [dwmw2: Expose CPUID bit too (AMD IBPB only for now as we lack IBRS)
            PRED_CMD is a write-only MSR]
    
    Signed-off-by: Ashok Raj <ashok.raj@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: kvm@vger.kernel.org
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Link: http://lkml.kernel.org/r/1515720739-43819-6-git-send-email-ashok.raj@intel.com
    Link: https://lkml.kernel.org/r/1517522386-18410-3-git-send-email-karahmed@amazon.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f7c4d52a0e82854e5ccc15a2b53d3ab3efe0452
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Thu Feb 1 22:59:42 2018 +0100

    KVM/x86: Update the reverse_cpuid list to include CPUID_7_EDX
    
    commit b7b27aa011a1df42728d1768fc181d9ce69e6911
    
    [dwmw2: Stop using KF() for bits in it, too]
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Cc: kvm@vger.kernel.org
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Link: https://lkml.kernel.org/r/1517522386-18410-2-git-send-email-karahmed@amazon.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c8298c1fdd3317658a3dcd055b19a4c60df947d
Author: Darren Kenny <darren.kenny@oracle.com>
Date:   Fri Feb 2 19:12:20 2018 +0000

    x86/speculation: Fix typo IBRS_ATT, which should be IBRS_ALL
    
    commit af189c95a371b59f493dbe0f50c0a09724868881
    
    Fixes: 117cc7a908c83 ("x86/retpoline: Fill return stack buffer on vmexit")
    Signed-off-by: Darren Kenny <darren.kenny@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/20180202191220.blvgkgutojecxr3b@starbug-vm.ie.oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dd1f6989a545446661d0cbecf8748c8d2093549
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 2 22:39:23 2018 +0100

    x86/pti: Mark constant arrays as __initconst
    
    commit 4bf5d56d429cbc96c23d809a08f63cd29e1a702e
    
    I'm seeing build failures from the two newly introduced arrays that
    are marked 'const' and '__initdata', which are mutually exclusive:
    
    arch/x86/kernel/cpu/common.c:882:43: error: 'cpu_no_speculation' causes a section type conflict with 'e820_table_firmware_init'
    arch/x86/kernel/cpu/common.c:895:43: error: 'cpu_no_meltdown' causes a section type conflict with 'e820_table_firmware_init'
    
    The correct annotation is __initconst.
    
    Fixes: fec9434a12f3 ("x86/pti: Do not enable PTI on CPUs which are not vulnerable to Meltdown")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Thomas Garnier <thgarnie@google.com>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/20180202213959.611210-1-arnd@arndb.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebaf2271a024a7000dc83e061349f7bbf2b44281
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Thu Feb 1 11:27:21 2018 +0000

    x86/spectre: Simplify spectre_v2 command line parsing
    
    commit 9005c6834c0ffdfe46afa76656bd9276cca864f6
    
    [dwmw2: Use ARRAY_SIZE]
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Link: https://lkml.kernel.org/r/1517484441-1420-3-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 838dbae0acd06da5fb0d0173dfddc72ca5650eb0
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Feb 1 11:27:20 2018 +0000

    x86/retpoline: Avoid retpolines for built-in __init functions
    
    commit 66f793099a636862a71c59d4a6ba91387b155e0c
    
    There's no point in building init code with retpolines, since it runs before
    any potentially hostile userspace does. And before the retpoline is actually
    ALTERNATIVEd into place, for much of it.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: karahmed@amazon.de
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Link: https://lkml.kernel.org/r/1517484441-1420-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f6eb84b14aca572ebe50984be94e036075e6e2b
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Jan 31 17:47:03 2018 -0800

    x86/kvm: Update spectre-v1 mitigation
    
    commit 085331dfc6bbe3501fb936e657331ca943827600
    
    Commit 75f139aaf896 "KVM: x86: Add memory barrier on vmcs field lookup"
    added a raw 'asm("lfence");' to prevent a bounds check bypass of
    'vmcs_field_to_offset_table'.
    
    The lfence can be avoided in this path by using the array_index_nospec()
    helper designed for these types of fixes.
    
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andrew Honig <ahonig@google.com>
    Cc: kvm@vger.kernel.org
    Cc: Jim Mattson <jmattson@google.com>
    Link: https://lkml.kernel.org/r/151744959670.6342.3001723920950249067.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f8da2c8a191f274600bafcf6e58f54e16d5c8de
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Jan 16 16:51:18 2018 +0100

    KVM: VMX: make MSR bitmaps per-VCPU
    
    commit 904e14fb7cb96401a7dc803ca2863fd5ba32ffe6
    
    Place the MSR bitmap in struct loaded_vmcs, and update it in place
    every time the x2apic or APICv state can change.  This is rare and
    the loop can handle 64 MSRs per iteration, in a similar fashion as
    nested_vmx_prepare_msr_bitmap.
    
    This prepares for choosing, on a per-VM basis, whether to intercept
    the SPEC_CTRL and PRED_CMD MSRs.
    
    Cc: stable@vger.kernel.org       # prereq for Spectre mitigation
    Suggested-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad368e5b2d56ed059ebc8343cd7e713f3a7717d4
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Tue Jan 30 22:13:33 2018 -0600

    x86/paravirt: Remove 'noreplace-paravirt' cmdline option
    
    commit 12c69f1e94c89d40696e83804dd2f0965b5250cd
    
    The 'noreplace-paravirt' option disables paravirt patching, leaving the
    original pv indirect calls in place.
    
    That's highly incompatible with retpolines, unless we want to uglify
    paravirt even further and convert the paravirt calls to retpolines.
    
    As far as I can tell, the option doesn't seem to be useful for much
    other than introducing surprising corner cases and making the kernel
    vulnerable to Spectre v2.  It was probably a debug option from the early
    paravirt days.  So just remove it.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jason Baron <jbaron@akamai.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Alok Kataria <akataria@vmware.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Link: https://lkml.kernel.org/r/20180131041333.2x6blhxirc2kclrq@treble
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a3f12294da45e779b313b33077f04b87782985b
Author: Tim Chen <tim.c.chen@linux.intel.com>
Date:   Mon Jan 29 22:04:47 2018 +0000

    x86/speculation: Use Indirect Branch Prediction Barrier in context switch
    
    commit 18bf3c3ea8ece8f03b6fc58508f2dfd23c7711c7
    
    Flush indirect branches when switching into a process that marked itself
    non dumpable. This protects high value processes like gpg better,
    without having too high performance overhead.
    
    If done naïvely, we could switch to a kernel idle thread and then back
    to the original process, such as:
    
        process A -> idle -> process A
    
    In such scenario, we do not have to do IBPB here even though the process
    is non-dumpable, as we are switching back to the same process after a
    hiatus.
    
    To avoid the redundant IBPB, which is expensive, we track the last mm
    user context ID. The cost is to have an extra u64 mm context id to track
    the last mm we were using before switching to the init_mm used by idle.
    Avoiding the extra IBPB is probably worth the extra memory for this
    common scenario.
    
    For those cases where tlb_defer_switch_to_init_mm() returns true (non
    PCID), lazy tlb will defer switch to init_mm, so we will not be changing
    the mm for the process A -> idle -> process A switch. So IBPB will be
    skipped for this case.
    
    Thanks to the reviewers and Andy Lutomirski for the suggestion of
    using ctx_id which got rid of the problem of mm pointer recycling.
    
    Signed-off-by: Tim Chen <tim.c.chen@linux.intel.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: ak@linux.intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: linux@dominikbrodowski.net
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: luto@kernel.org
    Cc: pbonzini@redhat.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1517263487-3708-1-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85543d7613c481392d564a4956850591b2025f5d
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Tue Jan 30 14:30:23 2018 +0000

    x86/cpuid: Fix up "virtual" IBRS/IBPB/STIBP feature bits on Intel
    
    commit 7fcae1118f5fd44a862aa5c3525248e35ee67c3b
    
    Despite the fact that all the other code there seems to be doing it, just
    using set_cpu_cap() in early_intel_init() doesn't actually work.
    
    For CPUs with PKU support, setup_pku() calls get_cpu_cap() after
    c->c_init() has set those feature bits. That resets those bits back to what
    was queried from the hardware.
    
    Turning the bits off for bad microcode is easy to fix. That can just use
    setup_clear_cpu_cap() to force them off for all CPUs.
    
    I was less keen on forcing the feature bits *on* that way, just in case
    of inconsistencies. I appreciate that the kernel is going to get this
    utterly wrong if CPU features are not consistent, because it has already
    applied alternatives by the time secondary CPUs are brought up.
    
    But at least if setup_force_cpu_cap() isn't being used, we might have a
    chance of *detecting* the lack of the corresponding bit and either
    panicking or refusing to bring the offending CPU online.
    
    So ensure that the appropriate feature bits are set within get_cpu_cap()
    regardless of how many extra times it's called.
    
    Fixes: 2961298e ("x86/cpufeatures: Clean up Spectre v2 related CPUID flags")
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: karahmed@amazon.de
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Link: https://lkml.kernel.org/r/1517322623-15261-1-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c962dfa4aca010e05730ff458210b04c4eb9af14
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Jan 30 19:32:18 2018 +0000

    x86/spectre: Fix spelling mistake: "vunerable"-> "vulnerable"
    
    commit e698dcdfcda41efd0984de539767b4cddd235f1e
    
    Trivial fix to spelling mistake in pr_err error message text.
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: kernel-janitors@vger.kernel.org
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/20180130193218.9271-1-colin.king@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 863b308dbb1945949529a0e523c34636430884a7
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:03:21 2018 -0800

    x86/spectre: Report get_user mitigation for spectre_v1
    
    commit edfbae53dab8348fca778531be9f4855d2ca0360
    
    Reflect the presence of get_user(), __get_user(), and 'syscall' protections
    in sysfs. The expectation is that new and better tooling will allow the
    kernel to grow more usages of array_index_nospec(), for now, only claim
    mitigation for __user pointer de-references.
    
    Reported-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: torvalds@linux-foundation.org
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727420158.33451.11658324346540434635.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9daf8144642b9daad69ab50e9cba5ecea2c8e25
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:03:15 2018 -0800

    nl80211: Sanitize array index in parse_txq_params
    
    commit 259d8c1e984318497c84eef547bbb6b1d9f4eb05
    
    Wireless drivers rely on parse_txq_params to validate that txq_params->ac
    is less than NL80211_NUM_ACS by the time the low-level driver's ->conf_tx()
    handler is called. Use a new helper, array_index_nospec(), to sanitize
    txq_params->ac with respect to speculation. I.e. ensure that any
    speculation into ->conf_tx() handlers is done with a value of
    txq_params->ac that is within the bounds of [0, NL80211_NUM_ACS).
    
    Reported-by: Christian Lamparter <chunkeey@gmail.com>
    Reported-by: Elena Reshetova <elena.reshetova@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Johannes Berg <johannes@sipsolutions.net>
    Cc: linux-arch@vger.kernel.org
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: linux-wireless@vger.kernel.org
    Cc: torvalds@linux-foundation.org
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727419584.33451.7700736761686184303.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98116c32d3b4b60bc1add46a81ed4f991ef02a7d
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:03:05 2018 -0800

    vfs, fdtable: Prevent bounds-check bypass via speculative execution
    
    commit 56c30ba7b348b90484969054d561f711ba196507
    
    'fd' is a user controlled value that is used as a data dependency to
    read from the 'fdt->fd' array.  In order to avoid potential leaks of
    kernel memory values, block speculative execution of the instruction
    stream that could issue reads based on an invalid 'file *' returned from
    __fcheck_files.
    
    Co-developed-by: Elena Reshetova <elena.reshetova@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: torvalds@linux-foundation.org
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727418500.33451.17392199002892248656.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0035134041207f990e0756e2a6f63b7dc3bfe95b
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:02:59 2018 -0800

    x86/syscall: Sanitize syscall table de-references under speculation
    
    commit 2fbd7af5af8665d18bcefae3e9700be07e22b681
    
    The syscall table base is a user controlled function pointer in kernel
    space. Use array_index_nospec() to prevent any out of bounds speculation.
    
    While retpoline prevents speculating into a userspace directed target it
    does not stop the pointer de-reference, the concern is leaking memory
    relative to the syscall table base, by observing instruction cache
    behavior.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727417984.33451.1216731042505722161.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edaf1538d3a5620862544a20aab14cb601787e1a
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:02:54 2018 -0800

    x86/get_user: Use pointer masking to limit speculation
    
    commit c7f631cb07e7da06ac1d231ca178452339e32a94
    
    Quoting Linus:
    
        I do think that it would be a good idea to very expressly document
        the fact that it's not that the user access itself is unsafe. I do
        agree that things like "get_user()" want to be protected, but not
        because of any direct bugs or problems with get_user() and friends,
        but simply because get_user() is an excellent source of a pointer
        that is obviously controlled from a potentially attacking user
        space. So it's a prime candidate for then finding _subsequent_
        accesses that can then be used to perturb the cache.
    
    Unlike the __get_user() case get_user() includes the address limit check
    near the pointer de-reference. With that locality the speculation can be
    mitigated with pointer narrowing rather than a barrier, i.e.
    array_index_nospec(). Where the narrowing is performed by:
    
            cmp %limit, %ptr
            sbb %mask, %mask
            and %mask, %ptr
    
    With respect to speculation the value of %ptr is either less than %limit
    or NULL.
    
    Co-developed-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: Kees Cook <keescook@chromium.org>
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: torvalds@linux-foundation.org
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727417469.33451.11804043010080838495.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f40de41ccae0c17105d8336e44d704dc5500a50
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:02:49 2018 -0800

    x86/uaccess: Use __uaccess_begin_nospec() and uaccess_try_nospec
    
    commit 304ec1b050310548db33063e567123fae8fd0301
    
    Quoting Linus:
    
        I do think that it would be a good idea to very expressly document
        the fact that it's not that the user access itself is unsafe. I do
        agree that things like "get_user()" want to be protected, but not
        because of any direct bugs or problems with get_user() and friends,
        but simply because get_user() is an excellent source of a pointer
        that is obviously controlled from a potentially attacking user
        space. So it's a prime candidate for then finding _subsequent_
        accesses that can then be used to perturb the cache.
    
    __uaccess_begin_nospec() covers __get_user() and copy_from_iter() where the
    limit check is far away from the user pointer de-reference. In those cases
    a barrier_nospec() prevents speculation with a potential pointer to
    privileged memory. uaccess_try_nospec covers get_user_try.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Suggested-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: Kees Cook <keescook@chromium.org>
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727416953.33451.10508284228526170604.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2406eb9f4568098f2353f1c9267dbe7e7f4a546b
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:02:44 2018 -0800

    x86/usercopy: Replace open coded stac/clac with __uaccess_{begin, end}
    
    commit b5c4ae4f35325d520b230bab6eb3310613b72ac1
    
    In preparation for converting some __uaccess_begin() instances to
    __uacess_begin_nospec(), make sure all 'from user' uaccess paths are
    using the _begin(), _end() helpers rather than open-coded stac() and
    clac().
    
    No functional changes.
    
    Suggested-by: Ingo Molnar <mingo@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: torvalds@linux-foundation.org
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727416438.33451.17309465232057176966.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31c5b332189ec6692ddd92269261db93c835a4d9
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:02:39 2018 -0800

    x86: Introduce __uaccess_begin_nospec() and uaccess_try_nospec
    
    commit b3bbfb3fb5d25776b8e3f361d2eedaabb0b496cd
    
    For __get_user() paths, do not allow the kernel to speculate on the value
    of a user controlled pointer. In addition to the 'stac' instruction for
    Supervisor Mode Access Protection (SMAP), a barrier_nospec() causes the
    access_ok() result to resolve in the pipeline before the CPU might take any
    speculative action on the pointer value. Given the cost of 'stac' the
    speculation barrier is placed after 'stac' to hopefully overlap the cost of
    disabling SMAP with the cost of flushing the instruction pipeline.
    
    Since __get_user is a major kernel interface that deals with user
    controlled pointers, the __uaccess_begin_nospec() mechanism will prevent
    speculative execution past an access_ok() permission check. While
    speculative execution past access_ok() is not enough to lead to a kernel
    memory leak, it is a necessary precondition.
    
    To be clear, __uaccess_begin_nospec() is addressing a class of potential
    problems near __get_user() usages.
    
    Note, that while the barrier_nospec() in __uaccess_begin_nospec() is used
    to protect __get_user(), pointer masking similar to array_index_nospec()
    will be used for get_user() since it incorporates a bounds check near the
    usage.
    
    uaccess_try_nospec provides the same mechanism for get_user_try.
    
    No functional changes.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Suggested-by: Andi Kleen <ak@linux.intel.com>
    Suggested-by: Ingo Molnar <mingo@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727415922.33451.5796614273104346583.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 437ac7b6868da05620764c143c0e4f7aa91e8fc7
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:02:33 2018 -0800

    x86: Introduce barrier_nospec
    
    commit b3d7ad85b80bbc404635dca80f5b129f6242bc7a
    
    Rename the open coded form of this instruction sequence from
    rdtsc_ordered() into a generic barrier primitive, barrier_nospec().
    
    One of the mitigations for Spectre variant1 vulnerabilities is to fence
    speculative execution after successfully validating a bounds check. I.e.
    force the result of a bounds check to resolve in the instruction pipeline
    to ensure speculative execution honors that result before potentially
    operating on out-of-bounds data.
    
    No functional changes.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Suggested-by: Andi Kleen <ak@linux.intel.com>
    Suggested-by: Ingo Molnar <mingo@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727415361.33451.9049453007262764675.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4820d42835b2741fc18b8f6135c90dc1128974bc
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:02:28 2018 -0800

    x86: Implement array_index_mask_nospec
    
    commit babdde2698d482b6c0de1eab4f697cf5856c5859
    
    array_index_nospec() uses a mask to sanitize user controllable array
    indexes, i.e. generate a 0 mask if 'index' >= 'size', and a ~0 mask
    otherwise. While the default array_index_mask_nospec() handles the
    carry-bit from the (index - size) result in software.
    
    The x86 array_index_mask_nospec() does the same, but the carry-bit is
    handled in the processor CF flag without conditional instructions in the
    control flow.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727414808.33451.1873237130672785331.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 478742cf80b732f6c3227c572184e18b6e8bcb05
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Jan 29 17:02:22 2018 -0800

    array_index_nospec: Sanitize speculative array de-references
    
    commit f3804203306e098dae9ca51540fcd5eb700d7f40
    
    array_index_nospec() is proposed as a generic mechanism to mitigate
    against Spectre-variant-1 attacks, i.e. an attack that bypasses boundary
    checks via speculative execution. The array_index_nospec()
    implementation is expected to be safe for current generation CPUs across
    multiple architectures (ARM, x86).
    
    Based on an original implementation by Linus Torvalds, tweaked to remove
    speculative flows by Alexei Starovoitov, and tweaked again by Linus to
    introduce an x86 assembly implementation for the mask generation.
    
    Co-developed-by: Linus Torvalds <torvalds@linux-foundation.org>
    Co-developed-by: Alexei Starovoitov <ast@kernel.org>
    Suggested-by: Cyril Novikov <cnovikov@lynx.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: kernel-hardening@lists.openwall.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: gregkh@linuxfoundation.org
    Cc: torvalds@linux-foundation.org
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727414229.33451.18411580953862676575.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e72041f70c3c7d149a8c444262173b7e70e3d4f8
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Jan 29 17:02:16 2018 -0800

    Documentation: Document array_index_nospec
    
    commit f84a56f73dddaeac1dba8045b007f742f61cd2da
    
    Document the rationale and usage of the new array_index_nospec() helper.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: linux-arch@vger.kernel.org
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: gregkh@linuxfoundation.org
    Cc: kernel-hardening@lists.openwall.com
    Cc: torvalds@linux-foundation.org
    Cc: alan@linux.intel.com
    Link: https://lkml.kernel.org/r/151727413645.33451.15878817161436755393.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb9f2d9ab83d9ab1d5286db9432266b353c201c1
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sun Jan 28 10:38:50 2018 -0800

    x86/asm: Move 'status' from thread_struct to thread_info
    
    commit 37a8f7c38339b22b69876d6f5a0ab851565284e3
    
    The TS_COMPAT bit is very hot and is accessed from code paths that mostly
    also touch thread_info::flags.  Move it into struct thread_info to improve
    cache locality.
    
    The only reason it was in thread_struct is that there was a brief period
    during which arch-specific fields were not allowed in struct thread_info.
    
    Linus suggested further changing:
    
      ti->status &= ~(TS_COMPAT|TS_I386_REGS_POKED);
    
    to:
    
      if (unlikely(ti->status & (TS_COMPAT|TS_I386_REGS_POKED)))
              ti->status &= ~(TS_COMPAT|TS_I386_REGS_POKED);
    
    on the theory that frequently dirtying the cacheline even in pure 64-bit
    code that never needs to modify status hurts performance.  That could be a
    reasonable followup patch, but I suspect it matters less on top of this
    patch.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Kernel Hardening <kernel-hardening@lists.openwall.com>
    Link: https://lkml.kernel.org/r/03148bcc1b217100e6e8ecf6a5468c45cf4304b6.1517164461.git.luto@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90522d30b223fe35957fc8c8ee3b7a63dc9844b1
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sun Jan 28 10:38:49 2018 -0800

    x86/entry/64: Push extra regs right away
    
    commit d1f7732009e0549eedf8ea1db948dc37be77fd46
    
    With the fast path removed there is no point in splitting the push of the
    normal and the extra register set. Just push the extra regs right away.
    
    [ tglx: Split out from 'x86/entry/64: Remove the SYSCALL64 fast path' ]
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Kernel Hardening <kernel-hardening@lists.openwall.com>
    Link: https://lkml.kernel.org/r/462dff8d4d64dfbfc851fbf3130641809d980ecd.1517164461.git.luto@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8459ebcbd6ecbbefd6455315985dc0da1a450b13
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sun Jan 28 10:38:49 2018 -0800

    x86/entry/64: Remove the SYSCALL64 fast path
    
    commit 21d375b6b34ff511a507de27bf316b3dde6938d9
    
    The SYCALLL64 fast path was a nice, if small, optimization back in the good
    old days when syscalls were actually reasonably fast.  Now there is PTI to
    slow everything down, and indirect branches are verboten, making everything
    messier.  The retpoline code in the fast path is particularly nasty.
    
    Just get rid of the fast path. The slow path is barely slower.
    
    [ tglx: Split out the 'push all extra regs' part ]
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Kernel Hardening <kernel-hardening@lists.openwall.com>
    Link: https://lkml.kernel.org/r/462dff8d4d64dfbfc851fbf3130641809d980ecd.1517164461.git.luto@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74ae346691dd34d49a5e733af40ca25a4dd42245
Author: Dou Liyang <douly.fnst@cn.fujitsu.com>
Date:   Tue Jan 30 14:13:50 2018 +0800

    x86/spectre: Check CONFIG_RETPOLINE in command line parser
    
    commit 9471eee9186a46893726e22ebb54cade3f9bc043
    
    The spectre_v2 option 'auto' does not check whether CONFIG_RETPOLINE is
    enabled. As a consequence it fails to emit the appropriate warning and sets
    feature flags which have no effect at all.
    
    Add the missing IS_ENABLED() check.
    
    Fixes: da285121560e ("x86/spectre: Add boot time option to select Spectre v2 mitigation")
    Signed-off-by: Dou Liyang <douly.fnst@cn.fujitsu.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: ak@linux.intel.com
    Cc: peterz@infradead.org
    Cc: Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Cc: dave.hansen@intel.com
    Cc: bp@alien8.de
    Cc: arjan@linux.intel.com
    Cc: dwmw@amazon.co.uk
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/f5892721-7528-3647-08fb-f8d10e65ad87@cn.fujitsu.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04e073072d1494ce9f60cc2db68fb79aee4283dd
Author: William Grant <william.grant@canonical.com>
Date:   Tue Jan 30 22:22:55 2018 +1100

    x86/mm: Fix overlap of i386 CPU_ENTRY_AREA with FIX_BTMAP
    
    commit 55f49fcb879fbeebf2a8c1ac7c9e6d90df55f798
    
    Since commit 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the
    fixmap"), i386's CPU_ENTRY_AREA has been mapped to the memory area just
    below FIXADDR_START. But already immediately before FIXADDR_START is the
    FIX_BTMAP area, which means that early_ioremap can collide with the entry
    area.
    
    It's especially bad on PAE where FIX_BTMAP_BEGIN gets aligned to exactly
    match CPU_ENTRY_AREA_BASE, so the first early_ioremap slot clobbers the
    IDT and causes interrupts during early boot to reset the system.
    
    The overlap wasn't a problem before the CPU entry area was introduced,
    as the fixmap has classically been preceded by the pkmap or vmalloc
    areas, neither of which is used until early_ioremap is out of the
    picture.
    
    Relocate CPU_ENTRY_AREA to below FIX_BTMAP, not just below the permanent
    fixmap area.
    
    Fixes: commit 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Signed-off-by: William Grant <william.grant@canonical.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/7041d181-a019-e8b9-4e4e-48215f841e2c@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23a4ca4e749a300a29abff1e304c55b55b6e59a3
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Jan 29 22:00:41 2018 -0600

    objtool: Warn on stripped section symbol
    
    commit 830c1e3d16b2c1733cd1ec9c8f4d47a398ae31bc
    
    With the following fix:
    
      2a0098d70640 ("objtool: Fix seg fault with gold linker")
    
    ... a seg fault was avoided, but the original seg fault condition in
    objtool wasn't fixed.  Replace the seg fault with an error message.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/dc4585a70d6b975c99fc51d1957ccdde7bd52f3a.1517284349.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e04e09855c5cbc4f18c2d14bec326b1ff6f11f6
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Jan 29 22:00:40 2018 -0600

    objtool: Add support for alternatives at the end of a section
    
    commit 17bc33914bcc98ba3c6b426fd1c49587a25c0597
    
    Now that the previous patch gave objtool the ability to read retpoline
    alternatives, it shows a new warning:
    
      arch/x86/entry/entry_64.o: warning: objtool: .entry_trampoline: don't know how to handle alternatives at end of section
    
    This is due to the JMP_NOSPEC in entry_SYSCALL_64_trampoline().
    
    Previously, objtool ignored this situation because it wasn't needed, and
    it would have required a bit of extra code.  Now that this case exists,
    add proper support for it.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/2a30a3c2158af47d891a76e69bb1ef347e0443fd.1517284349.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a358df03279e806f8f4217eacf813c5b6c3578ee
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Jan 29 22:00:39 2018 -0600

    objtool: Improve retpoline alternative handling
    
    commit a845c7cf4b4cb5e9e3b2823867892b27646f3a98
    
    Currently objtool requires all retpolines to be:
    
      a) patched in with alternatives; and
    
      b) annotated with ANNOTATE_NOSPEC_ALTERNATIVE.
    
    If you forget to do both of the above, objtool segfaults trying to
    dereference a NULL 'insn->call_dest' pointer.
    
    Avoid that situation and print a more helpful error message:
    
      quirks.o: warning: objtool: efi_delete_dummy_variable()+0x99: unsupported intra-function call
      quirks.o: warning: objtool: If this is a retpoline, please patch it in with alternatives and annotate it with ANNOTATE_NOSPEC_ALTERNATIVE.
    
    Future improvements can be made to make objtool smarter with respect to
    retpolines, but this is a good incremental improvement for now.
    
    Reported-and-tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/819e50b6d9c2e1a22e34c1a636c0b2057cc8c6e5.1517284349.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92f4b68ed14c7731cadd5bf7501a98da5302c093
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Jan 11 12:16:15 2018 +0100

    KVM: VMX: introduce alloc_loaded_vmcs
    
    commit f21f165ef922c2146cc5bdc620f542953c41714b
    
    Group together the calls to alloc_vmcs and loaded_vmcs_init.  Soon we'll also
    allocate an MSR bitmap there.
    
    Cc: stable@vger.kernel.org       # prereq for Spectre mitigation
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e9521197f08d8cec826d3a5ff04131e40a79120
Author: Jim Mattson <jmattson@google.com>
Date:   Mon Nov 27 17:22:25 2017 -0600

    KVM: nVMX: Eliminate vmcs02 pool
    
    commit de3a0021a60635de96aa92713c1a31a96747d72c
    
    The potential performance advantages of a vmcs02 pool have never been
    realized. To simplify the code, eliminate the pool. Instead, a single
    vmcs02 is allocated per VCPU when the VCPU enters VMX operation.
    
    Cc: stable@vger.kernel.org       # prereq for Spectre mitigation
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Mark Kanda <mark.kanda@oracle.com>
    Reviewed-by: Ameya More <ameya.more@oracle.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76f06358ec400cd5f7c8260fd290e7a7ee20fbcf
Author: Jesse Chan <jc@linux.com>
Date:   Sun Nov 19 23:45:49 2017 -0800

    ASoC: pcm512x: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit 0cab20cec0b663b7be8e2be5998d5a4113647f86 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in sound/soc/codecs/snd-soc-pcm512x-spi.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc484da3e18c13b15badcc861e816514ccd86f8c
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:58:03 2017 -0800

    pinctrl: pxa: pxa2xx: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit 0b9335cbd38e3bd2025bcc23b5758df4ac035f75 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/pinctrl/pxa/pinctrl-pxa2xx.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce094a80f019049a7bfb6860a91f3856bd53ec3b
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Nov 13 11:29:55 2017 +0100

    iio: adc/accel: Fix up module licenses
    
    commit 9a0ebbc93547d88f422905c34dcceebe928f3e9e upstream.
    
    The module license checker complains about these two so just fix
    it up. They are both GPLv2, both written by me or using code
    I extracted while refactoring from the GPLv2 drivers.
    
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8aa5cd906a583332f831b88a9d7177f0427b986
Author: Jesse Chan <jc@linux.com>
Date:   Wed Jan 10 17:41:10 2018 +0100

    auxdisplay: img-ascii-lcd: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit 09c479f7f1fbfaf848e5813996793966cd50be81 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/auxdisplay/img-ascii-lcd.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f8955f96bd520efc7def658ae61b67db20b1b46
Author: Borislav Petkov <bp@suse.de>
Date:   Sat Jan 27 16:24:34 2018 +0000

    x86/speculation: Simplify indirect_branch_prediction_barrier()
    
    commit 64e16720ea0879f8ab4547e3b9758936d483909b
    
    Make it all a function which does the WRMSR instead of having a hairy
    inline asm.
    
    [dwmw2: export it, fix CONFIG_RETPOLINE issues]
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: ak@linux.intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1517070274-12128-4-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52d78bce4965e685eea60763076f688272f963ea
Author: Borislav Petkov <bp@alien8.de>
Date:   Sat Jan 27 16:24:33 2018 +0000

    x86/retpoline: Simplify vmexit_fill_RSB()
    
    commit 1dde7415e99933bb7293d6b2843752cbdb43ec11
    
    Simplify it to call an asm-function instead of pasting 41 insn bytes at
    every call site. Also, add alignment to the macro as suggested here:
    
      https://support.google.com/faqs/answer/7625886
    
    [dwmw2: Clean up comments, let it clobber %ebx and just tell the compiler]
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: ak@linux.intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1517070274-12128-3-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f3e0daa9e125d3d4d7720136370303009edbdeb
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Jan 27 16:24:32 2018 +0000

    x86/cpufeatures: Clean up Spectre v2 related CPUID flags
    
    commit 2961298efe1ea1b6fc0d7ee8b76018fa6c0bcef2
    
    We want to expose the hardware features simply in /proc/cpuinfo as "ibrs",
    "ibpb" and "stibp". Since AMD has separate CPUID bits for those, use them
    as the user-visible bits.
    
    When the Intel SPEC_CTRL bit is set which indicates both IBRS and IBPB
    capability, set those (AMD) bits accordingly. Likewise if the Intel STIBP
    bit is set, set the AMD STIBP that's used for the generic hardware
    capability.
    
    Hide the rest from /proc/cpuinfo by putting "" in the comments. Including
    RETPOLINE and RETPOLINE_AMD which shouldn't be visible there. There are
    patches to make the sysfs vulnerabilities information non-readable by
    non-root, and the same should apply to all information about which
    mitigations are actually in use. Those *shouldn't* appear in /proc/cpuinfo.
    
    The feature bit for whether IBPB is actually used, which is needed for
    ALTERNATIVEs, is renamed to X86_FEATURE_USE_IBPB.
    
    Originally-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: ak@linux.intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1517070274-12128-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 249b1f7a7f09c9c5243f8c592ea7fb13871968bc
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Jan 27 15:45:14 2018 +0100

    x86/cpu/bugs: Make retpoline module warning conditional
    
    commit e383095c7fe8d218e00ec0f83e4b95ed4e627b02
    
    If sysfs is disabled and RETPOLINE not defined:
    
    arch/x86/kernel/cpu/bugs.c:97:13: warning: ‘spectre_v2_bad_module’ defined but not used
    [-Wunused-variable]
     static bool spectre_v2_bad_module;
    
    Hide it.
    
    Fixes: caf7501a1b4e ("module/retpoline: Warn about missing retpoline in module")
    Reported-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91ff9a75f360eb89e913fcc4b3a7fbb602c67cbb
Author: Borislav Petkov <bp@suse.de>
Date:   Fri Jan 26 13:11:39 2018 +0100

    x86/bugs: Drop one "mitigation" from dmesg
    
    commit 55fa19d3e51f33d9cd4056d25836d93abf9438db
    
    Make
    
    [    0.031118] Spectre V2 mitigation: Mitigation: Full generic retpoline
    
    into
    
    [    0.031118] Spectre V2: Mitigation: Full generic retpoline
    
    to reduce the mitigation mitigations strings.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: riel@redhat.com
    Cc: ak@linux.intel.com
    Cc: peterz@infradead.org
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: jikos@kernel.org
    Cc: luto@amacapital.net
    Cc: dave.hansen@intel.com
    Cc: torvalds@linux-foundation.org
    Cc: keescook@google.com
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: tim.c.chen@linux.intel.com
    Cc: pjt@google.com
    Link: https://lkml.kernel.org/r/20180126121139.31959-5-bp@alien8.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b955239cf4ea953eb5fca5409a5524daf20f642a
Author: Borislav Petkov <bp@suse.de>
Date:   Fri Jan 26 13:11:37 2018 +0100

    x86/nospec: Fix header guards names
    
    commit 7a32fc51ca938e67974cbb9db31e1a43f98345a9
    
    ... to adhere to the _ASM_X86_ naming scheme.
    
    No functional change.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: riel@redhat.com
    Cc: ak@linux.intel.com
    Cc: peterz@infradead.org
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: jikos@kernel.org
    Cc: luto@amacapital.net
    Cc: dave.hansen@intel.com
    Cc: torvalds@linux-foundation.org
    Cc: keescook@google.com
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Cc: pjt@google.com
    Link: https://lkml.kernel.org/r/20180126121139.31959-3-bp@alien8.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67eb59b8ecfb319438706cee2cb67a3045b54494
Author: Borislav Petkov <bp@suse.de>
Date:   Fri Jan 26 13:11:36 2018 +0100

    x86/alternative: Print unadorned pointers
    
    commit 0e6c16c652cadaffd25a6bb326ec10da5bcec6b4
    
    After commit ad67b74d2469 ("printk: hash addresses printed with %p")
    pointers are being hashed when printed. However, this makes the alternative
    debug output completely useless. Switch to %px in order to see the
    unadorned kernel pointers.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: riel@redhat.com
    Cc: ak@linux.intel.com
    Cc: peterz@infradead.org
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: jikos@kernel.org
    Cc: luto@amacapital.net
    Cc: dave.hansen@intel.com
    Cc: torvalds@linux-foundation.org
    Cc: keescook@google.com
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Cc: pjt@google.com
    Link: https://lkml.kernel.org/r/20180126121139.31959-2-bp@alien8.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbbbafce5380f2df32e142e5f08f17cf1b55b59c
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:15 2018 +0000

    x86/speculation: Add basic IBPB (Indirect Branch Prediction Barrier) support
    
    commit 20ffa1caecca4db8f79fe665acdeaa5af815a24d
    
    Expose indirect_branch_prediction_barrier() for use in subsequent patches.
    
    [ tglx: Add IBPB status to spectre_v2 sysfs file ]
    
    Co-developed-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-8-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fd222b19766ba28cf6e45b6ad461f1a303831bd
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:14 2018 +0000

    x86/cpufeature: Blacklist SPEC_CTRL/PRED_CMD on early Spectre v2 microcodes
    
    commit a5b2966364538a0e68c9fa29bc0a3a1651799035
    
    This doesn't refuse to load the affected microcodes; it just refuses to
    use the Spectre v2 mitigation features if they're detected, by clearing
    the appropriate feature bits.
    
    The AMD CPUID bits are handled here too, because hypervisors *may* have
    been exposing those bits even on Intel chips, for fine-grained control
    of what's available.
    
    It is non-trivial to use x86_match_cpu() for this table because that
    doesn't handle steppings. And the approach taken in commit bd9240a18
    almost made me lose my lunch.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-7-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9b47a41160c71b217582b9876129e3fbf587225
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:13 2018 +0000

    x86/pti: Do not enable PTI on CPUs which are not vulnerable to Meltdown
    
    commit fec9434a12f38d3aeafeb75711b71d8a1fdef621
    
    Also, for CPUs which don't speculate at all, don't report that they're
    vulnerable to the Spectre variants either.
    
    Leave the cpu_no_meltdown[] match table with just X86_VENDOR_AMD in it
    for now, even though that could be done with a simple comparison, on the
    assumption that we'll have more to add.
    
    Based on suggestions from Dave Hansen and Alan Cox.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Acked-by: Dave Hansen <dave.hansen@intel.com>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-6-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a65710dc584c1c424eb358a1f6e8c01d706e9f81
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:12 2018 +0000

    x86/msr: Add definitions for new speculation control MSRs
    
    commit 1e340c60d0dd3ae07b5bedc16a0469c14b9f3410
    
    Add MSR and bit definitions for SPEC_CTRL, PRED_CMD and ARCH_CAPABILITIES.
    
    See Intel's 336996-Speculative-Execution-Side-Channel-Mitigations.pdf
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-5-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15ee82be40b6895edeb324435621ef1869aac173
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:11 2018 +0000

    x86/cpufeatures: Add AMD feature bits for Speculation Control
    
    commit 5d10cbc91d9eb5537998b65608441b592eec65e7
    
    AMD exposes the PRED_CMD/SPEC_CTRL MSRs slightly differently to Intel.
    See http://lkml.kernel.org/r/2b3e25cc-286d-8bd0-aeaf-9ac4aae39de8@amd.com
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-4-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 343c91242d092852ab22411780f886317d7001aa
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:10 2018 +0000

    x86/cpufeatures: Add Intel feature bits for Speculation Control
    
    commit fc67dd70adb711a45d2ef34e12d1a8be75edde61
    
    Add three feature bits exposed by new microcode on Intel CPUs for
    speculation control.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-3-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76c4bd53969bcbaf19fe12218785411b390fd14b
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 25 16:14:09 2018 +0000

    x86/cpufeatures: Add CPUID_7_EDX CPUID leaf
    
    commit 95ca0ee8636059ea2800dfbac9ecac6212d6b38f
    
    This is a pure feature bits leaf. There are two AVX512 feature bits in it
    already which were handled as scattered bits, and three more from this leaf
    are going to be added for speculation control features.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: ak@linux.intel.com
    Cc: ashok.raj@intel.com
    Cc: dave.hansen@intel.com
    Cc: karahmed@amazon.de
    Cc: arjan@linux.intel.com
    Cc: torvalds@linux-foundation.org
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: pbonzini@redhat.com
    Cc: tim.c.chen@linux.intel.com
    Cc: gregkh@linux-foundation.org
    Link: https://lkml.kernel.org/r/1516896855-7642-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86b5b1eb18aa49eedff2c9a9087fc48d03099844
Author: Andi Kleen <ak@linux.intel.com>
Date:   Thu Jan 25 15:50:28 2018 -0800

    module/retpoline: Warn about missing retpoline in module
    
    commit caf7501a1b4ec964190f31f9c3f163de252273b8
    
    There's a risk that a kernel which has full retpoline mitigations becomes
    vulnerable when a module gets loaded that hasn't been compiled with the
    right compiler or the right option.
    
    To enable detection of that mismatch at module load time, add a module info
    string "retpoline" at build time when the module was compiled with
    retpoline support. This only covers compiled C source, but assembler source
    or prebuilt object files are not checked.
    
    If a retpoline enabled kernel detects a non retpoline protected module at
    load time, print a warning and report it in the sysfs vulnerability file.
    
    [ tglx: Massaged changelog ]
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: gregkh@linuxfoundation.org
    Cc: torvalds@linux-foundation.org
    Cc: jeyu@kernel.org
    Cc: arjan@linux.intel.com
    Link: https://lkml.kernel.org/r/20180125235028.31211-1-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c927726674c7dfe42e8de585b70ffbd9ec775fc6
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jan 25 10:58:14 2018 +0100

    KVM: VMX: Make indirect call speculation safe
    
    commit c940a3fb1e2e9b7d03228ab28f375fb5a47ff699
    
    Replace indirect call with CALL_NOSPEC.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: rga@amazon.de
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Jason Baron <jbaron@akamai.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Link: https://lkml.kernel.org/r/20180125095843.645776917@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76bee09efb89b0a71566bec5f36d9e65d9034aef
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jan 25 10:58:13 2018 +0100

    KVM: x86: Make indirect calls in emulator speculation safe
    
    commit 1a29b5b7f347a1a9230c1e0af5b37e3e571588ab
    
    Replace the indirect calls with CALL_NOSPEC.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Jun Nakajima <jun.nakajima@intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: rga@amazon.de
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Asit Mallick <asit.k.mallick@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Jason Baron <jbaron@akamai.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Arjan Van De Ven <arjan.van.de.ven@intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Link: https://lkml.kernel.org/r/20180125095843.595615683@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ce354deed2cc18b5b2175cf487011e375e89c75
Author: Waiman Long <longman@redhat.com>
Date:   Mon Jan 22 17:09:34 2018 -0500

    x86/retpoline: Remove the esp/rsp thunk
    
    commit 1df37383a8aeabb9b418698f0bcdffea01f4b1b2
    
    It doesn't make sense to have an indirect call thunk with esp/rsp as
    retpoline code won't work correctly with the stack pointer register.
    Removing it will help compiler writers to catch error in case such
    a thunk call is emitted incorrectly.
    
    Fixes: 76b043848fd2 ("x86/retpoline: Add initial retpoline support")
    Suggested-by: Jeff Law <law@redhat.com>
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1516658974-27852-1-git-send-email-longman@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6eded6c94530cb2f359f1fbffcb5f92ee0fa8b2
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Jan 16 22:17:18 2018 +1100

    powerpc/64s: Allow control of RFI flush via debugfs
    
    commit 236003e6b5443c45c18e613d2b0d776a9f87540e upstream.
    
    Expose the state of the RFI flush (enabled/disabled) via debugfs, and
    allow it to be enabled/disabled at runtime.
    
    eg: $ cat /sys/kernel/debug/powerpc/rfi_flush
        1
        $ echo 0 > /sys/kernel/debug/powerpc/rfi_flush
        $ cat /sys/kernel/debug/powerpc/rfi_flush
        0
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 517bdccc3af650316046801fdcd828d7b6aa42ba
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Jan 16 21:20:05 2018 +1100

    powerpc/64s: Wire up cpu_show_meltdown()
    
    commit fd6e440f20b1a4304553775fc55938848ff617c9 upstream.
    
    The recent commit 87590ce6e373 ("sysfs/cpu: Add vulnerability folder")
    added a generic folder and set of files for reporting information on
    CPU vulnerabilities. One of those was for meltdown:
    
      /sys/devices/system/cpu/vulnerabilities/meltdown
    
    This commit wires up that file for 64-bit Book3S powerpc.
    
    For now we default to "Vulnerable" unless the RFI flush is enabled.
    That may not actually be true on all hardware, further patches will
    refine the reporting based on the CPU/platform etc. But for now we
    default to being pessimists.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16d3d10d29f753d0247d94f5e889e93dd13f56bb
Author: Liu, Changcheng <changcheng.liu@intel.com>
Date:   Thu Dec 14 15:32:48 2017 -0800

    scripts/faddr2line: fix CROSS_COMPILE unset error
    
    commit 4cc90b4cc3d4955f79eae4f7f9d64e67e17b468e upstream.
    
    faddr2line hit var unbound error when CROSS_COMPILE isn't set since
    nounset option is set in bash script.
    
    Link: http://lkml.kernel.org/r/20171206013022.GA83929@sofia
    Fixes: 95a879825419 ("scripts/faddr2line: extend usage on generic arch")
    Signed-off-by: Liu Changcheng <changcheng.liu@intel.com>
    Reported-by: Richard Weinberger <richard.weinberger@gmail.com>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Cc: NeilBrown <neilb@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0146985addc322ca518d27fecfe98ae5acda7c1e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Feb 3 17:39:25 2018 +0100

    Linux 4.14.17

commit 04178b1709b6e98c929ae7ca2668c85334e886b2
Author: Matthew Garrett <mjg59@google.com>
Date:   Tue Jan 16 09:10:02 2018 +0000

    x86/efi: Clarify that reset attack mitigation needs appropriate userspace
    
    commit a5c03c31af2291f13689d11760c0b59fb70c9a5a upstream.
    
    Some distributions have turned on the reset attack mitigation feature,
    which is designed to force the platform to clear the contents of RAM if
    the machine is shut down uncleanly. However, in order for the platform
    to be able to determine whether the shutdown was clean or not, userspace
    has to be configured to clear the MemoryOverwriteRequest flag on
    shutdown - otherwise the firmware will end up clearing RAM on every
    reboot, which is unnecessarily time consuming. Add some additional
    clarity to the kconfig text to reduce the risk of systems being
    configured this way.
    
    Signed-off-by: Matthew Garrett <mjg59@google.com>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01ab9886ea7815d41a4ee435524c3fce127e7290
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Jan 17 16:18:27 2018 -0800

    Input: synaptics-rmi4 - do not delete interrupt memory too early
    
    commit a1ab69021a584d952e6548a44b93760547b1b6b5 upstream.
    
    We want to free memory reserved for interrupt mask handling only after we
    free functions, as function drivers might want to mask interrupts. This is
    needed for the followup patch to the F03 that would implement unmasking and
    masking interrupts from the serio pass-through port open() and close()
    methods.
    
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fced3c99e7264237aeba0b420e892cfa7bb36b9c
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Jan 17 15:46:18 2018 -0800

    Input: synaptics-rmi4 - unmask F03 interrupts when port is opened
    
    commit 6abe534f0776d2437c8302f58d8eb5abd483e926 upstream.
    
    Currently we register the pass-through serio port when we probe the F03 RMI
    function, and then, in sensor configure phase, we unmask interrupts.
    Unfortunately this is too late, as other drivers are free probe devices
    attached to the serio port as soon as it is probed. Because interrupts are
    masked, the IO times out, which may result in not being able to detect
    trackpoints on the pass-through port.
    
    To fix the issue we implement open() and close() methods for the
    pass-through serio port and unmask interrupts from there. We also move
    creation of the pass-through port form probe to configure stage, as RMI
    driver does not enable transport interrupt until all functions are probed
    (we should change this, but this is a separate topic).
    
    We also try to clear the pending data before unmasking interrupts, because
    some devices like to spam the system with multiple 0xaa 0x00 announcements,
    which may interfere with us trying to query ID of the device.
    
    Fixes: c5e8848fc98e ("Input: synaptics-rmi4 - add support for F03")
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aad757b657176409e803b487bb76becf729a4a58
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jan 11 11:12:55 2018 +0000

    test_firmware: fix missing unlock on error in config_num_requests_store()
    
    commit a5e1923356505e46476c2fb518559b7a4d9d25b1 upstream.
    
    Add the missing unlock before return from function
    config_num_requests_store() in the error handling case.
    
    Fixes: c92316bf8e94 ("test_firmware: add batched firmware tests")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0db5de4f4e1884c0ceb246bbcf450fbfd01881f7
Author: Narcisa Ana Maria Vasile <narcisaanamaria12@gmail.com>
Date:   Wed Dec 6 18:57:58 2017 +0200

    iio: chemical: ccs811: Fix output of IIO_CONCENTRATION channels
    
    commit 8f114acd4e1a9cfa05b70bcc4219bc88197b5c9b upstream.
    
    in_concentration_raw should report, according to sysfs-bus-iio documentation,
    a "Raw (unscaled no offset etc.) percentage reading of a substance."
    
    Modify scale to convert from ppm/ppb to percentage:
    1 ppm = 0.0001%
    1 ppb = 0.0000001%
    
    There is no offset needed to convert the ppm/ppb to percentage,
    so remove offset from IIO_CONCENTRATION (IIO_MOD_CO2) channel.
    
    Cc'd stable to reduce chance of userspace breakage in the long
    run as we fix this wrong bit of ABI usage.
    
    Signed-off-by: Narcisa Ana Maria Vasile <narcisaanamaria12@gmail.com>
    Reviewed-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2d4cdb7b8a4b2f8d4dfc2ae067229595ec0190c
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Fri Jan 5 15:34:54 2018 +0100

    iio: adc: stm32: fix scan of multiple channels with DMA
    
    commit 04e491ca9df60ffe8637d00d68e5ab8bc73b30d5 upstream.
    
    By default, watermark is set to '1'. Watermark is used to fine tune
    cyclic dma buffer period. In case watermark is left untouched (e.g. 1)
    and several channels are being scanned, buffer period is wrongly set
    (e.g. to 1 sample). As a consequence, data is never pushed to upper layer.
    Fix buffer period size, by taking scan channels number into account.
    
    Fixes: 2763ea0585c9 ("iio: adc: stm32: add optional dma support")
    
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfd96cbd607ab5d63a33cd63673221f4d572ea8c
Author: Stefan Agner <stefan@agner.ch>
Date:   Sun Jan 7 15:05:49 2018 +0100

    spi: imx: do not access registers while clocks disabled
    
    commit d593574aff0ab846136190b1729c151c736727ec upstream.
    
    Since clocks are disabled except during message transfer clocks
    are also disabled when spi_imx_remove gets called. Accessing
    registers leads to a freeeze at least on a i.MX 6ULL. Enable
    clocks before disabling accessing the MXC_CSPICTRL register.
    
    Fixes: 9e556dcc55774 ("spi: spi-imx: only enable the clocks when we start to transfer a message")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6e7d6baa61a57bf61d0d3647a5037ad1013f4db
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Thu Jan 4 15:58:34 2018 -0200

    serial: imx: Only wakeup via RTSDEN bit if the system has RTS/CTS
    
    commit 38b1f0fb42f772b8c9aac53593883a18ff5eb9d7 upstream.
    
    The wakeup mechanism via RTSDEN bit relies on the system using the RTS/CTS
    lines, so only allow such wakeup method when the system actually has
    RTS/CTS support.
    
    Fixes: bc85734b126f ("serial: imx: allow waking up on RTSD")
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Reviewed-by: Martin Kaiser <martin@kaiser.cx>
    Acked-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24293a3970e11889cc123d3f0cf9bb9bbb2cf34f
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jan 4 07:42:15 2018 +0000

    serial: 8250_uniphier: fix error return code in uniphier_uart_probe()
    
    commit 7defa77d2baca4d6eb85234f10f38ab618332e75 upstream.
    
    Fix to return a negative error code from the port register error
    handling case instead of 0, as done elsewhere in this function.
    
    Fixes: 39be40ce066d ("serial: 8250_uniphier: fix serial port index in private data")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Acked-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa33208b5a6f0014d9b7d966f61bd6c4f8cd9729
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Dec 27 14:21:05 2017 +0900

    serial: 8250_of: fix return code when probe function fails to get reset
    
    commit b9820a31691b771db37afe2054dd3d3a680c1eed upstream.
    
    The error pointer from devm_reset_control_get_optional_shared() is
    not propagated.
    
    One of the most common problem scenarios is it returns -EPROBE_DEFER
    when the reset controller has not probed yet.  In this case, the
    probe of the reset consumer should be deferred.
    
    Fixes: e2860e1f62f2 ("serial: 8250_of: Add reset support")
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e00c5c771877abdb70814ce555f020deab42bd46
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Tue Jan 2 12:01:41 2018 +0200

    mei: me: allow runtime pm for platform with D0i3
    
    commit cc365dcf0e56271bedf3de95f88922abe248e951 upstream.
    
    >From the pci power documentation:
    "The driver itself should not call pm_runtime_allow(), though. Instead,
    it should let user space or some platform-specific code do that (user space
    can do it via sysfs as stated above)..."
    
    However, the S0ix residency cannot be reached without MEI device getting
    into low power state. Hence, for mei devices that support D0i3, it's better
    to make runtime power management mandatory and not rely on the system
    integration such as udev rules.
    This policy cannot be applied globally as some older platforms
    were found to have broken power management.
    
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86eda3864a704a98d5444ae60654b898731bfea5
Author: Ganesh Mahendran <opensource.ganesh@gmail.com>
Date:   Wed Jan 10 10:49:05 2018 +0800

    android: binder: use VM_ALLOC to get vm area
    
    commit aac6830ec1cb681544212838911cdc57f2638216 upstream.
    
    VM_IOREMAP is used to access hardware through a mechanism called
    I/O mapped memory. Android binder is a IPC machanism which will
    not access I/O memory.
    
    And VM_IOREMAP has alignment requiement which may not needed in
    binder.
        __get_vm_area_node()
        {
        ...
            if (flags & VM_IOREMAP)
                align = 1ul << clamp_t(int, fls_long(size),
                   PAGE_SHIFT, IOREMAP_MAX_ORDER);
        ...
        }
    
    This patch will save some kernel vm area, especially for 32bit os.
    
    In 32bit OS, kernel vm area is only 240MB. We may got below
    error when launching a app:
    
    <3>[ 4482.440053] binder_alloc: binder_alloc_mmap_handler: 15728 8ce67000-8cf65000 get_vm_area failed -12
    <3>[ 4483.218817] binder_alloc: binder_alloc_mmap_handler: 15745 8ce67000-8cf65000 get_vm_area failed -12
    
    Signed-off-by: Ganesh Mahendran <opensource.ganesh@gmail.com>
    Acked-by: Martijn Coenen <maco@android.com>
    Acked-by: Todd Kjos <tkjos@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a3cee43e935b9d526ad07f20bf005ba7e74d05b
Author: Martijn Coenen <maco@android.com>
Date:   Fri Jan 5 11:27:07 2018 +0100

    ANDROID: binder: remove waitqueue when thread exits.
    
    commit f5cb779ba16334b45ba8946d6bfa6d9834d1527f upstream.
    
    binder_poll() passes the thread->wait waitqueue that
    can be slept on for work. When a thread that uses
    epoll explicitly exits using BINDER_THREAD_EXIT,
    the waitqueue is freed, but it is never removed
    from the corresponding epoll data structure. When
    the process subsequently exits, the epoll cleanup
    code tries to access the waitlist, which results in
    a use-after-free.
    
    Prevent this by using POLLFREE when the thread exits.
    
    Signed-off-by: Martijn Coenen <maco@android.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ba5966eddefdf04306bd1da36811c8b83a9664d
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Jan 12 17:50:02 2018 +1100

    usb/gadget: Fix "high bandwidth" check in usb_gadget_ep_match_desc()
    
    commit 11fb37998759c48e4e4c200c974593cbeab25d3e upstream.
    
    The current code tries to test for bits that are masked out by
    usb_endpoint_maxp(). Instead, use the proper accessor to access
    the new high bandwidth bits.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0096f93aa42d47f0277e28c3b26eaa5e1ebadd5
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Jan 11 13:10:16 2018 +0100

    usb: uas: unconditionally bring back host after reset
    
    commit cbeef22fd611c4f47c494b821b2b105b8af970bb upstream.
    
    Quoting Hans:
    
    If we return 1 from our post_reset handler, then our disconnect handler
    will be called immediately afterwards. Since pre_reset blocks all scsi
    requests our disconnect handler will then hang in the scsi_remove_host
    call.
    
    This is esp. bad because our disconnect handler hanging for ever also
    stops the USB subsys from enumerating any new USB devices, causes commands
    like lsusb to hang, etc.
    
    In practice this happens when unplugging some uas devices because the hub
    code may see the device as needing a warm-reset and calls usb_reset_device
    before seeing the disconnect. In this case uas_configure_endpoints fails
    with -ENODEV. We do not want to print an error for this, so this commit
    also silences the shost_printk for -ENODEV.
    
    ENDQUOTE
    
    However, if we do that we better drop any unconditional execution
    and report to the SCSI subsystem that we have undergone a reset
    but we are not operational now.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75816a439f6589b8f14d10c4b5f8c835ad76e036
Author: Hemant Kumar <hemantk@codeaurora.org>
Date:   Tue Jan 9 12:30:53 2018 +0530

    usb: f_fs: Prevent gadget unbind if it is already unbound
    
    commit ce5bf9a50daf2d9078b505aca1cea22e88ecb94a upstream.
    
    Upon usb composition switch there is possibility of ep0 file
    release happening after gadget driver bind. In case of composition
    switch from adb to a non-adb composition gadget will never gets
    bound again resulting into failure of usb device enumeration. Fix
    this issue by checking FFS_FL_BOUND flag and avoid extra
    gadget driver unbind if it is already done as part of composition
    switch.
    
    This fixes adb reconnection error reported on Android running
    v4.4 and above kernel versions. Verified on Hikey running vanilla
    v4.15-rc7 + few out of tree Mali patches.
    
    Reviewed-at: https://android-review.googlesource.com/#/c/582632/
    
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Greg KH <gregkh@linux-foundation.org>
    Cc: Michal Nazarewicz <mina86@mina86.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Dmitry Shmidt <dimitrysh@google.com>
    Cc: Badhri <badhri@google.com>
    Cc: Android Kernel Team <kernel-team@android.com>
    Signed-off-by: Hemant Kumar <hemantk@codeaurora.org>
    [AmitP: Cherry-picked it from android-4.14 and updated the commit log]
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c226267c2259112a9825d09a8c715568c3d8d10
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jan 18 14:46:41 2018 +1100

    USB: serial: simple: add Motorola Tetra driver
    
    commit 46fe895e22ab3845515ec06b01eaf1282b342e29 upstream.
    
    Add new Motorola Tetra (simple) driver for Motorola Solutions TETRA PEI
    devices.
    
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=0cad ProdID=9011 Rev=24.16
    S:  Manufacturer=Motorola Solutions Inc.
    S:  Product=Motorola Solutions TETRA PEI interface
    C:  #Ifs= 2 Cfg#= 1 Atr=80 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    
    Note that these devices do not support the CDC SET_CONTROL_LINE_STATE
    request (for any interface).
    
    Reported-by: Max Schulze <max.schulze@posteo.de>
    Tested-by: Max Schulze <max.schulze@posteo.de>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d00a0442a99e859ff4b04741abd157fa3bb6b30e
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Wed Jan 17 12:08:03 2018 -0700

    usbip: list: don't list devices attached to vhci_hcd
    
    commit ef824501f50846589f02173d73ce3fe6021a9d2a upstream.
    
    usbip host lists devices attached to vhci_hcd on the same server
    when user does attach over localhost or specifies the server as the
    remote.
    
    usbip attach -r localhost -b busid
    or
    usbip attach -r servername (or server IP)
    
    Fix it to check and not list devices that are attached to vhci_hcd.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa7cdae765cf383067cb08a854f0d5738c684a78
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Wed Jan 17 12:07:30 2018 -0700

    usbip: prevent bind loops on devices attached to vhci_hcd
    
    commit ef54cf0c600fb8f5737fb001a9e357edda1a1de8 upstream.
    
    usbip host binds to devices attached to vhci_hcd on the same server
    when user does attach over localhost or specifies the server as the
    remote.
    
    usbip attach -r localhost -b busid
    or
    usbip attach -r servername (or server IP)
    
    Unbind followed by bind works, however device is left in a bad state with
    accesses via the attached busid result in errors and system hangs during
    shutdown.
    
    Fix it to check and bail out if the device is already attached to vhci_hcd.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a24d3f8c566bfdb3bb2126055426c6ae952cdd5
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Wed Dec 13 20:34:36 2017 +0800

    USB: serial: io_edgeport: fix possible sleep-in-atomic
    
    commit c7b8f77872c73f69a16528a9eb87afefcccdc18b upstream.
    
    According to drivers/usb/serial/io_edgeport.c, the driver may sleep
    under a spinlock.
    The function call path is:
    edge_bulk_in_callback (acquire the spinlock)
       process_rcvd_data
         process_rcvd_status
           change_port_settings
             send_iosp_ext_cmd
               write_cmd_usb
                 usb_kill_urb --> may sleep
    
    To fix it, the redundant usb_kill_urb() is removed from the error path
    after usb_submit_urb() fails.
    
    This possible bug is found by my static analysis tool (DSAC) and checked
    by my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34b812ca30389a3759bf89d424c2d256185face3
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Jan 18 12:13:45 2018 +0100

    CDC-ACM: apply quirk for card reader
    
    commit df1cc78a52491f71d8170d513d0f6f114faa1bda upstream.
    
    This devices drops random bytes from messages if you talk to it
    too fast.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca7964983ca453dd9902c40171e93a69f21ee3ee
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Jan 14 16:09:00 2018 +0100

    USB: cdc-acm: Do not log urb submission errors on disconnect
    
    commit f0386c083c2ce85284dc0b419d7b89c8e567c09f upstream.
    
    When disconnected sometimes the cdc-acm driver logs errors like these:
    
    [20278.039417] cdc_acm 2-2:2.1: urb 9 failed submission with -19
    [20278.042924] cdc_acm 2-2:2.1: urb 10 failed submission with -19
    [20278.046449] cdc_acm 2-2:2.1: urb 11 failed submission with -19
    [20278.049920] cdc_acm 2-2:2.1: urb 12 failed submission with -19
    [20278.053442] cdc_acm 2-2:2.1: urb 13 failed submission with -19
    [20278.056915] cdc_acm 2-2:2.1: urb 14 failed submission with -19
    [20278.060418] cdc_acm 2-2:2.1: urb 15 failed submission with -19
    
    Silence these by not logging errors when the result is -ENODEV.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfc372036b41fec5162c38c18aa824698c33b825
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 25 09:48:55 2018 +0100

    USB: serial: pl2303: new device id for Chilitag
    
    commit d08dd3f3dd2ae351b793fc5b76abdbf0fd317b12 upstream.
    
    This adds a new device id for Chilitag devices to the pl2303 driver.
    
    Reported-by: "Chu.Mike [朱堅宜]" <Mike-Chu@prolific.com.tw>
    Acked-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94791411130312ba655c944c4623de1ff4c5a614
Author: OKAMOTO Yoshiaki <yokamoto@allied-telesis.co.jp>
Date:   Tue Jan 16 09:51:17 2018 +0000

    usb: option: Add support for FS040U modem
    
    commit 69341bd15018da0a662847e210f9b2380c71e623 upstream.
    
    FS040U modem is manufactured by omega, and sold by Fujisoft. This patch
    adds ID of the modem to use option1 driver. Interface 3 is used as
    qmi_wwan, so the interface is ignored.
    
    Signed-off-by: Yoshiaki Okamoto <yokamoto@allied-telesis.co.jp>
    Signed-off-by: Hiroyuki Yamamoto <hyamamo@allied-telesis.co.jp>
    Acked-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c538ad935465d7ba4bf0b5747fadcfdf05311c9
Author: Gaurav Kohli <gkohli@codeaurora.org>
Date:   Tue Jan 23 13:16:34 2018 +0530

    tty: fix data race between tty_init_dev and flush of buf
    
    commit b027e2298bd588d6fa36ed2eda97447fb3eac078 upstream.
    
    There can be a race, if receive_buf call comes before
    tty initialization completes in n_tty_open and tty->disc_data
    may be NULL.
    
    CPU0                                    CPU1
    ----                                    ----
     000|n_tty_receive_buf_common()         n_tty_open()
    -001|n_tty_receive_buf2()               tty_ldisc_open.isra.3()
    -002|tty_ldisc_receive_buf(inline)      tty_ldisc_setup()
    
    Using ldisc semaphore lock in tty_init_dev till disc_data
    initializes completely.
    
    Signed-off-by: Gaurav Kohli <gkohli@codeaurora.org>
    Reviewed-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb6de1af2e7235133a0e2563c09926ca28361095
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu Dec 14 14:02:46 2017 +0000

    staging: ccree: fix fips event irq handling build
    
    commit dc5591dc9c03e4cd22d3f0c3659196cc34668452 upstream.
    
    When moving from internal for kernel FIPS infrastructure the FIPS event irq
    handling code was left with the old ifdef by mistake. Fix it.
    
    Fixes: b7e607bf33a2 ("staging: ccree: move FIPS support to kernel infrastructure")
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fad7da7b638a1f5900bee31ed598b7c527d3a14c
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Sun Dec 3 13:58:19 2017 +0000

    staging: ccree: NULLify backup_info when unused
    
    commit 46df8824982e4fb0198776078d4a8c3e2d531464 upstream.
    
    backup_info field is only allocated for decrypt code path.
    The field was not nullified when not used causing a kfree
    in an error handling path to attempt to free random
    addresses as uncovered in stress testing.
    
    Fixes: 737aed947f9b ("staging: ccree: save ciphertext for CTS IV")
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a4b5ee973cfbcf32bff2fe03bed1786d5baa14e
Author: Dmitry Eremin <dmitry.eremin@intel.com>
Date:   Thu Jan 25 16:51:04 2018 +0300

    staging: lustre: separate a connection destroy from free struct kib_conn
    
    commit 9b046013e5837f8a58453d1e9f8e01d03adb7fe7 upstream.
    
    The logic of the original commit 4d99b2581eff ("staging: lustre: avoid
    intensive reconnecting for ko2iblnd") was assumed conditional free of
    struct kib_conn if the second argument free_conn in function
    kiblnd_destroy_conn(struct kib_conn *conn, bool free_conn) is true.
    But this hunk of code was dropped from original commit. As result the logic
    works wrong and current code use struct kib_conn after free.
    
    > drivers/staging/lustre/lnet/klnds/o2iblnd/o2iblnd_cb.c
    > 3317  kiblnd_destroy_conn(conn, !peer);
    >                           ^^^^ Freed always (but should be conditionally)
    > 3318
    > 3319  spin_lock_irqsave(lock, flags);
    > 3320  if (!peer)
    > 3321      continue;
    > 3322
    > 3323  conn->ibc_peer = peer;
    >       ^^^^^^^^^^^^^^ Use after free
    > 3324  if (peer->ibp_reconnected < KIB_RECONN_HIGH_RACE)
    > 3325      list_add_tail(&conn->ibc_list,
    >                          ^^^^^^^^^^^^^^ Use after free
    > 3326                    &kiblnd_data.kib_reconn_list);
    > 3327  else
    > 3328      list_add_tail(&conn->ibc_list,
    >                          ^^^^^^^^^^^^^^ Use after free
    > 3329                    &kiblnd_data.kib_reconn_wait);
    
    To avoid confusion this fix moved the freeing a struct kib_conn outside of
    the function kiblnd_destroy_conn() and free as it was intended in original
    commit.
    
    Fixes: 4d99b2581eff ("staging: lustre: avoid intensive reconnecting for ko2iblnd")
    Signed-off-by: Dmitry Eremin <Dmitry.Eremin@intel.com>
    Reviewed-by: Andreas Dilger <andreas.dilger@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c065b9947b05d63936dad5f3d5aa6e83d1e0346f
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Jan 11 16:55:24 2018 +0100

    KVM: x86: emulate #UD while in guest mode
    
    
    [ Upstream commit bd89525a823ce6edddcedbe9aed79faa1b9cf544 ]
    
    This reverts commits ae1f57670703656cc9f293722c3b8b6782f8ab3f
    and ac9b305caa0df6f5b75d294e4b86c1027648991e.
    
    If the hardware doesn't support MOVBE, but L0 sets CPUID.01H:ECX.MOVBE
    in L1's emulated CPUID information, then L1 is likely to pass that
    CPUID bit through to L2. L2 will expect MOVBE to work, but if L1
    doesn't intercept #UD, then any MOVBE instruction executed in L2 will
    raise #UD, and the exception will be delivered in L2.
    
    Commit ac9b305caa0df6f5b75d294e4b86c1027648991e is a better and more
    complete version of ae1f57670703 ("KVM: nVMX: Do not emulate #UD while
    in guest mode"); however, neither considers the above case.
    
    Suggested-by: Jim Mattson <jmattson@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9273b08d4fb808baeebcd2637b5257d3f0db18c
Author: Stefan Schake <stschake@gmail.com>
Date:   Fri Dec 29 17:05:43 2017 +0100

    drm/vc4: Move IRQ enable to PM path
    
    
    [ Upstream commit ce9caf2f79a5aa170a4b6456a03db639eed9c988 ]
    
    We were calling enable_irq on bind, where it was already enabled previously
    by the IRQ helper. Additionally, dev->irq is not set correctly until after
    postinstall and so was always zero here, triggering a warning in 4.15.
    Fix both by moving the enable to the power management resume path, where we
    know there was a previous disable invocation during suspend.
    
    Fixes: 253696ccd613 ("drm/vc4: Account for interrupts in flight")
    Signed-off-by: Stefan Schake <stschake@gmail.com>
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/1514563543-32511-1-git-send-email-stschake@gmail.com
    Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c789cfe0ae72005f368aef5c361851fabec0e5f5
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sat Nov 25 13:32:38 2017 -0600

    staging: rtl8188eu: Fix incorrect response to SIOCGIWESSID
    
    
    [ Upstream commit b77992d2df9e47144354d1b25328b180afa33442 ]
    
    When not associated with an AP, wifi device drivers should respond to the
    SIOCGIWESSID ioctl with a zero-length string for the SSID, which is the
    behavior expected by dhcpcd.
    
    Currently, this driver returns an error code (-1) from the ioctl call,
    which causes dhcpcd to assume that the device is not a wireless interface
    and therefore it fails to work correctly with it thereafter.
    
    This problem was reported and tested at
    https://github.com/lwfinger/rtl8188eu/issues/234.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0479bc01767ff58170a2f1ae27e6b98f9dfa01b9
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Nov 14 16:18:28 2017 +0000

    usb: gadget: don't dereference g until after it has been null checked
    
    
    [ Upstream commit b2fc059fa549fe6881d4c1f8d698b0f50bcd16ec ]
    
    Avoid dereferencing pointer g until after g has been sanity null checked;
    move the assignment of cdev much later when it is required into a more
    local scope.
    
    Detected by CoverityScan, CID#1222135 ("Dereference before null check")
    
    Fixes: b785ea7ce662 ("usb: gadget: composite: fix ep->maxburst initialization")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aafb1a7eb0f73cf8bb59ed7cc6d29e19d4de49bc
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Nov 24 09:42:21 2017 +0100

    x86/xen: Support early interrupts in xen pv guests
    
    
    [ Upstream commit 42b3a4cb5609de757f5445fcad18945ba9239a07 ]
    
    Add early interrupt handlers activated by idt_setup_early_handler() to
    the handlers supported by Xen pv guests. This will allow for early
    WARN() calls not crashing the guest.
    
    Suggested-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: xen-devel@lists.xenproject.org
    Cc: boris.ostrovsky@oracle.com
    Link: https://lkml.kernel.org/r/20171124084221.30172-1-jgross@suse.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99a8cad9c1b2236439d7d44c86cdbcdd5831154b
Author: Icenowy Zheng <icenowy@aosc.io>
Date:   Sun Apr 16 02:51:16 2017 -0400

    media: usbtv: add a new usbid
    
    
    [ Upstream commit 04226916d2360f56d57ad00bc48d2d1854d1e0b0 ]
    
    A new usbid of UTV007 is found in a newly bought device.
    
    The usbid is 1f71:3301.
    
    The ID on the chip is:
    UTV007
    A89029.1
    1520L18K1
    
    Both video and audio is tested with the modified usbtv driver.
    
    Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
    Acked-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 504b902b36a9cd487cbcd2f209a9a5c6213cb320
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Nov 7 11:10:29 2017 -0800

    ARM: dts: NSP: Fix PPI interrupt types
    
    
    [ Upstream commit 5f1aa51c7a1eef1c5a60b8334e32c89904964245 ]
    
    Booting a kernel results in the kernel warning us about the following
    PPI interrupts configuration:
    [    0.105127] smp: Bringing up secondary CPUs ...
    [    0.110545] GIC: PPI11 is secure or misconfigured
    [    0.110551] GIC: PPI13 is secure or misconfigured
    
    Fix this by using the appropriate edge configuration for PPI11 and
    PPI13, this is similar to what was fixed for Northstar (BCM5301X) in
    commit 0e34079cd1f6 ("ARM: dts: BCM5301X: Correct GIC_PPI interrupt
    flags").
    
    Fixes: 7b2e987de207 ("ARM: NSP: add minimal Northstar Plus device tree")
    Fixes: 1a9d53cabaf4 ("ARM: dts: NSP: Add TWD Support to DT")
    Acked-by: Jon Mason <jon.mason@broadcom.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12f165f4418aaa904e7412ee178ee43437f65bc8
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Nov 7 10:58:34 2017 -0800

    ARM: dts: NSP: Disable AHCI controller for HR NSP boards
    
    
    [ Upstream commit 77416ab35f5712382e5a792bfa1736ceb70d5bbb ]
    
    The AHCI controller is currently enabled for all of these boards:
    bcm958623hr and bcm958625hr would result in a hard hang on boot that we
    cannot get rid of. Since this does not appear to have an easy and simple
    fix, just disable the AHCI controller for now until this gets resolved.
    
    Fixes: 70725d6e97ac ("ARM: dts: NSP: Enable SATA on bcm958625hr")
    Fixes: d454c3762437 ("ARM: dts: NSP: Add new DT file for bcm958623hr")
    Acked-by: Jon Mason <jon.mason@broadcom.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c67fa169456e2179be40b3e398030019879dacd2
Author: Sara Sharon <sara.sharon@intel.com>
Date:   Mon Nov 20 13:25:05 2017 +0200

    iwlwifi: fix access to prph when transport is stopped
    
    
    [ Upstream commit 0232d2cd7aa8e1b810fe84fb4059a0bd1eabe2ba ]
    
    When getting HW rfkill we get stop_device being called from
    two paths.
    One path is the IRQ calling stop device, and updating op
    mode and stack.
    As a result, cfg80211 is running rfkill sync work that shuts
    down all devices (second path).
    In the second path, we eventually get to iwl_mvm_stop_device
    which calls iwl_fw_dump_conf_clear->iwl_fw_dbg_stop_recording,
    that access periphery registers.
    The device may be stopped at this point from the first path,
    which will result with a failure to access those registers.
    Simply checking for the trans status is insufficient, since
    the race will still exist, only minimized.
    Instead, move the stop from iwl_fw_dump_conf_clear (which is
    getting called only from stop path) to the transport stop
    device function, where the access is always safe.
    This has the added value, of actually stopping dbgc before
    stopping device even when the stop is initiated from the
    transport.
    
    Fixes: 1efc3843a4ee ("iwlwifi: stop dbgc recording before stopping DMA")
    Signed-off-by: Sara Sharon <sara.sharon@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99f3d5f37e58692f1147e6d4b0ca2e42fe1f6453
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Wed Nov 15 14:12:30 2017 +0200

    iwlwifi: mvm: fix the TX queue hang timeout for MONITOR vif type
    
    
    [ Upstream commit d1b275ffec459c5ae12b5c7086c84175696e5a9f ]
    
    The MONITOR type is missing in the interface type switch.
    Add it.
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c27a40c9e182ed318e886c4edc35fbbc182d384
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Mon Nov 20 08:12:29 2017 -0600

    scsi: ufs: ufshcd: fix potential NULL pointer dereference in ufshcd_config_vreg
    
    
    [ Upstream commit 727535903bea924c4f73abb202c4b3e85fff0ca4 ]
    
    _vreg_ is being dereferenced before it is null checked, hence there is a
    potential null pointer dereference.
    
    Fix this by moving the pointer dereference after _vreg_ has been null
    checked.
    
    This issue was detected with the help of Coccinelle.
    
    Fixes: aa4976130934 ("ufs: Add regulator enable support")
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39527e909ea52bfec616536a1b02011f58a08c30
Author: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
Date:   Fri Nov 17 19:14:55 2017 -0200

    scsi: aacraid: Prevent crash in case of free interrupt during scsi EH path
    
    
    [ Upstream commit e4717292ddebcfe231651b5aff9fa19ca158d178 ]
    
    As part of the scsi EH path, aacraid performs a reinitialization of the
    adapter, which encompass freeing resources and IRQs, NULLifying lots of
    pointers, and then initialize it all over again.  We've identified a
    problem during the free IRQ portion of this path if CONFIG_DEBUG_SHIRQ
    is enabled on kernel config file.
    
    Happens that, in case this flag was set, right after free_irq()
    effectively clears the interrupt, it checks if it was requested as
    IRQF_SHARED. In positive case, it performs another call to the IRQ
    handler on driver. Problem is: since aacraid currently free some
    resources *before* freeing the IRQ, once free_irq() path calls the
    handler again (due to CONFIG_DEBUG_SHIRQ), aacraid crashes due to NULL
    pointer dereference with the following trace:
    
      aac_src_intr_message+0xf8/0x740 [aacraid]
      __free_irq+0x33c/0x4a0
      free_irq+0x78/0xb0
      aac_free_irq+0x13c/0x150 [aacraid]
      aac_reset_adapter+0x2e8/0x970 [aacraid]
      aac_eh_reset+0x3a8/0x5d0 [aacraid]
      scsi_try_host_reset+0x74/0x180
      scsi_eh_ready_devs+0xc70/0x1510
      scsi_error_handler+0x624/0xa20
    
    This patch prevents the crash by changing the order of the
    deinitialization in this path of aacraid: first we clear the IRQ, then
    we free other resources. No functional change intended.
    
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Reviewed-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 612959943e409aa9a1dd5cfaa7ade8e270ead7d2
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Wed Nov 15 08:47:02 2017 +0300

    perf/core: Fix memory leak triggered by perf --namespace
    
    
    [ Upstream commit 0e18dd12064e07519f7cbff4149ca7fff620cbed ]
    
    perf with --namespace key leaks various memory objects including namespaces
    
      4.14.0+
      pid_namespace          1     12   2568   12    8
      user_namespace         1     39    824   39    8
      net_namespace          1      5   6272    5    8
    
    This happen because perf_fill_ns_link_info() struct patch ns_path:
    during initialization ns_path incremented counters on related mnt and dentry,
    but without lost path_put nobody decremented them back.
    Leaked dentry is name of related namespace,
    and its leak does not allow to free unused namespace.
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Hari Bathini <hbathini@linux.vnet.ibm.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: commit e422267322cd ("perf: Add PERF_RECORD_NAMESPACES to include namespaces related info")
    Link: http://lkml.kernel.org/r/c510711b-3904-e5e1-d296-61273d21118d@virtuozzo.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 773a1c5baad243ad30b41700111f0c499f6a259d
Author: Carlos Maiolino <cmaiolino@redhat.com>
Date:   Tue Nov 28 08:54:10 2017 -0800

    xfs: Properly retry failed dquot items in case of error during buffer writeback
    
    
    [ Upstream commit 373b0589dc8d58bc09c9a28d03611ae4fb216057 ]
    
    Once the inode item writeback errors is already fixed, it's time to fix the same
    problem in dquot code.
    
    Although there were no reports of users hitting this bug in dquot code (at least
    none I've seen), the bug is there and I was already planning to fix it when the
    correct approach to fix the inodes part was decided.
    
    This patch aims to fix the same problem in dquot code, regarding failed buffers
    being unable to be resubmitted once they are flush locked.
    
    Tested with the recently test-case sent to fstests list by Hou Tao.
    
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Carlos Maiolino <cmaiolino@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e506f41705cf9b2ea64e9d698bc272dd9c25b2d
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Mon Nov 27 09:50:17 2017 -0800

    xfs: ubsan fixes
    
    
    [ Upstream commit 22a6c83777ac7c17d6c63891beeeac24cf5da450 ]
    
    Fix some complaints from the UBSAN about signed integer addition overflows.
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a96f3d05668cdee90779b07227054d4ec41b32d
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Oct 5 14:06:41 2017 +0200

    drm/omap: displays: panel-dpi: add backlight dependency
    
    
    [ Upstream commit 499ec0ed5eb2f6a7fcaab2dd66ffc5993484bda9 ]
    
    The new backlight code causes a link failure when backlight
    support itself is disabled:
    
    drivers/gpu/drm/omapdrm/displays/panel-dpi.o: In function `panel_dpi_probe_of':
    panel-dpi.c:(.text+0x35c): undefined reference to `of_find_backlight_by_node'
    
    This adds a Kconfig dependency like we have for the other OMAP
    display targets.
    
    Fixes: 39135a305a0f ("drm/omap: displays: panel-dpi: Support for handling backlight devices")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 345dc6d499d8509ec9cc4b9b5b84a070ac87e0d5
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Sep 24 08:01:03 2017 +0200

    drm/omap: Fix error handling path in 'omap_dmm_probe()'
    
    
    [ Upstream commit 8677b1ac2db021ab30bb1fa34f1e56ebe0051ec3 ]
    
    If we don't find a matching device node, we must free the memory allocated
    in 'omap_dmm' a few lines above.
    
    Fixes: 7cb0d6c17b96 ("drm/omap: fix TILER on OMAP5")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 464711a74ce3238c7ca07f903bed3189efd23831
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:24 2017 +0300

    drm/bridge: tc358767: fix 1-lane behavior
    
    
    [ Upstream commit 4dbd6c03fbf88299c573d676838896c6e06aade2 ]
    
    Use drm_dp_channel_eq_ok helper
    
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-7-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 340c9a4ba3031f87fcbfa0d89332d4a5aa468aaf
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:23 2017 +0300

    drm/bridge: tc358767: fix AUXDATAn registers access
    
    
    [ Upstream commit 9217c1abbc145a77d65c476cf2004a3df02104c7 ]
    
    First four bytes should go to DP0_AUXWDATA0. Due to bug if
    len > 4 first four bytes was writen to DP0_AUXWDATA1 and all
    data get shifted by 4 bytes. Fix it.
    
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-6-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b536eb986e45e2347bd4cfaeff0b48d69fde52d1
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:22 2017 +0300

    drm/bridge: tc358767: fix timing calculations
    
    
    [ Upstream commit 66d1c3b94d5d59e4325e61a78d520f92c043d645 ]
    
    Fields in HTIM01 and HTIM02 regs should be even.
    Recomended thresh_dly value is max_tu_symbol.
    Remove set of VPCTRL0.VSDELAY as it is related to DSI input
    interface. Currently driver supports only DPI.
    
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-5-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0106381870a49d1ce47501410b4a7433e505aa71
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:21 2017 +0300

    drm/bridge: tc358767: fix DP0_MISC register set
    
    
    [ Upstream commit f3b8adbe1911f66fd3cab1aaa74f0f66b7ceda25 ]
    
    Remove shift from TU_SIZE_RECOMMENDED define as it used to
    calculate max_tu_symbols.
    
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-4-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 859bacc13cbb34a86f6140430f9fdb767c33d7d4
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:20 2017 +0300

    drm/bridge: tc358767: filter out too high modes
    
    
    [ Upstream commit 99fc8e963a4c0203dba26a77cf737db6081bca14 ]
    
    Pixel clock limitation for DPI is 154 MHz. Do not accept modes
    with higher pixel clock rate.
    
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-3-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d734363f2c5e782384765c5a96caa4473645b8d
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:19 2017 +0300

    drm/bridge: tc358767: do no fail on hi-res displays
    
    
    [ Upstream commit cffd2b16c01c3431a7a7dd62e722af33490fc436 ]
    
    Do not fail data rates higher than 2.7 and more than 2 lanes.
    Try to fall back to 2.7Gbps and 2 lanes.
    
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-2-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 345f165a31b8a287b15e91e5aad03d588f1bd141
Author: Eric Anholt <eric@anholt.net>
Date:   Tue Nov 14 11:16:47 2017 -0800

    drm/bridge: Fix lvds-encoder since the panel_bridge rework.
    
    
    [ Upstream commit dbb58bfd9ae6c885b2ca001a9a5ab8b881fb4ba9 ]
    
    The panel_bridge bridge attaches to the panel's OF node, not the
    lvds-encoder's node.  Put in a little no-op bridge of our own so that
    our consumers can still find a bridge where they expect.
    
    This also fixes an unintended unregistration and leak of the
    panel-bridge on module remove.
    
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Fixes: 13dfc0540a57 ("drm/bridge: Refactor out the panel wrapper from the lvds-encoder bri
    dge.")
    Tested-by: Lothar Waßmann <LW@KARO-electronics.de>
    Signed-off-by: Archit Taneja <architt@codeaurora.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171114191647.22207-1-eric@anholt.net
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2ba0bd3469546e5bf6f32a0bb67d6ccf21d4584
Author: Yisheng Xie <xieyisheng1@huawei.com>
Date:   Wed Nov 29 16:11:08 2017 -0800

    kmemleak: add scheduling point to kmemleak_scan()
    
    
    [ Upstream commit bde5f6bc68db51128f875a756e9082a6c6ff7b4c ]
    
    kmemleak_scan() will scan struct page for each node and it can be really
    large and resulting in a soft lockup.  We have seen a soft lockup when
    do scan while compile kernel:
    
      watchdog: BUG: soft lockup - CPU#53 stuck for 22s! [bash:10287]
     [...]
      Call Trace:
       kmemleak_scan+0x21a/0x4c0
       kmemleak_write+0x312/0x350
       full_proxy_write+0x5a/0xa0
       __vfs_write+0x33/0x150
       vfs_write+0xad/0x1a0
       SyS_write+0x52/0xc0
       do_syscall_64+0x61/0x1a0
       entry_SYSCALL64_slow_path+0x25/0x25
    
    Fix this by adding cond_resched every MAX_SCAN_SIZE.
    
    Link: http://lkml.kernel.org/r/1511439788-20099-1-git-send-email-xieyisheng1@huawei.com
    Signed-off-by: Yisheng Xie <xieyisheng1@huawei.com>
    Suggested-by: Catalin Marinas <catalin.marinas@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf6a04c3ffe1486ae7e0ad8fb9f10af9bad6d007
Author: Liu, Changcheng <changcheng.liu@intel.com>
Date:   Wed Nov 29 16:10:25 2017 -0800

    scripts/faddr2line: extend usage on generic arch
    
    
    [ Upstream commit 95a87982541932503d3f59aba4c30b0bde0a6294 ]
    
    When cross-compiling, fadd2line should use the binary tool used for the
    target system, rather than that of the host.
    
    Link: http://lkml.kernel.org/r/20171121092911.GA150711@sofia
    Signed-off-by: Liu Changcheng <changcheng.liu@intel.com>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: NeilBrown <neilb@suse.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca4b61373ee86e15b4469285fdd23f9c201fc13d
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Nov 24 12:00:24 2017 -0500

    SUNRPC: Allow connect to return EHOSTUNREACH
    
    
    [ Upstream commit 4ba161a793d5f43757c35feff258d9f20a082940 ]
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f8b2c79c4a39a7a0a1f5eb079586fce92794dc2
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Wed Nov 29 22:34:50 2017 +0900

    quota: Check for register_shrinker() failure.
    
    
    [ Upstream commit 88bc0ede8d35edc969350852894dc864a2dc1859 ]
    
    register_shrinker() might return -ENOMEM error since Linux 3.12.
    Call panic() as with other failure checks in this function if
    register_shrinker() failed.
    
    Fixes: 1d3d4437eae1 ("vmscan: per-node deferred work")
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jan Kara <jack@suse.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 600c904b919a6c3e36cc93754c8941a7b0a1ec6b
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Nov 29 11:01:09 2017 +0100

    net: ethernet: xilinx: Mark XILINX_LL_TEMAC broken on 64-bit
    
    
    [ Upstream commit 15bfe05c8d6386f1a90e9340d15336e85e32aad6 ]
    
    On 64-bit (e.g. powerpc64/allmodconfig):
    
        drivers/net/ethernet/xilinx/ll_temac_main.c: In function 'temac_start_xmit_done':
        drivers/net/ethernet/xilinx/ll_temac_main.c:633:22: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
            dev_kfree_skb_irq((struct sk_buff *)cur_p->app4);
                              ^
    
    cdmac_bd.app4 is u32, so it is too small to hold a kernel pointer.
    
    Note that several other fields in struct cdmac_bd are also too small to
    hold physical addresses on 64-bit platforms.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 575c548137f8b397b5e32c66a972c5f0ebcc1cd2
Author: Christian König <christian.koenig@amd.com>
Date:   Fri Nov 24 11:39:30 2017 +0100

    drm/amdgpu: don't try to move pinned BOs
    
    
    [ Upstream commit 6edc6910ba4cd6eab309263539c8f09b8ad772bf ]
    
    Never try to move pinned BOs during CS.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f730601cdead1ed14be5089e14d8ffcb019373e5
Author: Michal Hocko <mhocko@suse.com>
Date:   Thu Nov 23 17:13:40 2017 +0100

    xfs: fortify xfs_alloc_buftarg error handling
    
    
    [ Upstream commit d210a9874b8f6166579408131cb74495caff1958 ]
    
    percpu_counter_init failure path doesn't clean up &btp->bt_lru list.
    Call list_lru_destroy in that error path. Similarly register_shrinker
    error path is not handled.
    
    While it is unlikely to trigger these error path, it is not impossible
    especially the later might fail with large NUMAs.  Let's handle the
    failure to make the code more robust.
    
    Noticed-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95a7d23415b79c94b4809200f29f458520e9fc56
Author: Minwoo Im <minwoo.im.dev@gmail.com>
Date:   Sat Nov 25 03:03:00 2017 +0900

    nvme-pci: fix NULL pointer dereference in nvme_free_host_mem()
    
    
    [ Upstream commit 7e5dd57ef3081ff6c03908d786ed5087f6fbb7ae ]
    
    Following condition which will cause NULL pointer dereference will
    occur in nvme_free_host_mem() when it tries to remove pci device via
    nvme_remove() especially after a failure of host memory allocation for HMB.
    
        "(host_mem_descs == NULL) && (nr_host_mem_descs != 0)"
    
    It's because __nr_host_mem_descs__ is not cleared to 0 unlike
    __host_mem_descs__ is so.
    
    Signed-off-by: Minwoo Im <minwoo.im.dev@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f268e508aeb20f09de9a258ac5d2e41983567775
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Nov 17 01:54:00 2017 +0000

    Btrfs: incremental send, fix wrong unlink path after renaming file
    
    
    [ Upstream commit ea37d5998b50a72b9045ba60a132eeb20e1c4230 ]
    
    Under some circumstances, an incremental send operation can issue wrong
    paths for unlink commands related to files that have multiple hard links
    and some (or all) of those links were renamed between the parent and send
    snapshots. Consider the following example:
    
    Parent snapshot
    
     .                                                      (ino 256)
     |---- a/                                               (ino 257)
     |     |---- b/                                         (ino 259)
     |     |     |---- c/                                   (ino 260)
     |     |     |---- f2                                   (ino 261)
     |     |
     |     |---- f2l1                                       (ino 261)
     |
     |---- d/                                               (ino 262)
           |---- f1l1_2                                     (ino 258)
           |---- f2l2                                       (ino 261)
           |---- f1_2                                       (ino 258)
    
    Send snapshot
    
     .                                                      (ino 256)
     |---- a/                                               (ino 257)
     |     |---- f2l1/                                      (ino 263)
     |             |---- b2/                                (ino 259)
     |                   |---- c/                           (ino 260)
     |                   |     |---- d3                     (ino 262)
     |                   |           |---- f1l1_2           (ino 258)
     |                   |           |---- f2l2_2           (ino 261)
     |                   |           |---- f1_2             (ino 258)
     |                   |
     |                   |---- f2                           (ino 261)
     |                   |---- f1l2                         (ino 258)
     |
     |---- d                                                (ino 261)
    
    When computing the incremental send stream the following steps happen:
    
    1) When processing inode 261, a rename operation is issued that renames
       inode 262, which currently as a path of "d", to an orphan name of
       "o262-7-0". This is done because in the send snapshot, inode 261 has
       of its hard links with a path of "d" as well.
    
    2) Two link operations are issued that create the new hard links for
       inode 261, whose names are "d" and "f2l2_2", at paths "/" and
       "o262-7-0/" respectively.
    
    3) Still while processing inode 261, unlink operations are issued to
       remove the old hard links of inode 261, with names "f2l1" and "f2l2",
       at paths "a/" and "d/". However path "d/" does not correspond anymore
       to the directory inode 262 but corresponds instead to a hard link of
       inode 261 (link command issued in the previous step). This makes the
       receiver fail with a ENOTDIR error when attempting the unlink
       operation.
    
    The problem happens because before sending the unlink operation, we failed
    to detect that inode 262 was one of ancestors for inode 261 in the parent
    snapshot, and therefore we didn't recompute the path for inode 262 before
    issuing the unlink operation for the link named "f2l2" of inode 262. The
    detection failed because the function "is_ancestor()" only follows the
    first hard link it finds for an inode instead of all of its hard links
    (as it was originally created for being used with directories only, for
    which only one hard link exists). So fix this by making "is_ancestor()"
    follow all hard links of the input inode.
    
    A test case for fstests follows soon.
    
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b274406266744e706c5b741cafa0013e7a032655
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Nov 21 20:46:49 2017 +0100

    bnxt_en: Fix an error handling path in 'bnxt_get_module_eeprom()'
    
    
    [ Upstream commit dea521a2b9f96e905fa2bb2f95e23ec00c2ec436 ]
    
    Error code returned by 'bnxt_read_sfp_module_eeprom_info()' is handled a
    few lines above when reading the A0 portion of the EEPROM.
    The same should be done when reading the A2 portion of the EEPROM.
    
    In order to correctly propagate an error, update 'rc' in this 2nd call as
    well, otherwise 0 (success) is returned.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c25d803a3b7d82e9549c081e30ce1b62bc1dc9d2
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Tue Nov 28 14:26:30 2017 +0100

    net: phy: marvell10g: fix the PHY id mask
    
    
    [ Upstream commit 952b6b3b07877419386e719ff20917170e1ce684 ]
    
    The Marvell 10G PHY driver supports different hardware revisions, which
    have their bits 3..0 differing. To get the correct revision number these
    bits should be ignored. This patch fixes this by using the already
    defined MARVELL_PHY_ID_MASK (0xfffffff0) instead of the custom
    0xffffffff mask.
    
    Fixes: 20b2af32ff3f ("net: phy: add Marvell Alaska X 88X3310 10Gigabit PHY support")
    Suggested-by: Yan Markman <ymarkman@marvell.com>
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e60a297e78dd7b15679751b5a28428a633161f8
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Tue Nov 28 14:19:48 2017 +0100

    net: mvpp2: fix the txq_init error path
    
    
    [ Upstream commit ba2d8d887d962c2f790e6dc01b2fd25b4608720b ]
    
    When an allocation in the txq_init path fails, the allocated buffers
    end-up being freed twice: in the txq_init error path, and in txq_deinit.
    This lead to issues as txq_deinit would work on already freed memory
    regions:
    
        kernel BUG at mm/slub.c:3915!
        Internal error: Oops - BUG: 0 [#1] PREEMPT SMP
    
    This patch fixes this by removing the txq_init own error path, as the
    txq_deinit function is always called on errors. This was introduced by
    TSO as way more buffers are allocated.
    
    Fixes: 186cd4d4e414 ("net: mvpp2: software tso support")
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 606592f53b877dc77ec1356ea82ea1d7bb6e8580
Author: Chao Yu <yuchao0@huawei.com>
Date:   Tue Nov 28 23:01:44 2017 +0800

    quota: propagate error from __dquot_initialize
    
    
    [ Upstream commit 1a6152d36dee08da2be2a3030dceb45ef680460a ]
    
    In commit 6184fc0b8dd7 ("quota: Propagate error from ->acquire_dquot()"),
    we have propagated error from __dquot_initialize to caller, but we forgot
    to handle such error in add_dquot_ref(), so, currently, during quota
    accounting information initialization flow, if we failed for some of
    inodes, we just ignore such error, and do account for others, which is
    not a good implementation.
    
    In this patch, we choose to let user be aware of such error, so after
    turning on quota successfully, we can make sure all inodes disk usage
    can be accounted, which will be more reasonable.
    
    Suggested-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1271aeb0027cad65ae21737d9b0c60440dae9638
Author: Robert Lippert <roblip@gmail.com>
Date:   Mon Nov 27 15:51:55 2017 -0800

    hwmon: (pmbus) Use 64bit math for DIRECT format values
    
    
    [ Upstream commit bd467e4eababe4c04272c1e646f066db02734c79 ]
    
    Power values in the 100s of watt range can easily blow past
    32bit math limits when processing everything in microwatts.
    
    Use 64bit math instead to avoid these issues on common 32bit ARM
    BMC platforms.
    
    Fixes: 442aba78728e ("hwmon: PMBus device driver")
    Signed-off-by: Robert Lippert <rlippert@google.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02cfbaa6cd42cb7bb041519ffd8cd7f3e5a16863
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Mon Nov 13 07:25:40 2017 +0300

    lockd: fix "list_add double add" caused by legacy signal interface
    
    
    [ Upstream commit 81833de1a46edce9ca20cfe079872ac1c20ef359 ]
    
    restart_grace() uses hardcoded init_net.
    It can cause to "list_add double add" in following scenario:
    
    1) nfsd and lockd was started in several net namespaces
    2) nfsd in init_net was stopped (lockd was not stopped because
     it have users from another net namespaces)
    3) lockd got signal, called restart_grace() -> set_grace_period()
     and enabled lock_manager in hardcoded init_net.
    4) nfsd in init_net is started again,
     its lockd_up() calls set_grace_period() and tries to add
     lock_manager into init_net 2nd time.
    
    Jeff Layton suggest:
    "Make it safe to call locks_start_grace multiple times on the same
    lock_manager. If it's already on the global grace_list, then don't try
    to add it again.  (But we don't intentionally add twice, so for now we
    WARN about that case.)
    
    With this change, we also need to ensure that the nfsd4 lock manager
    initializes the list before we call locks_start_grace. While we're at
    it, move the rest of the nfsd_net initialization into
    nfs4_state_create_net. I see no reason to have it spread over two
    functions like it is today."
    
    Suggested patch was updated to generate warning in described situation.
    
    Suggested-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 156c80d4e197be386103a0ead001d14c4492ed3c
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Nov 10 10:19:26 2017 +0300

    race of lockd inetaddr notifiers vs nlmsvc_rqst change
    
    
    [ Upstream commit 6b18dd1c03e07262ea0866084856b2a3c5ba8d09 ]
    
    lockd_inet[6]addr_event use nlmsvc_rqst without taken nlmsvc_mutex,
    nlmsvc_rqst can be changed during execution of notifiers and crash the host.
    
    Patch enables access to nlmsvc_rqst only when it was correctly initialized
    and delays its cleanup until notifiers are no longer in use.
    
    Note that nlmsvc_rqst can be temporally set to ERR_PTR, so the "if
    (nlmsvc_rqst)" check in notifiers is insufficient on its own.
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Tested-by: Scott Mayhew <smayhew@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 631db7f3895bd4138a7fb0c02f0db1750c79ee23
Author: Andrew Elble <aweits@rit.edu>
Date:   Thu Nov 9 13:41:10 2017 -0500

    nfsd: check for use of the closed special stateid
    
    
    [ Upstream commit ae254dac721d44c0bfebe2795df87459e2e88219 ]
    
    Prevent the use of the closed (invalid) special stateid by clients.
    
    Signed-off-by: Andrew Elble <aweits@rit.edu>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0849eb97066b741c5dacf96349741fad983b7cd
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Mon Nov 6 16:22:48 2017 +0300

    grace: replace BUG_ON by WARN_ONCE in exit_net hook
    
    
    [ Upstream commit b872285751c1af010e12d02bce7069e2061a58ca ]
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bd364d156b13a7f5ba6fd5892b1a4439aa1666b
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Nov 3 08:00:15 2017 -0400

    nfsd: Ensure we check stateid validity in the seqid operation checks
    
    
    [ Upstream commit 9271d7e509c1bfc0b9a418caec29ec8d1ac38270 ]
    
    After taking the stateid st_mutex, we want to know that the stateid
    still represents valid state before performing any non-idempotent
    actions.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f71ff51063177085e7dc2eb33913a2a222700ad
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Nov 3 08:00:12 2017 -0400

    nfsd: CLOSE SHOULD return the invalid special stateid for NFSv4.x (x>0)
    
    
    [ Upstream commit fb500a7cfee7f2f447d2bbf30cb59629feab6ac1 ]
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c900ee9118d7cd0d1e5eba6727dd6c3c37a46e7f
Author: Thomas Meyer <thomas@m3y3r.de>
Date:   Thu Aug 10 10:53:53 2017 +0200

    auxdisplay: img-ascii-lcd: Only build on archs that have IOMEM
    
    
    [ Upstream commit 141cbfba1d0502006463aa80f57c64086226af1a ]
    
    This avoids the MODPOST error:
    
      ERROR: "devm_ioremap_resource" [drivers/auxdisplay/img-ascii-lcd.ko] undefined!
    
    Signed-off-by: Thomas Meyer <thomas@m3y3r.de>
    Acked-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ffb252208a288589251ed0ada38424ccde217d5
Author: Eduardo Otubo <otubo@redhat.com>
Date:   Thu Nov 23 15:18:35 2017 +0100

    xen-netfront: remove warning when unloading module
    
    
    [ Upstream commit 5b5971df3bc2775107ddad164018a8a8db633b81 ]
    
    v2:
     * Replace busy wait with wait_event()/wake_up_all()
     * Cannot garantee that at the time xennet_remove is called, the
       xen_netback state will not be XenbusStateClosed, so added a
       condition for that
     * There's a small chance for the xen_netback state is
       XenbusStateUnknown by the time the xen_netfront switches to Closed,
       so added a condition for that.
    
    When unloading module xen_netfront from guest, dmesg would output
    warning messages like below:
    
      [  105.236836] xen:grant_table: WARNING: g.e. 0x903 still in use!
      [  105.236839] deferring g.e. 0x903 (pfn 0x35805)
    
    This problem relies on netfront and netback being out of sync. By the time
    netfront revokes the g.e.'s netback didn't have enough time to free all of
    them, hence displaying the warnings on dmesg.
    
    The trick here is to make netfront to wait until netback frees all the g.e.'s
    and only then continue to cleanup for the module removal, and this is done by
    manipulating both device states.
    
    Signed-off-by: Eduardo Otubo <otubo@redhat.com>
    Acked-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53c045c6d07d78bf0d547352df184c250cc29fe3
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Nov 22 17:52:24 2017 +0000

    i2c: i2c-boardinfo: fix memory leaks on devinfo
    
    
    [ Upstream commit 66a7c84d677e8e4a5a2ef4afdb9bd52e1399a866 ]
    
    Currently when an error occurs devinfo is still allocated but is
    unused when the error exit paths break out of the for-loop. Fix
    this by kfree'ing devinfo to avoid the leak.
    
    Detected by CoverityScan, CID#1416590 ("Resource Leak")
    
    Fixes: 4124c4eba402 ("i2c: allow attaching IRQ resources to i2c_board_info")
    Fixes: 0daaf99d8424 ("i2c: copy device properties when using i2c_register_board_info()")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30ac846da3600e299cd470ade18e1e859b6a41f8
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Tue Nov 21 20:53:02 2017 -0800

    xfs: log recovery should replay deferred ops in order
    
    
    [ Upstream commit 509955823cc9cc225c05673b1b83d70ca70c5c60 ]
    
    As part of testing log recovery with dm_log_writes, Amir Goldstein
    discovered an error in the deferred ops recovery that lead to corruption
    of the filesystem metadata if a reflink+rmap filesystem happened to shut
    down midway through a CoW remap:
    
    "This is what happens [after failed log recovery]:
    
    "Phase 1 - find and verify superblock...
    "Phase 2 - using internal log
    "        - zero log...
    "        - scan filesystem freespace and inode maps...
    "        - found root inode chunk
    "Phase 3 - for each AG...
    "        - scan (but don't clear) agi unlinked lists...
    "        - process known inodes and perform inode discovery...
    "        - agno = 0
    "data fork in regular inode 134 claims CoW block 376
    "correcting nextents for inode 134
    "bad data fork in inode 134
    "would have cleared inode 134"
    
    Hou Tao dissected the log contents of exactly such a crash:
    
    "According to the implementation of xfs_defer_finish(), these ops should
    be completed in the following sequence:
    
    "Have been done:
    "(1) CUI: Oper (160)
    "(2) BUI: Oper (161)
    "(3) CUD: Oper (194), for CUI Oper (160)
    "(4) RUI A: Oper (197), free rmap [0x155, 2, -9]
    
    "Should be done:
    "(5) BUD: for BUI Oper (161)
    "(6) RUI B: add rmap [0x155, 2, 137]
    "(7) RUD: for RUI A
    "(8) RUD: for RUI B
    
    "Actually be done by xlog_recover_process_intents()
    "(5) BUD: for BUI Oper (161)
    "(6) RUI B: add rmap [0x155, 2, 137]
    "(7) RUD: for RUI B
    "(8) RUD: for RUI A
    
    "So the rmap entry [0x155, 2, -9] for COW should be freed firstly,
    then a new rmap entry [0x155, 2, 137] will be added. However, as we can see
    from the log record in post_mount.log (generated after umount) and the trace
    print, the new rmap entry [0x155, 2, 137] are added firstly, then the rmap
    entry [0x155, 2, -9] are freed."
    
    When reconstructing the internal log state from the log items found on
    disk, it's required that deferred ops replay in exactly the same order
    that they would have had the filesystem not gone down.  However,
    replaying unfinished deferred ops can create /more/ deferred ops.  These
    new deferred ops are finished in the wrong order.  This causes fs
    corruption and replay crashes, so let's create a single defer_ops to
    handle the subsequent ops created during replay, then use one single
    transaction at the end of log recovery to ensure that everything is
    replayed in the same order as they're supposed to be.
    
    Reported-by: Amir Goldstein <amir73il@gmail.com>
    Analyzed-by: Hou Tao <houtao1@huawei.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1eccdbd4836a417b2b4e8f1f56db97c541d58e57
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Wed Nov 22 12:21:07 2017 -0800

    xfs: always free inline data before resetting inode fork during ifree
    
    
    [ Upstream commit 98c4f78dcdd8cec112d1cbc5e9a792ee6e5ab7a6 ]
    
    In xfs_ifree, we reset the data/attr forks to extents format without
    bothering to free any inline data buffer that might still be around
    after all the blocks have been truncated off the file.  Prior to commit
    43518812d2 ("xfs: remove support for inlining data/extents into the
    inode fork") nobody noticed because the leftover inline data after
    truncation was small enough to fit inside the inline buffer inside the
    fork itself.
    
    However, now that we've removed the inline buffer, we /always/ have to
    free the inline data buffer or else we leak them like crazy.  This test
    was found by turning on kmemleak for generic/001 or generic/388.
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40ba283e2602d319d00d4f6539b5113eb8d25d24
Author: Jan H. Schönherr <jschoenh@amazon.de>
Date:   Fri Nov 24 22:39:01 2017 +0100

    KVM: Let KVM_SET_SIGNAL_MASK work as advertised
    
    
    [ Upstream commit 20b7035c66bacc909ae3ffe92c1a1ea7db99fe4f ]
    
    KVM API says for the signal mask you set via KVM_SET_SIGNAL_MASK, that
    "any unblocked signal received [...] will cause KVM_RUN to return with
    -EINTR" and that "the signal will only be delivered if not blocked by
    the original signal mask".
    
    This, however, is only true, when the calling task has a signal handler
    registered for a signal. If not, signal evaluation is short-circuited for
    SIG_IGN and SIG_DFL, and the signal is either ignored without KVM_RUN
    returning or the whole process is terminated.
    
    Make KVM_SET_SIGNAL_MASK behave as advertised by utilizing logic similar
    to that in do_sigtimedwait() to avoid short-circuiting of signals.
    
    Signed-off-by: Jan H. SchÃ¶nherr <jschoenh@amazon.de>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 809981870b6670d5ac2338325865900d88acf2b4
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Tue Nov 21 14:35:40 2017 -0700

    Btrfs: fix list_add corruption and soft lockups in fsync
    
    
    [ Upstream commit ebb70442cdd4872260c2415929c456be3562da82 ]
    
    Xfstests btrfs/146 revealed this corruption,
    
    [   58.138831] Buffer I/O error on dev dm-0, logical block 2621424, async page read
    [   58.151233] BTRFS error (device sdf): bdev /dev/mapper/error-test errs: wr 1, rd 0, flush 0, corrupt 0, gen 0
    [   58.152403] list_add corruption. prev->next should be next (ffff88005e6775d8), but was ffffc9000189be88. (prev=ffffc9000189be88).
    [   58.153518] ------------[ cut here ]------------
    [   58.153892] WARNING: CPU: 1 PID: 1287 at lib/list_debug.c:31 __list_add_valid+0x169/0x1f0
    ...
    [   58.157379] RIP: 0010:__list_add_valid+0x169/0x1f0
    ...
    [   58.161956] Call Trace:
    [   58.162264]  btrfs_log_inode_parent+0x5bd/0xfb0 [btrfs]
    [   58.163583]  btrfs_log_dentry_safe+0x60/0x80 [btrfs]
    [   58.164003]  btrfs_sync_file+0x4c2/0x6f0 [btrfs]
    [   58.164393]  vfs_fsync_range+0x5f/0xd0
    [   58.164898]  do_fsync+0x5a/0x90
    [   58.165170]  SyS_fsync+0x10/0x20
    [   58.165395]  entry_SYSCALL_64_fastpath+0x1f/0xbe
    ...
    
    It turns out that we could record btrfs_log_ctx:io_err in
    log_one_extents when IO fails, but make log_one_extents() return '0'
    instead of -EIO, so the IO error is not acknowledged by the callers,
    i.e.  btrfs_log_inode_parent(), which would remove btrfs_log_ctx:list
    from list head 'root->log_ctxs'.  Since btrfs_log_ctx is allocated
    from stack memory, it'd get freed with a object alive on the
    list. then a future list_add will throw the above warning.
    
    This returns the correct error in the above case.
    
    Jeff also reported this while testing against his fsync error
    patch set[1].
    
    [1]: https://www.spinics.net/lists/linux-btrfs/msg65308.html
    "btrfs list corruption and soft lockups while testing writeback error handling"
    
    Fixes: 8407f553268a4611f254 ("Btrfs: fix data corruption after fast fsync and writeback error")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ce1bbfb5e67563bc01c0ba025fefc3b4b1fc391
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Mon Nov 20 14:52:21 2017 -0800

    KVM: VMX: Fix rflags cache during vCPU reset
    
    
    [ Upstream commit c37c28730bb031cc8a44a130c2555c0f3efbe2d0 ]
    
    Reported by syzkaller:
    
       *** Guest State ***
       CR0: actual=0x0000000080010031, shadow=0x0000000060000010, gh_mask=fffffffffffffff7
       CR4: actual=0x0000000000002061, shadow=0x0000000000000000, gh_mask=ffffffffffffe8f1
       CR3 = 0x000000002081e000
       RSP = 0x000000000000fffa  RIP = 0x0000000000000000
       RFLAGS=0x00023000         DR7 = 0x00000000000000
              ^^^^^^^^^^
       ------------[ cut here ]------------
       WARNING: CPU: 6 PID: 24431 at /home/kernel/linux/arch/x86/kvm//x86.c:7302 kvm_arch_vcpu_ioctl_run+0x651/0x2ea0 [kvm]
       CPU: 6 PID: 24431 Comm: reprotest Tainted: G        W  OE   4.14.0+ #26
       RIP: 0010:kvm_arch_vcpu_ioctl_run+0x651/0x2ea0 [kvm]
       RSP: 0018:ffff880291d179e0 EFLAGS: 00010202
       Call Trace:
        kvm_vcpu_ioctl+0x479/0x880 [kvm]
        do_vfs_ioctl+0x142/0x9a0
        SyS_ioctl+0x74/0x80
        entry_SYSCALL_64_fastpath+0x23/0x9a
    
    The failed vmentry is triggered by the following beautified testcase:
    
        #include <unistd.h>
        #include <sys/syscall.h>
        #include <string.h>
        #include <stdint.h>
        #include <linux/kvm.h>
        #include <fcntl.h>
        #include <sys/ioctl.h>
    
        long r[5];
        int main()
        {
            struct kvm_debugregs dr = { 0 };
    
            r[2] = open("/dev/kvm", O_RDONLY);
            r[3] = ioctl(r[2], KVM_CREATE_VM, 0);
            r[4] = ioctl(r[3], KVM_CREATE_VCPU, 7);
            struct kvm_guest_debug debug = {
                    .control = 0xf0403,
                    .arch = {
                            .debugreg[6] = 0x2,
                            .debugreg[7] = 0x2
                    }
            };
            ioctl(r[4], KVM_SET_GUEST_DEBUG, &debug);
            ioctl(r[4], KVM_RUN, 0);
        }
    
    which testcase tries to setup the processor specific debug
    registers and configure vCPU for handling guest debug events through
    KVM_SET_GUEST_DEBUG.  The KVM_SET_GUEST_DEBUG ioctl will get and set
    rflags in order to set TF bit if single step is needed. All regs' caches
    are reset to avail and GUEST_RFLAGS vmcs field is reset to 0x2 during vCPU
    reset. However, the cache of rflags is not reset during vCPU reset. The
    function vmx_get_rflags() returns an unreset rflags cache value since
    the cache is marked avail, it is 0 after boot. Vmentry fails if the
    rflags reserved bit 1 is 0.
    
    This patch fixes it by resetting both the GUEST_RFLAGS vmcs field and
    its cache to 0x2 during vCPU reset.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f1b5183aee337be1c2444c7f6be189ddf14d068
Author: Wanpeng Li <kernellwp@gmail.com>
Date:   Mon Nov 20 14:55:05 2017 -0800

    KVM: X86: Fix softlockup when get the current kvmclock
    
    
    [ Upstream commit e70b57a6ce4e8b92a56a615ae79bdb2bd66035e7 ]
    
     watchdog: BUG: soft lockup - CPU#6 stuck for 22s! [qemu-system-x86:10185]
     CPU: 6 PID: 10185 Comm: qemu-system-x86 Tainted: G           OE   4.14.0-rc4+ #4
     RIP: 0010:kvm_get_time_scale+0x4e/0xa0 [kvm]
     Call Trace:
      get_time_ref_counter+0x5a/0x80 [kvm]
      kvm_hv_process_stimers+0x120/0x5f0 [kvm]
      kvm_arch_vcpu_ioctl_run+0x4b4/0x1690 [kvm]
      kvm_vcpu_ioctl+0x33a/0x620 [kvm]
      do_vfs_ioctl+0xa1/0x5d0
      SyS_ioctl+0x79/0x90
      entry_SYSCALL_64_fastpath+0x1e/0xa9
    
    This can be reproduced when running kvm-unit-tests/hyperv_stimer.flat and
    cpu-hotplug stress simultaneously. __this_cpu_read(cpu_tsc_khz) returns 0
    (set in kvmclock_cpu_down_prep()) when the pCPU is unhotplug which results
    in kvm_get_time_scale() gets into an infinite loop.
    
    This patch fixes it by treating the unhotplug pCPU as not using master clock.
    
    Reviewed-by: Radim Krčmář <rkrcmar@redhat.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a447435afabf52b16d1295d0f18bef5ab3abb65
Author: Jeff Layton <jlayton@redhat.com>
Date:   Mon Oct 30 11:20:15 2017 -0400

    reiserfs: remove unneeded i_version bump
    
    
    [ Upstream commit 9f97df50c52c2887432debb6238f4e43567386a5 ]
    
    The i_version field in reiserfs is not initialized and is only ever
    updated here. Nothing ever views it, so just remove it.
    
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14a4e9f6bde8cdba1c0896c0af31304a934e0427
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 25 21:05:36 2017 +0800

    sctp: set sender next_tsn for the old result with ctsn_ack_point plus 1
    
    
    [ Upstream commit 52a395896a051a3d5c34fba67c324f69ec5e67c6 ]
    
    When doing asoc reset, if the sender of the response has already sent some
    chunk and increased asoc->next_tsn before the duplicate request comes, the
    response will use the old result with an incorrect sender next_tsn.
    
    Better than asoc->next_tsn, asoc->ctsn_ack_point can't be changed after
    the sender of the response has performed the asoc reset and before the
    peer has confirmed it, and it's value is still asoc->next_tsn original
    value minus 1.
    
    This patch sets sender next_tsn for the old result with ctsn_ack_point
    plus 1 when processing the duplicate request, to make sure the sender
    next_tsn value peer gets will be always right.
    
    Fixes: 692787cef651 ("sctp: implement receiver-side procedures for the SSN/TSN Reset Request Parameter")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55f3de731c0b21ad37f80c7819a925278356ddf1
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 25 21:05:35 2017 +0800

    sctp: avoid flushing unsent queue when doing asoc reset
    
    
    [ Upstream commit 159f2a7456c6ae95c1e1a58e8b8ec65ef12d51cf ]
    
    Now when doing asoc reset, it cleans up sacked and abandoned queues
    by calling sctp_outq_free where it also cleans up unsent, retransmit
    and transmitted queues.
    
    It's safe for the sender of response, as these 3 queues are empty at
    that time. But when the receiver of response is doing the reset, the
    users may already enqueue some chunks into unsent during the time
    waiting the response, and these chunks should not be flushed.
    
    To void the chunks in it would be removed, it moves the queue into a
    temp list, then gets it back after sctp_outq_free is done.
    
    The patch also fixes some incorrect comments in
    sctp_process_strreset_tsnreq.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4c72a410f3bbcddac69f666024934a492dd8c38
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 25 21:05:34 2017 +0800

    sctp: only allow the asoc reset when the asoc outq is empty
    
    
    [ Upstream commit 5c6144a0eb5366ae07fc5059301b139338f39bbd ]
    
    As it says in rfc6525#section5.1.4, before sending the request,
    
       C2:  The sender has either no outstanding TSNs or considers all
            outstanding TSNs abandoned.
    
    Prior to this patch, it tried to consider all outstanding TSNs abandoned
    by dropping all chunks in all outqs with sctp_outq_free (even including
    sacked, retransmit and transmitted queues) when doing this reset, which
    is too aggressive.
    
    To make it work gently, this patch will only allow the asoc reset when
    the sender has no outstanding TSNs by checking if unsent, transmitted
    and retransmit are all empty with sctp_outq_is_empty before sending
    and processing the request.
    
    Fixes: 692787cef651 ("sctp: implement receiver-side procedures for the SSN/TSN Reset Request Parameter")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 928066e61940e3c19f85d543d15c55fcae20208f
Author: Josef Bacik <jbacik@fb.com>
Date:   Wed Nov 15 16:20:52 2017 -0500

    btrfs: fix deadlock when writing out space cache
    
    
    [ Upstream commit b77000ed558daa3bef0899d29bf171b8c9b5e6a8 ]
    
    If we fail to prepare our pages for whatever reason (out of memory in
    our case) we need to make sure to drop the block_group->data_rwsem,
    otherwise hilarity ensues.
    
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ add label and use existing unlocking code ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 841211271eccb49f7f4a71442c13a09d4b6a92b0
Author: Chun-Yeow Yeoh <yeohchunyeow@gmail.com>
Date:   Tue Nov 14 23:20:05 2017 +0800

    mac80211: fix the update of path metric for RANN frame
    
    
    [ Upstream commit fbbdad5edf0bb59786a51b94a9d006bc8c2da9a2 ]
    
    The previous path metric update from RANN frame has not considered
    the own link metric toward the transmitting mesh STA. Fix this.
    
    Reported-by: Michael65535
    Signed-off-by: Chun-Yeow Yeoh <yeohchunyeow@gmail.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e23090a7d8f05f03cf564148472130286f5ca9bf
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Nov 21 14:46:08 2017 +0100

    mac80211: use QoS NDP for AP probing
    
    
    [ Upstream commit 7b6ddeaf27eca72795ceeae2f0f347db1b5f9a30 ]
    
    When connected to a QoS/WMM AP, mac80211 should use a QoS NDP
    for probing it, instead of a regular non-QoS one, fix this.
    
    Change all the drivers to *not* allow QoS NDP for now, even
    though it looks like most of them should be OK with that.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 093a5cb46d05895d02c36d5be784c7a71cd0c585
Author: Mirza Krak <mirza.krak@endian.se>
Date:   Wed Nov 15 08:24:46 2017 +0000

    drm/rockchip: dw-mipi-dsi: fix possible un-balanced runtime PM enable
    
    
    [ Upstream commit 517f56839f581618d24f2e67a35738a5c6cbaecb ]
    
    In the case where the bind gets deferred we would end up with a
    un-balanced runtime PM enable call.
    
    Fix this by simply moving the pm_runtime_enable call to the end of
    the bind function when all paths have succeeded.
    
    Signed-off-by: Mirza Krak <mirza.krak@endian.se>
    Signed-off-by: Sandy Huang <hjc@rock-chips.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510734286-37434-1-git-send-email-mirza.krak@endian.se
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9be97a9abe9e0a3166320f21a42dc5e0966cb5c4
Author: zhangliping <zhangliping02@baidu.com>
Date:   Sat Nov 25 22:02:12 2017 +0800

    openvswitch: fix the incorrect flow action alloc size
    
    
    [ Upstream commit 67c8d22a73128ff910e2287567132530abcf5b71 ]
    
    If we want to add a datapath flow, which has more than 500 vxlan outputs'
    action, we will get the following error reports:
      openvswitch: netlink: Flow action size 32832 bytes exceeds max
      openvswitch: netlink: Flow action size 32832 bytes exceeds max
      openvswitch: netlink: Actions may not be safe on all matching packets
      ... ...
    
    It seems that we can simply enlarge the MAX_ACTIONS_BUFSIZE to fix it, but
    this is not the root cause. For example, for a vxlan output action, we need
    about 60 bytes for the nlattr, but after it is converted to the flow
    action, it only occupies 24 bytes. This means that we can still support
    more than 1000 vxlan output actions for a single datapath flow under the
    the current 32k max limitation.
    
    So even if the nla_len(attr) is larger than MAX_ACTIONS_BUFSIZE, we
    shouldn't report EINVAL and keep it move on, as the judgement can be
    done by the reserve_sfa_size.
    
    Signed-off-by: zhangliping <zhangliping02@baidu.com>
    Acked-by: Pravin B Shelar <pshelar@ovn.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd45c5e5be071fb9fee6e5f82fed6e0bf67737d5
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Thu Nov 23 17:35:22 2017 +0200

    nvme-rdma: don't complete requests before a send work request has completed
    
    
    [ Upstream commit 4af7f7ff92a42b6c713293c99e7982bcfcf51a70 ]
    
    In order to guarantee that the HCA will never get an access violation
    (either from invalidated rkey or from iommu) when retrying a send
    operation we must complete a request only when both send completion and
    the nvme cqe has arrived. We need to set the send/recv completions flags
    atomically because we might have more than a single context accessing the
    request concurrently (one is cq irq-poll context and the other is
    user-polling used in IOCB_HIPRI).
    
    Only then we are safe to invalidate the rkey (if needed), unmap the host
    buffers, and complete the IO.
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 120c41af36df87401576f09498abf5696fb3d474
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Mon Nov 13 03:35:27 2017 +0300

    uapi: fix linux/kfd_ioctl.h userspace compilation errors
    
    
    [ Upstream commit b4d085201d86af69cbda2214c6dafc0be240ef9f ]
    
    Consistently use types provided by <linux/types.h> via <drm/drm.h>
    to fix the following linux/kfd_ioctl.h userspace compilation errors:
    
    /usr/include/linux/kfd_ioctl.h:236:2: error: unknown type name 'uint64_t'
      uint64_t va_addr; /* to KFD */
    /usr/include/linux/kfd_ioctl.h:237:2: error: unknown type name 'uint32_t'
      uint32_t gpu_id; /* to KFD */
    /usr/include/linux/kfd_ioctl.h:238:2: error: unknown type name 'uint32_t'
      uint32_t pad;
    /usr/include/linux/kfd_ioctl.h:243:2: error: unknown type name 'uint64_t'
      uint64_t tile_config_ptr;
    /usr/include/linux/kfd_ioctl.h:245:2: error: unknown type name 'uint64_t'
      uint64_t macro_tile_config_ptr;
    /usr/include/linux/kfd_ioctl.h:249:2: error: unknown type name 'uint32_t'
      uint32_t num_tile_configs;
    /usr/include/linux/kfd_ioctl.h:253:2: error: unknown type name 'uint32_t'
      uint32_t num_macro_tile_configs;
    /usr/include/linux/kfd_ioctl.h:255:2: error: unknown type name 'uint32_t'
      uint32_t gpu_id;  /* to KFD */
    /usr/include/linux/kfd_ioctl.h:256:2: error: unknown type name 'uint32_t'
      uint32_t gb_addr_config; /* from KFD */
    /usr/include/linux/kfd_ioctl.h:257:2: error: unknown type name 'uint32_t'
      uint32_t num_banks;  /* from KFD */
    /usr/include/linux/kfd_ioctl.h:258:2: error: unknown type name 'uint32_t'
      uint32_t num_ranks;  /* from KFD */
    
    Fixes: 6a1c9510694fe ("drm/amdkfd: Adding new IOCTL for scratch memory v2")
    Fixes: 5d71dbc3a5886 ("drm/amdkfd: Implement image tiling mode support v2")
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b15f53b46d880fae35c976d8285c09debbb760bb
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Wed Nov 1 19:21:57 2017 -0400

    drm/amdkfd: Fix SDMA oversubsription handling
    
    
    [ Upstream commit 8c946b8988acec785bcf67088b6bd0747f36d2d3 ]
    
    SDMA only supports a fixed number of queues. HWS cannot handle
    oversubscription.
    
    Signed-off-by: shaoyun liu <shaoyun.liu@amd.com>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64aca9911a1097b224739e2cf060c3114e6bd59f
Author: shaoyunl <Shaoyun.Liu@amd.com>
Date:   Wed Nov 1 19:21:56 2017 -0400

    drm/amdkfd: Fix SDMA ring buffer size calculation
    
    
    [ Upstream commit d12fb13f23199faa7e536acec1db49068e5a067d ]
    
    ffs function return the position of the first bit set on 1 based.
    (bit zero returns 1).
    
    Signed-off-by: shaoyun liu <shaoyun.liu@amd.com>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a595f190fc6be88c3942b468819378a977379fe1
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Wed Nov 1 19:21:55 2017 -0400

    drm/amdgpu: Fix SDMA load/unload sequence on HWS disabled mode
    
    
    [ Upstream commit cf21654b40968609779751b34e7923180968fe5b ]
    
    Fix the SDMA load and unload sequence as suggested by HW document.
    
    Signed-off-by: shaoyun liu <shaoyun.liu@amd.com>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Acked-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9f175778bb9e4a5fe6d46efde1b353f15fde1fa
Author: Michael Lyle <mlyle@lyle.org>
Date:   Fri Nov 24 15:14:27 2017 -0800

    bcache: check return value of register_shrinker
    
    
    [ Upstream commit 6c4ca1e36cdc1a0a7a84797804b87920ccbebf51 ]
    
    register_shrinker is now __must_check, so check it to kill a warning.
    Caller of bch_btree_cache_alloc in super.c appropriately checks return
    value so this is fully plumbed through.
    
    This V2 fixes checkpatch warnings and improves the commit description,
    as I was too hasty getting the previous version out.
    
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Vojtech Pavlik <vojtech@suse.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1392633bafde919b3d78449b8a1a1c9f50f2b72e
Author: David Howells <dhowells@redhat.com>
Date:   Fri Nov 24 10:18:42 2017 +0000

    rxrpc: Fix service endpoint expiry
    
    
    [ Upstream commit f859ab61875978eeaa539740ff7f7d91f5d60006 ]
    
    RxRPC service endpoints expire like they're supposed to by the following
    means:
    
     (1) Mark dead rxrpc_net structs (with ->live) rather than twiddling the
         global service conn timeout, otherwise the first rxrpc_net struct to
         die will cause connections on all others to expire immediately from
         then on.
    
     (2) Mark local service endpoints for which the socket has been closed
         (->service_closed) so that the expiration timeout can be much
         shortened for service and client connections going through that
         endpoint.
    
     (3) rxrpc_put_service_conn() needs to schedule the reaper when the usage
         count reaches 1, not 0, as idle conns have a 1 count.
    
     (4) The accumulator for the earliest time we might want to schedule for
         should be initialised to jiffies + MAX_JIFFY_OFFSET, not ULONG_MAX as
         the comparison functions use signed arithmetic.
    
     (5) Simplify the expiration handling, adding the expiration value to the
         idle timestamp each time rather than keeping track of the time in the
         past before which the idle timestamp must go to be expired.  This is
         much easier to read.
    
     (6) Ignore the timeouts if the net namespace is dead.
    
     (7) Restart the service reaper work item rather the client reaper.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b89372f234a83d64a8f7e80fdcfadb64d9a9aeca
Author: David Howells <dhowells@redhat.com>
Date:   Fri Nov 24 10:18:40 2017 +0000

    rxrpc: Provide a different lockdep key for call->user_mutex for kernel calls
    
    
    [ Upstream commit 9faaff593404a9c4e5abc6839a641635d7b9d0cd ]
    
    Provide a different lockdep key for rxrpc_call::user_mutex when the call is
    made on a kernel socket, such as by the AFS filesystem.
    
    The problem is that lockdep registers a false positive between userspace
    calling the sendmsg syscall on a user socket where call->user_mutex is held
    whilst userspace memory is accessed whereas the AFS filesystem may perform
    operations with mmap_sem held by the caller.
    
    In such a case, the following warning is produced.
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.14.0-fscache+ #243 Tainted: G            E
    ------------------------------------------------------
    modpost/16701 is trying to acquire lock:
     (&vnode->io_lock){+.+.}, at: [<ffffffffa000fc40>] afs_begin_vnode_operation+0x33/0x77 [kafs]
    
    but task is already holding lock:
     (&mm->mmap_sem){++++}, at: [<ffffffff8104376a>] __do_page_fault+0x1ef/0x486
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #3 (&mm->mmap_sem){++++}:
           __might_fault+0x61/0x89
           _copy_from_iter_full+0x40/0x1fa
           rxrpc_send_data+0x8dc/0xff3
           rxrpc_do_sendmsg+0x62f/0x6a1
           rxrpc_sendmsg+0x166/0x1b7
           sock_sendmsg+0x2d/0x39
           ___sys_sendmsg+0x1ad/0x22b
           __sys_sendmsg+0x41/0x62
           do_syscall_64+0x89/0x1be
           return_from_SYSCALL_64+0x0/0x75
    
    -> #2 (&call->user_mutex){+.+.}:
           __mutex_lock+0x86/0x7d2
           rxrpc_new_client_call+0x378/0x80e
           rxrpc_kernel_begin_call+0xf3/0x154
           afs_make_call+0x195/0x454 [kafs]
           afs_vl_get_capabilities+0x193/0x198 [kafs]
           afs_vl_lookup_vldb+0x5f/0x151 [kafs]
           afs_create_volume+0x2e/0x2f4 [kafs]
           afs_mount+0x56a/0x8d7 [kafs]
           mount_fs+0x6a/0x109
           vfs_kern_mount+0x67/0x135
           do_mount+0x90b/0xb57
           SyS_mount+0x72/0x98
           do_syscall_64+0x89/0x1be
           return_from_SYSCALL_64+0x0/0x75
    
    -> #1 (k-sk_lock-AF_RXRPC){+.+.}:
           lock_sock_nested+0x74/0x8a
           rxrpc_kernel_begin_call+0x8a/0x154
           afs_make_call+0x195/0x454 [kafs]
           afs_fs_get_capabilities+0x17a/0x17f [kafs]
           afs_probe_fileserver+0xf7/0x2f0 [kafs]
           afs_select_fileserver+0x83f/0x903 [kafs]
           afs_fetch_status+0x89/0x11d [kafs]
           afs_iget+0x16f/0x4f8 [kafs]
           afs_mount+0x6c6/0x8d7 [kafs]
           mount_fs+0x6a/0x109
           vfs_kern_mount+0x67/0x135
           do_mount+0x90b/0xb57
           SyS_mount+0x72/0x98
           do_syscall_64+0x89/0x1be
           return_from_SYSCALL_64+0x0/0x75
    
    -> #0 (&vnode->io_lock){+.+.}:
           lock_acquire+0x174/0x19f
           __mutex_lock+0x86/0x7d2
           afs_begin_vnode_operation+0x33/0x77 [kafs]
           afs_fetch_data+0x80/0x12a [kafs]
           afs_readpages+0x314/0x405 [kafs]
           __do_page_cache_readahead+0x203/0x2ba
           filemap_fault+0x179/0x54d
           __do_fault+0x17/0x60
           __handle_mm_fault+0x6d7/0x95c
           handle_mm_fault+0x24e/0x2a3
           __do_page_fault+0x301/0x486
           do_page_fault+0x236/0x259
           page_fault+0x22/0x30
           __clear_user+0x3d/0x60
           padzero+0x1c/0x2b
           load_elf_binary+0x785/0xdc7
           search_binary_handler+0x81/0x1ff
           do_execveat_common.isra.14+0x600/0x888
           do_execve+0x1f/0x21
           SyS_execve+0x28/0x2f
           do_syscall_64+0x89/0x1be
           return_from_SYSCALL_64+0x0/0x75
    
    other info that might help us debug this:
    
    Chain exists of:
      &vnode->io_lock --> &call->user_mutex --> &mm->mmap_sem
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(&mm->mmap_sem);
                                   lock(&call->user_mutex);
                                   lock(&mm->mmap_sem);
      lock(&vnode->io_lock);
    
     *** DEADLOCK ***
    
    1 lock held by modpost/16701:
     #0:  (&mm->mmap_sem){++++}, at: [<ffffffff8104376a>] __do_page_fault+0x1ef/0x486
    
    stack backtrace:
    CPU: 0 PID: 16701 Comm: modpost Tainted: G            E   4.14.0-fscache+ #243
    Hardware name: ASUS All Series/H97-PLUS, BIOS 2306 10/09/2014
    Call Trace:
     dump_stack+0x67/0x8e
     print_circular_bug+0x341/0x34f
     check_prev_add+0x11f/0x5d4
     ? add_lock_to_list.isra.12+0x8b/0x8b
     ? add_lock_to_list.isra.12+0x8b/0x8b
     ? __lock_acquire+0xf77/0x10b4
     __lock_acquire+0xf77/0x10b4
     lock_acquire+0x174/0x19f
     ? afs_begin_vnode_operation+0x33/0x77 [kafs]
     __mutex_lock+0x86/0x7d2
     ? afs_begin_vnode_operation+0x33/0x77 [kafs]
     ? afs_begin_vnode_operation+0x33/0x77 [kafs]
     ? afs_begin_vnode_operation+0x33/0x77 [kafs]
     afs_begin_vnode_operation+0x33/0x77 [kafs]
     afs_fetch_data+0x80/0x12a [kafs]
     afs_readpages+0x314/0x405 [kafs]
     __do_page_cache_readahead+0x203/0x2ba
     ? filemap_fault+0x179/0x54d
     filemap_fault+0x179/0x54d
     __do_fault+0x17/0x60
     __handle_mm_fault+0x6d7/0x95c
     handle_mm_fault+0x24e/0x2a3
     __do_page_fault+0x301/0x486
     do_page_fault+0x236/0x259
     page_fault+0x22/0x30
    RIP: 0010:__clear_user+0x3d/0x60
    RSP: 0018:ffff880071e93da0 EFLAGS: 00010202
    RAX: 0000000000000000 RBX: 000000000000011c RCX: 000000000000011c
    RDX: 0000000000000000 RSI: 0000000000000008 RDI: 000000000060f720
    RBP: 000000000060f720 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000000001 R11: ffff8800b5459b68 R12: ffff8800ce150e00
    R13: 000000000060f720 R14: 00000000006127a8 R15: 0000000000000000
     padzero+0x1c/0x2b
     load_elf_binary+0x785/0xdc7
     search_binary_handler+0x81/0x1ff
     do_execveat_common.isra.14+0x600/0x888
     do_execve+0x1f/0x21
     SyS_execve+0x28/0x2f
     do_syscall_64+0x89/0x1be
     entry_SYSCALL64_slow_path+0x25/0x25
    RIP: 0033:0x7fdb6009ee07
    RSP: 002b:00007fff566d9728 EFLAGS: 00000246 ORIG_RAX: 000000000000003b
    RAX: ffffffffffffffda RBX: 000055ba57280900 RCX: 00007fdb6009ee07
    RDX: 000055ba5727f270 RSI: 000055ba5727cac0 RDI: 000055ba57280900
    RBP: 000055ba57280900 R08: 00007fff566d9700 R09: 0000000000000000
    R10: 000055ba5727cac0 R11: 0000000000000246 R12: 0000000000000000
    R13: 000055ba5727cac0 R14: 000055ba5727f270 R15: 0000000000000000
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92c131bebf4737866ffb31aeed45085ce827e0af
Author: David Howells <dhowells@redhat.com>
Date:   Fri Nov 24 10:18:40 2017 +0000

    rxrpc: The mutex lock returned by rxrpc_accept_call() needs releasing
    
    
    [ Upstream commit 03a6c82218b9a87014b2c6c4e178294fdc8ebd8a ]
    
    The caller of rxrpc_accept_call() must release the lock on call->user_mutex
    returned by that function.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2443fb287cc52a98a3b6f417a5e46bf2383e5ba
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed Nov 22 17:19:32 2017 +0100

    s390: fix alloc_pgste check in init_new_context again
    
    
    [ Upstream commit 53c4ab70c11c3ba1b9e3caa8e8c17e9c16d9cbc0 ]
    
    git commit badb8bb983e9 "fix alloc_pgste check in init_new_context" fixed
    the problem of 'current->mm == NULL' in init_new_context back in 2011.
    
    git commit 3eabaee998c7 "KVM: s390: allow sie enablement for multi-
    threaded programs" completely removed the check against alloc_pgste.
    
    git commit 23fefe119ceb "s390/kvm: avoid global config of vm.alloc_pgste=1"
    re-added a check against the alloc_pgste flag but without the required
    check for current->mm != NULL.
    
    For execve() called by a kernel thread init_new_context() reads from
    ((struct mm_struct *) NULL)->context.alloc_pgste to decide between
    2K vs 4K page tables. If the bit happens to be set for the init process
    it will be created with large page tables. This decision is inherited by
    all the children of init, this waste quite some memory.
    
    Re-add the check for 'current->mm != NULL'.
    
    Fixes: 23fefe119ceb ("s390/kvm: avoid global config of vm.alloc_pgste=1")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e194c9c55964455366e9e1b93fe02f932ecf346
Author: David Disseldorp <ddiss@suse.de>
Date:   Wed Nov 8 17:29:44 2017 +0100

    null_blk: fix dev->badblocks leak
    
    
    [ Upstream commit 1addb798e93893d33c8dfab743cd44f09fd7719a ]
    
    null_alloc_dev() allocates memory for dev->badblocks, but cleanup
    currently only occurs in the configfs release codepath, missing a number
    of other places.
    
    This bug was found running the blktests block/010 test, alongside
    kmemleak:
    rapido1:/blktests# ./check block/010
    ...
    rapido1:/blktests# echo scan > /sys/kernel/debug/kmemleak
    [  306.966708] kmemleak: 32 new suspected memory leaks (see /sys/kernel/debug/kmemleak)
    rapido1:/blktests# cat /sys/kernel/debug/kmemleak
    unreferenced object 0xffff88001f86d000 (size 4096):
      comm "modprobe", pid 231, jiffies 4294892415 (age 318.252s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff814b0379>] kmemleak_alloc+0x49/0xa0
        [<ffffffff810f180f>] kmem_cache_alloc+0x9f/0xe0
        [<ffffffff8124e45f>] badblocks_init+0x2f/0x60
        [<ffffffffa0019fae>] 0xffffffffa0019fae
        [<ffffffffa0021273>] nullb_device_badblocks_store+0x63/0x130 [null_blk]
        [<ffffffff810004cd>] do_one_initcall+0x3d/0x170
        [<ffffffff8109fe0d>] do_init_module+0x56/0x1e9
        [<ffffffff8109ebd7>] load_module+0x1c47/0x26a0
        [<ffffffff8109f819>] SyS_finit_module+0xa9/0xd0
        [<ffffffff814b4f60>] entry_SYSCALL_64_fastpath+0x13/0x94
    
    Fixes: 2f54a613c942 ("nullb: badbblocks support")
    Reviewed-by: Shaohua Li <shli@fb.com>
    Signed-off-by: David Disseldorp <ddiss@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d290178f00d483df27dc17bf41797355bd952d9d
Author: James Hogan <jhogan@kernel.org>
Date:   Wed Nov 15 21:17:55 2017 +0000

    cpufreq: Add Loongson machine dependencies
    
    
    [ Upstream commit 0d307935fefa6389eb726c6362351c162c949101 ]
    
    The MIPS loongson cpufreq drivers don't build unless configured for the
    correct machine type, due to dependency on machine specific architecture
    headers and symbols in machine specific platform code.
    
    More specifically loongson1-cpufreq.c uses RST_CPU_EN and RST_CPU,
    neither of which is defined in asm/mach-loongson32/regs-clk.h unless
    CONFIG_LOONGSON1_LS1B=y, and loongson2_cpufreq.c references
    loongson2_clockmod_table[], which is only defined in
    arch/mips/loongson64/lemote-2f/clock.c, i.e. when
    CONFIG_LEMOTE_MACH2F=y.
    
    Add these dependencies to Kconfig to avoid randconfig / allyesconfig
    build failures (e.g. when based on BMIPS which also has a cpufreq
    driver).
    
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb78d818c30d4fa700d24baf1d91d6337da272db
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Oct 15 21:24:49 2017 +0200

    ACPI / bus: Leave modalias empty for devices which are not present
    
    
    [ Upstream commit 10809bb976648ac58194a629e3d7af99e7400297 ]
    
    Most Bay and Cherry Trail devices use a generic DSDT with all possible
    peripheral devices present in the DSDT, with their _STA returning 0x00 or
    0x0f based on AML variables which describe what is actually present on
    the board.
    
    Since ACPI device objects with a 0x00 status (not present) still get an
    entry under /sys/bus/acpi/devices, and those entry had an acpi:PNPID
    modalias, userspace would end up loading modules for non present hardware.
    
    This commit fixes this by leaving the modalias empty for non present
    devices. This results in 10 modules less being loaded with a generic
    distro kernel config on my Cherry Trail test-device (a GPD pocket).
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82b90de5b111deaa09ec61594a6df84a426dceba
Author: Harald Freudenberger <freude@linux.vnet.ibm.com>
Date:   Fri Nov 17 16:32:22 2017 +0100

    s390/zcrypt: Fix wrong comparison leading to strange load balancing
    
    
    [ Upstream commit 0b0882672640ced4deeebf84da0b88b6389619c4 ]
    
    The function to decide if one zcrypt queue is better than
    another one compared two pointers instead of comparing the
    values where the pointers refer to. So within the same
    zcrypt card when load of each queue was equal just one queue
    was used. This effect only appears on relatively lite load,
    typically with one thread applications.
    
    This patch fixes the wrong comparison and now the counters
    show that requests are balanced equally over all available
    queues within the cards.
    
    There is no performance improvement coming with this fix.
    As long as the queue depth for an APQN queue is not touched,
    processing is not faster when requests are spread over
    queues within the same card hardware. So this fix only
    beautifies the lszcrypt counter printouts.
    
    Signed-off-by: Harald Freudenberger <freude@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18c128456eacb6fc022264f178c3a821180854c2
Author: Thomas Richter <tmricht@linux.vnet.ibm.com>
Date:   Thu Nov 16 14:26:36 2017 +0100

    s390/topology: fix compile error in file arch/s390/kernel/smp.c
    
    
    [ Upstream commit 38389ec84e835fa31a59b7dabb18343106a6d0d5 ]
    
    Commit 1887aa07b676
    ("s390/topology: add detection of dedicated vs shared CPUs")
    introduced following compiler error when CONFIG_SCHED_TOPOLOGY is not set.
    
     CC      arch/s390/kernel/smp.o
    ...
    arch/s390/kernel/smp.c: In function ‘smp_start_secondary’:
    arch/s390/kernel/smp.c:812:6: error: implicit declaration of function
            ‘topology_cpu_dedicated’; did you mean ‘topology_cpu_init’?
    
    This patch fixes the compiler error by adding function
    topology_cpu_dedicated() to return false when this config option is
    not defined.
    
    Signed-off-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71686d2a17592a79c7174efad05ca79d3270b30d
Author: James Smart <jsmart2021@gmail.com>
Date:   Fri Nov 10 15:38:45 2017 -0800

    nvmet-fc: correct ref counting error when deferred rcv used
    
    
    [ Upstream commit 619c62dcc62b957d17cccde2081cad527b020883 ]
    
    Whenever a cmd is received a reference is taken while looking up the
    queue. The reference is removed after the cmd is done as the iod is
    returned for reuse. The fod may be reused for a deferred (recevied but
    no job context) cmd.  Existing code removes the reference only if the
    fod is not reused for another command. Given the fod may be used for
    one or more ios, although a reference was taken per io, it won't be
    matched on the frees.
    
    Remove the reference on every fod free. This pairs the references to
    each io.
    
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93a4bcf2c4252a518a128df1d017a7d5b1a814c2
Author: Minwoo Im <minwoo.im.dev@gmail.com>
Date:   Fri Nov 17 01:34:24 2017 +0900

    nvme-pci: avoid hmb desc array idx out-of-bound when hmmaxd set.
    
    
    [ Upstream commit 244a8fe40a09c218622eb9927b9090b0a9b73a1a ]
    
    hmb descriptor idx out-of-bound occurs in case of below conditions.
    preferred = 128MiB
    chunk_size = 4MiB
    hmmaxd = 1
    
    Current code will not allow rmmod which will free hmb descriptors
    to be done successfully in above case.
    
    "descs[i]" will be set in for-loop without seeing any conditions
    related to "max_entries" after a single "descs" was allocated by
    (max_entries = 1) in this case.
    
    Added a condition into for-loop to check index of descriptors.
    
    Fixes: 044a9df1("nvme-pci: implement the HMB entry number and size limitations")
    Signed-off-by: Minwoo Im <minwoo.im.dev@gmail.com>
    Reviewed-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 128dc55f891c79535dbf278e332f0f8fedfa7469
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Nov 9 01:12:03 2017 -0500

    nvme-pci: disable APST on Samsung SSD 960 EVO + ASUS PRIME B350M-A
    
    
    [ Upstream commit 8427bbc224863e14d905c87920d4005cb3e88ac3 ]
    
    The NVMe device in question drops off the PCIe bus after system suspend.
    I've tried several approaches to workaround this issue, but none of them
    works:
    - NVME_QUIRK_DELAY_BEFORE_CHK_RDY
    - NVME_QUIRK_NO_DEEPEST_PS
    - Disable APST before controller shutdown
    - Delay between controller shutdown and system suspend
    - Explicitly set power state to 0 before controller shutdown
    
    Fortunately it's a desktop, so disable APST won't hurt the battery.
    
    Also, change the quirk function name to reflect it's for vendor
    combination quirks.
    
    BugLink: https://bugs.launchpad.net/bugs/1705748
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7af5f9137c93bd69384a3d12d9f741b63f4d98c4
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Tue Oct 24 15:25:22 2017 +0300

    nvme-loop: check if queue is ready in queue_rq
    
    
    [ Upstream commit 9d7fab04b95e8c26014a9bfc1c943b8360b44c17 ]
    
    In case the queue is not LIVE (fully functional and connected at the nvmf
    level), we cannot allow any commands other than connect to pass through.
    
    Add a new queue state flag NVME_LOOP_Q_LIVE which is set after nvmf connect
    and cleared in queue teardown.
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db2044fc42305d2f8f92f24e16f223b66dff6cfe
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Tue Oct 24 15:25:21 2017 +0300

    nvme-fc: check if queue is ready in queue_rq
    
    
    [ Upstream commit 9e0ed16ab9a9aaf670b81c9cd05b5e50defed654 ]
    
    In case the queue is not LIVE (fully functional and connected at the nvmf
    level), we cannot allow any commands other than connect to pass through.
    
    Add a new queue state flag NVME_FC_Q_LIVE which is set after nvmf connect
    and cleared in queue teardown.
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26bd01c1affe663196e05302290c08f781d2e597
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Tue Oct 24 15:25:20 2017 +0300

    nvme-fabrics: introduce init command check for a queue that is not alive
    
    
    [ Upstream commit 48832f8d58cfedb2f9bee11bbfbb657efb42e7e7 ]
    
    When the fabrics queue is not alive and fully functional, no commands
    should be allowed to pass but connect (which moves the queue to a fully
    functional state). Any other command should be failed, with either
    temporary status BLK_STS_RESOUCE or permanent status BLK_STS_IOERR.
    
    This is shared across all fabrics, hence move the check to fabrics
    library.
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d46e961f056aaec155bc3e21cf8e31449b5d2117
Author: Liran Alon <liran.alon@oracle.com>
Date:   Sun Nov 5 16:07:43 2017 +0200

    KVM: nVMX: Fix vmx_check_nested_events() return value in case an event was reinjected to L2
    
    
    [ Upstream commit 917dc6068bc12a2dafffcf0e9d405ddb1b8780cb ]
    
    vmx_check_nested_events() should return -EBUSY only in case there is a
    pending L1 event which requires a VMExit from L2 to L1 but such a
    VMExit is currently blocked. Such VMExits are blocked either
    because nested_run_pending=1 or an event was reinjected to L2.
    vmx_check_nested_events() should return 0 in case there are no
    pending L1 events which requires a VMExit from L2 to L1 or if
    a VMExit from L2 to L1 was done internally.
    
    However, upstream commit which introduced blocking in case an event was
    reinjected to L2 (commit acc9ab601327 ("KVM: nVMX: Fix pending events
    injection")) contains a bug: It returns -EBUSY even if there are no
    pending L1 events which requires VMExit from L2 to L1.
    
    This commit fix this issue.
    
    Fixes: acc9ab601327 ("KVM: nVMX: Fix pending events injection")
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b689fc5b79d547f88d464e021d6de815d8612ac3
Author: Nikita Leshenko <nikita.leshchenko@oracle.com>
Date:   Sun Nov 5 15:52:33 2017 +0200

    KVM: x86: ioapic: Preserve read-only values in the redirection table
    
    
    [ Upstream commit b200dded0a6974a3b69599832b2203483920ab25 ]
    
    According to 82093AA (IOAPIC) manual, Remote IRR and Delivery Status are
    read-only. QEMU implements the bits as RO in commit 479c2a1cb7fb
    ("ioapic: keep RO bits for IOAPIC entry").
    
    Signed-off-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Liran Alon <liran.alon@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: Steve Rutherford <srutherford@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 408a265107397dc55b415628880a8f6b14dc7044
Author: Nikita Leshenko <nikita.leshchenko@oracle.com>
Date:   Sun Nov 5 15:52:32 2017 +0200

    KVM: x86: ioapic: Clear Remote IRR when entry is switched to edge-triggered
    
    
    [ Upstream commit a8bfec2930525808c01f038825d1df3904638631 ]
    
    Some OSes (Linux, Xen) use this behavior to clear the Remote IRR bit for
    IOAPICs without an EOI register. They simulate the EOI message manually
    by changing the trigger mode to edge and then back to level, with the
    entry being masked during this.
    
    QEMU implements this feature in commit ed1263c363c9
    ("ioapic: clear remote irr bit for edge-triggered interrupts")
    
    As a side effect, this commit removes an incorrect behavior where Remote
    IRR was cleared when the redirection table entry was rewritten. This is not
    consistent with the manual and also opens an opportunity for a strange
    behavior when a redirection table entry is modified from an interrupt
    handler that handles the same entry: The modification will clear the
    Remote IRR bit even though the interrupt handler is still running.
    
    Signed-off-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Liran Alon <liran.alon@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: Steve Rutherford <srutherford@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b501603be9dfc38725feb8dddf1bdf2bbf3bd6ea
Author: Nikita Leshenko <nikita.leshchenko@oracle.com>
Date:   Sun Nov 5 15:52:29 2017 +0200

    KVM: x86: ioapic: Fix level-triggered EOI and IOAPIC reconfigure race
    
    
    [ Upstream commit 0fc5a36dd6b345eb0d251a65c236e53bead3eef7 ]
    
    KVM uses ioapic_handled_vectors to track vectors that need to notify the
    IOAPIC on EOI. The problem is that IOAPIC can be reconfigured while an
    interrupt with old configuration is pending or running and
    ioapic_handled_vectors only remembers the newest configuration;
    thus EOI from the old interrupt is not delievered to the IOAPIC.
    
    A previous commit db2bdcbbbd32
    ("KVM: x86: fix edge EOI and IOAPIC reconfig race")
    addressed this issue by adding pending edge-triggered interrupts to
    ioapic_handled_vectors, fixing this race for edge-triggered interrupts.
    The commit explicitly ignored level-triggered interrupts,
    but this race applies to them as well:
    
    1) IOAPIC sends a level triggered interrupt vector to VCPU0
    2) VCPU0's handler deasserts the irq line and reconfigures the IOAPIC
       to route the vector to VCPU1. The reconfiguration rewrites only the
       upper 32 bits of the IOREDTBLn register. (Causes KVM to update
       ioapic_handled_vectors for VCPU0 and it no longer includes the vector.)
    3) VCPU0 sends EOI for the vector, but it's not delievered to the
       IOAPIC because the ioapic_handled_vectors doesn't include the vector.
    4) New interrupts are not delievered to VCPU1 because remote_irr bit
       is set forever.
    
    Therefore, the correct behavior is to add all pending and running
    interrupts to ioapic_handled_vectors.
    
    This commit introduces a slight performance hit similar to
    commit db2bdcbbbd32 ("KVM: x86: fix edge EOI and IOAPIC reconfig race")
    for the rare case that the vector is reused by a non-IOAPIC source on
    VCPU0. We prefer to keep solution simple and not handle this case just
    as the original commit does.
    
    Fixes: db2bdcbbbd32 ("KVM: x86: fix edge EOI and IOAPIC reconfig race")
    
    Signed-off-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Liran Alon <liran.alon@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0a3691bf2e5692ec3acf60aea8dc098a6ce2eae
Author: David Hildenbrand <david@redhat.com>
Date:   Tue Nov 7 18:04:05 2017 +0100

    KVM: x86: fix em_fxstor() sleeping while in atomic
    
    
    [ Upstream commit 4d772cb85f64c16eca00177089ecb3cd5d292120 ]
    
    Commit 9d643f63128b ("KVM: x86: avoid large stack allocations in
    em_fxrstor") optimize the stack size, but introduced a guest memory access
    which might sleep while in atomic.
    
    Fix it by introducing, again, a second fxregs_state. Try to avoid
    large stacks by using noinline. Add some helpful comments.
    
    Reported by syzbot:
    
    in_atomic(): 1, irqs_disabled(): 0, pid: 2909, name: syzkaller879109
    2 locks held by syzkaller879109/2909:
      #0:  (&vcpu->mutex){+.+.}, at: [<ffffffff8106222c>] vcpu_load+0x1c/0x70
    arch/x86/kvm/../../../virt/kvm/kvm_main.c:154
      #1:  (&kvm->srcu){....}, at: [<ffffffff810dd162>] vcpu_enter_guest
    arch/x86/kvm/x86.c:6983 [inline]
      #1:  (&kvm->srcu){....}, at: [<ffffffff810dd162>] vcpu_run
    arch/x86/kvm/x86.c:7061 [inline]
      #1:  (&kvm->srcu){....}, at: [<ffffffff810dd162>]
    kvm_arch_vcpu_ioctl_run+0x1bc2/0x58b0 arch/x86/kvm/x86.c:7222
    CPU: 1 PID: 2909 Comm: syzkaller879109 Not tainted 4.13.0-rc4-next-20170811
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Call Trace:
      __dump_stack lib/dump_stack.c:16 [inline]
      dump_stack+0x194/0x257 lib/dump_stack.c:52
      ___might_sleep+0x2b2/0x470 kernel/sched/core.c:6014
      __might_sleep+0x95/0x190 kernel/sched/core.c:5967
      __might_fault+0xab/0x1d0 mm/memory.c:4383
      __copy_from_user include/linux/uaccess.h:71 [inline]
      __kvm_read_guest_page+0x58/0xa0
    arch/x86/kvm/../../../virt/kvm/kvm_main.c:1771
      kvm_vcpu_read_guest_page+0x44/0x60
    arch/x86/kvm/../../../virt/kvm/kvm_main.c:1791
      kvm_read_guest_virt_helper+0x76/0x140 arch/x86/kvm/x86.c:4407
      kvm_read_guest_virt_system+0x3c/0x50 arch/x86/kvm/x86.c:4466
      segmented_read_std+0x10c/0x180 arch/x86/kvm/emulate.c:819
      em_fxrstor+0x27b/0x410 arch/x86/kvm/emulate.c:4022
      x86_emulate_insn+0x55d/0x3c50 arch/x86/kvm/emulate.c:5471
      x86_emulate_instruction+0x411/0x1ca0 arch/x86/kvm/x86.c:5698
      kvm_mmu_page_fault+0x18b/0x2c0 arch/x86/kvm/mmu.c:4854
      handle_ept_violation+0x1fc/0x5e0 arch/x86/kvm/vmx.c:6400
      vmx_handle_exit+0x281/0x1ab0 arch/x86/kvm/vmx.c:8718
      vcpu_enter_guest arch/x86/kvm/x86.c:6999 [inline]
      vcpu_run arch/x86/kvm/x86.c:7061 [inline]
      kvm_arch_vcpu_ioctl_run+0x1cee/0x58b0 arch/x86/kvm/x86.c:7222
      kvm_vcpu_ioctl+0x64c/0x1010 arch/x86/kvm/../../../virt/kvm/kvm_main.c:2591
      vfs_ioctl fs/ioctl.c:45 [inline]
      do_vfs_ioctl+0x1b1/0x1520 fs/ioctl.c:685
      SYSC_ioctl fs/ioctl.c:700 [inline]
      SyS_ioctl+0x8f/0xc0 fs/ioctl.c:691
      entry_SYSCALL_64_fastpath+0x1f/0xbe
    RIP: 0033:0x437fc9
    RSP: 002b:00007ffc7b4d5ab8 EFLAGS: 00000206 ORIG_RAX: 0000000000000010
    RAX: ffffffffffffffda RBX: 00000000004002b0 RCX: 0000000000437fc9
    RDX: 0000000000000000 RSI: 000000000000ae80 RDI: 0000000000000005
    RBP: 0000000000000086 R08: 0000000000000000 R09: 0000000020ae8000
    R10: 0000000000009120 R11: 0000000000000206 R12: 0000000000000000
    R13: 0000000000000004 R14: 0000000000000004 R15: 0000000020077000
    
    Fixes: 9d643f63128b ("KVM: x86: avoid large stack allocations in em_fxrstor")
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e7c270a1e60fcc16e8bcda6c6d659b43eba1ddb
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Sun Nov 5 16:54:49 2017 -0800

    KVM: nVMX: Fix mmu context after VMLAUNCH/VMRESUME failure
    
    
    [ Upstream commit 5af4157388adad82c339e3742fb6b67840721347 ]
    
    Commit 4f350c6dbcb (kvm: nVMX: Handle deferred early VMLAUNCH/VMRESUME failure
    properly) can result in L1(run kvm-unit-tests/run_tests.sh vmx_controls in L1)
    null pointer deference and also L0 calltrace when EPT=0 on both L0 and L1.
    
    In L1:
    
    BUG: unable to handle kernel paging request at ffffffffc015bf8f
     IP: vmx_vcpu_run+0x202/0x510 [kvm_intel]
     PGD 146e13067 P4D 146e13067 PUD 146e15067 PMD 3d2686067 PTE 3d4af9161
     Oops: 0003 [#1] PREEMPT SMP
     CPU: 2 PID: 1798 Comm: qemu-system-x86 Not tainted 4.14.0-rc4+ #6
     RIP: 0010:vmx_vcpu_run+0x202/0x510 [kvm_intel]
     Call Trace:
     WARNING: kernel stack frame pointer at ffffb86f4988bc18 in qemu-system-x86:1798 has bad value 0000000000000002
    
    In L0:
    
    -----------[ cut here ]------------
     WARNING: CPU: 6 PID: 4460 at /home/kernel/linux/arch/x86/kvm//vmx.c:9845 vmx_inject_page_fault_nested+0x130/0x140 [kvm_intel]
     CPU: 6 PID: 4460 Comm: qemu-system-x86 Tainted: G           OE   4.14.0-rc7+ #25
     RIP: 0010:vmx_inject_page_fault_nested+0x130/0x140 [kvm_intel]
     Call Trace:
      paging64_page_fault+0x500/0xde0 [kvm]
      ? paging32_gva_to_gpa_nested+0x120/0x120 [kvm]
      ? nonpaging_page_fault+0x3b0/0x3b0 [kvm]
      ? __asan_storeN+0x12/0x20
      ? paging64_gva_to_gpa+0xb0/0x120 [kvm]
      ? paging64_walk_addr_generic+0x11a0/0x11a0 [kvm]
      ? lock_acquire+0x2c0/0x2c0
      ? vmx_read_guest_seg_ar+0x97/0x100 [kvm_intel]
      ? vmx_get_segment+0x2a6/0x310 [kvm_intel]
      ? sched_clock+0x1f/0x30
      ? check_chain_key+0x137/0x1e0
      ? __lock_acquire+0x83c/0x2420
      ? kvm_multiple_exception+0xf2/0x220 [kvm]
      ? debug_check_no_locks_freed+0x240/0x240
      ? debug_smp_processor_id+0x17/0x20
      ? __lock_is_held+0x9e/0x100
      kvm_mmu_page_fault+0x90/0x180 [kvm]
      kvm_handle_page_fault+0x15c/0x310 [kvm]
      ? __lock_is_held+0x9e/0x100
      handle_exception+0x3c7/0x4d0 [kvm_intel]
      vmx_handle_exit+0x103/0x1010 [kvm_intel]
      ? kvm_arch_vcpu_ioctl_run+0x1628/0x2e20 [kvm]
    
    The commit avoids to load host state of vmcs12 as vmcs01's guest state
    since vmcs12 is not modified (except for the VM-instruction error field)
    if the checking of vmcs control area fails. However, the mmu context is
    switched to nested mmu in prepare_vmcs02() and it will not be reloaded
    since load_vmcs12_host_state() is skipped when nested VMLAUNCH/VMRESUME
    fails. This patch fixes it by reloading mmu context when nested
    VMLAUNCH/VMRESUME fails.
    
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Jim Mattson <jmattson@google.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f5500a63455815c45b28aa740fce91b49630188
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Sun Nov 5 16:54:47 2017 -0800

    KVM: X86: Fix operand/address-size during instruction decoding
    
    
    [ Upstream commit 3853be2603191829b442b64dac6ae8ba0c027bf9 ]
    
    Pedro reported:
      During tests that we conducted on KVM, we noticed that executing a "PUSH %ES"
      instruction under KVM produces different results on both memory and the SP
      register depending on whether EPT support is enabled. With EPT the SP is
      reduced by 4 bytes (and the written value is 0-padded) but without EPT support
      it is only reduced by 2 bytes. The difference can be observed when the CS.DB
      field is 1 (32-bit) but not when it's 0 (16-bit).
    
    The internal segment descriptor cache exist even in real/vm8096 mode. The CS.D
    also should be respected instead of just default operand/address-size/66H
    prefix/67H prefix during instruction decoding. This patch fixes it by also
    adjusting operand/address-size according to CS.D.
    
    Reported-by: Pedro Fonseca <pfonseca@cs.washington.edu>
    Tested-by: Pedro Fonseca <pfonseca@cs.washington.edu>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: Pedro Fonseca <pfonseca@cs.washington.edu>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df54fc5c28d2921ae4eb0d3401db929cb0c62e56
Author: Liran Alon <liran.alon@oracle.com>
Date:   Sun Nov 5 16:56:34 2017 +0200

    KVM: x86: Don't re-execute instruction when not passing CR2 value
    
    
    [ Upstream commit 9b8ae63798cb97e785a667ff27e43fa6220cb734 ]
    
    In case of instruction-decode failure or emulation failure,
    x86_emulate_instruction() will call reexecute_instruction() which will
    attempt to use the cr2 value passed to x86_emulate_instruction().
    However, when x86_emulate_instruction() is called from
    emulate_instruction(), cr2 is not passed (passed as 0) and therefore
    it doesn't make sense to execute reexecute_instruction() logic at all.
    
    Fixes: 51d8b66199e9 ("KVM: cleanup emulate_instruction")
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbd81f09793b8ab0696782da0c081599b6620efc
Author: Liran Alon <liran.alon@oracle.com>
Date:   Sun Nov 5 16:56:33 2017 +0200

    KVM: x86: emulator: Return to user-mode on L1 CPL=0 emulation failure
    
    
    [ Upstream commit 1f4dcb3b213235e642088709a1c54964d23365e9 ]
    
    On this case, handle_emulation_failure() fills kvm_run with
    internal-error information which it expects to be delivered
    to user-mode for further processing.
    However, the code reports a wrong return-value which makes KVM to never
    return to user-mode on this scenario.
    
    Fixes: 6d77dbfc88e3 ("KVM: inject #UD if instruction emulation fails and exit to
    userspace")
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d003b4bfda3b3b8f42fba2236c774084e437cad0
Author: Liran Alon <liran.alon@oracle.com>
Date:   Mon Nov 6 16:15:10 2017 +0200

    KVM: nVMX/nSVM: Don't intercept #UD when running L2
    
    
    [ Upstream commit ac9b305caa0df6f5b75d294e4b86c1027648991e ]
    
    When running L2, #UD should be intercepted by L1 or just forwarded
    directly to L2. It should not reach L0 x86 emulator.
    Therefore, set intercept for #UD only based on L1 exception-bitmap.
    
    Also add WARN_ON_ONCE() on L0 #UD intercept handlers to make sure
    it is never reached while running L2.
    
    This improves commit ae1f57670703 ("KVM: nVMX: Do not emulate #UD while
    in guest mode") by removing an unnecessary exit from L2 to L0 on #UD
    when L1 doesn't intercept it.
    
    In addition, SVM L0 #UD intercept handler doesn't handle correctly the
    case it is raised from L2. In this case, it should forward the #UD to
    guest instead of x86 emulator. As done in VMX #UD intercept handler.
    This commit fixes this issue as-well.
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1881befacbe7f91b49544b0860b65eb6af93429
Author: Abhishek Goel <huntbag@linux.vnet.ibm.com>
Date:   Wed Nov 15 14:10:02 2017 +0530

    cpupower : Fix cpupower working when cpu0 is offline
    
    
    [ Upstream commit dbdc468f35ee827cab2753caa1c660bdb832243a ]
    
    cpuidle_monitor used to assume that cpu0 is always online which is not
    a valid assumption on POWER machines. This patch fixes this by getting
    the cpu on which the current thread is running, instead of always using
    cpu0 for monitoring which may not be online.
    
    Signed-off-by: Abhishek Goel <huntbag@linux.vnet.ibm.com>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d285c0440fe784e39e9110cc75ca21719b92ead
Author: Abhishek Goel <huntbag@linux.vnet.ibm.com>
Date:   Tue Nov 7 15:17:55 2017 +0530

    cpupowerutils: bench - Fix cpu online check
    
    
    [ Upstream commit 53d1cd6b125fb9d69303516a1179ebc3b72f797a ]
    
    cpupower_is_cpu_online was incorrectly checking for 0. This patch fixes
    this by checking for 1 when the cpu is online.
    
    Signed-off-by: Abhishek Goel <huntbag@linux.vnet.ibm.com>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71341a8a703752278bbaf6e4502f78ff50e645f7
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Mon Oct 30 11:14:38 2017 -0600

    Btrfs: bail out gracefully rather than BUG_ON
    
    
    [ Upstream commit 56a0e706fcf870270878d6d72b71092ae42d229c ]
    
    If a file's DIR_ITEM key is invalid (due to memory errors) and gets
    written to disk, a future lookup_path can end up with kernel panic due
    to BUG_ON().
    
    This gets rid of the BUG_ON(), meanwhile output the corrupted key and
    return ENOENT if it's invalid.
    
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reported-by: Guillaume Bouchard <bouchard@mercs-eng.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a8215c0a91e9182761d52e933fd635c7a7a47cd
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Mon Oct 23 09:58:46 2017 +0300

    btrfs: Fix transaction abort during failure in btrfs_rm_dev_item
    
    
    [ Upstream commit 5e9f2ad5b2904a7e81df6d9a3dbef29478952eac ]
    
    btrfs_rm_dev_item calls several function under an active transaction,
    however it fails to abort it if an error happens. Fix this by adding
    explicit btrfs_abort_transaction/btrfs_end_transaction calls.
    
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08bb42086b3e9c5619e6e82aed576eae8a6583ef
Author: Stefan Schake <stschake@gmail.com>
Date:   Fri Nov 10 02:05:06 2017 +0100

    drm/vc4: Account for interrupts in flight
    
    
    [ Upstream commit 253696ccd613fbdaa5aba1de44c461a058e0a114 ]
    
    Synchronously disable the IRQ to make the following cancel_work_sync
    invocation effective.
    
    An interrupt in flight could enqueue further overflow mem work. As we
    free the binner BO immediately following vc4_irq_uninstall this caused
    a NULL pointer dereference in the work callback vc4_overflow_mem_work.
    
    Link: https://github.com/anholt/linux/issues/114
    Signed-off-by: Stefan Schake <stschake@gmail.com>
    Fixes: d5b1a78a772f ("drm/vc4: Add support for drawing 3D frames.")
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510275907-993-2-git-send-email-stschake@gmail.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdf19237e16f5495dab1edb0ec5eb60049d02a60
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Wed Oct 11 07:01:31 2017 +0200

    VFS: Handle lazytime in do_mount()
    
    commit d7ee946942bdd12394809305e3df05aa4c8b7b8f upstream.
    
    Since commit e462ec50cb5fa ("VFS: Differentiate mount flags (MS_*) from
    internal superblock flags") the lazytime mount option doesn't get passed
    on anymore.
    
    Fix the issue by handling the option in do_mount().
    
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Markus Trippelsdorf <markus@trippelsdorf.de>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Holger Hoffstätte <holger@applied-asynchrony.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7fec01990e65967855790877ba829d67ebde255
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Tue Dec 26 20:34:24 2017 -0800

    scsi: aacraid: Fix hang in kdump
    
    commit c5313ae8e4e037bfaf5e56cb8d6efdb8e92ce437 upstream.
    
    Driver attempts to perform a device scan and device add after coming out
    of reset. At times when the kdump kernel loads and it tries to perform
    eh recovery, the device scan hangs since its commands are blocked because
    of the eh recovery. This should have shown up in normal eh recovery path
    (Should have been obvious)
    
    Remove the code that performs scanning.I can live without the rescanning
    support in the stable kernels but a hanging kdump/eh recovery needs to be
    fixed.
    
    Fixes: a2d0321dd532901e (scsi: aacraid: Reload offlined drives after controller reset)
    Reported-by: Douglas Miller <dougmill@linux.vnet.ibm.com>
    Tested-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Fixes: a2d0321dd532901e (scsi: aacraid: Reload offlined drives after controller reset)
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 791274e773952f80990bc10757d0281bffbe6955
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Tue Dec 26 20:34:22 2017 -0800

    scsi: aacraid: Fix udev inquiry race condition
    
    commit f4e8708d3104437fd7716e957f38c265b0c509ef upstream.
    
    When udev requests for a devices inquiry string, it might create multiple
    threads causing a race condition on the shared inquiry resource string.
    
    Created a buffer with the string for each thread.
    
    Fixes: 3bc8070fb75b3315 ([SCSI] aacraid: SMC vendor identification)
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 516868c59d82705b7c636ec2bdd3d6cb0e989b06
Author: Mike Rapoport <rppt@linux.vnet.ibm.com>
Date:   Wed Jan 17 20:27:11 2018 +0200

    ima/policy: fix parsing of fsuuid
    
    commit 36447456e1cca853188505f2a964dbbeacfc7a7a upstream.
    
    The switch to uuid_t invereted the logic of verfication that &entry->fsuuid
    is zero during parsing of "fsuuid=" rule. Instead of making sure the
    &entry->fsuuid field is not attempted to be overwritten, we bail out for
    perfectly correct rule.
    
    Fixes: 787d8c530af7 ("ima/policy: switch to use uuid_t")
    Signed-off-by: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80baea0e6cf36f64905fd7d50b4fe2fe846b6a4a
Author: Lyude Paul <lyude@redhat.com>
Date:   Tue Dec 12 14:31:30 2017 -0500

    igb: Free IRQs when device is hotplugged
    
    commit 888f22931478a05bc81ceb7295c626e1292bf0ed upstream.
    
    Recently I got a Caldigit TS3 Thunderbolt 3 dock, and noticed that upon
    hotplugging my kernel would immediately crash due to igb:
    
    [  680.825801] kernel BUG at drivers/pci/msi.c:352!
    [  680.828388] invalid opcode: 0000 [#1] SMP
    [  680.829194] Modules linked in: igb(O) thunderbolt i2c_algo_bit joydev vfat fat btusb btrtl btbcm btintel bluetooth ecdh_generic hp_wmi sparse_keymap rfkill wmi_bmof iTCO_wdt intel_rapl x86_pkg_temp_thermal coretemp crc32_pclmul snd_pcm rtsx_pci_ms mei_me snd_timer memstick snd pcspkr mei soundcore i2c_i801 tpm_tis psmouse shpchp wmi tpm_tis_core tpm video hp_wireless acpi_pad rtsx_pci_sdmmc mmc_core crc32c_intel serio_raw rtsx_pci mfd_core xhci_pci xhci_hcd i2c_hid i2c_core [last unloaded: igb]
    [  680.831085] CPU: 1 PID: 78 Comm: kworker/u16:1 Tainted: G           O     4.15.0-rc3Lyude-Test+ #6
    [  680.831596] Hardware name: HP HP ZBook Studio G4/826B, BIOS P71 Ver. 01.03 06/09/2017
    [  680.832168] Workqueue: kacpi_hotplug acpi_hotplug_work_fn
    [  680.832687] RIP: 0010:free_msi_irqs+0x180/0x1b0
    [  680.833271] RSP: 0018:ffffc9000030fbf0 EFLAGS: 00010286
    [  680.833761] RAX: ffff8803405f9c00 RBX: ffff88033e3d2e40 RCX: 000000000000002c
    [  680.834278] RDX: 0000000000000000 RSI: 00000000000000ac RDI: ffff880340be2178
    [  680.834832] RBP: 0000000000000000 R08: ffff880340be1ff0 R09: ffff8803405f9c00
    [  680.835342] R10: 0000000000000000 R11: 0000000000000040 R12: ffff88033d63a298
    [  680.835822] R13: ffff88033d63a000 R14: 0000000000000060 R15: ffff880341959000
    [  680.836332] FS:  0000000000000000(0000) GS:ffff88034f440000(0000) knlGS:0000000000000000
    [  680.836817] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  680.837360] CR2: 000055e64044afdf CR3: 0000000001c09002 CR4: 00000000003606e0
    [  680.837954] Call Trace:
    [  680.838853]  pci_disable_msix+0xce/0xf0
    [  680.839616]  igb_reset_interrupt_capability+0x5d/0x60 [igb]
    [  680.840278]  igb_remove+0x9d/0x110 [igb]
    [  680.840764]  pci_device_remove+0x36/0xb0
    [  680.841279]  device_release_driver_internal+0x157/0x220
    [  680.841739]  pci_stop_bus_device+0x7d/0xa0
    [  680.842255]  pci_stop_bus_device+0x2b/0xa0
    [  680.842722]  pci_stop_bus_device+0x3d/0xa0
    [  680.843189]  pci_stop_and_remove_bus_device+0xe/0x20
    [  680.843627]  trim_stale_devices+0xf3/0x140
    [  680.844086]  trim_stale_devices+0x94/0x140
    [  680.844532]  trim_stale_devices+0xa6/0x140
    [  680.845031]  ? get_slot_status+0x90/0xc0
    [  680.845536]  acpiphp_check_bridge.part.5+0xfe/0x140
    [  680.846021]  acpiphp_hotplug_notify+0x175/0x200
    [  680.846581]  ? free_bridge+0x100/0x100
    [  680.847113]  acpi_device_hotplug+0x8a/0x490
    [  680.847535]  acpi_hotplug_work_fn+0x1a/0x30
    [  680.848076]  process_one_work+0x182/0x3a0
    [  680.848543]  worker_thread+0x2e/0x380
    [  680.848963]  ? process_one_work+0x3a0/0x3a0
    [  680.849373]  kthread+0x111/0x130
    [  680.849776]  ? kthread_create_worker_on_cpu+0x50/0x50
    [  680.850188]  ret_from_fork+0x1f/0x30
    [  680.850601] Code: 43 14 85 c0 0f 84 d5 fe ff ff 31 ed eb 0f 83 c5 01 39 6b 14 0f 86 c5 fe ff ff 8b 7b 10 01 ef e8 b7 e4 d2 ff 48 83 78 70 00 74 e3 <0f> 0b 49 8d b5 a0 00 00 00 e8 62 6f d3 ff e9 c7 fe ff ff 48 8b
    [  680.851497] RIP: free_msi_irqs+0x180/0x1b0 RSP: ffffc9000030fbf0
    
    As it turns out, normally the freeing of IRQs that would fix this is called
    inside of the scope of __igb_close(). However, since the device is
    already gone by the point we try to unregister the netdevice from the
    driver due to a hotplug we end up seeing that the netif isn't present
    and thus, forget to free any of the device IRQs.
    
    So: make sure that if we're in the process of dismantling the netdev, we
    always allow __igb_close() to be called so that IRQs may be freed
    normally. Additionally, only allow igb_close() to be called from
    __igb_close() if it hasn't already been called for the given adapter.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Fixes: 9474933caf21 ("igb: close/suspend race in netif_device_detach")
    Cc: Todd Fujinaka <todd.fujinaka@intel.com>
    Cc: Stephen Hemminger <stephen@networkplumber.org>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6a5fe3180369479988ef4c44f41d9c00e102dbd
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:57:13 2017 -0800

    mtd: nand: denali_pci: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit d822401d1c6898a4a4ee03977b78b8cec402e88a upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/mtd/nand/denali_pci.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Acked-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf8c4b3dd7bfd47920e61ad5f67c827a2e66c01b
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:54:26 2017 -0800

    gpio: ath79: add missing MODULE_DESCRIPTION/LICENSE
    
    commit 539340f37e6d6ed4cd93e8e18c9b2e4eafd4b842 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/gpio/gpio-ath79.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION is also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Acked-by: Alban Bedel <albeu@free.fr>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 925e26b922c525e21a905bf99b4b20247d521c4f
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:54:52 2017 -0800

    gpio: iop: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit 97b03136e1b637d7a9d2274c099e44ecf23f1103 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/gpio/gpio-iop.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aecad437fd709b3eeb9ed7eb336646e413999139
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:58:27 2017 -0800

    power: reset: zx-reboot: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit 348c7cf5fcbcb68838255759d4cb45d039af36d2 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/power/reset/zx-reboot.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c76133afb9033e47a4b944f69a6d8f81450a9983
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Tue Dec 26 14:53:55 2017 -0800

    HID: wacom: Fix reporting of touch toggle (WACOM_HID_WD_MUTE_DEVICE) events
    
    commit 403c0f681c1964ff1db8c2fb8de8c4067779d081 upstream.
    
    Touch toggle softkeys send a '1' while pressed and a '0' while released,
    requring the kernel to keep track of wether touch should be enabled or
    disabled. The code does not handle the state transitions properly,
    however. If the key is pressed repeatedly, the following four states
    of states are cycled through (assuming touch starts out enabled):
    
    Press:   shared->is_touch_on => 0, SW_MUTE_DEVICE => 1
    Release: shared->is_touch_on => 0, SW_MUTE_DEVICE => 1
    Press:   shared->is_touch_on => 1, SW_MUTE_DEVICE => 0
    Release: shared->is_touch_on => 1, SW_MUTE_DEVICE => 1
    
    The hardware always properly enables/disables touch when the key is
    pressed but applications that listen for SW_MUTE_DEVICE events to provide
    feedback about the state will only ever show touch as being enabled while
    the key is held, and only every-other time. This sequence occurs because
    the fallthrough WACOM_HID_WD_TOUCHONOFF case is always handled, and it
    uses the value of the *local* is_touch_on variable as the value to
    report to userspace. The local value is equal to the shared value when
    the button is pressed, but equal to zero when the button is released.
    
    Reporting the shared value to userspace fixes this problem, but the
    fallthrough case needs to update the shared value in an incompatible
    way (which is why the local variable was introduced in the first place).
    To work around this, we just handle both cases in a single block of code
    and update the shared variable as appropriate.
    
    Fixes: d793ff8187 ("HID: wacom: generic: support touch on/off softkey")
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Reviewed-by: Aaron Skomra <aaron.skomra@wacom.com>
    Tested-by: Aaron Skomra <aaron.skomra@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3f7e6f2e03396df38491a484c6381e9301ff0f6
Author: Aaron Armstrong Skomra <skomra@gmail.com>
Date:   Thu Dec 7 12:31:56 2017 -0800

    HID: wacom: EKR: ensure devres groups at higher indexes are released
    
    commit 791ae273731fa85d3332e45064dab177ae663e80 upstream.
    
    Background: ExpressKey Remotes communicate their events via usb dongle.
    Each dongle can hold up to 5 pairings at one time and one EKR (identified
    by its serial number) can unfortunately be paired with its dongle
    more than once. The pairing takes place in a round-robin fashion.
    
    Input devices are only created once per EKR, when a new serial number
    is seen in the list of pairings. However, if a device is created for
    a "higher" paring index and subsequently a second pairing occurs at a
    lower pairing index, unpairing the remote with that serial number from
    any pairing index will currently cause a driver crash. This occurs
    infrequently, as two remotes are necessary to trigger this bug and most
    users have only one remote.
    
    As an illustration, to trigger the bug you need to have two remotes,
    and pair them in this order:
    
    1. slot 0 -> remote 1 (input device created for remote 1)
    2. slot 1 -> remote 1 (duplicate pairing - no device created)
    3. slot 2 -> remote 1 (duplicate pairing - no device created)
    4. slot 3 -> remote 1 (duplicate pairing - no device created)
    5. slot 4 -> remote 2 (input device created for remote 2)
    
    6. slot 0 -> remote 2 (1 destroyed and recreated at slot 1)
    7. slot 1 -> remote 2 (1 destroyed and recreated at slot 2)
    8. slot 2 -> remote 2 (1 destroyed and recreated at slot 3)
    9. slot 3 -> remote 2 (1 destroyed and not recreated)
    10. slot 4 -> remote 2 (2 was already in this slot so no changes)
    
    11. slot 0 -> remote 1 (The current code sees remote 2 was paired over in
                            one of the dongle slots it occupied and attempts
                            to remove all information about remote 2 [1]. It
                            calls wacom_remote_destroy_one for remote 2, but
                            the destroy function assumes the lowest index is
                            where the remote's input device was created. The
                            code "cleans up" the other remote 2 pairings
                            including the one which the input device was based
                            on, assuming they were were just duplicate
                            pairings. However, the cleanup doesn't call the
                            devres release function for the input device that
                            was created in slot 4).
    
    This issue is fixed by this commit.
    
    [1] Remote 2 should subsequently be re-created on the next packet from the
    EKR at the lowest numbered slot that it occupies (here slot 1).
    
    Fixes: f9036bd43602 ("HID: wacom: EKR: use devres groups to manage resources")
    Signed-off-by: Aaron Armstrong Skomra <aaron.skomra@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f41c8a003196df125b32ed8d78a66f9ea22ccce4
Author: Stephan Mueller <smueller@chronox.de>
Date:   Tue Jan 2 08:55:25 2018 +0100

    crypto: af_alg - whitelist mask and type
    
    commit bb30b8848c85e18ca7e371d0a869e94b3e383bdf upstream.
    
    The user space interface allows specifying the type and mask field used
    to allocate the cipher. Only a subset of the possible flags are intended
    for user space. Therefore, white-list the allowed flags.
    
    In case the user space caller uses at least one non-allowed flag, EINVAL
    is returned.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9788e278cec29fef2e837633fa1b97030417e78
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Fri Jan 19 12:04:33 2018 +0000

    crypto: sha3-generic - fixes for alignment and big endian operation
    
    commit c013cee99d5a18aec8c71fee8f5f41369cd12595 upstream.
    
    Ensure that the input is byte swabbed before injecting it into the
    SHA3 transform. Use the get_unaligned() accessor for this so that
    we don't perform unaligned access inadvertently on architectures
    that do not support that.
    
    Fixes: 53964b9ee63b7075 ("crypto: sha3 - Add SHA-3 hash algorithm")
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 199d97815d32acd0f1d20cbd04e39e3dead59a8b
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Tue Dec 26 17:21:16 2017 +0100

    crypto: inside-secure - avoid unmapping DMA memory that was not mapped
    
    commit c957f8b3e2e54b29f53ef69decc87bbc858c9b58 upstream.
    
    This patch adds a parameter in the SafeXcel ahash request structure to
    keep track of the number of SG entries mapped. This allows not to call
    dma_unmap_sg() when dma_map_sg() wasn't called in the first place. This
    also removes a warning when the debugging of the DMA-API is enabled in
    the kernel configuration: "DMA-API: device driver tries to free DMA
    memory it has not allocated".
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb9eec7b301eeb178fc1305708ae8902fa507953
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Tue Dec 26 17:21:17 2017 +0100

    crypto: inside-secure - fix hash when length is a multiple of a block
    
    commit 809778e02cd45d0625439fee67688f655627bb3c upstream.
    
    This patch fixes the hash support in the SafeXcel driver when the update
    size is a multiple of a block size, and when a final call is made just
    after with a size of 0. In such cases the driver should cache the last
    block from the update to avoid handling 0 length data on the final call
    (that's a hardware limitation).
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ca02df0160233e463b043897cd17e32d38cb70e
Author: Junaid Shahid <junaids@google.com>
Date:   Wed Dec 20 17:08:38 2017 -0800

    crypto: aesni - Fix out-of-bounds access of the AAD buffer in generic-gcm-aesni
    
    commit 1ecdd37e308ca149dc378cce225068cbac54e3a6 upstream.
    
    The aesni_gcm_enc/dec functions can access memory after the end of
    the AAD buffer if the AAD length is not a multiple of 4 bytes.
    It didn't matter with rfc4106-gcm-aesni as in that case the AAD was
    always followed by the 8 byte IV, but that is no longer the case with
    generic-gcm-aesni. This can potentially result in accessing a page that
    is not mapped and thus causing the machine to crash. This patch fixes
    that by reading the last <16 byte block of the AAD byte-by-byte and
    optionally via an 8-byte load if the block was at least 8 bytes.
    
    Fixes: 0487ccac ("crypto: aesni - make non-AVX AES-GCM work with any aadlen")
    Signed-off-by: Junaid Shahid <junaids@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f898a39985a30050abdad7a40b5b0098801509d4
Author: Junaid Shahid <junaids@google.com>
Date:   Wed Dec 20 17:08:37 2017 -0800

    crypto: aesni - Fix out-of-bounds access of the data buffer in generic-gcm-aesni
    
    commit b20209c91e23a9bbad9cac2f80bc16b3c259e10e upstream.
    
    The aesni_gcm_enc/dec functions can access memory before the start of
    the data buffer if the length of the data buffer is less than 16 bytes.
    This is because they perform the read via a single 16-byte load. This
    can potentially result in accessing a page that is not mapped and thus
    causing the machine to crash. This patch fixes that by reading the
    partial block byte-by-byte and optionally an via 8-byte load if the block
    was at least 8 bytes.
    
    Fixes: 0487ccac ("crypto: aesni - make non-AVX AES-GCM work with any aadlen")
    Signed-off-by: Junaid Shahid <junaids@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 265502fe9ab62a92d06cc7aa518d349fd60bdba1
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Wed Dec 13 14:54:36 2017 +0100

    crypto: aesni - add wrapper for generic gcm(aes)
    
    commit fc8517bf627c9b834f80274a1bc9ecd39b27231b upstream.
    
    When I added generic-gcm-aes I didn't add a wrapper like the one
    provided for rfc4106(gcm(aes)). We need to add a cryptd wrapper to fall
    back on in case the FPU is not available, otherwise we might corrupt the
    FPU state.
    
    Fixes: cce2ea8d90fe ("crypto: aesni - add generic gcm(aes)")
    Reported-by: Ilya Lesokhin <ilyal@mellanox.com>
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e704e550cb7bfcd86044f875abce2e7703139ba9
Author: Corentin LABBE <clabbe.montjoie@gmail.com>
Date:   Tue Aug 22 10:08:18 2017 +0200

    crypto: aesni - Use GCM IV size constant
    
    commit 46d93748e5a3628f9f553832cd64d8a59d8bafde upstream.
    
    This patch replace GCM IV size value by their constant name.
    
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cffaf2b6b179227b31f8e21d7f65b68630fc6606
Author: Corentin LABBE <clabbe.montjoie@gmail.com>
Date:   Tue Aug 22 10:08:08 2017 +0200

    crypto: gcm - add GCM IV size constant
    
    commit ef780324592dd639e4bfbc5b9bf8934b234b7c99 upstream.
    
    Many GCM users use directly GCM IV size instead of using some constant.
    
    This patch add all IV size constant used by GCM.
    
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e50f1d7c0d0747378aa49cf5ef4863dcebd6a485
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Wed Dec 13 14:53:43 2017 +0100

    crypto: aesni - fix typo in generic_gcmaes_decrypt
    
    commit 106840c41096a01079d3a2025225029c13713802 upstream.
    
    generic_gcmaes_decrypt needs to use generic_gcmaes_ctx, not
    aesni_rfc4106_gcm_ctx. This is actually harmless because the fields in
    struct generic_gcmaes_ctx share the layout of the same fields in
    aesni_rfc4106_gcm_ctx.
    
    Fixes: cce2ea8d90fe ("crypto: aesni - add generic gcm(aes)")
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b3dcff7ca7e05c784ece15cc8d9c0bd913fbda4
Author: Stephan Mueller <smueller@chronox.de>
Date:   Thu Jan 18 20:41:09 2018 +0100

    crypto: aesni - handle zero length dst buffer
    
    commit 9c674e1e2f9e24fa4392167efe343749008338e0 upstream.
    
    GCM can be invoked with a zero destination buffer. This is possible if
    the AAD and the ciphertext have zero lengths and only the tag exists in
    the source buffer (i.e. a source buffer cannot be zero). In this case,
    the GCM cipher only performs the authentication and no decryption
    operation.
    
    When the destination buffer has zero length, it is possible that no page
    is mapped to the SG pointing to the destination. In this case,
    sg_page(req->dst) is an invalid access. Therefore, page accesses should
    only be allowed if the req->dst->length is non-zero which is the
    indicator that a page must exist.
    
    This fixes a crash that can be triggered by user space via AF_ALG.
    
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2992182765762c2d5bfa70ff2da5f1841e7aba89
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Sun Nov 26 00:16:46 2017 +0100

    crypto: ecdh - fix typo in KPP dependency of CRYPTO_ECDH
    
    commit b5b9007730ce1d90deaf25d7f678511550744bdc upstream.
    
    This fixes a typo in the CRYPTO_KPP dependency of CRYPTO_ECDH.
    
    Fixes: 3c4b23901a0c ("crypto: ecdh - Add ECDH software support")
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5ba0b372da3cdc092ce0d98e5433e44aefab3f7
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 19 14:18:34 2018 +0100

    ALSA: hda - Reduce the suspend time consumption for ALC256
    
    commit 1c9609e3a8cf5997bd35205cfda1ff2218ee793b upstream.
    
    ALC256 has its own quirk to override the shutup call, and it contains
    the COEF update for pulling down the headset jack control.  Currently,
    the COEF update is called after clearing the headphone pin, and this
    seems triggering a stall of the codec communication, and results in a
    long delay over a second at suspend.
    
    A quick resolution is to swap the calls: at first with the COEF
    update, then clear the headphone pin.
    
    Fixes: 4a219ef8f370 ("ALSA: hda/realtek - Add ALC256 HP depop function")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=198503
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5845e025423b02235489f154903b8befabebb02
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Jan 22 13:19:28 2018 +0100

    gpio: Fix kernel stack leak to userspace
    
    commit 24bd3efc9d1efb5f756a7c6f807a36ddb6adc671 upstream.
    
    The GPIO event descriptor was leaking kernel stack to
    userspace because we don't zero the variable before
    use. Ooops. Fix this.
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 460c5b9745b8b455be5591b1179e89a8bdcb1afd
Author: Patrice Chotard <patrice.chotard@st.com>
Date:   Fri Jan 12 13:16:08 2018 +0100

    gpio: stmpe: i2c transfer are forbiden in atomic context
    
    commit b888fb6f2a278442933e3bfab70262e9a5365fb3 upstream.
    
    Move the workaround from stmpe_gpio_irq_unmask() which is executed
    in atomic context to stmpe_gpio_irq_sync_unlock() which is not.
    
    It fixes the following issue:
    
    [    1.500000] BUG: scheduling while atomic: swapper/1/0x00000002
    [    1.500000] CPU: 0 PID: 1 Comm: swapper Not tainted 4.15.0-rc2-00020-gbd4301f-dirty #28
    [    1.520000] Hardware name: STM32 (Device Tree Support)
    [    1.520000] [<0000bfc9>] (unwind_backtrace) from [<0000b347>] (show_stack+0xb/0xc)
    [    1.530000] [<0000b347>] (show_stack) from [<0001fc49>] (__schedule_bug+0x39/0x58)
    [    1.530000] [<0001fc49>] (__schedule_bug) from [<00168211>] (__schedule+0x23/0x2b2)
    [    1.550000] [<00168211>] (__schedule) from [<001684f7>] (schedule+0x57/0x64)
    [    1.550000] [<001684f7>] (schedule) from [<0016a513>] (schedule_timeout+0x137/0x164)
    [    1.550000] [<0016a513>] (schedule_timeout) from [<00168b91>] (wait_for_common+0x8d/0xfc)
    [    1.570000] [<00168b91>] (wait_for_common) from [<00139753>] (stm32f4_i2c_xfer+0xe9/0xfe)
    [    1.580000] [<00139753>] (stm32f4_i2c_xfer) from [<00138545>] (__i2c_transfer+0x111/0x148)
    [    1.590000] [<00138545>] (__i2c_transfer) from [<001385cf>] (i2c_transfer+0x53/0x70)
    [    1.590000] [<001385cf>] (i2c_transfer) from [<001388a5>] (i2c_smbus_xfer+0x12f/0x36e)
    [    1.600000] [<001388a5>] (i2c_smbus_xfer) from [<00138b49>] (i2c_smbus_read_byte_data+0x1f/0x2a)
    [    1.610000] [<00138b49>] (i2c_smbus_read_byte_data) from [<00124fdd>] (__stmpe_reg_read+0xd/0x24)
    [    1.620000] [<00124fdd>] (__stmpe_reg_read) from [<001252b3>] (stmpe_reg_read+0x19/0x24)
    [    1.630000] [<001252b3>] (stmpe_reg_read) from [<0002c4d1>] (unmask_irq+0x17/0x22)
    [    1.640000] [<0002c4d1>] (unmask_irq) from [<0002c57f>] (irq_startup+0x6f/0x78)
    [    1.650000] [<0002c57f>] (irq_startup) from [<0002b7a1>] (__setup_irq+0x319/0x47c)
    [    1.650000] [<0002b7a1>] (__setup_irq) from [<0002bad3>] (request_threaded_irq+0x6b/0xe8)
    [    1.660000] [<0002bad3>] (request_threaded_irq) from [<0002d0b9>] (devm_request_threaded_irq+0x3b/0x6a)
    [    1.670000] [<0002d0b9>] (devm_request_threaded_irq) from [<001446e7>] (mmc_gpiod_request_cd_irq+0x49/0x8a)
    [    1.680000] [<001446e7>] (mmc_gpiod_request_cd_irq) from [<0013d45d>] (mmc_start_host+0x49/0x60)
    [    1.690000] [<0013d45d>] (mmc_start_host) from [<0013e40b>] (mmc_add_host+0x3b/0x54)
    [    1.700000] [<0013e40b>] (mmc_add_host) from [<00148119>] (mmci_probe+0x4d1/0x60c)
    [    1.710000] [<00148119>] (mmci_probe) from [<000f903b>] (amba_probe+0x7b/0xbe)
    [    1.720000] [<000f903b>] (amba_probe) from [<001170e5>] (driver_probe_device+0x169/0x1f8)
    [    1.730000] [<001170e5>] (driver_probe_device) from [<001171b7>] (__driver_attach+0x43/0x5c)
    [    1.740000] [<001171b7>] (__driver_attach) from [<0011618d>] (bus_for_each_dev+0x3d/0x46)
    [    1.740000] [<0011618d>] (bus_for_each_dev) from [<001165cd>] (bus_add_driver+0xcd/0x124)
    [    1.740000] [<001165cd>] (bus_add_driver) from [<00117713>] (driver_register+0x4d/0x7a)
    [    1.760000] [<00117713>] (driver_register) from [<001fc765>] (do_one_initcall+0xbd/0xe8)
    [    1.770000] [<001fc765>] (do_one_initcall) from [<001fc88b>] (kernel_init_freeable+0xfb/0x134)
    [    1.780000] [<001fc88b>] (kernel_init_freeable) from [<00167ee3>] (kernel_init+0x7/0x9c)
    [    1.790000] [<00167ee3>] (kernel_init) from [<00009b65>] (ret_from_fork+0x11/0x2c)
    
    Signed-off-by: Alexandre TORGUE <alexandre.torgue@st.com>
    Signed-off-by: Patrice Chotard <patrice.chotard@st.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 636124c8699be4f5f987ef7f95cfda1acaeed88c
Author: Joel Stanley <joel@jms.id.au>
Date:   Thu Dec 21 11:11:31 2017 +1030

    tools/gpio: Fix build error with musl libc
    
    commit 1696784eb7b52b13b62d160c028ef2c2c981d4f2 upstream.
    
    The GPIO tools build fails when using a buildroot toolchain that uses musl
    as it's C library:
    
    arm-broomstick-linux-musleabi-gcc -Wp,-MD,./.gpio-event-mon.o.d \
     -Wp,-MT,gpio-event-mon.o -O2 -Wall -g -D_GNU_SOURCE \
     -Iinclude -D"BUILD_STR(s)=#s" -c -o gpio-event-mon.o gpio-event-mon.c
    gpio-event-mon.c:30:6: error: unknown type name ‘u_int32_t’; did you mean ‘uint32_t’?
          u_int32_t handleflags,
          ^~~~~~~~~
          uint32_t
    
    The glibc headers installed on my laptop include sys/types.h in
    unistd.h, but it appears that musl does not.
    
    Fixes: 97f69747d8b1 ("tools/gpio: add the gpio-event-mon tool")
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00251aedef3195e912184a5798952a7793a77abe
Author: Janakarajan Natarajan <Janakarajan.Natarajan@amd.com>
Date:   Mon Nov 6 11:44:23 2017 -0600

    KVM: x86: Fix CPUID function for word 6 (80000001_ECX)
    
    commit 50a671d4d15b859f447fa527191073019b6ce9cb upstream.
    
    The function for CPUID 80000001 ECX is set to 0xc0000001. Set it to
    0x80000001.
    
    Signed-off-by: Janakarajan Natarajan <Janakarajan.Natarajan@amd.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Fixes: d6321d493319 ("KVM: x86: generalize guest_cpuid_has_ helpers")
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5e06a1867210049bbfe27864ee0a40cfd9b1e9b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 5 16:26:00 2018 -0800

    loop: fix concurrent lo_open/lo_release
    
    commit ae6650163c66a7eff1acd6eb8b0f752dcfa8eba5 upstream.
    
    范龙飞 reports that KASAN can report a use-after-free in __lock_acquire.
    The reason is due to insufficient serialization in lo_release(), which
    will continue to use the loop device even after it has decremented the
    lo_refcnt to zero.
    
    In the meantime, another process can come in, open the loop device
    again as it is being shut down. Confusion ensues.
    
    Reported-by: 范龙飞 <long7573@126.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d383a4277b75f3305d78006bb8de673cd17d04a5
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Jan 22 11:39:47 2018 +0100

    futex: Fix OWNER_DEAD fixup
    
    commit a97cb0e7b3f4c6297fd857055ae8e895f402f501 upstream.
    
    Both Geert and DaveJ reported that the recent futex commit:
    
      c1e2f0eaf015 ("futex: Avoid violating the 10th rule of futex")
    
    introduced a problem with setting OWNER_DEAD. We set the bit on an
    uninitialized variable and then entirely optimize it away as a
    dead-store.
    
    Move the setting of the bit to where it is more useful.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Reported-by: Dave Jones <davej@codemonkey.org.uk>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@us.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: c1e2f0eaf015 ("futex: Avoid violating the 10th rule of futex")
    Link: http://lkml.kernel.org/r/20180122103947.GD2228@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Ozkan Sezer <sezeroz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c70076667f246dc200c7a3e9aeabd2f8f388416
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jan 31 14:03:50 2018 +0100

    Linux 4.14.16

commit 54e67ba7d20a5921cfe712cfe4bd773e75df10e0
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Mon Jan 22 20:11:06 2018 +0000

    nfsd: auth: Fix gid sorting when rootsquash enabled
    
    commit 1995266727fa8143897e89b55f5d3c79aa828420 upstream.
    
    Commit bdcf0a423ea1 ("kernel: make groups_sort calling a responsibility
    group_info allocators") appears to break nfsd rootsquash in a pretty
    major way.
    
    It adds a call to groups_sort() inside the loop that copies/squashes
    gids, which means the valid gids are sorted along with the following
    garbage.  The net result is that the highest numbered valid gids are
    replaced with any lower-valued garbage gids, possibly including 0.
    
    We should sort only once, after filling in all the gids.
    
    Fixes: bdcf0a423ea1 ("kernel: make groups_sort calling a responsibility ...")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Acked-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Wolfgang Walter <linux@stwm.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c83189edf416ac10b55ca48292158df460c13cd5
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Dec 18 02:15:32 2017 +0100

    cpufreq: governor: Ensure sufficiently large sampling intervals
    
    commit 56026645e2b6f11ede34a5e6ab69d3eb56f9c8fc upstream.
    
    After commit aa7519af450d (cpufreq: Use transition_delay_us for legacy
    governors as well) the sampling_rate field of struct dbs_data may be
    less than the tick period which causes dbs_update() to produce
    incorrect results, so make the code ensure that the value of that
    field will always be sufficiently large.
    
    Fixes: aa7519af450d (cpufreq: Use transition_delay_us for legacy governors as well)
    Reported-by: Andy Tang <andy.tang@nxp.com>
    Reported-by: Doug Smythies <dsmythies@telus.net>
    Tested-by: Andy Tang <andy.tang@nxp.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c43db1a3c7caf82a6d59401e617fd5c6fc0bf40d
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Mon Jan 29 00:36:47 2018 +0100

    bpf, arm64: fix stack_depth tracking in combination with tail calls
    
    [ upstream commit a2284d912bfc865cdca4c00488e08a3550f9a405 ]
    
    Using dynamic stack_depth tracking in arm64 JIT is currently broken in
    combination with tail calls. In prologue, we cache ctx->stack_size and
    adjust SP reg for setting up function call stack, and tearing it down
    again in epilogue. Problem is that when doing a tail call, the cached
    ctx->stack_size might not be the same.
    
    One way to fix the problem with minimal overhead is to re-adjust SP in
    emit_bpf_tail_call() and properly adjust it to the current program's
    ctx->stack_size. Tested on Cavium ThunderX ARMv8.
    
    Fixes: f1c9eed7f437 ("bpf, arm64: take advantage of stack_depth tracking")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a17536742bb9a5df561cce54c7cc3cd1e2cd480d
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Mon Jan 29 00:36:46 2018 +0100

    bpf: reject stores into ctx via st and xadd
    
    [ upstream commit f37a8cb84cce18762e8f86a70bd6a49a66ab964c ]
    
    Alexei found that verifier does not reject stores into context
    via BPF_ST instead of BPF_STX. And while looking at it, we
    also should not allow XADD variant of BPF_STX.
    
    The context rewriter is only assuming either BPF_LDX_MEM- or
    BPF_STX_MEM-type operations, thus reject anything other than
    that so that assumptions in the rewriter properly hold. Add
    test cases as well for BPF selftests.
    
    Fixes: d691f9e8d440 ("bpf: allow programs to write to certain skb fields")
    Reported-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca0a0967205b65a197dccb80688f3588cc14d745
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Mon Jan 29 00:36:45 2018 +0100

    bpf: fix 32-bit divide by zero
    
    [ upstream commit 68fda450a7df51cff9e5a4d4a4d9d0d5f2589153 ]
    
    due to some JITs doing if (src_reg == 0) check in 64-bit mode
    for div/mod operations mask upper 32-bits of src register
    before doing the check
    
    Fixes: 622582786c9e ("net: filter: x86: internal BPF JIT")
    Fixes: 7a12b5031c6b ("sparc64: Add eBPF JIT.")
    Reported-by: syzbot+48340bb518e88849e2e3@syzkaller.appspotmail.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6eca013bef784aaf7be1a6262e3fe2de75476166
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jan 29 00:36:44 2018 +0100

    bpf: fix divides by zero
    
    [ upstream commit c366287ebd698ef5e3de300d90cd62ee9ee7373e ]
    
    Divides by zero are not nice, lets avoid them if possible.
    
    Also do_div() seems not needed when dealing with 32bit operands,
    but this seems a minor detail.
    
    Fixes: bd4cf0ed331a ("net: filter: rework/optimize internal BPF interpreter's instruction set")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ea4247ec1b7efc423cf4f75450ebf5cffab9ed8
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Mon Jan 29 00:36:43 2018 +0100

    bpf: avoid false sharing of map refcount with max_entries
    
    [ upstream commit be95a845cc4402272994ce290e3ad928aff06cb9 ]
    
    In addition to commit b2157399cc98 ("bpf: prevent out-of-bounds
    speculation") also change the layout of struct bpf_map such that
    false sharing of fast-path members like max_entries is avoided
    when the maps reference counter is altered. Therefore enforce
    them to be placed into separate cachelines.
    
    pahole dump after change:
    
      struct bpf_map {
            const struct bpf_map_ops  * ops;                 /*     0     8 */
            struct bpf_map *           inner_map_meta;       /*     8     8 */
            void *                     security;             /*    16     8 */
            enum bpf_map_type          map_type;             /*    24     4 */
            u32                        key_size;             /*    28     4 */
            u32                        value_size;           /*    32     4 */
            u32                        max_entries;          /*    36     4 */
            u32                        map_flags;            /*    40     4 */
            u32                        pages;                /*    44     4 */
            u32                        id;                   /*    48     4 */
            int                        numa_node;            /*    52     4 */
            bool                       unpriv_array;         /*    56     1 */
    
            /* XXX 7 bytes hole, try to pack */
    
            /* --- cacheline 1 boundary (64 bytes) --- */
            struct user_struct *       user;                 /*    64     8 */
            atomic_t                   refcnt;               /*    72     4 */
            atomic_t                   usercnt;              /*    76     4 */
            struct work_struct         work;                 /*    80    32 */
            char                       name[16];             /*   112    16 */
            /* --- cacheline 2 boundary (128 bytes) --- */
    
            /* size: 128, cachelines: 2, members: 17 */
            /* sum members: 121, holes: 1, sum holes: 7 */
      };
    
    Now all entries in the first cacheline are read only throughout
    the life time of the map, set up once during map creation. Overall
    struct size and number of cachelines doesn't change from the
    reordering. struct bpf_map is usually first member and embedded
    in map structs in specific map implementations, so also avoid those
    members to sit at the end where it could potentially share the
    cacheline with first map values e.g. in the array since remote
    CPUs could trigger map updates just as well for those (easily
    dirtying members like max_entries intentionally as well) while
    having subsequent values in cache.
    
    Quoting from Google's Project Zero blog [1]:
    
      Additionally, at least on the Intel machine on which this was
      tested, bouncing modified cache lines between cores is slow,
      apparently because the MESI protocol is used for cache coherence
      [8]. Changing the reference counter of an eBPF array on one
      physical CPU core causes the cache line containing the reference
      counter to be bounced over to that CPU core, making reads of the
      reference counter on all other CPU cores slow until the changed
      reference counter has been written back to memory. Because the
      length and the reference counter of an eBPF array are stored in
      the same cache line, this also means that changing the reference
      counter on one physical CPU core causes reads of the eBPF array's
      length to be slow on other physical CPU cores (intentional false
      sharing).
    
    While this doesn't 'control' the out-of-bounds speculation through
    masking the index as in commit b2157399cc98, triggering a manipulation
    of the map's reference counter is really trivial, so lets not allow
    to easily affect max_entries from it.
    
    Splitting to separate cachelines also generally makes sense from
    a performance perspective anyway in that fast-path won't have a
    cache miss if the map gets pinned, reused in other progs, etc out
    of control path, thus also avoids unintentional false sharing.
    
      [1] https://googleprojectzero.blogspot.ch/2018/01/reading-privileged-memory-with-side.html
    
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fde36d5ce7ba4303865d5e11601cd3094e5909b
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Mon Jan 29 00:36:42 2018 +0100

    bpf: introduce BPF_JIT_ALWAYS_ON config
    
    [ upstream commit 290af86629b25ffd1ed6232c4e9107da031705cb ]
    
    The BPF interpreter has been used as part of the spectre 2 attack CVE-2017-5715.
    
    A quote from goolge project zero blog:
    "At this point, it would normally be necessary to locate gadgets in
    the host kernel code that can be used to actually leak data by reading
    from an attacker-controlled location, shifting and masking the result
    appropriately and then using the result of that as offset to an
    attacker-controlled address for a load. But piecing gadgets together
    and figuring out which ones work in a speculation context seems annoying.
    So instead, we decided to use the eBPF interpreter, which is built into
    the host kernel - while there is no legitimate way to invoke it from inside
    a VM, the presence of the code in the host kernel's text section is sufficient
    to make it usable for the attack, just like with ordinary ROP gadgets."
    
    To make attacker job harder introduce BPF_JIT_ALWAYS_ON config
    option that removes interpreter from the kernel in favor of JIT-only mode.
    So far eBPF JIT is supported by:
    x64, arm64, arm32, sparc64, s390, powerpc64, mips64
    
    The start of JITed program is randomized and code page is marked as read-only.
    In addition "constant blinding" can be turned on with net.core.bpf_jit_harden
    
    v2->v3:
    - move __bpf_prog_ret0 under ifdef (Daniel)
    
    v1->v2:
    - fix init order, test_bpf and cBPF (Daniel's feedback)
    - fix offloaded bpf (Jakub's feedback)
    - add 'return 0' dummy in case something can invoke prog->bpf_func
    - retarget bpf tree. For bpf-next the patch would need one extra hunk.
      It will be sent when the trees are merged back to net-next
    
    Considered doing:
      int bpf_jit_enable __read_mostly = BPF_EBPF_JIT_DEFAULT;
    but it seems better to land the patch as-is and in bpf-next remove
    bpf_jit_enable global variable from all JITs, consolidate in one place
    and remove this jit_init() function.
    
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdd88d753d4b3142f7cd38b0278c29b03c1e0929
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Jan 26 14:54:32 2018 +0100

    hrtimer: Reset hrtimer cpu base proper on CPU hotplug
    
    commit d5421ea43d30701e03cadc56a38854c36a8b4433 upstream.
    
    The hrtimer interrupt code contains a hang detection and mitigation
    mechanism, which prevents that a long delayed hrtimer interrupt causes a
    continous retriggering of interrupts which prevent the system from making
    progress. If a hang is detected then the timer hardware is programmed with
    a certain delay into the future and a flag is set in the hrtimer cpu base
    which prevents newly enqueued timers from reprogramming the timer hardware
    prior to the chosen delay. The subsequent hrtimer interrupt after the delay
    clears the flag and resumes normal operation.
    
    If such a hang happens in the last hrtimer interrupt before a CPU is
    unplugged then the hang_detected flag is set and stays that way when the
    CPU is plugged in again. At that point the timer hardware is not armed and
    it cannot be armed because the hang_detected flag is still active, so
    nothing clears that flag. As a consequence the CPU does not receive hrtimer
    interrupts and no timers expire on that CPU which results in RCU stalls and
    other malfunctions.
    
    Clear the flag along with some other less critical members of the hrtimer
    cpu base to ensure starting from a clean state when a CPU is plugged in.
    
    Thanks to Paul, Sebastian and Anna-Maria for their help to get down to the
    root cause of that hard to reproduce heisenbug. Once understood it's
    trivial and certainly justifies a brown paperbag.
    
    Fixes: 41d2e4949377 ("hrtimer: Tune hrtimer_interrupt hang logic")
    Reported-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sebastian Sewior <bigeasy@linutronix.de>
    Cc: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801261447590.2067@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba07aba771974be3d3dfae5241c8d3db40363b26
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Jan 25 13:12:14 2018 -0800

    x86/mm/64: Fix vmapped stack syncing on very-large-memory 4-level systems
    
    commit 5beda7d54eafece4c974cfa9fbb9f60fb18fd20a upstream.
    
    Neil Berrington reported a double-fault on a VM with 768GB of RAM that uses
    large amounts of vmalloc space with PTI enabled.
    
    The cause is that load_new_mm_cr3() was never fixed to take the 5-level pgd
    folding code into account, so, on a 4-level kernel, the pgd synchronization
    logic compiles away to exactly nothing.
    
    Interestingly, the problem doesn't trigger with nopti.  I assume this is
    because the kernel is mapped with global pages if we boot with nopti.  The
    sequence of operations when we create a new task is that we first load its
    mm while still running on the old stack (which crashes if the old stack is
    unmapped in the new mm unless the TLB saves us), then we call
    prepare_switch_to(), and then we switch to the new stack.
    prepare_switch_to() pokes the new stack directly, which will populate the
    mapping through vmalloc_fault().  I assume that we're getting lucky on
    non-PTI systems -- the old stack's TLB entry stays alive long enough to
    make it all the way through prepare_switch_to() and switch_to() so that we
    make it to a valid stack.
    
    Fixes: b50858ce3e2a ("x86/mm/vmalloc: Add 5-level paging support")
    Reported-and-tested-by: Neil Berrington <neil.berrington@datacore.com>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Link: https://lkml.kernel.org/r/346541c56caed61abbe693d7d2742b4a380c5001.1516914529.git.luto@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbfb351be483a239a2afaa4702826b0ad359fd1e
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Jan 23 11:41:33 2018 +0100

    x86/microcode: Fix again accessing initrd after having been freed
    
    commit 1d080f096fe33f031d26e19b3ef0146f66b8b0f1 upstream.
    
    Commit 24c2503255d3 ("x86/microcode: Do not access the initrd after it has
    been freed") fixed attempts to access initrd from the microcode loader
    after it has been freed. However, a similar KASAN warning was reported
    (stack trace edited):
    
      smpboot: Booting Node 0 Processor 1 APIC 0x11
      ==================================================================
      BUG: KASAN: use-after-free in find_cpio_data+0x9b5/0xa50
      Read of size 1 at addr ffff880035ffd000 by task swapper/1/0
    
      CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.14.8-slack #7
      Hardware name: System manufacturer System Product Name/A88X-PLUS, BIOS 3003 03/10/2016
      Call Trace:
       dump_stack
       print_address_description
       kasan_report
       ? find_cpio_data
       __asan_report_load1_noabort
       find_cpio_data
       find_microcode_in_initrd
       __load_ucode_amd
       load_ucode_amd_ap
          load_ucode_ap
    
    After some investigation, it turned out that a merge was done using the
    wrong side to resolve, leading to picking up the previous state, before
    the 24c2503255d3 fix. Therefore the Fixes tag below contains a merge
    commit.
    
    Revert the mismerge by catching the save_microcode_in_initrd_amd()
    retval and thus letting the function exit with the last return statement
    so that initrd_gone can be set to true.
    
    Fixes: f26483eaedec ("Merge branch 'x86/urgent' into x86/microcode, to resolve conflicts")
    Reported-by: <higuita@gmx.net>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=198295
    Link: https://lkml.kernel.org/r/20180123104133.918-2-bp@alien8.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac2cc887653808e988f9d7ece50aacc755a4f879
Author: Jia Zhang <zhang.jia@linux.alibaba.com>
Date:   Tue Jan 23 11:41:32 2018 +0100

    x86/microcode/intel: Extend BDW late-loading further with LLC size check
    
    commit 7e702d17ed138cf4ae7c00e8c00681ed464587c7 upstream.
    
    Commit b94b73733171 ("x86/microcode/intel: Extend BDW late-loading with a
    revision check") reduced the impact of erratum BDF90 for Broadwell model
    79.
    
    The impact can be reduced further by checking the size of the last level
    cache portion per core.
    
    Tony: "The erratum says the problem only occurs on the large-cache SKUs.
    So we only need to avoid the update if we are on a big cache SKU that is
    also running old microcode."
    
    For more details, see erratum BDF90 in document #334165 (Intel Xeon
    Processor E7-8800/4800 v4 Product Family Specification Update) from
    September 2017.
    
    Fixes: b94b73733171 ("x86/microcode/intel: Extend BDW late-loading with a revision check")
    Signed-off-by: Jia Zhang <zhang.jia@linux.alibaba.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Tony Luck <tony.luck@intel.com>
    Link: https://lkml.kernel.org/r/1516321542-31161-1-git-send-email-zhang.jia@linux.alibaba.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34c1acc2f7f5c26e8d0cd2f0b5eba8bd06d8e0b2
Author: Xiao Liang <xiliang@redhat.com>
Date:   Mon Jan 22 14:12:52 2018 +0800

    perf/x86/amd/power: Do not load AMD power module on !AMD platforms
    
    commit 40d4071ce2d20840d224b4a77b5dc6f752c9ab15 upstream.
    
    The AMD power module can be loaded on non AMD platforms, but unload fails
    with the following Oops:
    
     BUG: unable to handle kernel NULL pointer dereference at           (null)
     IP: __list_del_entry_valid+0x29/0x90
     Call Trace:
      perf_pmu_unregister+0x25/0xf0
      amd_power_pmu_exit+0x1c/0xd23 [power]
      SyS_delete_module+0x1a8/0x2b0
      ? exit_to_usermode_loop+0x8f/0xb0
      entry_SYSCALL_64_fastpath+0x20/0x83
    
    Return -ENODEV instead of 0 from the module init function if the CPU does
    not match.
    
    Fixes: c7ab62bfbe0e ("perf/x86/amd/power: Add AMD accumulated power reporting mechanism")
    Signed-off-by: Xiao Liang <xiliang@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lkml.kernel.org/r/20180122061252.6394-1-xiliang@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74026a188fe7f8739fbd9f6a960a1486ce6f9c96
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Mon Jan 22 16:06:37 2018 -0500

    vmxnet3: repair memory leak
    
    
    [ Upstream commit 848b159835ddef99cc4193083f7e786c3992f580 ]
    
    with the introduction of commit
    b0eb57cb97e7837ebb746404c2c58c6f536f23fa, it appears that rq->buf_info
    is improperly handled.  While it is heap allocated when an rx queue is
    setup, and freed when torn down, an old line of code in
    vmxnet3_rq_destroy was not properly removed, leading to rq->buf_info[0]
    being set to NULL prior to its being freed, causing a memory leak, which
    eventually exhausts the system on repeated create/destroy operations
    (for example, when  the mtu of a vmxnet3 interface is changed
    frequently.
    
    Fix is pretty straight forward, just move the NULL set to after the
    free.
    
    Tested by myself with successful results
    
    Applies to net, and should likely be queued for stable, please
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    Reported-By: boyang@redhat.com
    CC: boyang@redhat.com
    CC: Shrikrishna Khare <skhare@vmware.com>
    CC: "VMware, Inc." <pv-drivers@vmware.com>
    CC: David S. Miller <davem@davemloft.net>
    Acked-by: Shrikrishna Khare <skhare@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2fd0b217068d6ef0b71bc5fbfd3c8f9f48c42eb
Author: Lorenzo Colitti <lorenzo@google.com>
Date:   Thu Jan 11 18:36:26 2018 +0900

    net: ipv4: Make "ip route get" match iif lo rules again.
    
    
    [ Upstream commit 6503a30440962f1e1ccb8868816b4e18201218d4 ]
    
    Commit 3765d35ed8b9 ("net: ipv4: Convert inet_rtm_getroute to rcu
    versions of route lookup") broke "ip route get" in the presence
    of rules that specify iif lo.
    
    Host-originated traffic always has iif lo, because
    ip_route_output_key_hash and ip6_route_output_flags set the flow
    iif to LOOPBACK_IFINDEX. Thus, putting "iif lo" in an ip rule is a
    convenient way to select only originated traffic and not forwarded
    traffic.
    
    inet_rtm_getroute used to match these rules correctly because
    even though it sets the flow iif to 0, it called
    ip_route_output_key which overwrites iif with LOOPBACK_IFINDEX.
    But now that it calls ip_route_output_key_hash_rcu, the ifindex
    will remain 0 and not match the iif lo in the rule. As a result,
    "ip route get" will return ENETUNREACH.
    
    Fixes: 3765d35ed8b9 ("net: ipv4: Convert inet_rtm_getroute to rcu versions of route lookup")
    Tested: https://android.googlesource.com/kernel/tests/+/master/net/test/multinetwork_test.py passes again
    Signed-off-by: Lorenzo Colitti <lorenzo@google.com>
    Acked-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed10b9affb3af663d2cdb8a1e9134fb0a6358ab0
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Tue Jan 16 16:04:28 2018 +0100

    tls: reset crypto_info when do_tls_setsockopt_tx fails
    
    
    [ Upstream commit 6db959c82eb039a151d95a0f8b7dea643657327a ]
    
    The current code copies directly from userspace to ctx->crypto_send, but
    doesn't always reinitialize it to 0 on failure. This causes any
    subsequent attempt to use this setsockopt to fail because of the
    TLS_CRYPTO_INFO_READY check, eventhough crypto_info is not actually
    ready.
    
    This should result in a correctly set up socket after the 3rd call, but
    currently it does not:
    
        size_t s = sizeof(struct tls12_crypto_info_aes_gcm_128);
        struct tls12_crypto_info_aes_gcm_128 crypto_good = {
            .info.version = TLS_1_2_VERSION,
            .info.cipher_type = TLS_CIPHER_AES_GCM_128,
        };
    
        struct tls12_crypto_info_aes_gcm_128 crypto_bad_type = crypto_good;
        crypto_bad_type.info.cipher_type = 42;
    
        setsockopt(sock, SOL_TLS, TLS_TX, &crypto_bad_type, s);
        setsockopt(sock, SOL_TLS, TLS_TX, &crypto_good, s - 1);
        setsockopt(sock, SOL_TLS, TLS_TX, &crypto_good, s);
    
    Fixes: 3c4d7559159b ("tls: kernel TLS support")
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f54941c886c9f4d788ab0d4a81830a177ab7fd1
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Tue Jan 16 16:04:27 2018 +0100

    tls: return -EBUSY if crypto_info is already set
    
    
    [ Upstream commit 877d17c79b66466942a836403773276e34fe3614 ]
    
    do_tls_setsockopt_tx returns 0 without doing anything when crypto_info
    is already set. Silent failure is confusing for users.
    
    Fixes: 3c4d7559159b ("tls: kernel TLS support")
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a28f04bc4c20e56d75327165f2922a525225b7c
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Tue Jan 16 16:04:26 2018 +0100

    tls: fix sw_ctx leak
    
    
    [ Upstream commit cf6d43ef66f416282121f436ce1bee9a25199d52 ]
    
    During setsockopt(SOL_TCP, TLS_TX), if initialization of the software
    context fails in tls_set_sw_offload(), we leak sw_ctx. We also don't
    reassign ctx->priv_ctx to NULL, so we can't even do another attempt to
    set it up on the same socket, as it will fail with -EEXIST.
    
    Fixes: 3c4d7559159b ('tls: kernel TLS support')
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a022bbe393fbe3a1f471ee94d846be03f7fe2136
Author: Ilya Lesokhin <ilyal@mellanox.com>
Date:   Tue Jan 16 15:31:52 2018 +0200

    net/tls: Only attach to sockets in ESTABLISHED state
    
    
    [ Upstream commit d91c3e17f75f218022140dee18cf515292184a8f ]
    
    Calling accept on a TCP socket with a TLS ulp attached results
    in two sockets that share the same ulp context.
    The ulp context is freed while a socket is destroyed, so
    after one of the sockets is released, the second second will
    trigger a use after free when it tries to access the ulp context
    attached to it.
    We restrict the TLS ulp to sockets in ESTABLISHED state
    to prevent the scenario above.
    
    Fixes: 3c4d7559159b ("tls: kernel TLS support")
    Reported-by: syzbot+904e7cd6c5c741609228@syzkaller.appspotmail.com
    Signed-off-by: Ilya Lesokhin <ilyal@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48606bb1eef7c46f154cb4a6c5509729e60a4e91
Author: Xin Long <lucien.xin@gmail.com>
Date:   Thu Jan 18 14:48:03 2018 +0800

    netlink: reset extack earlier in netlink_rcv_skb
    
    
    [ Upstream commit cd443f1e91ca600a092e780e8250cd6a2954b763 ]
    
    Move up the extack reset/initialization in netlink_rcv_skb, so that
    those 'goto ack' will not skip it. Otherwise, later on netlink_ack
    may use the uninitialized extack and cause kernel crash.
    
    Fixes: cbbdf8433a5f ("netlink: extack needs to be reset each time through loop")
    Reported-by: syzbot+03bee3680a37466775e7@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8c21ba721d4bfc614ecb46f9507cc042b6a6d6b
Author: Jakub Kicinski <jakub.kicinski@netronome.com>
Date:   Mon Jan 15 11:47:53 2018 -0800

    nfp: use the correct index for link speed table
    
    
    [ Upstream commit 0d9c9f0f40ca262b67fc06a702b85f3976f5e1a1 ]
    
    sts variable is holding link speed as well as state.  We should
    be using ls to index into ls_to_ethtool.
    
    Fixes: 265aeb511bd5 ("nfp: add support for .get_link_ksettings()")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f97adffa33f41f5b9d4b9b01291f12bb74afe22
Author: Talat Batheesh <talatb@mellanox.com>
Date:   Sun Jan 21 05:30:42 2018 +0200

    net/mlx5e: Fix fixpoint divide exception in mlx5e_am_stats_compare
    
    
    [ Upstream commit e58edaa4863583b54409444f11b4f80dff0af1cd ]
    
    Helmut reported a bug about division by zero while
    running traffic and doing physical cable pull test.
    
    When the cable unplugged the ppms become zero, so when
    dividing the current ppms by the previous ppms in the
    next dim iteration there is division by zero.
    
    This patch prevent this division for both ppms and epms.
    
    Fixes: c3164d2fc48f ("net/mlx5e: Added BW check for DIM decision mechanism")
    Reported-by: Helmut Grauer <helmut.grauer@de.ibm.com>
    Signed-off-by: Talat Batheesh <talatb@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3eae0ba8c9b51d83d2293249fb9c82e90fc6dc31
Author: David Ahern <dsahern@gmail.com>
Date:   Wed Jan 10 13:00:39 2018 -0800

    netlink: extack needs to be reset each time through loop
    
    
    [ Upstream commit cbbdf8433a5f117b1a2119ea30fc651b61ef7570 ]
    
    syzbot triggered the WARN_ON in netlink_ack testing the bad_attr value.
    The problem is that netlink_rcv_skb loops over the skb repeatedly invoking
    the callback and without resetting the extack leaving potentially stale
    data. Initializing each time through avoids the WARN_ON.
    
    Fixes: 2d4bc93368f5a ("netlink: extended ACK reporting")
    Reported-by: syzbot+315fa6766d0f7c359327@syzkaller.appspotmail.com
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c6e5f2f5ef11bdba41e8158cc3c3e8ee6cfd198
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Jan 15 17:01:19 2018 +0800

    sctp: reinit stream if stream outcnt has been change by sinit in sendmsg
    
    
    [ Upstream commit 625637bf4afa45204bd87e4218645182a919485a ]
    
    After introducing sctp_stream structure, sctp uses stream->outcnt as the
    out stream nums instead of c.sinit_num_ostreams.
    
    However when users use sinit in cmsg, it only updates c.sinit_num_ostreams
    in sctp_sendmsg. At that moment, stream->outcnt is still using previous
    value. If it's value is not updated, the sinit_num_ostreams of sinit could
    not really work.
    
    This patch is to fix it by updating stream->outcnt and reiniting stream
    if stream outcnt has been change by sinit in sendmsg.
    
    Fixes: a83863174a61 ("sctp: prepare asoc stream for stream reconf")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80f327285cab6ab8e10c3ea03278add5dd99fb02
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 17 14:21:13 2018 -0800

    flow_dissector: properly cap thoff field
    
    
    [ Upstream commit d0c081b49137cd3200f2023c0875723be66e7ce5 ]
    
    syzbot reported yet another crash [1] that is caused by
    insufficient validation of DODGY packets.
    
    Two bugs are happening here to trigger the crash.
    
    1) Flow dissection leaves with incorrect thoff field.
    
    2) skb_probe_transport_header() sets transport header to this invalid
    thoff, even if pointing after skb valid data.
    
    3) qdisc_pkt_len_init() reads out-of-bound data because it
    trusts tcp_hdrlen(skb)
    
    Possible fixes :
    
    - Full flow dissector validation before injecting bad DODGY packets in
    the stack.
     This approach was attempted here : https://patchwork.ozlabs.org/patch/
    861874/
    
    - Have more robust functions in the core.
      This might be needed anyway for stable versions.
    
    This patch fixes the flow dissection issue.
    
    [1]
    CPU: 1 PID: 3144 Comm: syzkaller271204 Not tainted 4.15.0-rc4-mm1+ #49
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x257 lib/dump_stack.c:53
     print_address_description+0x73/0x250 mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:355 [inline]
     kasan_report+0x23b/0x360 mm/kasan/report.c:413
     __asan_report_load2_noabort+0x14/0x20 mm/kasan/report.c:432
     __tcp_hdrlen include/linux/tcp.h:35 [inline]
     tcp_hdrlen include/linux/tcp.h:40 [inline]
     qdisc_pkt_len_init net/core/dev.c:3160 [inline]
     __dev_queue_xmit+0x20d3/0x2200 net/core/dev.c:3465
     dev_queue_xmit+0x17/0x20 net/core/dev.c:3554
     packet_snd net/packet/af_packet.c:2943 [inline]
     packet_sendmsg+0x3ad5/0x60a0 net/packet/af_packet.c:2968
     sock_sendmsg_nosec net/socket.c:628 [inline]
     sock_sendmsg+0xca/0x110 net/socket.c:638
     sock_write_iter+0x31a/0x5d0 net/socket.c:907
     call_write_iter include/linux/fs.h:1776 [inline]
     new_sync_write fs/read_write.c:469 [inline]
     __vfs_write+0x684/0x970 fs/read_write.c:482
     vfs_write+0x189/0x510 fs/read_write.c:544
     SYSC_write fs/read_write.c:589 [inline]
     SyS_write+0xef/0x220 fs/read_write.c:581
     entry_SYSCALL_64_fastpath+0x1f/0x96
    
    Fixes: 34fad54c2537 ("net: __skb_flow_dissect() must cap its return value")
    Fixes: a6e544b0a88b ("flow_dissector: Jump to exit code in __skb_flow_dissect")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51c1f513fe965c5136be85d8af46d99166e0b121
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Jan 15 11:37:29 2018 -0800

    tun: fix a memory leak for tfile->tx_array
    
    
    [ Upstream commit 4df0bfc79904b7169dc77dcce44598b1545721f9 ]
    
    tfile->tun could be detached before we close the tun fd,
    via tun_detach_all(), so it should not be used to check for
    tfile->tx_array.
    
    As Jason suggested, we probably have to clean it up
    unconditionally both in __tun_deatch() and tun_detach_all(),
    but this requires to check if it is initialized or not.
    Currently skb_array_cleanup() doesn't have such a check,
    so I check it in the caller and introduce a helper function,
    it is a bit ugly but we can always improve it in net-next.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Fixes: 1576d9860599 ("tun: switch to use skb array for tx")
    Cc: Jason Wang <jasowang@redhat.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8496f7dbb1e5210e272b3a0e6f1fd20c28c8890e
Author: Yuval Mintz <yuvalm@mellanox.com>
Date:   Wed Jan 24 10:02:09 2018 +0100

    mlxsw: spectrum_router: Don't log an error on missing neighbor
    
    
    [ Upstream commit 1ecdaea02ca6bfacf2ecda500dc1af51e9780c42 ]
    
    Driver periodically samples all neighbors configured in device
    in order to update the kernel regarding their state. When finding
    an entry configured in HW that doesn't show in neigh_lookup()
    driver logs an error message.
    This introduces a race when removing multiple neighbors -
    it's possible that a given entry would still be configured in HW
    as its removal is still being processed but is already removed
    from the kernel's neighbor tables.
    
    Simply remove the error message and gracefully accept such events.
    
    Fixes: c723c735fa6b ("mlxsw: spectrum_router: Periodically update the kernel's neigh table")
    Fixes: 60f040ca11b9 ("mlxsw: spectrum_router: Periodically dump active IPv6 neighbours")
    Signed-off-by: Yuval Mintz <yuvalm@mellanox.com>
    Reviewed-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd7e1cbd26183e4b8c816fb8b9ecc6356b0cb19d
Author: Willem de Bruijn <willemb@google.com>
Date:   Fri Jan 19 09:29:18 2018 -0500

    gso: validate gso_type in GSO handlers
    
    
    [ Upstream commit 121d57af308d0cf943f08f4738d24d3966c38cd9 ]
    
    Validate gso_type during segmentation as SKB_GSO_DODGY sources
    may pass packets where the gso_type does not match the contents.
    
    Syzkaller was able to enter the SCTP gso handler with a packet of
    gso_type SKB_GSO_TCPV4.
    
    On entry of transport layer gso handlers, verify that the gso_type
    matches the transport protocol.
    
    Fixes: 90017accff61 ("sctp: Add GSO support")
    Link: http://lkml.kernel.org/r/<001a1137452496ffc305617e5fe0@google.com>
    Reported-by: syzbot+fee64147a25aecd48055@syzkaller.appspotmail.com
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Reviewed-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8af27b14b9c9028ad486b7f73c7466164d20ae40
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Thu Jan 18 20:51:12 2018 +0300

    ip6_gre: init dev->mtu and dev->hard_header_len correctly
    
    
    [ Upstream commit 128bb975dc3c25d00de04e503e2fe0a780d04459 ]
    
    Commit b05229f44228 ("gre6: Cleanup GREv6 transmit path,
    call common GRE functions") moved dev->mtu initialization
    from ip6gre_tunnel_setup() to ip6gre_tunnel_init(), as a
    result, the previously set values, before ndo_init(), are
    reset in the following cases:
    
    * rtnl_create_link() can update dev->mtu from IFLA_MTU
      parameter.
    
    * ip6gre_tnl_link_config() is invoked before ndo_init() in
      netlink and ioctl setup, so ndo_init() can reset MTU
      adjustments with the lower device MTU as well, dev->mtu
      and dev->hard_header_len.
    
      Not applicable for ip6gretap because it has one more call
      to ip6gre_tnl_link_config(tunnel, 1) in ip6gre_tap_init().
    
    Fix the first case by updating dev->mtu with 'tb[IFLA_MTU]'
    parameter if a user sets it manually on a device creation,
    and fix the second one by moving ip6gre_tnl_link_config()
    call after register_netdevice().
    
    Fixes: b05229f44228 ("gre6: Cleanup GREv6 transmit path, call common GRE functions")
    Fixes: db2ec95d1ba4 ("ip6_gre: Fix MTU setting")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ace99769a1f9f94a204ebaf5d946b4cf1f049153
Author: Ivan Vecera <cera@cera.cz>
Date:   Fri Jan 19 20:23:50 2018 +0100

    be2net: restore properly promisc mode after queues reconfiguration
    
    
    [ Upstream commit 52acf06451930eb4cefabd5ecea56e2d46c32f76 ]
    
    The commit 622190669403 ("be2net: Request RSS capability of Rx interface
    depending on number of Rx rings") modified be_update_queues() so the
    IFACE (HW representation of the netdevice) is destroyed and then
    re-created. This causes a regression because potential promiscuous mode
    is not restored properly during be_open() because the driver thinks
    that the HW has promiscuous mode already enabled.
    
    Note that Lancer is not affected by this bug because RX-filter flags are
    disabled during be_close() for this chipset.
    
    Cc: Sathya Perla <sathya.perla@broadcom.com>
    Cc: Ajit Khaparde <ajit.khaparde@broadcom.com>
    Cc: Sriharsha Basavapatna <sriharsha.basavapatna@broadcom.com>
    Cc: Somnath Kotur <somnath.kotur@broadcom.com>
    
    Fixes: 622190669403 ("be2net: Request RSS capability of Rx interface depending on number of Rx rings")
    Signed-off-by: Ivan Vecera <ivecera@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 759cd103ddb1df8ca0cb46e59e1c2cabb139fa27
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Wed Jan 10 16:24:45 2018 +0100

    ppp: unlock all_ppp_mutex before registering device
    
    
    [ Upstream commit 0171c41835591e9aa2e384b703ef9a6ae367c610 ]
    
    ppp_dev_uninit(), which is the .ndo_uninit() handler of PPP devices,
    needs to lock pn->all_ppp_mutex. Therefore we mustn't call
    register_netdevice() with pn->all_ppp_mutex already locked, or we'd
    deadlock in case register_netdevice() fails and calls .ndo_uninit().
    
    Fortunately, we can unlock pn->all_ppp_mutex before calling
    register_netdevice(). This lock protects pn->units_idr, which isn't
    used in the device registration process.
    
    However, keeping pn->all_ppp_mutex locked during device registration
    did ensure that no device in transient state would be published in
    pn->units_idr. In practice, unlocking it before calling
    register_netdevice() doesn't change this property: ppp_unit_register()
    is called with 'ppp_mutex' locked and all searches done in
    pn->units_idr hold this lock too.
    
    Fixes: 8cb775bc0a34 ("ppp: fix device unregistration upon netns deletion")
    Reported-and-tested-by: syzbot+367889b9c9e279219175@syzkaller.appspotmail.com
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce1e51d842baa8cf55a05a26933402e55d9b6217
Author: Saeed Mahameed <saeedm@mellanox.com>
Date:   Thu Jan 4 04:35:51 2018 +0200

    net/mlx5: Fix get vector affinity helper function
    
    
    [ Upstream commit 05e0cc84e00c54fb152d1f4b86bc211823a83d0c ]
    
    mlx5_get_vector_affinity used to call pci_irq_get_affinity and after
    reverting the patch that sets the device affinity via PCI_IRQ_AFFINITY
    API, calling pci_irq_get_affinity becomes useless and it breaks RDMA
    mlx5 users.  To fix this, this patch provides an alternative way to
    retrieve IRQ vector affinity using legacy IRQ API, following
    smp_affinity read procfs implementation.
    
    Fixes: 231243c82793 ("Revert mlx5: move affinity hints assignments to generic code")
    Fixes: a435393acafb ("mlx5: move affinity hints assignments to generic code")
    Cc: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ac1797da0f79013ef166df6a5124db267b9e1b6
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Tue Jan 9 11:41:10 2018 +0200

    {net,ib}/mlx5: Don't disable local loopback multicast traffic when needed
    
    
    [ Upstream commit 8978cc921fc7fad3f4d6f91f1da01352aeeeff25 ]
    
    There are systems platform information management interfaces (such as
    HOST2BMC) for which we cannot disable local loopback multicast traffic.
    
    Separate disable_local_lb_mc and disable_local_lb_uc capability bits so
    driver will not disable multicast loopback traffic if not supported.
    (It is expected that Firmware will not set disable_local_lb_mc if
    HOST2BMC is running for example.)
    
    Function mlx5_nic_vport_update_local_lb will do best effort to
    disable/enable UC/MC loopback traffic and return success only in case it
    succeeded to changed all allowed by Firmware.
    
    Adapt mlx5_ib and mlx5e to support the new cap bits.
    
    Fixes: 2c43c5a036be ("net/mlx5e: Enable local loopback in loopback selftest")
    Fixes: c85023e153e3 ("IB/mlx5: Add raw ethernet local loopback support")
    Fixes: bded747bb432 ("net/mlx5: Add raw ethernet local loopback firmware command")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Cc: kernel-team@fb.com
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8de7fb3dfb0d381358fbfc8632d0818d8a1fec7e
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Jan 10 12:50:25 2018 -0800

    tipc: fix a memory leak in tipc_nl_node_get_link()
    
    
    [ Upstream commit 59b36613e85fb16ebf9feaf914570879cd5c2a21 ]
    
    When tipc_node_find_by_name() fails, the nlmsg is not
    freed.
    
    While on it, switch to a goto label to properly
    free it.
    
    Fixes: be9c086715c ("tipc: narrow down exposure of struct tipc_node")
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Jon Maloy <jon.maloy@ericsson.com>
    Cc: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a940c196461b8430dd21024203d3916032096839
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Jan 15 17:01:36 2018 +0800

    sctp: return error if the asoc has been peeled off in sctp_wait_for_sndbuf
    
    
    [ Upstream commit a0ff660058b88d12625a783ce9e5c1371c87951f ]
    
    After commit cea0cc80a677 ("sctp: use the right sk after waking up from
    wait_buf sleep"), it may change to lock another sk if the asoc has been
    peeled off in sctp_wait_for_sndbuf.
    
    However, the asoc's new sk could be already closed elsewhere, as it's in
    the sendmsg context of the old sk that can't avoid the new sk's closing.
    If the sk's last one refcnt is held by this asoc, later on after putting
    this asoc, the new sk will be freed, while under it's own lock.
    
    This patch is to revert that commit, but fix the old issue by returning
    error under the old sk's lock.
    
    Fixes: cea0cc80a677 ("sctp: use the right sk after waking up from wait_buf sleep")
    Reported-by: syzbot+ac6ea7baa4432811eb50@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2e957097905dd53a9ca513702fe0c9eecb73ddc
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Jan 15 17:02:00 2018 +0800

    sctp: do not allow the v4 socket to bind a v4mapped v6 address
    
    
    [ Upstream commit c5006b8aa74599ce19104b31d322d2ea9ff887cc ]
    
    The check in sctp_sockaddr_af is not robust enough to forbid binding a
    v4mapped v6 addr on a v4 socket.
    
    The worse thing is that v4 socket's bind_verify would not convert this
    v4mapped v6 addr to a v4 addr. syzbot even reported a crash as the v4
    socket bound a v6 addr.
    
    This patch is to fix it by doing the common sa.sa_family check first,
    then AF_INET check for v4mapped v6 addrs.
    
    Fixes: 7dab83de50c7 ("sctp: Support ipv6only AF_INET6 sockets.")
    Reported-by: syzbot+7b7b518b1228d2743963@syzkaller.appspotmail.com
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72d4f3abd6d3521f5cd978b63f9301051f127812
Author: Francois Romieu <romieu@fr.zoreil.com>
Date:   Fri Jan 26 01:53:26 2018 +0100

    r8169: fix memory corruption on retrieval of hardware statistics.
    
    
    [ Upstream commit a78e93661c5fd30b9e1dee464b2f62f966883ef7 ]
    
    Hardware statistics retrieval hurts in tight invocation loops.
    
    Avoid extraneous write and enforce strict ordering of writes targeted to
    the tally counters dump area address registers.
    
    Signed-off-by: Francois Romieu <romieu@fr.zoreil.com>
    Tested-by: Oliver Freyermuth <o.freyermuth@googlemail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d32e5740001972c1bb193dd60af02721d047a17e
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Mon Jan 22 18:06:37 2018 +0100

    pppoe: take ->needed_headroom of lower device into account on xmit
    
    
    [ Upstream commit 02612bb05e51df8489db5e94d0cf8d1c81f87b0c ]
    
    In pppoe_sendmsg(), reserving dev->hard_header_len bytes of headroom
    was probably fine before the introduction of ->needed_headroom in
    commit f5184d267c1a ("net: Allow netdevices to specify needed head/tailroom").
    
    But now, virtual devices typically advertise the size of their overhead
    in dev->needed_headroom, so we must also take it into account in
    skb_reserve().
    Allocation size of skb is also updated to take dev->needed_tailroom
    into account and replace the arbitrary 32 bytes with the real size of
    a PPPoE header.
    
    This issue was discovered by syzbot, who connected a pppoe socket to a
    gre device which had dev->header_ops->create == ipgre_header and
    dev->hard_header_len == 0. Therefore, PPPoE didn't reserve any
    headroom, and dev_hard_header() crashed when ipgre_header() tried to
    prepend its header to skb->data.
    
    skbuff: skb_under_panic: text:000000001d390b3a len:31 put:24
    head:00000000d8ed776f data:000000008150e823 tail:0x7 end:0xc0 dev:gre0
    ------------[ cut here ]------------
    kernel BUG at net/core/skbuff.c:104!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 3670 Comm: syzkaller801466 Not tainted
    4.15.0-rc7-next-20180115+ #97
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:skb_panic+0x162/0x1f0 net/core/skbuff.c:100
    RSP: 0018:ffff8801d9bd7840 EFLAGS: 00010282
    RAX: 0000000000000083 RBX: ffff8801d4f083c0 RCX: 0000000000000000
    RDX: 0000000000000083 RSI: 1ffff1003b37ae92 RDI: ffffed003b37aefc
    RBP: ffff8801d9bd78a8 R08: 1ffff1003b37ae8a R09: 0000000000000000
    R10: 0000000000000001 R11: 0000000000000000 R12: ffffffff86200de0
    R13: ffffffff84a981ad R14: 0000000000000018 R15: ffff8801d2d34180
    FS:  00000000019c4880(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000208bc000 CR3: 00000001d9111001 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      skb_under_panic net/core/skbuff.c:114 [inline]
      skb_push+0xce/0xf0 net/core/skbuff.c:1714
      ipgre_header+0x6d/0x4e0 net/ipv4/ip_gre.c:879
      dev_hard_header include/linux/netdevice.h:2723 [inline]
      pppoe_sendmsg+0x58e/0x8b0 drivers/net/ppp/pppoe.c:890
      sock_sendmsg_nosec net/socket.c:630 [inline]
      sock_sendmsg+0xca/0x110 net/socket.c:640
      sock_write_iter+0x31a/0x5d0 net/socket.c:909
      call_write_iter include/linux/fs.h:1775 [inline]
      do_iter_readv_writev+0x525/0x7f0 fs/read_write.c:653
      do_iter_write+0x154/0x540 fs/read_write.c:932
      vfs_writev+0x18a/0x340 fs/read_write.c:977
      do_writev+0xfc/0x2a0 fs/read_write.c:1012
      SYSC_writev fs/read_write.c:1085 [inline]
      SyS_writev+0x27/0x30 fs/read_write.c:1082
      entry_SYSCALL_64_fastpath+0x29/0xa0
    
    Admittedly PPPoE shouldn't be allowed to run on non Ethernet-like
    interfaces, but reserving space for ->needed_headroom is a more
    fundamental issue that needs to be addressed first.
    
    Same problem exists for __pppoe_xmit(), which also needs to take
    dev->needed_headroom into account in skb_cow_head().
    
    Fixes: f5184d267c1a ("net: Allow netdevices to specify needed head/tailroom")
    Reported-by: syzbot+ed0838d0fa4c4f2b528e20286e6dc63effc7c14d@syzkaller.appspotmail.com
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ea6b86ae73e1b36ddba3015739cedd24b062523
Author: David Ahern <dsahern@gmail.com>
Date:   Wed Jan 24 19:37:37 2018 -0800

    net: vrf: Add support for sends to local broadcast address
    
    
    [ Upstream commit 1e19c4d689dc1e95bafd23ef68fbc0c6b9e05180 ]
    
    Sukumar reported that sends to the local broadcast address
    (255.255.255.255) are broken. Check for the address in vrf driver
    and do not redirect to the VRF device - similar to multicast
    packets.
    
    With this change sockets can use SO_BINDTODEVICE to specify an
    egress interface and receive responses. Note: the egress interface
    can not be a VRF device but needs to be the enslaved device.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=198521
    
    Reported-by: Sukumar Gopalakrishnan <sukumarg1973@gmail.com>
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3048a12f3eccc00d62db373df4cd50b1218f6f1
Author: r.hering@avm.de <r.hering@avm.de>
Date:   Fri Jan 12 15:42:06 2018 +0100

    net/tls: Fix inverted error codes to avoid endless loop
    
    
    [ Upstream commit 30be8f8dba1bd2aff73e8447d59228471233a3d4 ]
    
    sendfile() calls can hang endless with using Kernel TLS if a socket error occurs.
    Socket error codes must be inverted by Kernel TLS before returning because
    they are stored with positive sign. If returned non-inverted they are
    interpreted as number of bytes sent, causing endless looping of the
    splice mechanic behind sendfile().
    
    Signed-off-by: Robert Hering <r.hering@avm.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32e57f8c557faed0cd976abfb800a2f363e6972a
Author: Dan Streetman <ddstreet@ieee.org>
Date:   Thu Jan 18 16:14:26 2018 -0500

    net: tcp: close sock if net namespace is exiting
    
    
    [ Upstream commit 4ee806d51176ba7b8ff1efd81f271d7252e03a1d ]
    
    When a tcp socket is closed, if it detects that its net namespace is
    exiting, close immediately and do not wait for FIN sequence.
    
    For normal sockets, a reference is taken to their net namespace, so it will
    never exit while the socket is open.  However, kernel sockets do not take a
    reference to their net namespace, so it may begin exiting while the kernel
    socket is still open.  In this case if the kernel socket is a tcp socket,
    it will stay open trying to complete its close sequence.  The sock's dst(s)
    hold a reference to their interface, which are all transferred to the
    namespace's loopback interface when the real interfaces are taken down.
    When the namespace tries to take down its loopback interface, it hangs
    waiting for all references to the loopback interface to release, which
    results in messages like:
    
    unregister_netdevice: waiting for lo to become free. Usage count = 1
    
    These messages continue until the socket finally times out and closes.
    Since the net namespace cleanup holds the net_mutex while calling its
    registered pernet callbacks, any new net namespace initialization is
    blocked until the current net namespace finishes exiting.
    
    After this change, the tcp socket notices the exiting net namespace, and
    closes immediately, releasing its dst(s) and their reference to the
    loopback interface, which lets the net namespace continue exiting.
    
    Link: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1711407
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=97811
    Signed-off-by: Dan Streetman <ddstreet@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 450449fff22687db76d7611acb48f94b685bc762
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Jan 18 19:59:19 2018 -0800

    net: qdisc_pkt_len_init() should be more robust
    
    
    [ Upstream commit 7c68d1a6b4db9012790af7ac0f0fdc0d2083422a ]
    
    Without proper validation of DODGY packets, we might very well
    feed qdisc_pkt_len_init() with invalid GSO packets.
    
    tcp_hdrlen() might access out-of-bound data, so let's use
    skb_header_pointer() and proper checks.
    
    Whole story is described in commit d0c081b49137 ("flow_dissector:
    properly cap thoff field")
    
    We have the goal of validating DODGY packets earlier in the stack,
    so we might very well revert this fix in the future.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Reported-by: syzbot+9da69ebac7dddd804552@syzkaller.appspotmail.com
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9bee33e397150b43be9ac2271b813552a94345f
Author: Felix Fietkau <nbd@nbd.name>
Date:   Fri Jan 19 11:50:46 2018 +0100

    net: igmp: fix source address check for IGMPv3 reports
    
    
    [ Upstream commit ad23b750933ea7bf962678972a286c78a8fa36aa ]
    
    Commit "net: igmp: Use correct source address on IGMPv3 reports"
    introduced a check to validate the source address of locally generated
    IGMPv3 packets.
    Instead of checking the local interface address directly, it uses
    inet_ifa_match(fl4->saddr, ifa), which checks if the address is on the
    local subnet (or equal to the point-to-point address if used).
    
    This breaks for point-to-point interfaces, so check against
    ifa->ifa_local directly.
    
    Cc: Kevin Cernekee <cernekee@chromium.org>
    Fixes: a46182b00290 ("net: igmp: Use correct source address on IGMPv3 reports")
    Reported-by: Sebastian Gottschall <s.gottschall@dd-wrt.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2afdce2c76b2ccc2c882b5f5eefc8521c8877dee
Author: Yuiko Oshino <yuiko.oshino@microchip.com>
Date:   Mon Jan 15 13:24:28 2018 -0500

    lan78xx: Fix failure in USB Full Speed
    
    
    [ Upstream commit a5b1379afbfabf91e3a689e82ac619a7157336b3 ]
    
    Fix initialize the uninitialized tx_qlen to an appropriate value when USB
    Full Speed is used.
    
    Fixes: 55d7de9de6c3 ("Microchip's LAN7800 family USB 2/3 to 10/100/1000 Ethernet device driver")
    Signed-off-by: Yuiko Oshino <yuiko.oshino@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3472170784d849018356e0bcb7d5c993ffc65699
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Jan 11 22:31:18 2018 -0800

    ipv6: ip6_make_skb() needs to clear cork.base.dst
    
    
    [ Upstream commit 95ef498d977bf44ac094778fd448b98af158a3e6 ]
    
    In my last patch, I missed fact that cork.base.dst was not initialized
    in ip6_make_skb() :
    
    If ip6_setup_cork() returns an error, we might attempt a dst_release()
    on some random pointer.
    
    Fixes: 862c03ee1deb ("ipv6: fix possible mem leaks in ipv6_make_skb()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8278804e05f6bcfe3fdfea4a404020752ead15a6
Author: Mike Maloney <maloney@google.com>
Date:   Wed Jan 10 12:45:10 2018 -0500

    ipv6: fix udpv6 sendmsg crash caused by too small MTU
    
    
    [ Upstream commit 749439bfac6e1a2932c582e2699f91d329658196 ]
    
    The logic in __ip6_append_data() assumes that the MTU is at least large
    enough for the headers.  A device's MTU may be adjusted after being
    added while sendmsg() is processing data, resulting in
    __ip6_append_data() seeing any MTU.  For an mtu smaller than the size of
    the fragmentation header, the math results in a negative 'maxfraglen',
    which causes problems when refragmenting any previous skb in the
    skb_write_queue, leaving it possibly malformed.
    
    Instead sendmsg returns EINVAL when the mtu is calculated to be less
    than IPV6_MIN_MTU.
    
    Found by syzkaller:
    kernel BUG at ./include/linux/skbuff.h:2064!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 14216 Comm: syz-executor5 Not tainted 4.13.0-rc4+ #2
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    task: ffff8801d0b68580 task.stack: ffff8801ac6b8000
    RIP: 0010:__skb_pull include/linux/skbuff.h:2064 [inline]
    RIP: 0010:__ip6_make_skb+0x18cf/0x1f70 net/ipv6/ip6_output.c:1617
    RSP: 0018:ffff8801ac6bf570 EFLAGS: 00010216
    RAX: 0000000000010000 RBX: 0000000000000028 RCX: ffffc90003cce000
    RDX: 00000000000001b8 RSI: ffffffff839df06f RDI: ffff8801d9478ca0
    RBP: ffff8801ac6bf780 R08: ffff8801cc3f1dbc R09: 0000000000000000
    R10: ffff8801ac6bf7a0 R11: 43cb4b7b1948a9e7 R12: ffff8801cc3f1dc8
    R13: ffff8801cc3f1d40 R14: 0000000000001036 R15: dffffc0000000000
    FS:  00007f43d740c700(0000) GS:ffff8801dc100000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f7834984000 CR3: 00000001d79b9000 CR4: 00000000001406e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     ip6_finish_skb include/net/ipv6.h:911 [inline]
     udp_v6_push_pending_frames+0x255/0x390 net/ipv6/udp.c:1093
     udpv6_sendmsg+0x280d/0x31a0 net/ipv6/udp.c:1363
     inet_sendmsg+0x11f/0x5e0 net/ipv4/af_inet.c:762
     sock_sendmsg_nosec net/socket.c:633 [inline]
     sock_sendmsg+0xca/0x110 net/socket.c:643
     SYSC_sendto+0x352/0x5a0 net/socket.c:1750
     SyS_sendto+0x40/0x50 net/socket.c:1718
     entry_SYSCALL_64_fastpath+0x1f/0xbe
    RIP: 0033:0x4512e9
    RSP: 002b:00007f43d740bc08 EFLAGS: 00000216 ORIG_RAX: 000000000000002c
    RAX: ffffffffffffffda RBX: 00000000007180a8 RCX: 00000000004512e9
    RDX: 000000000000002e RSI: 0000000020d08000 RDI: 0000000000000005
    RBP: 0000000000000086 R08: 00000000209c1000 R09: 000000000000001c
    R10: 0000000000040800 R11: 0000000000000216 R12: 00000000004b9c69
    R13: 00000000ffffffff R14: 0000000000000005 R15: 00000000202c2000
    Code: 9e 01 fe e9 c5 e8 ff ff e8 7f 9e 01 fe e9 4a ea ff ff 48 89 f7 e8 52 9e 01 fe e9 aa eb ff ff e8 a8 b6 cf fd 0f 0b e8 a1 b6 cf fd <0f> 0b 49 8d 45 78 4d 8d 45 7c 48 89 85 78 fe ff ff 49 8d 85 ba
    RIP: __skb_pull include/linux/skbuff.h:2064 [inline] RSP: ffff8801ac6bf570
    RIP: __ip6_make_skb+0x18cf/0x1f70 net/ipv6/ip6_output.c:1617 RSP: ffff8801ac6bf570
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Mike Maloney <maloney@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2295b3dd543f9a5a1834e4265d506a5bc0819983
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Mon Jan 22 20:06:42 2018 +0000

    ipv6: Fix getsockopt() for sockets with default IPV6_AUTOFLOWLABEL
    
    
    [ Upstream commit e9191ffb65d8e159680ce0ad2224e1acbde6985c ]
    
    Commit 513674b5a2c9 ("net: reevalulate autoflowlabel setting after
    sysctl setting") removed the initialisation of
    ipv6_pinfo::autoflowlabel and added a second flag to indicate
    whether this field or the net namespace default should be used.
    
    The getsockopt() handling for this case was not updated, so it
    currently returns 0 for all sockets for which IPV6_AUTOFLOWLABEL is
    not explicitly enabled.  Fix it to return the effective value, whether
    that has been set at the socket or net namespace level.
    
    Fixes: 513674b5a2c9 ("net: reevalulate autoflowlabel setting after sysctl ...")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c277f3420a638d455162a8bfccb40ebe22ba57b4
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Fri Jan 26 15:14:16 2018 +0300

    dccp: don't restart ccid2_hc_tx_rto_expire() if sk in closed state
    
    
    [ Upstream commit dd5684ecae3bd8e44b644f50e2c12c7e57fdfef5 ]
    
    ccid2_hc_tx_rto_expire() timer callback always restarts the timer
    again and can run indefinitely (unless it is stopped outside), and after
    commit 120e9dabaf55 ("dccp: defer ccid_hc_tx_delete() at dismantle time"),
    which moved ccid_hc_tx_delete() (also includes sk_stop_timer()) from
    dccp_destroy_sock() to sk_destruct(), this started to happen quite often.
    The timer prevents releasing the socket, as a result, sk_destruct() won't
    be called.
    
    Found with LTP/dccp_ipsec tests running on the bonding device,
    which later couldn't be unloaded after the tests were completed:
    
      unregister_netdevice: waiting for bond0 to become free. Usage count = 148
    
    Fixes: 2a91aa396739 ("[DCCP] CCID2: Initial CCID2 (TCP-Like) implementation")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42d68bf2a42381642ea5ae460c6a5d86a56213f0
Author: Jim Westfall <jwestfall@surrealistic.net>
Date:   Sun Jan 14 04:18:51 2018 -0800

    ipv4: Make neigh lookup keys for loopback/point-to-point devices be INADDR_ANY
    
    
    [ Upstream commit cd9ff4de0107c65d69d02253bb25d6db93c3dbc1 ]
    
    Map all lookup neigh keys to INADDR_ANY for loopback/point-to-point devices
    to avoid making an entry for every remote ip the device needs to talk to.
    
    This used the be the old behavior but became broken in a263b3093641f
    (ipv4: Make neigh lookups directly in output packet path) and later removed
    in 0bb4087cbec0 (ipv4: Fix neigh lookup keying over loopback/point-to-point
    devices) because it was broken.
    
    Signed-off-by: Jim Westfall <jwestfall@surrealistic.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f703437099b4ec09a643ad0ae2839ca292601166
Author: Jim Westfall <jwestfall@surrealistic.net>
Date:   Sun Jan 14 04:18:50 2018 -0800

    net: Allow neigh contructor functions ability to modify the primary_key
    
    
    [ Upstream commit 096b9854c04df86f03b38a97d40b6506e5730919 ]
    
    Use n->primary_key instead of pkey to account for the possibility that a neigh
    constructor function may have modified the primary_key value.
    
    Signed-off-by: Jim Westfall <jwestfall@surrealistic.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ad970c8a13595e38d3af98114bcbbec6d8a5be4
Author: Boris Brezillon <boris.brezillon@free-electrons.com>
Date:   Thu Jan 18 15:58:21 2018 +0100

    drm/vc4: Fix NULL pointer dereference in vc4_save_hang_state()
    
    commit 17b11b76b87afe9f8be199d7a5f442497133e2b0 upstream.
    
    When saving BOs in the hang state we skip one entry of the
    kernel_state->bo[] array, thus leaving it to NULL. This leads to a NULL
    pointer dereference when, later in this function, we iterate over all
    BOs to check their ->madv state.
    
    Fixes: ca26d28bbaa3 ("drm/vc4: improve throughput by pipelining binning and rendering jobs")
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180118145821.22344-1-boris.brezillon@free-electrons.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd55bfca560733d37f53a04cf628c5d6a7d5d0da
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Jan 13 12:11:26 2018 +0000

    ARM: net: bpf: clarify tail_call index
    
    commit 091f02483df7b56615b524491f404e574c5e0668 upstream.
    
    As per 90caccdd8cc0 ("bpf: fix bpf_tail_call() x64 JIT"), the index used
    for array lookup is defined to be 32-bit wide. Update a misleading
    comment that suggests it is 64-bit wide.
    
    Fixes: 39c13c204bb1 ("arm: eBPF JIT compiler")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5911dd3f92aefd86b4a86286c94398681c453802
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Jan 13 21:06:16 2018 +0000

    ARM: net: bpf: fix LDX instructions
    
    commit ec19e02b343db991d2d1610c409efefebf4e2ca9 upstream.
    
    When the source and destination register are identical, our JIT does not
    generate correct code, which leads to kernel oopses.
    
    Fix this by (a) generating more efficient code, and (b) making use of
    the temporary earlier if we will overwrite the address register.
    
    Fixes: 39c13c204bb1 ("arm: eBPF JIT compiler")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0da4a4d0c7f941638e2e7e515c2d758de8976418
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Jan 13 22:38:18 2018 +0000

    ARM: net: bpf: fix register saving
    
    commit 02088d9b392f605c892894b46aa8c83e3abd0115 upstream.
    
    When an eBPF program tail-calls another eBPF program, it enters it after
    the prologue to avoid having complex stack manipulations.  This can lead
    to kernel oopses, and similar.
    
    Resolve this by always using a fixed stack layout, a CPU register frame
    pointer, and using this when reloading registers before returning.
    
    Fixes: 39c13c204bb1 ("arm: eBPF JIT compiler")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 295bcfbbcf5a741e9103605c3252276ed21433bb
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Jan 13 22:51:27 2018 +0000

    ARM: net: bpf: correct stack layout documentation
    
    commit 0005e55a79cfda88199e41a406a829c88d708c67 upstream.
    
    The stack layout documentation incorrectly suggests that the BPF JIT
    scratch space starts immediately below BPF_FP. This is not correct,
    so let's fix the documentation to reflect reality.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 403f4c6ae9d15afd0776316728db18f20600dba6
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Jan 13 21:26:14 2018 +0000

    ARM: net: bpf: move stack documentation
    
    commit 70ec3a6c2c11e4b0e107a65de943a082f9aff351 upstream.
    
    Move the stack documentation towards the top of the file, where it's
    relevant for things like the register layout.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfd2c2b9915cb3c82743251ab365b64ca2280e19
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Jan 13 16:10:07 2018 +0000

    ARM: net: bpf: fix stack alignment
    
    commit d1220efd23484c72c82d5471f05daeb35b5d1916 upstream.
    
    As per 2dede2d8e925 ("ARM EABI: stack pointer must be 64-bit aligned
    after a CPU exception") the stack should be aligned to a 64-bit boundary
    on EABI systems.  Ensure that the eBPF JIT appropraitely aligns the
    stack.
    
    Fixes: 39c13c204bb1 ("arm: eBPF JIT compiler")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7119caa7cd93ff4a01788ebd2fc95edeaa16da3
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Jan 13 11:39:54 2018 +0000

    ARM: net: bpf: fix tail call jumps
    
    commit f4483f2cc1fdc03488c8a1452e545545ae5bda93 upstream.
    
    When a tail call fails, it is documented that the tail call should
    continue execution at the following instruction.  An example tail call
    sequence is:
    
      12: (85) call bpf_tail_call#12
      13: (b7) r0 = 0
      14: (95) exit
    
    The ARM assembler for the tail call in this case ends up branching to
    instruction 14 instead of instruction 13, resulting in the BPF filter
    returning a non-zero value:
    
      178:  ldr     r8, [sp, #588]  ; insn 12
      17c:  ldr     r6, [r8, r6]
      180:  ldr     r8, [sp, #580]
      184:  cmp     r8, r6
      188:  bcs     0x1e8
      18c:  ldr     r6, [sp, #524]
      190:  ldr     r7, [sp, #528]
      194:  cmp     r7, #0
      198:  cmpeq   r6, #32
      19c:  bhi     0x1e8
      1a0:  adds    r6, r6, #1
      1a4:  adc     r7, r7, #0
      1a8:  str     r6, [sp, #524]
      1ac:  str     r7, [sp, #528]
      1b0:  mov     r6, #104
      1b4:  ldr     r8, [sp, #588]
      1b8:  add     r6, r8, r6
      1bc:  ldr     r8, [sp, #580]
      1c0:  lsl     r7, r8, #2
      1c4:  ldr     r6, [r6, r7]
      1c8:  cmp     r6, #0
      1cc:  beq     0x1e8
      1d0:  mov     r8, #32
      1d4:  ldr     r6, [r6, r8]
      1d8:  add     r6, r6, #44
      1dc:  bx      r6
      1e0:  mov     r0, #0          ; insn 13
      1e4:  mov     r1, #0
      1e8:  add     sp, sp, #596    ; insn 14
      1ec:  pop     {r4, r5, r6, r7, r8, sl, pc}
    
    For other sequences, the tail call could end up branching midway through
    the following BPF instructions, or maybe off the end of the function,
    leading to unknown behaviours.
    
    Fixes: 39c13c204bb1 ("arm: eBPF JIT compiler")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 124047a81eae1fad08482aa122e683f602fe85dc
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Jan 13 11:35:15 2018 +0000

    ARM: net: bpf: avoid 'bx' instruction on non-Thumb capable CPUs
    
    commit e9062481824384f00299971f923fecf6b3668001 upstream.
    
    Avoid the 'bx' instruction on CPUs that have no support for Thumb and
    thus do not implement this instruction by moving the generation of this
    opcode to a separate function that selects between:
    
            bx      reg
    
    and
    
            mov     pc, reg
    
    according to the capabilities of the CPU.
    
    Fixes: 39c13c204bb1 ("arm: eBPF JIT compiler")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 326efb49e153fbb9ccacaed9858bd9da91204061
Author: Martin Brandenburg <martin@omnibond.com>
Date:   Thu Jan 25 19:39:44 2018 -0500

    orangefs: fix deadlock; do not write i_size in read_iter
    
    commit 6793f1c450b1533a5e9c2493490de771d38b24f9 upstream.
    
    After do_readv_writev, the inode cache is invalidated anyway, so i_size
    will never be read.  It will be fetched from the server which will also
    know about updates from other machines.
    
    Fixes deadlock on 32-bit SMP.
    
    See https://marc.info/?l=linux-fsdevel&m=151268557427760&w=2
    
    Signed-off-by: Martin Brandenburg <martin@omnibond.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Mike Marshall <hubcap@omnibond.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d529ba9b270c8713440c63f64af6a7d522591990
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Fri Dec 22 10:54:20 2017 +0100

    KVM: s390: add proper locking for CMMA migration bitmap
    
    commit 1de1ea7efeb9e8543212210e34518b4049ccd285 upstream.
    
    Some parts of the cmma migration bitmap is already protected
    with the kvm->lock (e.g. the migration start). On the other
    hand the read of the cmma bits is not protected against a
    concurrent free, neither is the emulation of the ESSA instruction.
    Let's extend the locking to all related ioctls by using
    the slots lock for
    - kvm_s390_vm_start_migration
    - kvm_s390_vm_stop_migration
    - kvm_s390_set_cmma_bits
    - kvm_s390_get_cmma_bits
    
    In addition to that, we use synchronize_srcu before freeing
    the migration structure as all users hold kvm->srcu for read.
    (e.g. the ESSA handler).
    
    Reported-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Fixes: 190df4a212a7 (KVM: s390: CMMA tracking, ESSA emulation, migration mode)
    Reviewed-by: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c7b881331f825fe97a47aed6bb4a32c542eca2d
Author: Josef Bacik <jbacik@fb.com>
Date:   Tue Jan 23 15:17:05 2018 -0500

    Btrfs: fix stale entries in readdir
    
    commit e4fd493c0541d36953f7b9d3bfced67a1321792f upstream.
    
    In fixing the readdir+pagefault deadlock I accidentally introduced a
    stale entry regression in readdir.  If we get close to full for the
    temporary buffer, and then skip a few delayed deletions, and then try to
    add another entry that won't fit, we will emit the entries we found and
    retry.  Unfortunately we delete entries from our del_list as we find
    them, assuming we won't need them.  However our pos will be with
    whatever our last entry was, which could be before the delayed deletions
    we skipped, so the next search will add the deleted entries back into
    our readdir buffer.  So instead don't delete entries we find in our
    del_list so we can make sure we always find our delayed deletions.  This
    is a slight perf hit for readdir with lots of pending deletions, but
    hopefully this isn't a common occurrence.  If it is we can revist this
    and optimize it.
    
    Fixes: 23b5ec74943f ("btrfs: fix readdir deadlock with pagefault")
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 203a60330e040f2aa326f028b8c41a774bcb0990
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Jan 5 13:28:47 2018 -0800

    Input: trackpoint - only expose supported controls for Elan, ALPS and NXP
    
    commit 2a924d71794c530e55e73d0ce2cc77233307eaa9 upstream.
    
    The newer trackpoints from ALPS, Elan and NXP implement a very limited
    subset of extended commands and controls that the original trackpoints
    implemented, so we should not be exposing not working controls in sysfs.
    The newer trackpoints also do not implement "Power On Reset" or "Read
    Extended Button Status", so we should not be using these commands during
    initialization.
    
    While we are at it, let's change "unsigned char" to u8 for byte data or
    bool for booleans and use better suited error codes instead of -1.
    
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e4cd0ad576a75d26ea1658cf76c2ce00774ba73
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Fri Jan 19 09:43:39 2018 -0800

    Input: trackpoint - force 3 buttons if 0 button is reported
    
    commit f5d07b9e98022d50720e38aa936fc11c67868ece upstream.
    
    Lenovo introduced trackpoint compatible sticks with minimum PS/2 commands.
    They supposed to reply with 0x02, 0x03, or 0x04 in response to the
    "Read Extended ID" command, so we would know not to try certain extended
    commands. Unfortunately even some trackpoints reporting the original IBM
    version (0x01 firmware 0x0e) now respond with incorrect data to the "Get
    Extended Buttons" command:
    
     thinkpad_acpi: ThinkPad BIOS R0DET87W (1.87 ), EC unknown
     thinkpad_acpi: Lenovo ThinkPad E470, model 20H1004SGE
    
     psmouse serio2: trackpoint: IBM TrackPoint firmware: 0x0e, buttons: 0/0
    
    Since there are no trackpoints without buttons, let's assume the trackpoint
    has 3 buttons when we get 0 response to the extended buttons query.
    
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=196253
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25cb145272525e819b21fb44dc338d08b6af816f
Author: Mark Furneaux <mark@furneaux.ca>
Date:   Mon Jan 22 11:24:17 2018 -0800

    Input: xpad - add support for PDP Xbox One controllers
    
    commit e5c9c6a885fad00aa559b49d8fc23a60e290824e upstream.
    
    Adds support for the current lineup of Xbox One controllers from PDP
    (Performance Designed Products). These controllers are very picky with
    their initialization sequence and require an additional 2 packets before
    they send any input reports.
    
    Signed-off-by: Mark Furneaux <mark@furneaux.ca>
    Reviewed-by: Cameron Gutman <aicommander@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cc765d69c4faf7dabfa5816add84ee52bc7912b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jan 24 15:28:17 2018 +0100

    Revert "module: Add retpoline tag to VERMAGIC"
    
    commit 5132ede0fe8092b043dae09a7cc32b8ae7272baa upstream.
    
    This reverts commit 6cfb521ac0d5b97470883ff9b7facae264b7ab12.
    
    Turns out distros do not want to make retpoline as part of their "ABI",
    so this patch should not have been merged.  Sorry Andi, this was my
    fault, I suggested it when your original patch was the "correct" way of
    doing this instead.
    
    Reported-by: Jiri Kosina <jikos@kernel.org>
    Fixes: 6cfb521ac0d5 ("module: Add retpoline tag to VERMAGIC")
    Acked-by: Andi Kleen <ak@linux.intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: rusty@rustcorp.com.au
    Cc: arjan.van.de.ven@intel.com
    Cc: jeyu@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ceab06885c09f685910779a8685b7659d66de4b5
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Wed Jan 10 12:14:28 2018 +0100

    xfrm: Fix a race in the xdst pcpu cache.
    
    commit 76a4201191814a0061cb5c861fafb9ecaa764846 upstream.
    
    We need to run xfrm_resolve_and_create_bundle() with
    bottom halves off. Otherwise we may reuse an already
    released dst_enty when the xfrm lookup functions are
    called from process context.
    
    Fixes: c30d78c14a813db39a647b6a348b428 ("xfrm: add xdst pcpu cache")
    Reported-by: Darius Ski <darius.ski@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Acked-by: David Miller <davem@davemloft.net>,
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19848ca7b7dad5153860239c893c1eadd603217e
Author: Kevin Cernekee <cernekee@chromium.org>
Date:   Tue Dec 5 15:42:41 2017 -0800

    netfilter: xt_osf: Add missing permission checks
    
    commit 916a27901de01446bcf57ecca4783f6cff493309 upstream.
    
    The capability check in nfnetlink_rcv() verifies that the caller
    has CAP_NET_ADMIN in the namespace that "owns" the netlink socket.
    However, xt_osf_fingers is shared by all net namespaces on the
    system.  An unprivileged user can create user and net namespaces
    in which he holds CAP_NET_ADMIN to bypass the netlink_net_capable()
    check:
    
        vpnns -- nfnl_osf -f /tmp/pf.os
    
        vpnns -- nfnl_osf -f /tmp/pf.os -d
    
    These non-root operations successfully modify the systemwide OS
    fingerprint list.  Add new capable() checks so that they can't.
    
    Signed-off-by: Kevin Cernekee <cernekee@chromium.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Acked-by: Michal Kubecek <mkubecek@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 671624872144abc37bc5e8f3b27987890f6e87f3
Author: Kevin Cernekee <cernekee@chromium.org>
Date:   Sun Dec 3 12:12:45 2017 -0800

    netfilter: nfnetlink_cthelper: Add missing permission checks
    
    commit 4b380c42f7d00a395feede754f0bc2292eebe6e5 upstream.
    
    The capability check in nfnetlink_rcv() verifies that the caller
    has CAP_NET_ADMIN in the namespace that "owns" the netlink socket.
    However, nfnl_cthelper_list is shared by all net namespaces on the
    system.  An unprivileged user can create user and net namespaces
    in which he holds CAP_NET_ADMIN to bypass the netlink_net_capable()
    check:
    
        $ nfct helper list
        nfct v1.4.4: netlink error: Operation not permitted
        $ vpnns -- nfct helper list
        {
                .name = ftp,
                .queuenum = 0,
                .l3protonum = 2,
                .l4protonum = 6,
                .priv_data_len = 24,
                .status = enabled,
        };
    
    Add capable() checks in nfnetlink_cthelper, as this is cleaner than
    trying to generalize the solution.
    
    Signed-off-by: Kevin Cernekee <cernekee@chromium.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Acked-by: Michal Kubecek <mkubecek@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd9fa7822f789f3ec32058440c246f7924d8ca9a
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Wed Nov 15 17:38:30 2017 -0800

    mm, page_alloc: fix potential false positive in __zone_watermark_ok
    
    commit b050e3769c6b4013bb937e879fc43bf1847ee819 upstream.
    
    Since commit 97a16fc82a7c ("mm, page_alloc: only enforce watermarks for
    order-0 allocations"), __zone_watermark_ok() check for high-order
    allocations will shortcut per-migratetype free list checks for
    ALLOC_HARDER allocations, and return true as long as there's free page
    of any migratetype.  The intention is that ALLOC_HARDER can allocate
    from MIGRATE_HIGHATOMIC free lists, while normal allocations can't.
    
    However, as a side effect, the watermark check will then also return
    true when there are pages only on the MIGRATE_ISOLATE list, or (prior to
    CMA conversion to ZONE_MOVABLE) on the MIGRATE_CMA list.  Since the
    allocation cannot actually obtain isolated pages, and might not be able
    to obtain CMA pages, this can result in a false positive.
    
    The condition should be rare and perhaps the outcome is not a fatal one.
    Still, it's better if the watermark check is correct.  There also
    shouldn't be a performance tradeoff here.
    
    Link: http://lkml.kernel.org/r/20171102125001.23708-1-vbabka@suse.cz
    Fixes: 97a16fc82a7c ("mm, page_alloc: only enforce watermarks for order-0 allocations")
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1166d9491a0eb7b854d6868e62a9066c7dff277
Author: Martin Brandenburg <martin@omnibond.com>
Date:   Mon Jan 22 15:44:52 2018 -0500

    orangefs: initialize op on loop restart in orangefs_devreq_read
    
    commit a0ec1ded22e6a6bc41981fae22406835b006a66e upstream.
    
    In orangefs_devreq_read, there is a loop which picks an op off the list
    of pending ops.  If the loop fails to find an op, there is nothing to
    read, and it returns EAGAIN.  If the op has been given up on, the loop
    is restarted via a goto.  The bug is that the variable which the found
    op is written to is not reinitialized, so if there are no more eligible
    ops on the list, the code runs again on the already handled op.
    
    This is triggered by interrupting a process while the op is being copied
    to the client-core.  It's a fairly small window, but it's there.
    
    Signed-off-by: Martin Brandenburg <martin@omnibond.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d00dacda89dca83b9899fe3ed1588b08bdd4b88
Author: Martin Brandenburg <martin@omnibond.com>
Date:   Mon Jan 22 15:44:51 2018 -0500

    orangefs: use list_for_each_entry_safe in purge_waiting_ops
    
    commit 0afc0decf247f65b7aba666a76a0a68adf4bc435 upstream.
    
    set_op_state_purged can delete the op.
    
    Signed-off-by: Martin Brandenburg <martin@omnibond.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a16134b082346b7e7c34f594a0763eafacdcea92
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jan 23 19:58:21 2018 +0100

    Linux 4.14.15

commit d602cb8a4b133bfe1e9b6170e646cbbf38660ee8
Author: Jonas Gorski <jonas.gorski@gmail.com>
Date:   Sun Oct 29 16:27:21 2017 +0100

    MIPS: AR7: ensure the port type's FCR value is used
    
    commit 0a5191efe06b5103909206e4fbcff81d30283f8e upstream.
    
    Since commit aef9a7bd9b67 ("serial/uart/8250: Add tunable RX interrupt
    trigger I/F of FIFO buffers"), the port's default FCR value isn't used
    in serial8250_do_set_termios anymore, but copied over once in
    serial8250_config_port and then modified as needed.
    
    Unfortunately, serial8250_config_port will never be called if the port
    is shared between kernel and userspace, and the port's flag doesn't have
    UPF_BOOT_AUTOCONF, which would trigger a serial8250_config_port as well.
    
    This causes garbled output from userspace:
    
    [    5.220000] random: procd urandom read with 49 bits of entropy available
    ers
       [kee
    
    Fix this by forcing it to be configured on boot, resulting in the
    expected output:
    
    [    5.250000] random: procd urandom read with 50 bits of entropy available
    Press the [f] key and hit [enter] to enter failsafe mode
    Press the [1], [2], [3] or [4] key and hit [enter] to select the debug level
    
    Fixes: aef9a7bd9b67 ("serial/uart/8250: Add tunable RX interrupt trigger I/F of FIFO buffers")
    Signed-off-by: Jonas Gorski <jonas.gorski@gmail.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Yoshihiro YUNOMAE <yoshihiro.yunomae.ez@hitachi.com>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Nicolas Schichan <nschichan@freebox.fr>
    Cc: linux-mips@linux-mips.org
    Cc: linux-serial@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17544/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c2870761e9fea8175f52a9113acf93fde81cd51
Author: Yan Markman <ymarkman@marvell.com>
Date:   Tue Nov 28 14:19:50 2017 +0100

    net: mvpp2: do not disable GMAC padding
    
    commit e749aca84b10f3987b2ee1f76e0c7d8aacc5653c upstream.
    
    Short fragmented packets may never be sent by the hardware when padding
    is disabled. This patch stop modifying the GMAC padding bits, to leave
    them to their reset value (disabled).
    
    Fixes: 3919357fb0bb ("net: mvpp2: initialize the GMAC when using a port")
    Signed-off-by: Yan Markman <ymarkman@marvell.com>
    [Antoine: commit message]
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3abb4c11038e03c4adc701eff30c45638816eb0f
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri Jan 19 15:49:24 2018 +0300

    mm, page_vma_mapped: Drop faulty pointer arithmetics in check_pte()
    
    commit 0d665e7b109d512b7cae3ccef6e8654714887844 upstream.
    
    Tetsuo reported random crashes under memory pressure on 32-bit x86
    system and tracked down to change that introduced
    page_vma_mapped_walk().
    
    The root cause of the issue is the faulty pointer math in check_pte().
    As ->pte may point to an arbitrary page we have to check that they are
    belong to the section before doing math. Otherwise it may lead to weird
    results.
    
    It wasn't noticed until now as mem_map[] is virtually contiguous on
    flatmem or vmemmap sparsemem. Pointer arithmetic just works against all
    'struct page' pointers. But with classic sparsemem, it doesn't because
    each section memap is allocated separately and so consecutive pfns
    crossing two sections might have struct pages at completely unrelated
    addresses.
    
    Let's restructure code a bit and replace pointer arithmetic with
    operations on pfns.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reported-and-tested-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Fixes: ace71a19cec5 ("mm: introduce page_vma_mapped_walk()")
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cc86f994bff4de89de06cedba76e6ef03b9a810
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Wed Jan 17 17:41:41 2018 -0600

    x86/mm: Rework wbinvd, hlt operation in stop_this_cpu()
    
    commit f23d74f6c66c3697e032550eeef3f640391a3a7d upstream.
    
    Some issues have been reported with the for loop in stop_this_cpu() that
    issues the 'wbinvd; hlt' sequence.  Reverting this sequence to halt()
    has been shown to resolve the issue.
    
    However, the wbinvd is needed when running with SME.  The reason for the
    wbinvd is to prevent cache flush races between encrypted and non-encrypted
    entries that have the same physical address.  This can occur when
    kexec'ing from memory encryption active to inactive or vice-versa.  The
    important thing is to not have outside of kernel text memory references
    (such as stack usage), so the usage of the native_*() functions is needed
    since these expand as inline asm sequences.  So instead of reverting the
    change, rework the sequence.
    
    Move the wbinvd instruction outside of the for loop as native_wbinvd()
    and make its execution conditional on X86_FEATURE_SME.  In the for loop,
    change the asm 'wbinvd; hlt' sequence back to a halt sequence but use
    the native_halt() call.
    
    Fixes: bba4ed011a52 ("x86/mm, kexec: Allow kexec to be used with SME")
    Reported-by: Dave Young <dyoung@redhat.com>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Dave Young <dyoung@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Yu Chen <yu.c.chen@intel.com>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: kexec@lists.infradead.org
    Cc: ebiederm@redhat.com
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Rui Zhang <rui.zhang@intel.com>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Link: https://lkml.kernel.org/r/20180117234141.21184.44067.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fa871644e6d48f5c120e8c469c96850a01c60c8
Author: Andi Kleen <ak@linux.intel.com>
Date:   Wed Jan 17 14:53:28 2018 -0800

    x86/retpoline: Optimize inline assembler for vmexit_fill_RSB
    
    commit 3f7d875566d8e79c5e0b2c9a413e91b2c29e0854 upstream.
    
    The generated assembler for the C fill RSB inline asm operations has
    several issues:
    
    - The C code sets up the loop register, which is then immediately
      overwritten in __FILL_RETURN_BUFFER with the same value again.
    
    - The C code also passes in the iteration count in another register, which
      is not used at all.
    
    Remove these two unnecessary operations. Just rely on the single constant
    passed to the macro for the iterations.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: dave.hansen@intel.com
    Cc: gregkh@linuxfoundation.org
    Cc: torvalds@linux-foundation.org
    Cc: arjan@linux.intel.com
    Link: https://lkml.kernel.org/r/20180117225328.15414-1-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd8d78e4865be661366720ab69e733fae4e9deea
Author: zhenwei.pi <zhenwei.pi@youruncloud.com>
Date:   Thu Jan 18 09:04:52 2018 +0800

    x86/pti: Document fix wrong index
    
    commit 98f0fceec7f84d80bc053e49e596088573086421 upstream.
    
    In section <2. Runtime Cost>, fix wrong index.
    
    Signed-off-by: zhenwei.pi <zhenwei.pi@youruncloud.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: dave.hansen@linux.intel.com
    Link: https://lkml.kernel.org/r/1516237492-27739-1-git-send-email-zhenwei.pi@youruncloud.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fb8368bb6a0b7a50974722ddc16419b5a4c4559
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Jan 19 01:15:20 2018 +0900

    kprobes/x86: Disable optimizing on the function jumps to indirect thunk
    
    commit c86a32c09f8ced67971a2310e3b0dda4d1749007 upstream.
    
    Since indirect jump instructions will be replaced by jump
    to __x86_indirect_thunk_*, those jmp instruction must be
    treated as an indirect jump. Since optprobe prohibits to
    optimize probes in the function which uses an indirect jump,
    it also needs to find out the function which jump to
    __x86_indirect_thunk_* and disable optimization.
    
    Add a check that the jump target address is between the
    __indirect_thunk_start/end when optimizing kprobe.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Link: https://lkml.kernel.org/r/151629212062.10241.6991266100233002273.stgit@devbox
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aaadccc92ba402b32cbdd72694dc12f6dd4e9ecf
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Jan 19 01:14:51 2018 +0900

    kprobes/x86: Blacklist indirect thunk functions for kprobes
    
    commit c1804a236894ecc942da7dc6c5abe209e56cba93 upstream.
    
    Mark __x86_indirect_thunk_* functions as blacklist for kprobes
    because those functions can be called from anywhere in the kernel
    including blacklist functions of kprobes.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Link: https://lkml.kernel.org/r/151629209111.10241.5444852823378068683.stgit@devbox
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22371c489842560f99aa6c12a2c00db8b0ecb752
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Jan 19 01:14:21 2018 +0900

    retpoline: Introduce start/end markers of indirect thunk
    
    commit 736e80a4213e9bbce40a7c050337047128b472ac upstream.
    
    Introduce start/end markers of __x86_indirect_thunk_* functions.
    To make it easy, consolidate .text.__x86.indirect_thunk.* sections
    to one .text.__x86.indirect_thunk section and put it in the
    end of kernel text section and adds __indirect_thunk_start/end
    so that other subsystem (e.g. kprobes) can identify it.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Link: https://lkml.kernel.org/r/151629206178.10241.6828804696410044771.stgit@devbox
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 020c755fdb04be9cffa5a30c1624990b7c54cb4c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 18 16:28:26 2018 +0100

    x86/mce: Make machine check speculation protected
    
    commit 6f41c34d69eb005e7848716bbcafc979b35037d5 upstream.
    
    The machine check idtentry uses an indirect branch directly from the low
    level code. This evades the speculation protection.
    
    Replace it by a direct call into C code and issue the indirect call there
    so the compiler can apply the proper speculation protection.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by:Borislav Petkov <bp@alien8.de>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Niced-by: Peter Zijlstra <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801181626290.1847@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14c7f5bc7a9059037feeb7666ca646c88eaacb5f
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Jan 16 10:23:47 2018 +0000

    arm64: KVM: Fix SMCCC handling of unimplemented SMC/HVC calls
    
    commit acfb3b883f6d6a4b5d27ad7fdded11f6a09ae6dd upstream.
    
    KVM doesn't follow the SMCCC when it comes to unimplemented calls,
    and inject an UNDEF instead of returning an error. Since firmware
    calls are now used for security mitigation, they are becoming more
    common, and the undef is counter productive.
    
    Instead, let's follow the SMCCC which states that -1 must be returned
    to the caller when getting an unknown function number.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d641053891697cee3253c73a435fc0972b039edf
Author: Punit Agrawal <punit.agrawal@arm.com>
Date:   Thu Jan 4 18:24:33 2018 +0000

    KVM: arm/arm64: Check pagesize when allocating a hugepage at Stage 2
    
    commit c507babf10ead4d5c8cca704539b170752a8ac84 upstream.
    
    KVM only supports PMD hugepages at stage 2 but doesn't actually check
    that the provided hugepage memory pagesize is PMD_SIZE before populating
    stage 2 entries.
    
    In cases where the backing hugepage size is smaller than PMD_SIZE (such
    as when using contiguous hugepages), KVM can end up creating stage 2
    mappings that extend beyond the supplied memory.
    
    Fix this by checking for the pagesize of userspace vma before creating
    PMD hugepage at stage 2.
    
    Fixes: 66b3923a1a0f77a ("arm64: hugetlb: add support for PTE contiguous bit")
    Signed-off-by: Punit Agrawal <punit.agrawal@arm.com>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 550ba9729c05d9a52fbc26cd061c8d65f52b62f4
Author: James Hogan <jhogan@kernel.org>
Date:   Tue Dec 5 22:28:22 2017 +0000

    MIPS: CM: Drop WARN_ON(vp != 0)
    
    commit c04de7b1ad645b61c141df8ca903ba0cc03a57f7 upstream.
    
    Since commit 68923cdc2eb3 ("MIPS: CM: Add cluster & block args to
    mips_cm_lock_other()"), mips_smp_send_ipi_mask() has used
    mips_cm_lock_other_cpu() with each CPU number, rather than
    mips_cm_lock_other() with the first VPE in each core. Prior to r6,
    multicore multithreaded systems such as dual-core dual-thread
    interAptivs with CPU Idle enabled (e.g. MIPS Creator Ci40) results in
    mips_cm_lock_other() repeatedly hitting WARN_ON(vp != 0).
    
    There doesn't appear to be anything fundamentally wrong about passing a
    non-zero VP/VPE number, even if it is a core's region that is locked
    into the other region before r6, so remove that particular WARN_ON().
    
    Fixes: 68923cdc2eb3 ("MIPS: CM: Add cluster & block args to mips_cm_lock_other()")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Reviewed-by: Paul Burton <paul.burton@mips.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17883/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 708a15fdbb622e884d6e6fb6e8c30cc6d42ab89d
Author: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
Date:   Tue Jan 16 11:52:59 2018 +0000

    alpha/PCI: Fix noname IRQ level detection
    
    commit 86be89939d11a84800f66e2a283b915b704bf33d upstream.
    
    The conversion of the alpha architecture PCI host bridge legacy IRQ
    mapping/swizzling to the new PCI host bridge map/swizzle hooks carried
    out through:
    
    commit 0e4c2eeb758a ("alpha/PCI: Replace pci_fixup_irqs() call with
    host bridge IRQ mapping hooks")
    
    implies that IRQ for devices are now allocated through pci_assign_irq()
    function in pci_device_probe() that is called when a driver matching a
    device is found in order to probe the device through the device driver.
    
    Alpha noname platforms required IRQ level programming to be executed
    in sio_fixup_irq_levels(), that is called in noname_init_pci(), a
    platform hook called within a subsys_initcall.
    
    In noname_init_pci(), present IRQs are detected through
    sio_collect_irq_levels() that check the struct pci_dev->irq number
    to detect if an IRQ has been allocated for the device.
    
    By the time sio_collect_irq_levels() is called, some devices may still
    have not a matching driver loaded to match them (eg loadable module)
    therefore their IRQ allocation is still pending - which means that
    sio_collect_irq_levels() does not programme the correct IRQ level for
    those devices, causing their IRQ handling to be broken when the device
    driver is actually loaded and the device is probed.
    
    Fix the issue by adding code in the noname map_irq() function
    (noname_map_irq()) that, whilst mapping/swizzling the IRQ line, it also
    ensures that the correct IRQ level programming is executed at platform
    level, fixing the issue.
    
    Fixes: 0e4c2eeb758a ("alpha/PCI: Replace pci_fixup_irqs() call with
    host bridge IRQ mapping hooks")
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Richard Henderson <rth@twiddle.net>
    Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Cc: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 314a028c1f49cf79e6b443e21a70f5243d7df21f
Author: Laura Abbott <labbott@redhat.com>
Date:   Sat Jan 20 17:14:02 2018 -0800

    x86: Use __nostackprotect for sme_encrypt_kernel
    
    commit 91cfc88c66bf8ab95937606569670cf67fa73e09 upstream.
    
    Commit bacf6b499e11 ("x86/mm: Use a struct to reduce parameters for SME
    PGD mapping") moved some parameters into a structure.
    
    The structure was large enough to trigger the stack protection canary in
    sme_encrypt_kernel which doesn't work this early, causing reboots.
    
    Mark sme_encrypt_kernel appropriately to not use the canary.
    
    Fixes: bacf6b499e11 ("x86/mm: Use a struct to reduce parameters for SME PGD mapping")
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f05431489fe654ba0df6fc8ab272a438bc702c62
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Jan 17 11:24:26 2018 +0000

    dm crypt: fix error return code in crypt_ctr()
    
    commit 3cc2e57c4beabcbbaa46e1ac6d77ca8276a4a42d upstream.
    
    Fix to return error code -ENOMEM from the mempool_create_kmalloc_pool()
    error handling case instead of 0, as done elsewhere in this function.
    
    Fixes: ef43aa38063a6 ("dm crypt: add cryptographic data integrity protection (authenticated encryption)")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82e12f1b26bae6b717c33af6395cf476bf3a6461
Author: Ondrej Kozina <okozina@redhat.com>
Date:   Fri Jan 12 16:30:32 2018 +0100

    dm crypt: wipe kernel key copy after IV initialization
    
    commit dc94902bde1e158cd19c4deab208e5d6eb382a44 upstream.
    
    Loading key via kernel keyring service erases the internal
    key copy immediately after we pass it in crypto layer. This is
    wrong because IV is initialized later and we use wrong key
    for the initialization (instead of real key there's just zeroed
    block).
    
    The bug may cause data corruption if key is loaded via kernel keyring
    service first and later same crypt device is reactivated using exactly
    same key in hexbyte representation, or vice versa. The bug (and fix)
    affects only ciphers using following IVs: essiv, lmk and tcw.
    
    Fixes: c538f6ec9f56 ("dm crypt: add ability to use keys from the kernel key retention service")
    Signed-off-by: Ondrej Kozina <okozina@redhat.com>
    Reviewed-by: Milan Broz <gmazyland@gmail.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b8fdeadeb79ff48a5a412c0480d1e74a6da7fba
Author: Milan Broz <gmazyland@gmail.com>
Date:   Wed Jan 3 22:48:59 2018 +0100

    dm crypt: fix crash by adding missing check for auth key size
    
    commit 27c7003697fc2c78f965984aa224ef26cd6b2949 upstream.
    
    If dm-crypt uses authenticated mode with separate MAC, there are two
    concatenated part of the key structure - key(s) for encryption and
    authentication key.
    
    Add a missing check for authenticated key length.  If this key length is
    smaller than actually provided key, dm-crypt now properly fails instead
    of crashing.
    
    Fixes: ef43aa3806 ("dm crypt: add cryptographic data integrity protection (authenticated encryption)")
    Reported-by: Salah Coronya <salahx@yahoo.com>
    Signed-off-by: Milan Broz <gmazyland@gmail.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c808f1db59561a65c27cb4ffb8515b95e33af221
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Jan 10 09:32:47 2018 -0500

    dm integrity: don't store cipher request on the stack
    
    commit 717f4b1c52135f279112df82583e0c77e80f90de upstream.
    
    Some asynchronous cipher implementations may use DMA.  The stack may
    be mapped in the vmalloc area that doesn't support DMA.  Therefore,
    the cipher request and initialization vector shouldn't be on the
    stack.
    
    Fix this by allocating the request and iv with kmalloc.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f12c33849404e20b24914a5f112ffbb9f8c35b0
Author: Dennis Yang <dennisyang@qnap.com>
Date:   Tue Dec 12 18:21:40 2017 +0800

    dm thin metadata: THIN_MAX_CONCURRENT_LOCKS should be 6
    
    commit 490ae017f54e55bde382d45ea24bddfb6d1a0aaf upstream.
    
    For btree removal, there is a corner case that a single thread
    could takes 6 locks which is more than THIN_MAX_CONCURRENT_LOCKS(5)
    and leads to deadlock.
    
    A btree removal might eventually call
    rebalance_children()->rebalance3() to rebalance entries of three
    neighbor child nodes when shadow_spine has already acquired two
    write locks. In rebalance3(), it tries to shadow and acquire the
    write locks of all three child nodes. However, shadowing a child
    node requires acquiring a read lock of the original child node and
    a write lock of the new block. Although the read lock will be
    released after block shadowing, shadowing the third child node
    in rebalance3() could still take the sixth lock.
    (2 write locks for shadow_spine +
     2 write locks for the first two child nodes's shadow +
     1 write lock for the last child node's shadow +
     1 read lock for the last child node)
    
    Signed-off-by: Dennis Yang <dennisyang@qnap.com>
    Acked-by: Joe Thornber <thornber@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 905637024f550f6b82f0dee77d6a0e251763a6e1
Author: Joe Thornber <thornber@redhat.com>
Date:   Wed Dec 20 09:56:06 2017 +0000

    dm btree: fix serious bug in btree_split_beneath()
    
    commit bc68d0a43560e950850fc69b58f0f8254b28f6d6 upstream.
    
    When inserting a new key/value pair into a btree we walk down the spine of
    btree nodes performing the following 2 operations:
    
      i) space for a new entry
      ii) adjusting the first key entry if the new key is lower than any in the node.
    
    If the _root_ node is full, the function btree_split_beneath() allocates 2 new
    nodes, and redistibutes the root nodes entries between them.  The root node is
    left with 2 entries corresponding to the 2 new nodes.
    
    btree_split_beneath() then adjusts the spine to point to one of the two new
    children.  This means the first key is never adjusted if the new key was lower,
    ie. operation (ii) gets missed out.  This can result in the new key being
    'lost' for a period; until another low valued key is inserted that will uncover
    it.
    
    This is a serious bug, and quite hard to make trigger in normal use.  A
    reproducing test case ("thin create devices-in-reverse-order") is
    available as part of the thin-provision-tools project:
      https://github.com/jthornber/thin-provisioning-tools/blob/master/functional-tests/device-mapper/dm-tests.scm#L593
    
    Fix the issue by changing btree_split_beneath() so it no longer adjusts
    the spine.  Instead it unlocks both the new nodes, and lets the main
    loop in btree_insert_raw() relock the appropriate one and make any
    neccessary adjustments.
    
    Reported-by: Monty Pavel <monty_pavel@sina.com>
    Signed-off-by: Joe Thornber <thornber@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f0b1d5cfff904fc2dc4a1389cf3296037d1ec51
Author: Rob Clark <rclark@redhat.com>
Date:   Wed Jan 17 10:16:20 2018 -0500

    drm/vmwgfx: fix memory corruption with legacy/sou connectors
    
    commit 8a510a5c75261ba0ec39155326982aa786541e29 upstream.
    
    It looks like in all cases 'struct vmw_connector_state' is used.  But
    only in stdu connectors, was atomic_{duplicate,destroy}_state() properly
    subclassed.  Leading to writes beyond the end of the allocated connector
    state block and all sorts of fun memory corruption related crashes.
    
    Fixes: d7721ca71126 "drm/vmwgfx: Connector atomic state"
    Signed-off-by: Rob Clark <rclark@redhat.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6d5930ccf3c746fa737b221d42adb6811945eec
Author: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
Date:   Thu Jan 11 09:53:35 2018 +0900

    workqueue: avoid hard lockups in show_workqueue_state()
    
    commit 62635ea8c18f0f62df4cc58379e4f1d33afd5801 upstream.
    
    show_workqueue_state() can print out a lot of messages while being in
    atomic context, e.g. sysrq-t -> show_workqueue_state(). If the console
    device is slow it may end up triggering NMI hard lockup watchdog.
    
    Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edd0a403a12186aecd2e04c0a37f983cdf9c5810
Author: Hannes Reinecke <hare@suse.de>
Date:   Wed Jan 10 09:34:02 2018 +0100

    scsi: libsas: Disable asynchronous aborts for SATA devices
    
    commit c9f926000fe3b84135a81602a9f7e63a6a7898e2 upstream.
    
    Handling CD-ROM devices from libsas is decidedly odd, as libata relies
    on SCSI EH to be started to figure out that no medium is present.  So we
    cannot do asynchronous aborts for SATA devices.
    
    Fixes: 909657615d9 ("scsi: libsas: allow async aborts")
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Yves-Alexis Perez <corsac@debian.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25b13c2f4f4941b60aaaba33a0b18704b9afce05
Author: Xinyu Lin <xinyu0123@gmail.com>
Date:   Sun Dec 17 20:13:39 2017 +0800

    libata: apply MAX_SEC_1024 to all LITEON EP1 series devices
    
    commit db5ff909798ef0099004ad50a0ff5fde92426fd1 upstream.
    
    LITEON EP1 has the same timeout issues as CX1 series devices.
    
    Revert max_sectors to the value of 1024.
    
    Fixes: e0edc8c54646 ("libata: apply MAX_SEC_1024 to all CX1-JB*-HP devices")
    Signed-off-by: Xinyu Lin <xinyu0123@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea5c2944328c46d17cc67879d6bee964c4de9be2
Author: Alexey Dobriyan <adobriyan@gmail.com>
Date:   Thu Jan 18 16:34:05 2018 -0800

    proc: fix coredump vs read /proc/*/stat race
    
    commit 8bb2ee192e482c5d500df9f2b1b26a560bd3026f upstream.
    
    do_task_stat() accesses IP and SP of a task without bumping reference
    count of a stack (which became an entity with independent lifetime at
    some point).
    
    Steps to reproduce:
    
        #include <stdio.h>
        #include <sys/types.h>
        #include <sys/stat.h>
        #include <fcntl.h>
        #include <sys/time.h>
        #include <sys/resource.h>
        #include <unistd.h>
        #include <sys/wait.h>
    
        int main(void)
        {
            setrlimit(RLIMIT_CORE, &(struct rlimit){});
    
            while (1) {
                    char buf[64];
                    char buf2[4096];
                    pid_t pid;
                    int fd;
    
                    pid = fork();
                    if (pid == 0) {
                            *(volatile int *)0 = 0;
                    }
    
                    snprintf(buf, sizeof(buf), "/proc/%u/stat", pid);
                    fd = open(buf, O_RDONLY);
                    read(fd, buf2, sizeof(buf2));
                    close(fd);
    
                    waitpid(pid, NULL, 0);
            }
            return 0;
        }
    
        BUG: unable to handle kernel paging request at 0000000000003fd8
        IP: do_task_stat+0x8b4/0xaf0
        PGD 800000003d73e067 P4D 800000003d73e067 PUD 3d558067 PMD 0
        Oops: 0000 [#1] PREEMPT SMP PTI
        CPU: 0 PID: 1417 Comm: a.out Not tainted 4.15.0-rc8-dirty #2
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1.fc27 04/01/2014
        RIP: 0010:do_task_stat+0x8b4/0xaf0
        Call Trace:
         proc_single_show+0x43/0x70
         seq_read+0xe6/0x3b0
         __vfs_read+0x1e/0x120
         vfs_read+0x84/0x110
         SyS_read+0x3d/0xa0
         entry_SYSCALL_64_fastpath+0x13/0x6c
        RIP: 0033:0x7f4d7928cba0
        RSP: 002b:00007ffddb245158 EFLAGS: 00000246
        Code: 03 b7 a0 01 00 00 4c 8b 4c 24 70 4c 8b 44 24 78 4c 89 74 24 18 e9 91 f9 ff ff f6 45 4d 02 0f 84 fd f7 ff ff 48 8b 45 40 48 89 ef <48> 8b 80 d8 3f 00 00 48 89 44 24 20 e8 9b 97 eb ff 48 89 44 24
        RIP: do_task_stat+0x8b4/0xaf0 RSP: ffffc90000607cc8
        CR2: 0000000000003fd8
    
    John Ogness said: for my tests I added an else case to verify that the
    race is hit and correctly mitigated.
    
    Link: http://lkml.kernel.org/r/20180116175054.GA11513@avx2
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    Reported-by: "Kohli, Gaurav" <gkohli@codeaurora.org>
    Tested-by: John Ogness <john.ogness@linutronix.de>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4616525bfdc3222169e4836d338d79242542984c
Author: Xi Kangjie <imxikangjie@gmail.com>
Date:   Thu Jan 18 16:34:00 2018 -0800

    scripts/gdb/linux/tasks.py: fix get_thread_info
    
    commit 883d50f56d263f70fd73c0d96b09eb36c34e9305 upstream.
    
    Since kernel 4.9, the thread_info has been moved into task_struct, no
    longer locates at the bottom of kernel stack.
    
    See commits c65eacbe290b ("sched/core: Allow putting thread_info into
    task_struct") and 15f4eae70d36 ("x86: Move thread_info into
    task_struct").
    
    Before fix:
      (gdb) set $current = $lx_current()
      (gdb) p $lx_thread_info($current)
      $1 = {flags = 1470918301}
      (gdb) p $current.thread_info
      $2 = {flags = 2147483648}
    
    After fix:
      (gdb) p $lx_thread_info($current)
      $1 = {flags = 2147483648}
      (gdb) p $current.thread_info
      $2 = {flags = 2147483648}
    
    Link: http://lkml.kernel.org/r/20180118210159.17223-1-imxikangjie@gmail.com
    Fixes: 15f4eae70d36 ("x86: Move thread_info into task_struct")
    Signed-off-by: Xi Kangjie <imxikangjie@gmail.com>
    Acked-by: Jan Kiszka <jan.kiszka@siemens.com>
    Acked-by: Kieran Bingham <kbingham@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7b8be81fc5506a6f2f9f01a06f6806bcca7d48a
Author: Jeremy Compostella <jeremy.compostella@intel.com>
Date:   Wed Nov 15 12:31:44 2017 -0700

    i2c: core-smbus: prevent stack corruption on read I2C_BLOCK_DATA
    
    commit 89c6efa61f5709327ecfa24bff18e57a4e80c7fa upstream.
    
    On a I2C_SMBUS_I2C_BLOCK_DATA read request, if data->block[0] is
    greater than I2C_SMBUS_BLOCK_MAX + 1, the underlying I2C driver writes
    data out of the msgbuf1 array boundary.
    
    It is possible from a user application to run into that issue by
    calling the I2C_SMBUS ioctl with data.block[0] greater than
    I2C_SMBUS_BLOCK_MAX + 1.
    
    This patch makes the code compliant with
    Documentation/i2c/dev-interface by raising an error when the requested
    size is larger than 32 bytes.
    
    Call Trace:
     [<ffffffff8139f695>] dump_stack+0x67/0x92
     [<ffffffff811802a4>] panic+0xc5/0x1eb
     [<ffffffff810ecb5f>] ? vprintk_default+0x1f/0x30
     [<ffffffff817456d3>] ? i2cdev_ioctl_smbus+0x303/0x320
     [<ffffffff8109a68b>] __stack_chk_fail+0x1b/0x20
     [<ffffffff817456d3>] i2cdev_ioctl_smbus+0x303/0x320
     [<ffffffff81745aed>] i2cdev_ioctl+0x4d/0x1e0
     [<ffffffff811f761a>] do_vfs_ioctl+0x2ba/0x490
     [<ffffffff81336e43>] ? security_file_ioctl+0x43/0x60
     [<ffffffff811f7869>] SyS_ioctl+0x79/0x90
     [<ffffffff81a22e97>] entry_SYSCALL_64_fastpath+0x12/0x6a
    
    Signed-off-by: Jeremy Compostella <jeremy.compostella@intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41812e400fc0f6aa2ff4fde54462b32b2c9884f6
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Tue Jan 16 19:30:14 2018 +0100

    can: af_can: canfd_rcv(): replace WARN_ONCE by pr_warn_once
    
    commit d4689846881d160a4d12a514e991a740bcb5d65a upstream.
    
    If an invalid CANFD frame is received, from a driver or from a tun
    interface, a Kernel warning is generated.
    
    This patch replaces the WARN_ONCE by a simple pr_warn_once, so that a
    kernel, bootet with panic_on_warn, does not panic. A printk seems to be
    more appropriate here.
    
    Reported-by: syzbot+e3b775f40babeff6e68b@syzkaller.appspotmail.com
    Suggested-by: Dmitry Vyukov <dvyukov@google.com>
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91c5fbf1e20b0c0508fdeb5bc0763c65a935f480
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Tue Jan 16 19:30:14 2018 +0100

    can: af_can: can_rcv(): replace WARN_ONCE by pr_warn_once
    
    commit 8cb68751c115d176ec851ca56ecfbb411568c9e8 upstream.
    
    If an invalid CAN frame is received, from a driver or from a tun
    interface, a Kernel warning is generated.
    
    This patch replaces the WARN_ONCE by a simple pr_warn_once, so that a
    kernel, bootet with panic_on_warn, does not panic. A printk seems to be
    more appropriate here.
    
    Reported-by: syzbot+4386709c0c1284dca827@syzkaller.appspotmail.com
    Suggested-by: Dmitry Vyukov <dvyukov@google.com>
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 659af12a2780dd552b6702dafd4598900aeb29e9
Author: Stephane Grosjean <s.grosjean@peak-system.com>
Date:   Mon Jan 15 16:31:19 2018 +0100

    can: peak: fix potential bug in packet fragmentation
    
    commit d8a243af1a68395e07ac85384a2740d4134c67f4 upstream.
    
    In some rare conditions when running one PEAK USB-FD interface over
    a non high-speed USB controller, one useless USB fragment might be sent.
    This patch fixes the way a USB command is fragmented when its length is
    greater than 64 bytes and when the underlying USB controller is not a
    high-speed one.
    
    Signed-off-by: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e53050a85f657f55c2036beea2cbee698d47b6d7
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Thu Jan 4 17:53:12 2018 +0100

    ARM: dts: kirkwood: fix pin-muxing of MPP7 on OpenBlocks A7
    
    commit 56aeb07c914a616ab84357d34f8414a69b140cdf upstream.
    
    MPP7 is currently muxed as "gpio", but this function doesn't exist for
    MPP7, only "gpo" is available. This causes the following error:
    
    kirkwood-pinctrl f1010000.pin-controller: unsupported function gpio on pin mpp7
    pinctrl core: failed to register map default (6): invalid type given
    kirkwood-pinctrl f1010000.pin-controller: error claiming hogs: -22
    kirkwood-pinctrl f1010000.pin-controller: could not claim hogs: -22
    kirkwood-pinctrl f1010000.pin-controller: unable to register pinctrl driver
    kirkwood-pinctrl: probe of f1010000.pin-controller failed with error -22
    
    So the pinctrl driver is not probed, all device drivers (including the
    UART driver) do a -EPROBE_DEFER, and therefore the system doesn't
    really boot (well, it boots, but with no UART, and no devices that
    require pin-muxing).
    
    Back when the Device Tree file for this board was introduced, the
    definition was already wrong. The pinctrl driver also always described
    as "gpo" this function for MPP7. However, between Linux 4.10 and 4.11,
    a hog pin failing to be muxed was turned from a simple warning to a
    hard error that caused the entire pinctrl driver probe to bail
    out. This is probably the result of commit 6118714275f0a ("pinctrl:
    core: Fix pinctrl_register_and_init() with pinctrl_enable()").
    
    This commit fixes the Device Tree to use the proper "gpo" function for
    MPP7, which fixes the boot of OpenBlocks A7, which was broken since
    Linux 4.11.
    
    Fixes: f24b56cbcd9d ("ARM: kirkwood: add support for OpenBlocks A7 platform")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb7f328c32c54a87b29f519959facc4909a6daef
Author: Maxime Ripard <maxime.ripard@free-electrons.com>
Date:   Fri Jan 19 14:32:08 2018 +0100

    ARM: sunxi_defconfig: Enable CMA
    
    commit c13e7f313da33d1488355440f1a10feb1897480a upstream.
    
    The DRM driver most notably, but also out of tree drivers (for now) like
    the VPU or GPU drivers, are quite big consumers of large, contiguous memory
    buffers. However, the sunxi_defconfig doesn't enable CMA in order to
    mitigate that, which makes them almost unusable.
    
    Enable it to make sure it somewhat works.
    
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebc8d9c33fa89edf71198e82467a005d967259ad
Author: Gregory CLEMENT <gregory.clement@free-electrons.com>
Date:   Tue Jul 25 16:51:20 2017 +0200

    ARM64: dts: marvell: armada-cp110: Fix clock resources for various node
    
    commit e3af9f7c6ece29fdb7fe0aeb83ac5d3077a06edb upstream.
    
    On the CP modules we found on Armada 7K/8K, many IP block actually also
    need a "functional" clock (from the bus). This patch add them which allows
    to fix some issues hanging the kernel:
    
    If Ethernet and sdhci driver are built as modules and sdhci was loaded
    first then the kernel hang.
    
    Fixes: bb16ea1742c8 ("mmc: sdhci-xenon: Fix clock resource by adding an optional bus clock")
    Reported-by: Riku Voipio <riku.voipio@linaro.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0443694ae877a45265fd58b49d68cbb893a9571
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Jan 12 11:12:05 2018 +0100

    phy: work around 'phys' references to usb-nop-xceiv devices
    
    commit b7563e2796f8b23c98afcfea7363194227fa089d upstream.
    
    Stefan Wahren reports a problem with a warning fix that was merged
    for v4.15: we had lots of device nodes with a 'phys' property pointing
    to a device node that is not compliant with the binding documented in
    Documentation/devicetree/bindings/phy/phy-bindings.txt
    
    This generally works because USB HCD drivers that support both the generic
    phy subsystem and the older usb-phy subsystem ignore most errors from
    phy_get() and related calls and then use the usb-phy driver instead.
    
    However, it turns out that making the usb-nop-xceiv device compatible with
    the generic-phy binding changes the phy_get() return code from -EINVAL to
    -EPROBE_DEFER, and the dwc2 usb controller driver for bcm2835 now returns
    -EPROBE_DEFER from its probe function rather than ignoring the failure,
    breaking all USB support on raspberry-pi when CONFIG_GENERIC_PHY is
    enabled. The same code is used in the dwc3 driver and the usb_add_hcd()
    function, so a reasonable assumption would be that many other platforms
    are affected as well.
    
    I have reviewed all the related patches and concluded that "usb-nop-xceiv"
    is the only USB phy that is affected by the change, and since it is by far
    the most commonly referenced phy, all the other USB phy drivers appear
    to be used in ways that are are either safe in DT (they don't use the
    'phys' property), or in the driver (they already ignore -EPROBE_DEFER
    from generic-phy when usb-phy is available).
    
    To work around the problem, this adds a special case to _of_phy_get()
    so we ignore any PHY node that is compatible with "usb-nop-xceiv",
    as we know that this can never load no matter how much we defer. In the
    future, we might implement a generic-phy driver for "usb-nop-xceiv"
    and then remove this workaround.
    
    Since we generally want older kernels to also want to work with the
    fixed devicetree files, it would be good to backport the patch into
    stable kernels as well (3.13+ are possibly affected), even though they
    don't contain any of the patches that may have caused regressions.
    
    Fixes: 014d6da6cb25 ARM: dts: bcm283x: Fix DTC warnings about missing phy-cells
    Fixes: c5bbf358b790 arm: dts: nspire: Add missing #phy-cells to usb-nop-xceiv
    Fixes: 44e5dced2ef6 arm: dts: marvell: Add missing #phy-cells to usb-nop-xceiv
    Fixes: f568f6f554b8 ARM: dts: omap: Add missing #phy-cells to usb-nop-xceiv
    Fixes: d745d5f277bf ARM: dts: imx51-zii-rdu1: Add missing #phy-cells to usb-nop-xceiv
    Fixes: 915fbe59cbf2 ARM: dts: imx: Add missing #phy-cells to usb-nop-xceiv
    Link: https://marc.info/?l=linux-usb&m=151518314314753&w=2
    Link: https://patchwork.kernel.org/patch/10158145/
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Eric Anholt <eric@anholt.net>
    Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Tested-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7296666e933c61438818fe160b1e9f9d396c7932
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Thu Jan 18 15:53:10 2018 -0500

    tracing: Fix converting enum's from the map in trace_event_eval_update()
    
    commit 1ebe1eaf2f02784921759992ae1fde1a9bec8fd0 upstream.
    
    Since enums do not get converted by the TRACE_EVENT macro into their values,
    the event format displaces the enum name and not the value. This breaks
    tools like perf and trace-cmd that need to interpret the raw binary data. To
    solve this, an enum map was created to convert these enums into their actual
    numbers on boot up. This is done by TRACE_EVENTS() adding a
    TRACE_DEFINE_ENUM() macro.
    
    Some enums were not being converted. This was caused by an optization that
    had a bug in it.
    
    All calls get checked against this enum map to see if it should be converted
    or not, and it compares the call's system to the system that the enum map
    was created under. If they match, then they call is processed.
    
    To cut down on the number of iterations needed to find the maps with a
    matching system, since calls and maps are grouped by system, when a match is
    made, the index into the map array is saved, so that the next call, if it
    belongs to the same system as the previous call, could start right at that
    array index and not have to scan all the previous arrays.
    
    The problem was, the saved index was used as the variable to know if this is
    a call in a new system or not. If the index was zero, it was assumed that
    the call is in a new system and would keep incrementing the saved index
    until it found a matching system. The issue arises when the first matching
    system was at index zero. The next map, if it belonged to the same system,
    would then think it was the first match and increment the index to one. If
    the next call belong to the same system, it would begin its search of the
    maps off by one, and miss the first enum that should be converted. This left
    a single enum not converted properly.
    
    Also add a comment to describe exactly what that index was for. It took me a
    bit too long to figure out what I was thinking when debugging this issue.
    
    Link: http://lkml.kernel.org/r/717BE572-2070-4C1E-9902-9F2E0FEDA4F8@oracle.com
    
    Fixes: 0c564a538aa93 ("tracing: Add TRACE_DEFINE_ENUM() macro to map enums to their values")
    Reported-by: Chuck Lever <chuck.lever@oracle.com>
    Teste-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1c7c57f5ac55f7fb3f848edfd6619ebbe6ac625
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 8 17:15:06 2018 -0800

    Input: twl4030-vibra - fix sibling-node lookup
    
    commit 5b189201993ab03001a398de731045bfea90c689 upstream.
    
    A helper purported to look up a child node based on its name was using
    the wrong of-helper and ended up prematurely freeing the parent of-node
    while searching the whole device tree depth-first starting at the parent
    node.
    
    Fixes: 64b9e4d803b1 ("input: twl4030-vibra: Support for DT booted kernel")
    Fixes: e661d0a04462 ("Input: twl4030-vibra - fix ERROR: Bad of_node_put() warning")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aabc966e7b62812c555c17fe73d03b180e6eedf5
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 8 17:17:48 2018 -0800

    Input: twl6040-vibra - fix child-node lookup
    
    commit dcaf12a8b0bbdbfcfa2be8dff2c4948d9844b4ad upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at parent rather than just matching on
    its children.
    
    Later sanity checks on node properties (which would likely be missing)
    should prevent this from causing much trouble however, especially as the
    original premature free of the parent node has already been fixed
    separately (but that "fix" was apparently never backported to stable).
    
    Fixes: e7ec014a47e4 ("Input: twl6040-vibra - update for device tree support")
    Fixes: c52c545ead97 ("Input: twl6040-vibra - fix DT node memory management")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Tested-by: H. Nikolaus Schaller <hns@goldelico.com> (on Pyra OMAP5 hardware)
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bb19ef3ea52ddc5a24a84e456eac96b5b01dc08
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 8 17:20:18 2018 -0800

    Input: 88pm860x-ts - fix child-node lookup
    
    commit 906bf7daa0618d0ef39f4872ca42218c29a3631f upstream.
    
    Fix child node-lookup during probe, which ended up searching the whole
    device tree depth-first starting at parent rather than just matching on
    its children.
    
    To make things worse, the parent node was prematurely freed, while the
    child node was leaked.
    
    Fixes: 2e57d56747e6 ("mfd: 88pm860x: Device tree support")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b276eae8834746a00a62c56890ec93d1f54950ac
Author: Nick Desaulniers <nick.desaulniers@gmail.com>
Date:   Thu Jan 18 11:36:41 2018 -0800

    Input: synaptics-rmi4 - prevent UAF reported by KASAN
    
    commit 55edde9fff1ae4114c893c572e641620c76c9c21 upstream.
    
    KASAN found a UAF due to dangling pointer. As the report below says,
    rmi_f11_attention() accesses drvdata->attn_data.data, which was freed in
    rmi_irq_fn.
    
    [  311.424062] BUG: KASAN: use-after-free in rmi_f11_attention+0x526/0x5e0 [rmi_core]
    [  311.424067] Read of size 27 at addr ffff88041fd610db by task irq/131-i2c_hid/1162
    [  311.424075] CPU: 0 PID: 1162 Comm: irq/131-i2c_hid Not tainted 4.15.0-rc8+ #2
    [  311.424076] Hardware name: Razer Blade Stealth/Razer, BIOS 6.05 01/26/2017
    [  311.424078] Call Trace:
    [  311.424086]  dump_stack+0xae/0x12d
    [  311.424090]  ? _atomic_dec_and_lock+0x103/0x103
    [  311.424094]  ? show_regs_print_info+0xa/0xa
    [  311.424099]  ? input_handle_event+0x10b/0x810
    [  311.424104]  print_address_description+0x65/0x229
    [  311.424108]  kasan_report.cold.5+0xa7/0x281
    [  311.424117]  rmi_f11_attention+0x526/0x5e0 [rmi_core]
    [  311.424123]  ? memcpy+0x1f/0x50
    [  311.424132]  ? rmi_f11_attention+0x526/0x5e0 [rmi_core]
    [  311.424143]  ? rmi_f11_probe+0x1e20/0x1e20 [rmi_core]
    [  311.424153]  ? rmi_process_interrupt_requests+0x220/0x2a0 [rmi_core]
    [  311.424163]  ? rmi_irq_fn+0x22c/0x270 [rmi_core]
    [  311.424173]  ? rmi_process_interrupt_requests+0x2a0/0x2a0 [rmi_core]
    [  311.424177]  ? free_irq+0xa0/0xa0
    [  311.424180]  ? irq_finalize_oneshot.part.39+0xeb/0x180
    [  311.424190]  ? rmi_process_interrupt_requests+0x2a0/0x2a0 [rmi_core]
    [  311.424193]  ? irq_thread_fn+0x3d/0x80
    [  311.424197]  ? irq_finalize_oneshot.part.39+0x180/0x180
    [  311.424200]  ? irq_thread+0x21d/0x290
    [  311.424203]  ? irq_thread_check_affinity+0x170/0x170
    [  311.424207]  ? remove_wait_queue+0x150/0x150
    [  311.424212]  ? kasan_unpoison_shadow+0x30/0x40
    [  311.424214]  ? __init_waitqueue_head+0xa0/0xd0
    [  311.424218]  ? task_non_contending.cold.55+0x18/0x18
    [  311.424221]  ? irq_forced_thread_fn+0xa0/0xa0
    [  311.424226]  ? irq_thread_check_affinity+0x170/0x170
    [  311.424230]  ? kthread+0x19e/0x1c0
    [  311.424233]  ? kthread_create_worker_on_cpu+0xc0/0xc0
    [  311.424237]  ? ret_from_fork+0x32/0x40
    
    [  311.424244] Allocated by task 899:
    [  311.424249]  kasan_kmalloc+0xbf/0xe0
    [  311.424252]  __kmalloc_track_caller+0xd9/0x1f0
    [  311.424255]  kmemdup+0x17/0x40
    [  311.424264]  rmi_set_attn_data+0xa4/0x1b0 [rmi_core]
    [  311.424269]  rmi_raw_event+0x10b/0x1f0 [hid_rmi]
    [  311.424278]  hid_input_report+0x1a8/0x2c0 [hid]
    [  311.424283]  i2c_hid_irq+0x146/0x1d0 [i2c_hid]
    [  311.424286]  irq_thread_fn+0x3d/0x80
    [  311.424288]  irq_thread+0x21d/0x290
    [  311.424291]  kthread+0x19e/0x1c0
    [  311.424293]  ret_from_fork+0x32/0x40
    
    [  311.424296] Freed by task 1162:
    [  311.424300]  kasan_slab_free+0x71/0xc0
    [  311.424303]  kfree+0x90/0x190
    [  311.424311]  rmi_irq_fn+0x1b2/0x270 [rmi_core]
    [  311.424319]  rmi_irq_fn+0x257/0x270 [rmi_core]
    [  311.424322]  irq_thread_fn+0x3d/0x80
    [  311.424324]  irq_thread+0x21d/0x290
    [  311.424327]  kthread+0x19e/0x1c0
    [  311.424330]  ret_from_fork+0x32/0x40
    
    [  311.424334] The buggy address belongs to the object at ffff88041fd610c0 which belongs to the cache kmalloc-64 of size 64
    [  311.424340] The buggy address is located 27 bytes inside of 64-byte region [ffff88041fd610c0, ffff88041fd61100)
    [  311.424344] The buggy address belongs to the page:
    [  311.424348] page:ffffea00107f5840 count:1 mapcount:0 mapping: (null) index:0x0
    [  311.424353] flags: 0x17ffffc0000100(slab)
    [  311.424358] raw: 0017ffffc0000100 0000000000000000 0000000000000000 00000001802a002a
    [  311.424363] raw: dead000000000100 dead000000000200 ffff8804228036c0 0000000000000000
    [  311.424366] page dumped because: kasan: bad access detected
    
    [  311.424369] Memory state around the buggy address:
    [  311.424373]  ffff88041fd60f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [  311.424377]  ffff88041fd61000: fb fb fb fb fb fb fb fb fc fc fc fc fb fb fb fb
    [  311.424381] >ffff88041fd61080: fb fb fb fb fc fc fc fc fb fb fb fb fb fb fb fb
    [  311.424384]                                                     ^
    [  311.424387]  ffff88041fd61100: fc fc fc fc fb fb fb fb fb fb fb fb fc fc fc fc
    [  311.424391]  ffff88041fd61180: fb fb fb fb fb fb fb fb fc fc fc fc fb fb fb fb
    
    Signed-off-by: Nick Desaulniers <nick.desaulniers@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e86e5430b3b1be12e2287d9d7b931c58ba7d175c
Author: Nir Perry <nirperry@gmail.com>
Date:   Thu Jan 11 23:43:26 2018 -0800

    Input: ALPS - fix multi-touch decoding on SS4 plus touchpads
    
    commit 4d94e776bd29670f01befa27e12df784fa05fa2e upstream.
    
    The fix for handling two-finger scroll (i4a646580f793 - "Input: ALPS -
    fix two-finger scroll breakage in right side on ALPS touchpad")
    introduced a minor "typo" that broke decoding of multi-touch events are
    decoded on some ALPS touchpads.  For example, tapping with three-fingers
    can no longer be used to emulate middle-mouse-button (the kernel doesn't
    recognize this as the proper event, and doesn't report it correctly to
    userspace).  This affects touchpads that use SS4 "plus" protocol
    variant, like those found on Dell E7270 & E7470 laptops (tested on
    E7270).
    
    First, probably the code in alps_decode_ss4_v2() for case
    SS4_PACKET_ID_MULTI used inconsistent indices to "f->mt[]". You can see
    0 & 1 are used for the "if" part but 2 & 3 are used for the "else" part.
    
    Second, in the previous patch, new macros were introduced to decode X
    coordinates specific to the SS4 "plus" variant, but the macro to
    define the maximum X value wasn't changed accordingly. The macros to
    decode X values for "plus" variant are effectively shifted right by 1
    bit, but the max wasn't shifted too. This causes the driver to
    incorrectly handle "no data" cases, which also interfered with how
    multi-touch was handled.
    
    Fixes: 4a646580f793 ("Input: ALPS - fix two-finger scroll breakage...")
    Signed-off-by: Nir Perry <nirperry@gmail.com>
    Reviewed-by: Masaki Ota <masaki.ota@jp.alps.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0f82cbde41353ddf63935175583ceb5580cce87
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Wed Jan 10 13:26:34 2018 -0600

    x86/mm: Encrypt the initrd earlier for BSP microcode update
    
    commit 107cd2532181b96c549e8f224cdcca8631c3076b upstream.
    
    Currently the BSP microcode update code examines the initrd very early
    in the boot process.  If SME is active, the initrd is treated as being
    encrypted but it has not been encrypted (in place) yet.  Update the
    early boot code that encrypts the kernel to also encrypt the initrd so
    that early BSP microcode updates work.
    
    Tested-by: Gabriel Craciunescu <nix.or.die@gmail.com>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180110192634.6026.10452.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5455eef0f31ee57b02c059e998d8086975292024
Author: Tero Kristo <t-kristo@ti.com>
Date:   Mon Oct 30 11:11:03 2017 +0200

    ARM: OMAP3: hwmod_data: add missing module_offs for MMC3
    
    commit 3c4d296e58a23687f2076d8ad531e6ae2b725846 upstream.
    
    MMC3 hwmod data is missing the module_offs definition. MMC3 belongs under
    core, so add CORE_MOD for it.
    
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Cc: Adam Ford <aford173@gmail.com>
    Fixes: 6c0afb503937 ("clk: ti: convert to use proper register definition for all accesses")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33e4ca36aea63c87f15e393d34a0fa52d8337ea0
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Wed Jan 10 13:26:26 2018 -0600

    x86/mm: Prepare sme_encrypt_kernel() for PAGE aligned encryption
    
    commit cc5f01e28d6c60f274fd1e33b245f679f79f543c upstream.
    
    In preparation for encrypting more than just the kernel, the encryption
    support in sme_encrypt_kernel() needs to support 4KB page aligned
    encryption instead of just 2MB large page aligned encryption.
    
    Update the routines that populate the PGD to support non-2MB aligned
    addresses.  This is done by creating PTE page tables for the start
    and end portion of the address range that fall outside of the 2MB
    alignment.  This results in, at most, two extra pages to hold the
    PTE entries for each mapping of a range.
    
    Tested-by: Gabriel Craciunescu <nix.or.die@gmail.com>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180110192626.6026.75387.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69a39cf36ec2094912d493dfac6747f00f8c2320
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Wed Jan 10 13:26:16 2018 -0600

    x86/mm: Centralize PMD flags in sme_encrypt_kernel()
    
    commit 2b5d00b6c2cdd94f6d6a494a6f6c0c0fc7b8e711 upstream.
    
    In preparation for encrypting more than just the kernel during early
    boot processing, centralize the use of the PMD flag settings based
    on the type of mapping desired.  When 4KB aligned encryption is added,
    this will allow either PTE flags or large page PMD flags to be used
    without requiring the caller to adjust.
    
    Tested-by: Gabriel Craciunescu <nix.or.die@gmail.com>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180110192615.6026.14767.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce1805fdedd794bcd51b097f9dad1db2365b262f
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Wed Jan 10 13:26:05 2018 -0600

    x86/mm: Use a struct to reduce parameters for SME PGD mapping
    
    commit bacf6b499e11760aef73a3bb5ce4e5eea74a3fd4 upstream.
    
    In preparation for follow-on patches, combine the PGD mapping parameters
    into a struct to reduce the number of function arguments and allow for
    direct updating of the next pagetable mapping area pointer.
    
    Tested-by: Gabriel Craciunescu <nix.or.die@gmail.com>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180110192605.6026.96206.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25e119713d28611ed49bf3c518193930becb16f5
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Wed Jan 10 13:25:56 2018 -0600

    x86/mm: Clean up register saving in the __enc_copy() assembly code
    
    commit 1303880179e67c59e801429b7e5d0f6b21137d99 upstream.
    
    Clean up the use of PUSH and POP and when registers are saved in the
    __enc_copy() assembly function in order to improve the readability of the code.
    
    Move parameter register saving into general purpose registers earlier
    in the code and move all the pushes to the beginning of the function
    with corresponding pops at the end.
    
    We do this to prepare fixes.
    
    Tested-by: Gabriel Craciunescu <nix.or.die@gmail.com>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180110192556.6026.74187.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0062c10afea4a477c099ca0ff7aec46228cb0709
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jan 16 12:20:18 2018 +0100

    x86/apic/vector: Fix off by one in error path
    
    commit 45d55e7bac4028af93f5fa324e69958a0b868e96 upstream.
    
    Keith reported the following warning:
    
    WARNING: CPU: 28 PID: 1420 at kernel/irq/matrix.c:222 irq_matrix_remove_managed+0x10f/0x120
      x86_vector_free_irqs+0xa1/0x180
      x86_vector_alloc_irqs+0x1e4/0x3a0
      msi_domain_alloc+0x62/0x130
    
    The reason for this is that if the vector allocation fails the error
    handling code tries to free the failed vector as well, which causes the
    above imbalance warning to trigger.
    
    Adjust the error path to handle this correctly.
    
    Fixes: b5dc8e6c21e7 ("x86/irq: Use hierarchical irqdomain to manage CPU interrupt vectors")
    Reported-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Keith Busch <keith.busch@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801161217300.1823@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e109607e141be9587612346b7cc56e030942042e
Author: Joe Lawrence <joe.lawrence@redhat.com>
Date:   Fri Nov 17 15:29:21 2017 -0800

    pipe: avoid round_pipe_size() nr_pages overflow on 32-bit
    
    commit d3f14c485867cfb2e0c48aa88c41d0ef4bf5209c upstream.
    
    round_pipe_size() contains a right-bit-shift expression which may
    overflow, which would cause undefined results in a subsequent
    roundup_pow_of_two() call.
    
      static inline unsigned int round_pipe_size(unsigned int size)
      {
              unsigned long nr_pages;
    
              nr_pages = (size + PAGE_SIZE - 1) >> PAGE_SHIFT;
              return roundup_pow_of_two(nr_pages) << PAGE_SHIFT;
      }
    
    PAGE_SIZE is defined as (1UL << PAGE_SHIFT), so:
      - 4 bytes wide on 32-bit (0 to 0xffffffff)
      - 8 bytes wide on 64-bit (0 to 0xffffffffffffffff)
    
    That means that 32-bit round_pipe_size(), nr_pages may overflow to 0:
    
      size=0x00000000    nr_pages=0x0
      size=0x00000001    nr_pages=0x1
      size=0xfffff000    nr_pages=0xfffff
      size=0xfffff001    nr_pages=0x0         << !
      size=0xffffffff    nr_pages=0x0         << !
    
    This is bad because roundup_pow_of_two(n) is undefined when n == 0!
    
    64-bit is not a problem as the unsigned int size is 4 bytes wide
    (similar to 32-bit) and the larger, 8 byte wide unsigned long, is
    sufficient to handle the largest value of the bit shift expression:
    
      size=0xffffffff    nr_pages=100000
    
    Modify round_pipe_size() to return 0 if n == 0 and updates its callers to
    handle accordingly.
    
    Link: http://lkml.kernel.org/r/1507658689-11669-3-git-send-email-joe.lawrence@redhat.com
    Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Dong Jinguang <dongjinguang@huawei.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8352a3fec216b76b645f583f294efc711b3ca1bd
Author: Len Brown <len.brown@intel.com>
Date:   Fri Dec 22 00:27:55 2017 -0500

    x86/tsc: Fix erroneous TSC rate on Skylake Xeon
    
    commit b511203093489eb1829cb4de86e8214752205ac6 upstream.
    
    The INTEL_FAM6_SKYLAKE_X hardcoded crystal_khz value of 25MHZ is
    problematic:
    
     - SKX workstations (with same model # as server variants) use a 24 MHz
       crystal.  This results in a -4.0% time drift rate on SKX workstations.
    
     - SKX servers subject the crystal to an EMI reduction circuit that reduces its
       actual frequency by (approximately) -0.25%.  This results in -1 second per
       10 minute time drift as compared to network time.
    
    This issue can also trigger a timer and power problem, on configurations
    that use the LAPIC timer (versus the TSC deadline timer).  Clock ticks
    scheduled with the LAPIC timer arrive a few usec before the time they are
    expected (according to the slow TSC).  This causes Linux to poll-idle, when
    it should be in an idle power saving state.  The idle and clock code do not
    graciously recover from this error, sometimes resulting in significant
    polling and measurable power impact.
    
    Stop using native_calibrate_tsc() for INTEL_FAM6_SKYLAKE_X.
    native_calibrate_tsc() will return 0, boot will run with tsc_khz = cpu_khz,
    and the TSC refined calibration will update tsc_khz to correct for the
    difference.
    
    [ tglx: Sanitized change log ]
    
    Fixes: 6baf3d61821f ("x86/tsc: Add additional Intel CPU models to the crystal quirk list")
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: Prarit Bhargava <prarit@redhat.com>
    Link: https://lkml.kernel.org/r/ff6dcea166e8ff8f2f6a03c17beab2cb436aa779.1513920414.git.len.brown@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5ab7b5de103baeeaa35ab93d95578059a5194d1
Author: Len Brown <len.brown@intel.com>
Date:   Fri Dec 22 00:27:54 2017 -0500

    x86/tsc: Future-proof native_calibrate_tsc()
    
    commit da4ae6c4a0b8dee5a5377a385545d2250fa8cddb upstream.
    
    If the crystal frequency cannot be determined via CPUID(15).crystal_khz or
    the built-in table then native_calibrate_tsc() will still set the
    X86_FEATURE_TSC_KNOWN_FREQ flag which prevents the refined TSC calibration.
    
    As a consequence such systems use cpu_khz for the TSC frequency which is
    incorrect when cpu_khz != tsc_khz resulting in time drift.
    
    Return early when the crystal frequency cannot be retrieved without setting
    the X86_FEATURE_TSC_KNOWN_FREQ flag. This ensures that the refined TSC
    calibration is invoked.
    
    [ tglx: Steam-blastered changelog. Sigh ]
    
    Fixes: 4ca4df0b7eb0 ("x86/tsc: Mark TSC frequency determined by CPUID as known")
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: Bin Gao <bin.gao@intel.com>
    Link: https://lkml.kernel.org/r/0fe2503aa7d7fc69137141fc705541a78101d2b9.1513920414.git.len.brown@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad2d62036bd00a55dfd9f76cf822213fd07c0e30
Author: Andi Kleen <ak@linux.intel.com>
Date:   Thu Dec 21 16:18:21 2017 -0800

    x86/idt: Mark IDT tables __initconst
    
    commit 327867faa4d66628fcd92a843adb3345736a5313 upstream.
    
    const variables must use __initconst, not __initdata.
    
    Fix this up for the IDT tables, which got it consistently wrong.
    
    Fixes: 16bc18d895ce ("x86/idt: Move 32-bit idt_descr to C code")
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lkml.kernel.org/r/20171222001821.2157-7-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 239f28886dffc4fe0481889eb78df1126c8a84f2
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Fri Jan 12 14:31:35 2018 -0600

    x86/mm/pkeys: Fix fill_sig_info_pkey
    
    commit beacd6f7ed5e2915959442245b3b2480c2e37490 upstream.
    
    SEGV_PKUERR is a signal specific si_code which happens to have the same
    numeric value as several others: BUS_MCEERR_AR, ILL_ILLTRP, FPE_FLTOVF,
    TRAP_HWBKPT, CLD_TRAPPED, POLL_ERR, SEGV_THREAD_ID, as such it is not safe
    to just test the si_code the signal number must also be tested to prevent a
    false positive in fill_sig_info_pkey.
    
    This error was by inspection, and BUS_MCEERR_AR appears to be a real
    candidate for confusion.  So pass in si_signo and check for SIG_SEGV to
    verify that it is actually a SEGV_PKUERR
    
    Fixes: 019132ff3daf ("x86/mm/pkeys: Fill in pkey field in siginfo")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Link: https://lkml.kernel.org/r/20180112203135.4669-2-ebiederm@xmission.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 929e4b35023634b421605211c4e1c59b245edd3a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jan 16 19:59:59 2018 +0100

    x86/intel_rdt/cqm: Prevent use after free
    
    commit d47924417319e3b6a728c0b690f183e75bc2a702 upstream.
    
    intel_rdt_iffline_cpu() -> domain_remove_cpu() frees memory first and then
    proceeds accessing it.
    
     BUG: KASAN: use-after-free in find_first_bit+0x1f/0x80
     Read of size 8 at addr ffff883ff7c1e780 by task cpuhp/31/195
     find_first_bit+0x1f/0x80
     has_busy_rmid+0x47/0x70
     intel_rdt_offline_cpu+0x4b4/0x510
    
     Freed by task 195:
     kfree+0x94/0x1a0
     intel_rdt_offline_cpu+0x17d/0x510
    
    Do the teardown first and then free memory.
    
    Fixes: 24247aeeabe9 ("x86/intel_rdt/cqm: Improve limbo list processing")
    Reported-by: Joseph Salisbury <joseph.salisbury@canonical.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ravi Shankar <ravi.v.shankar@intel.com>
    Cc: Peter Zilstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Vikas Shivappa <vikas.shivappa@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: "Roderick W. Smith" <rod.smith@canonical.com>
    Cc: 1733662@bugs.launchpad.net
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801161957510.2366@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c556782901574e6a9d758fb1ef74cef54bf9a65
Author: Andi Kleen <ak@linux.intel.com>
Date:   Tue Jan 16 12:52:28 2018 -0800

    module: Add retpoline tag to VERMAGIC
    
    commit 6cfb521ac0d5b97470883ff9b7facae264b7ab12 upstream.
    
    Add a marker for retpoline to the module VERMAGIC. This catches the case
    when a non RETPOLINE compiled module gets loaded into a retpoline kernel,
    making it insecure.
    
    It doesn't handle the case when retpoline has been runtime disabled.  Even
    in this case the match of the retcompile status will be enforced.  This
    implies that even with retpoline run time disabled all modules loaded need
    to be recompiled.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: rusty@rustcorp.com.au
    Cc: arjan.van.de.ven@intel.com
    Cc: jeyu@kernel.org
    Cc: torvalds@linux-foundation.org
    Link: https://lkml.kernel.org/r/20180116205228.4890-1-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d9c9abf6dea55e6af641ac5d7984c77338b2921
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Jan 16 16:42:25 2018 +0100

    x86/cpufeature: Move processor tracing out of scattered features
    
    commit 4fdec2034b7540dda461c6ba33325dfcff345c64 upstream.
    
    Processor tracing is already enumerated in word 9 (CPUID[7,0].EBX),
    so do not duplicate it in the scattered features word.
    
    Besides being more tidy, this will be useful for KVM when it presents
    processor tracing to the guests.  KVM selects host features that are
    supported by both the host kernel (depending on command line options,
    CPU errata, or whatever) and KVM.  Whenever a full feature word exists,
    KVM's code is written in the expectation that the CPUID bit number
    matches the X86_FEATURE_* bit number, but this is not the case for
    X86_FEATURE_INTEL_PT.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Luwei Kang <luwei.kang@intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kvm@vger.kernel.org
    Link: http://lkml.kernel.org/r/1516117345-34561-1-git-send-email-pbonzini@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f45bbd95be060a7eb67ce2f1a1404a82be93d0e3
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Jan 15 08:17:08 2018 -0600

    objtool: Improve error message for bad file argument
    
    commit 385d11b152c4eb638eeb769edcb3249533bb9a00 upstream.
    
    If a nonexistent file is supplied to objtool, it complains with a
    non-helpful error:
    
      open: No such file or directory
    
    Improve it to:
    
      objtool: Can't open 'foo': No such file or directory
    
    Reported-by: Markus <M4rkusXXL@web.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/406a3d00a21225eee2819844048e17f68523ccf6.1516025651.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 956ec9e7b59a1fb3fd4c9bc8a13a7f7700e9d7d2
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Sat Jan 13 17:27:30 2018 -0600

    x86/retpoline: Add LFENCE to the retpoline/RSB filling RSB macros
    
    commit 28d437d550e1e39f805d99f9f8ac399c778827b7 upstream.
    
    The PAUSE instruction is currently used in the retpoline and RSB filling
    macros as a speculation trap.  The use of PAUSE was originally suggested
    because it showed a very, very small difference in the amount of
    cycles/time used to execute the retpoline as compared to LFENCE.  On AMD,
    the PAUSE instruction is not a serializing instruction, so the pause/jmp
    loop will use excess power as it is speculated over waiting for return
    to mispredict to the correct target.
    
    The RSB filling macro is applicable to AMD, and, if software is unable to
    verify that LFENCE is serializing on AMD (possible when running under a
    hypervisor), the generic retpoline support will be used and, so, is also
    applicable to AMD.  Keep the current usage of PAUSE for Intel, but add an
    LFENCE instruction to the speculation trap for AMD.
    
    The same sequence has been adopted by GCC for the GCC generated retpolines.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@alien8.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Paul Turner <pjt@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Kees Cook <keescook@google.com>
    Link: https://lkml.kernel.org/r/20180113232730.31060.36287.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 051547583bdda4b74953053a1034026c56b55c4c
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Fri Jan 12 17:49:25 2018 +0000

    x86/retpoline: Fill RSB on context switch for affected CPUs
    
    commit c995efd5a740d9cbafbf58bde4973e8b50b4d761 upstream.
    
    On context switch from a shallow call stack to a deeper one, as the CPU
    does 'ret' up the deeper side it may encounter RSB entries (predictions for
    where the 'ret' goes to) which were populated in userspace.
    
    This is problematic if neither SMEP nor KPTI (the latter of which marks
    userspace pages as NX for the kernel) are active, as malicious code in
    userspace may then be executed speculatively.
    
    Overwrite the CPU's return prediction stack with calls which are predicted
    to return to an infinite loop, to "capture" speculation if this
    happens. This is required both for retpoline, and also in conjunction with
    IBRS for !SMEP && !KPTI.
    
    On Skylake+ the problem is slightly different, and an *underflow* of the
    RSB may cause errant branch predictions to occur. So there it's not so much
    overwrite, as *filling* the RSB to attempt to prevent it getting
    empty. This is only a partial solution for Skylake+ since there are many
    other conditions which may result in the RSB becoming empty. The full
    solution on Skylake+ is to use IBRS, which will prevent the problem even
    when the RSB becomes empty. With IBRS, the RSB-stuffing will not be
    required on context switch.
    
    [ tglx: Added missing vendor check and slighty massaged comments and
            changelog ]
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515779365-9032-1-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbb8c0acc8e1458acdae392a5226b371243444e4
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Wed Jan 10 18:36:02 2018 +0300

    x86/kasan: Panic if there is not enough memory to boot
    
    commit 0d39e2669d7b0fefd2d8f9e7868ae669b364d9ba upstream.
    
    Currently KASAN doesn't panic in case it don't have enough memory
    to boot. Instead, it crashes in some random place:
    
     kernel BUG at arch/x86/mm/physaddr.c:27!
    
     RIP: 0010:__phys_addr+0x268/0x276
     Call Trace:
      kasan_populate_shadow+0x3f2/0x497
      kasan_init+0x12e/0x2b2
      setup_arch+0x2825/0x2a2c
      start_kernel+0xc8/0x15f4
      x86_64_start_reservations+0x2a/0x2c
      x86_64_start_kernel+0x72/0x75
      secondary_startup_64+0xa5/0xb0
    
    Use memblock_virt_alloc_try_nid() for allocations without failure
    fallback. It will panic with an out of memory message.
    
    Reported-by: kernel test robot <xiaolong.ye@intel.com>
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: kasan-dev@googlegroups.com
    Cc: Alexander Potapenko <glider@google.com>
    Cc: lkp@01.org
    Link: https://lkml.kernel.org/r/20180110153602.18919-1-aryabinin@virtuozzo.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2264bb027c6d0ad6405cddb37ca9ebad3209316
Author: Benoît Thébaudeau <benoit.thebaudeau.dev@gmail.com>
Date:   Sun Jan 14 19:43:05 2018 +0100

    mmc: sdhci-esdhc-imx: Fix i.MX53 eSDHCv3 clock
    
    commit 499ed50f603b4c9834197b2411ba3bd9aaa624d4 upstream.
    
    Commit 5143c953a786 ("mmc: sdhci-esdhc-imx: Allow all supported
    prescaler values") made it possible to set SYSCTL.SDCLKFS to 0 in SDR
    mode, thus bypassing the SD clock frequency prescaler, in order to be
    able to get higher SD clock frequencies in some contexts. However, that
    commit missed the fact that this value is illegal on the eSDHCv3
    instance of the i.MX53. This seems to be the only exception on i.MX,
    this value being legal even for the eSDHCv2 instances of the i.MX53.
    
    Fix this issue by changing the minimum prescaler value if the i.MX53
    eSDHCv3 is detected. According to the i.MX53 reference manual, if
    DLLCTRL[10] can be set, then the controller is eSDHCv3, else it is
    eSDHCv2.
    
    This commit fixes the following issue, which was preventing the i.MX53
    Loco (IMX53QSB) board from booting Linux 4.15.0-rc5:
    [    1.882668] mmcblk1: error -84 transferring data, sector 2048, nr 8, cmd response 0x900, card status 0xc00
    [    2.002255] mmcblk1: error -84 transferring data, sector 2050, nr 6, cmd response 0x900, card status 0xc00
    [   12.645056] mmc1: Timeout waiting for hardware interrupt.
    [   12.650473] mmc1: sdhci: ============ SDHCI REGISTER DUMP ===========
    [   12.656921] mmc1: sdhci: Sys addr:  0x00000000 | Version:  0x00001201
    [   12.663366] mmc1: sdhci: Blk size:  0x00000004 | Blk cnt:  0x00000000
    [   12.669813] mmc1: sdhci: Argument:  0x00000000 | Trn mode: 0x00000013
    [   12.676258] mmc1: sdhci: Present:   0x01f8028f | Host ctl: 0x00000013
    [   12.682703] mmc1: sdhci: Power:     0x00000002 | Blk gap:  0x00000000
    [   12.689148] mmc1: sdhci: Wake-up:   0x00000000 | Clock:    0x0000003f
    [   12.695594] mmc1: sdhci: Timeout:   0x0000008e | Int stat: 0x00000000
    [   12.702039] mmc1: sdhci: Int enab:  0x107f004b | Sig enab: 0x107f004b
    [   12.708485] mmc1: sdhci: AC12 err:  0x00000000 | Slot int: 0x00001201
    [   12.714930] mmc1: sdhci: Caps:      0x07eb0000 | Caps_1:   0x08100810
    [   12.721375] mmc1: sdhci: Cmd:       0x0000163a | Max curr: 0x00000000
    [   12.727821] mmc1: sdhci: Resp[0]:   0x00000920 | Resp[1]:  0x00000000
    [   12.734265] mmc1: sdhci: Resp[2]:   0x00000000 | Resp[3]:  0x00000000
    [   12.740709] mmc1: sdhci: Host ctl2: 0x00000000
    [   12.745157] mmc1: sdhci: ADMA Err:  0x00000001 | ADMA Ptr: 0xc8049200
    [   12.751601] mmc1: sdhci: ============================================
    [   12.758110] print_req_error: I/O error, dev mmcblk1, sector 2050
    [   12.764135] Buffer I/O error on dev mmcblk1p1, logical block 0, lost sync page write
    [   12.775163] EXT4-fs (mmcblk1p1): mounted filesystem without journal. Opts: (null)
    [   12.782746] VFS: Mounted root (ext4 filesystem) on device 179:9.
    [   12.789151] mmcblk1: response CRC error sending SET_BLOCK_COUNT command, card status 0x900
    
    Signed-off-by: Benoît Thébaudeau <benoit.thebaudeau.dev@gmail.com>
    Reported-by: Wladimir J. van der Laan <laanwj@gmail.com>
    Tested-by: Wladimir J. van der Laan <laanwj@gmail.com>
    Fixes: 5143c953a786 ("mmc: sdhci-esdhc-imx: Allow all supported prescaler values")
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f41b2d7ee791e845147a3e3cafb25493dca6870a
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Jan 15 08:17:07 2018 -0600

    objtool: Fix seg fault with gold linker
    
    commit 2a0098d70640dda192a79966c14d449e7a34d675 upstream.
    
    Objtool segfaults when the gold linker is used with
    CONFIG_MODVERSIONS=y and CONFIG_UNWINDER_ORC=y.
    
    With CONFIG_MODVERSIONS=y, the .o file gets passed to the linker before
    being passed to objtool.  The gold linker seems to strip unused ELF
    symbols by default, which confuses objtool and causes the seg fault when
    it's trying to generate ORC metadata.
    
    Objtool should really be running immediately after GCC anyway, without a
    linker call in between.  Change the makefile ordering so that objtool is
    called before the linker.
    
    Reported-and-tested-by: Markus <M4rkusXXL@web.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: ee9f8fce9964 ("x86/unwind: Add the ORC unwinder")
    Link: http://lkml.kernel.org/r/355f04da33581f4a3bf82e5b512973624a1e23a2.1516025651.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36ae2e6f5c01f2c01c3224969f676b1b3b547aaf
Author: Josh Snyder <joshs@netflix.com>
Date:   Mon Dec 18 16:15:10 2017 +0000

    delayacct: Account blkio completion on the correct task
    
    commit c96f5471ce7d2aefd0dda560cc23f08ab00bc65d upstream.
    
    Before commit:
    
      e33a9bba85a8 ("sched/core: move IO scheduling accounting from io_schedule_timeout() into scheduler")
    
    delayacct_blkio_end() was called after context-switching into the task which
    completed I/O.
    
    This resulted in double counting: the task would account a delay both waiting
    for I/O and for time spent in the runqueue.
    
    With e33a9bba85a8, delayacct_blkio_end() is called by try_to_wake_up().
    In ttwu, we have not yet context-switched. This is more correct, in that
    the delay accounting ends when the I/O is complete.
    
    But delayacct_blkio_end() relies on 'get_current()', and we have not yet
    context-switched into the task whose I/O completed. This results in the
    wrong task having its delay accounting statistics updated.
    
    Instead of doing that, pass the task_struct being woken to delayacct_blkio_end(),
    so that it can update the statistics of the correct task.
    
    Signed-off-by: Josh Snyder <joshs@netflix.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Cc: Brendan Gregg <bgregg@netflix.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-block@vger.kernel.org
    Fixes: e33a9bba85a8 ("sched/core: move IO scheduling accounting from io_schedule_timeout() into scheduler")
    Link: http://lkml.kernel.org/r/1513613712-571-1-git-send-email-joshs@netflix.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ace222b5db287645bbe6c5531201750d3fbe493
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Sun Nov 26 15:31:04 2017 +0200

    iser-target: Fix possible use-after-free in connection establishment error
    
    commit cd52cb26e7ead5093635e98e07e221e4df482d34 upstream.
    
    In case we fail to establish the connection we must drain our pre-posted
    login recieve work request before continuing safely with connection
    teardown.
    
    Fixes: a060b5629ab0 ("IB/core: generic RDMA READ/WRITE API")
    Reported-by: Amrani, Ram <Ram.Amrani@cavium.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 754705d8e0e12c05310117dd42ff3eb2681365fd
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 29 18:15:23 2017 -0600

    af_key: fix buffer overread in parse_exthdrs()
    
    commit 4e765b4972af7b07adcb1feb16e7a525ce1f6b28 upstream.
    
    If a message sent to a PF_KEY socket ended with an incomplete extension
    header (fewer than 4 bytes remaining), then parse_exthdrs() read past
    the end of the message, into uninitialized memory.  Fix it by returning
    -EINVAL in this case.
    
    Reproducer:
    
            #include <linux/pfkeyv2.h>
            #include <sys/socket.h>
            #include <unistd.h>
    
            int main()
            {
                    int sock = socket(PF_KEY, SOCK_RAW, PF_KEY_V2);
                    char buf[17] = { 0 };
                    struct sadb_msg *msg = (void *)buf;
    
                    msg->sadb_msg_version = PF_KEY_V2;
                    msg->sadb_msg_type = SADB_DELETE;
                    msg->sadb_msg_len = 2;
    
                    write(sock, buf, 17);
            }
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bee113ae1a606b5f5a2bcd16a54a3889bd2e51b2
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 29 18:13:05 2017 -0600

    af_key: fix buffer overread in verify_address_len()
    
    commit 06b335cb51af018d5feeff5dd4fd53847ddb675a upstream.
    
    If a message sent to a PF_KEY socket ended with one of the extensions
    that takes a 'struct sadb_address' but there were not enough bytes
    remaining in the message for the ->sa_family member of the 'struct
    sockaddr' which is supposed to follow, then verify_address_len() read
    past the end of the message, into uninitialized memory.  Fix it by
    returning -EINVAL in this case.
    
    This bug was found using syzkaller with KMSAN.
    
    Reproducer:
    
            #include <linux/pfkeyv2.h>
            #include <sys/socket.h>
            #include <unistd.h>
    
            int main()
            {
                    int sock = socket(PF_KEY, SOCK_RAW, PF_KEY_V2);
                    char buf[24] = { 0 };
                    struct sadb_msg *msg = (void *)buf;
                    struct sadb_address *addr = (void *)(msg + 1);
    
                    msg->sadb_msg_version = PF_KEY_V2;
                    msg->sadb_msg_type = SADB_DELETE;
                    msg->sadb_msg_len = 3;
                    addr->sadb_address_len = 1;
                    addr->sadb_address_exttype = SADB_EXT_ADDRESS_SRC;
    
                    write(sock, buf, 24);
            }
    
    Reported-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4db98c583205ce93771ee16eeb5543185706df0c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 14 23:19:49 2018 +0100

    timers: Unconditionally check deferrable base
    
    commit ed4bbf7910b28ce3c691aef28d245585eaabda06 upstream.
    
    When the timer base is checked for expired timers then the deferrable base
    must be checked as well. This was missed when making the deferrable base
    independent of base::nohz_active.
    
    Fixes: ced6d5c11d3e ("timers: Use deferrable base independent of base::nohz_active")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sebastian Siewior <bigeasy@linutronix.de>
    Cc: Paul McKenney <paulmck@linux.vnet.ibm.com>
    Cc: rt@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6985762172f37bd29fb1dd2bdeccb11a182a86bf
Author: Leon Romanovsky <leonro@mellanox.com>
Date:   Fri Jan 12 07:58:39 2018 +0200

    RDMA/mlx5: Fix out-of-bound access while querying AH
    
    commit ae59c3f0b6cfd472fed96e50548a799b8971d876 upstream.
    
    The rdma_ah_find_type() accesses the port array based on an index
    controlled by userspace. The existing bounds check is after the first use
    of the index, so userspace can generate an out of bounds access, as shown
    by the KASN report below.
    
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in to_rdma_ah_attr+0xa8/0x3b0
    Read of size 4 at addr ffff880019ae2268 by task ibv_rc_pingpong/409
    
    CPU: 0 PID: 409 Comm: ibv_rc_pingpong Not tainted 4.15.0-rc2-00031-gb60a3faf5b83-dirty #3
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    Call Trace:
     dump_stack+0xe9/0x18f
     print_address_description+0xa2/0x350
     kasan_report+0x3a5/0x400
     to_rdma_ah_attr+0xa8/0x3b0
     mlx5_ib_query_qp+0xd35/0x1330
     ib_query_qp+0x8a/0xb0
     ib_uverbs_query_qp+0x237/0x7f0
     ib_uverbs_write+0x617/0xd80
     __vfs_write+0xf7/0x500
     vfs_write+0x149/0x310
     SyS_write+0xca/0x190
     entry_SYSCALL_64_fastpath+0x18/0x85
    RIP: 0033:0x7fe9c7a275a0
    RSP: 002b:00007ffee5498738 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 00007fe9c7ce4b00 RCX: 00007fe9c7a275a0
    RDX: 0000000000000018 RSI: 00007ffee5498800 RDI: 0000000000000003
    RBP: 000055d0c8d3f010 R08: 00007ffee5498800 R09: 0000000000000018
    R10: 00000000000000ba R11: 0000000000000246 R12: 0000000000008000
    R13: 0000000000004fb0 R14: 000055d0c8d3f050 R15: 00007ffee5498560
    
    Allocated by task 1:
     __kmalloc+0x3f9/0x430
     alloc_mad_private+0x25/0x50
     ib_mad_post_receive_mads+0x204/0xa60
     ib_mad_init_device+0xa59/0x1020
     ib_register_device+0x83a/0xbc0
     mlx5_ib_add+0x50e/0x5c0
     mlx5_add_device+0x142/0x410
     mlx5_register_interface+0x18f/0x210
     mlx5_ib_init+0x56/0x63
     do_one_initcall+0x15b/0x270
     kernel_init_freeable+0x2d8/0x3d0
     kernel_init+0x14/0x190
     ret_from_fork+0x24/0x30
    
    Freed by task 0:
    (stack is not available)
    
    The buggy address belongs to the object at ffff880019ae2000
     which belongs to the cache kmalloc-512 of size 512
    The buggy address is located 104 bytes to the right of
     512-byte region [ffff880019ae2000, ffff880019ae2200)
    The buggy address belongs to the page:
    page:000000005d674e18 count:1 mapcount:0 mapping:          (null) index:0x0 compound_mapcount: 0
    flags: 0x4000000000008100(slab|head)
    raw: 4000000000008100 0000000000000000 0000000000000000 00000001000c000c
    raw: dead000000000100 dead000000000200 ffff88001a402000 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff880019ae2100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     ffff880019ae2180: 00 00 00 00 00 00 00 00 00 00 00 00 00 fc fc fc
    >ffff880019ae2200: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
                                                              ^
     ffff880019ae2280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     ffff880019ae2300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    ==================================================================
    Disabling lock debugging due to kernel taint
    
    Fixes: 44c58487d51a ("IB/core: Define 'ib' and 'roce' rdma_ah_attr types")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3049d3d0688b1647cba4a129b156a510dbbb0b4
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jan 9 23:03:46 2018 +0300

    IB/hfi1: Prevent a NULL dereference
    
    commit 57194fa763bfa1a0908f30d4c77835beaa118fcb upstream.
    
    In the original code, we set "fd->uctxt" to NULL and then dereference it
    which will cause an Oops.
    
    Fixes: f2a3bc00a03c ("IB/hfi1: Protect context array set/clear with spinlock")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0299a1ceecf3ecec3b6c350a23101bdee009ae4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 10 10:53:18 2018 +0100

    ALSA: hda - Apply the existing quirk to iMac 14,1
    
    commit 031f335cda879450095873003abb03ae8ed3b74a upstream.
    
    iMac 14,1 requires the same quirk as iMac 12,2, using GPIO 2 and 3 for
    headphone and speaker output amps.  Add the codec SSID quirk entry
    (106b:0600) accordingly.
    
    BugLink: http://lkml.kernel.org/r/CAEw6Zyteav09VGHRfD5QwsfuWv5a43r0tFBNbfcHXoNrxVz7ew@mail.gmail.com
    Reported-by: Freaky <freaky2000@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f50902ad7f8133916f1d5496450734642a55280e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 10 08:34:28 2018 +0100

    ALSA: hda - Apply headphone noise quirk for another Dell XPS 13 variant
    
    commit e4c9fd10eb21376f44723c40ad12395089251c28 upstream.
    
    There is another Dell XPS 13 variant (SSID 1028:082a) that requires
    the existing fixup for reducing the headphone noise.
    This patch adds the quirk entry for that.
    
    BugLink: http://lkml.kernel.org/r/CAHXyb9ZCZJzVisuBARa+UORcjRERV8yokez=DP1_5O5isTz0ZA@mail.gmail.com
    Reported-and-tested-by: Francisco G. <frangio.1@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 004ceccbcfc747e23322798058c604816e73bccc
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 10 23:48:05 2018 +0100

    ALSA: pcm: Remove yet superfluous WARN_ON()
    
    commit 23b19b7b50fe1867da8d431eea9cd3e4b6328c2c upstream.
    
    muldiv32() contains a snd_BUG_ON() (which is morphed as WARN_ON() with
    debug option) for checking the case of 0 / 0.  This would be helpful
    if this happens only as a logical error; however, since the hw refine
    is performed with any data set provided by user, the inconsistent
    values that can trigger such a condition might be passed easily.
    Actually, syzbot caught this by passing some zero'ed old hw_params
    ioctl.
    
    So, having snd_BUG_ON() there is simply superfluous and rather
    harmful to give unnecessary confusions.  Let's get rid of it.
    
    Reported-by: syzbot+7e6ee55011deeebce15d@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3162384aed4cfe3f1a1f40041f3ba8cd7704d88
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jan 9 23:11:03 2018 +0100

    ALSA: seq: Make ioctls race-free
    
    commit b3defb791b26ea0683a93a4f49c77ec45ec96f10 upstream.
    
    The ALSA sequencer ioctls have no protection against racy calls while
    the concurrent operations may lead to interfere with each other.  As
    reported recently, for example, the concurrent calls of setting client
    pool with a combination of write calls may lead to either the
    unkillable dead-lock or UAF.
    
    As a slightly big hammer solution, this patch introduces the mutex to
    make each ioctl exclusive.  Although this may reduce performance via
    parallel ioctl calls, usually it's not demanded for sequencer usages,
    hence it should be negligible.
    
    Reported-by: Luo Quan <a4651386@163.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17ae6ccfe5dd85605dc44534348b506f95d16a61
Author: Li Jinyue <lijinyue@huawei.com>
Date:   Thu Dec 14 17:04:54 2017 +0800

    futex: Prevent overflow by strengthen input validation
    
    commit fbe0e839d1e22d88810f3ee3e2f1479be4c0aa4a upstream.
    
    UBSAN reports signed integer overflow in kernel/futex.c:
    
     UBSAN: Undefined behaviour in kernel/futex.c:2041:18
     signed integer overflow:
     0 - -2147483648 cannot be represented in type 'int'
    
    Add a sanity check to catch negative values of nr_wake and nr_requeue.
    
    Signed-off-by: Li Jinyue <lijinyue@huawei.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: dvhart@infradead.org
    Link: https://lkml.kernel.org/r/1513242294-31786-1-git-send-email-lijinyue@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1352130fe6aa4108fd6758687c419bb0d0c22f0d
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Dec 8 13:49:39 2017 +0100

    futex: Avoid violating the 10th rule of futex
    
    commit c1e2f0eaf015fb7076d51a339011f2383e6dd389 upstream.
    
    Julia reported futex state corruption in the following scenario:
    
       waiter                                  waker                                            stealer (prio > waiter)
    
       futex(WAIT_REQUEUE_PI, uaddr, uaddr2,
             timeout=[N ms])
          futex_wait_requeue_pi()
             futex_wait_queue_me()
                freezable_schedule()
                <scheduled out>
                                               futex(LOCK_PI, uaddr2)
                                               futex(CMP_REQUEUE_PI, uaddr,
                                                     uaddr2, 1, 0)
                                                  /* requeues waiter to uaddr2 */
                                               futex(UNLOCK_PI, uaddr2)
                                                     wake_futex_pi()
                                                        cmp_futex_value_locked(uaddr2, waiter)
                                                        wake_up_q()
               <woken by waker>
               <hrtimer_wakeup() fires,
                clears sleeper->task>
                                                                                               futex(LOCK_PI, uaddr2)
                                                                                                  __rt_mutex_start_proxy_lock()
                                                                                                     try_to_take_rt_mutex() /* steals lock */
                                                                                                        rt_mutex_set_owner(lock, stealer)
                                                                                                  <preempted>
             <scheduled in>
             rt_mutex_wait_proxy_lock()
                __rt_mutex_slowlock()
                   try_to_take_rt_mutex() /* fails, lock held by stealer */
                   if (timeout && !timeout->task)
                      return -ETIMEDOUT;
                fixup_owner()
                   /* lock wasn't acquired, so,
                      fixup_pi_state_owner skipped */
    
       return -ETIMEDOUT;
    
       /* At this point, we've returned -ETIMEDOUT to userspace, but the
        * futex word shows waiter to be the owner, and the pi_mutex has
        * stealer as the owner */
    
       futex_lock(LOCK_PI, uaddr2)
         -> bails with EDEADLK, futex word says we're owner.
    
    And suggested that what commit:
    
      73d786bd043e ("futex: Rework inconsistent rt_mutex/futex_q state")
    
    removes from fixup_owner() looks to be just what is needed. And indeed
    it is -- I completely missed that requeue_pi could also result in this
    case. So we need to restore that, except that subsequent patches, like
    commit:
    
      16ffa12d7425 ("futex: Pull rt_mutex_futex_unlock() out from under hb->lock")
    
    changed all the locking rules. Even without that, the sequence:
    
    -               if (rt_mutex_futex_trylock(&q->pi_state->pi_mutex)) {
    -                       locked = 1;
    -                       goto out;
    -               }
    
    -               raw_spin_lock_irq(&q->pi_state->pi_mutex.wait_lock);
    -               owner = rt_mutex_owner(&q->pi_state->pi_mutex);
    -               if (!owner)
    -                       owner = rt_mutex_next_owner(&q->pi_state->pi_mutex);
    -               raw_spin_unlock_irq(&q->pi_state->pi_mutex.wait_lock);
    -               ret = fixup_pi_state_owner(uaddr, q, owner);
    
    already suggests there were races; otherwise we'd never have to look
    at next_owner.
    
    So instead of doing 3 consecutive wait_lock sections with who knows
    what races, we do it all in a single section. Additionally, the usage
    of pi_state->owner in fixup_owner() was only safe because only the
    rt_mutex owner would modify it, which this additional case wrecks.
    
    Luckily the values can only change away and not to the value we're
    testing, this means we can do a speculative test and double check once
    we have the wait_lock.
    
    Fixes: 73d786bd043e ("futex: Rework inconsistent rt_mutex/futex_q state")
    Reported-by: Julia Cartwright <julia@ni.com>
    Reported-by: Gratian Crisan <gratian.crisan@ni.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Julia Cartwright <julia@ni.com>
    Tested-by: Gratian Crisan <gratian.crisan@ni.com>
    Cc: Darren Hart <dvhart@infradead.org>
    Link: https://lkml.kernel.org/r/20171208124939.7livp7no2ov65rrc@hirez.programming.kicks-ass.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5dc597185411ef22cdb9d29563a4f447f9999afd
Author: Oliver O'Halloran <oohall@gmail.com>
Date:   Wed Jan 10 03:07:15 2018 +1100

    powerpc/powernv: Check device-tree for RFI flush settings
    
    commit 6e032b350cd1fdb830f18f8320ef0e13b4e24094 upstream.
    
    New device-tree properties are available which tell the hypervisor
    settings related to the RFI flush. Use them to determine the
    appropriate flush instruction to use, and whether the flush is
    required.
    
    Signed-off-by: Oliver O'Halloran <oohall@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b5158cefcbd3132c9d382252dab4889c1bc8b56
Author: Michael Neuling <mikey@neuling.org>
Date:   Wed Jan 10 03:07:15 2018 +1100

    powerpc/pseries: Query hypervisor for RFI flush settings
    
    commit 8989d56878a7735dfdb234707a2fee6faf631085 upstream.
    
    A new hypervisor call is available which tells the guest settings
    related to the RFI flush. Use it to query the appropriate flush
    instruction(s), and whether the flush is required.
    
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9472d895cdc4a9abfb000bd071b1e036cebe3333
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Jan 10 03:07:15 2018 +1100

    powerpc/64s: Support disabling RFI flush with no_rfi_flush and nopti
    
    commit bc9c9304a45480797e13a8e1df96ffcf44fb62fe upstream.
    
    Because there may be some performance overhead of the RFI flush, add
    kernel command line options to disable it.
    
    We add a sensibly named 'no_rfi_flush' option, but we also hijack the
    x86 option 'nopti'. The RFI flush is not the same as KPTI, but if we
    see 'nopti' we can guess that the user is trying to avoid any overhead
    of Meltdown mitigations, and it means we don't have to educate every
    one about a different command line option.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b434c155ab4411d732bcafae699bfc35e9847151
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Jan 10 03:07:15 2018 +1100

    powerpc/64s: Add support for RFI flush of L1-D cache
    
    commit aa8a5e0062ac940f7659394f4817c948dc8c0667 upstream.
    
    On some CPUs we can prevent the Meltdown vulnerability by flushing the
    L1-D cache on exit from kernel to user mode, and from hypervisor to
    guest.
    
    This is known to be the case on at least Power7, Power8 and Power9. At
    this time we do not know the status of the vulnerability on other CPUs
    such as the 970 (Apple G5), pasemi CPUs (AmigaOne X1000) or Freescale
    CPUs. As more information comes to light we can enable this, or other
    mechanisms on those CPUs.
    
    The vulnerability occurs when the load of an architecturally
    inaccessible memory region (eg. userspace load of kernel memory) is
    speculatively executed to the point where its result can influence the
    address of a subsequent speculatively executed load.
    
    In order for that to happen, the first load must hit in the L1,
    because before the load is sent to the L2 the permission check is
    performed. Therefore if no kernel addresses hit in the L1 the
    vulnerability can not occur. We can ensure that is the case by
    flushing the L1 whenever we return to userspace. Similarly for
    hypervisor vs guest.
    
    In order to flush the L1-D cache on exit, we add a section of nops at
    each (h)rfi location that returns to a lower privileged context, and
    patch that with some sequence. Newer firmwares are able to advertise
    to us that there is a special nop instruction that flushes the L1-D.
    If we do not see that advertised, we fall back to doing a displacement
    flush in software.
    
    For guest kernels we support migration between some CPU versions, and
    different CPUs may use different flush instructions. So that we are
    prepared to migrate to a machine with a different flush instruction
    activated, we may have to patch more than one flush instruction at
    boot if the hypervisor tells us to.
    
    In the end this patch is mostly the work of Nicholas Piggin and
    Michael Ellerman. However a cast of thousands contributed to analysis
    of the issue, earlier versions of the patch, back ports testing etc.
    Many thanks to all of them.
    
    Tested-by: Jon Masters <jcm@redhat.com>
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9488c6b916535c7df2e99b8e3928faa5ff59b150
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Jan 10 03:07:15 2018 +1100

    powerpc/64s: Convert slb_miss_common to use RFI_TO_USER/KERNEL
    
    commit c7305645eb0c1621351cfc104038831ae87c0053 upstream.
    
    In the SLB miss handler we may be returning to user or kernel. We need
    to add a check early on and save the result in the cr4 register, and
    then we bifurcate the return path based on that.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcac5d36538ff417429ed942aa0392a3c50a4783
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Jan 10 03:07:15 2018 +1100

    powerpc/64: Convert fast_exception_return to use RFI_TO_USER/KERNEL
    
    commit a08f828cf47e6c605af21d2cdec68f84e799c318 upstream.
    
    Similar to the syscall return path, in fast_exception_return we may be
    returning to user or kernel context. We already have a test for that,
    because we conditionally restore r13. So use that existing test and
    branch, and bifurcate the return based on that.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 627700e4558db4abe37261d80fbf8fbef1ef16cb
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Jan 10 03:07:15 2018 +1100

    powerpc/64: Convert the syscall exit path to use RFI_TO_USER/KERNEL
    
    commit b8e90cb7bc04a509e821e82ab6ed7a8ef11ba333 upstream.
    
    In the syscall exit path we may be returning to user or kernel
    context. We already have a test for that, because we conditionally
    restore r13. So use that existing test and branch, and bifurcate the
    return based on that.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11caf810bd078e7d09be9f58250818f6595e78de
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Jan 10 03:07:15 2018 +1100

    powerpc/64s: Simple RFI macro conversions
    
    commit 222f20f140623ef6033491d0103ee0875fe87d35 upstream.
    
    This commit does simple conversions of rfi/rfid to the new macros that
    include the expected destination context. By simple we mean cases
    where there is a single well known destination context, and it's
    simply a matter of substituting the instruction for the appropriate
    macro.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcba6b9024461e9b23e434eb9c0461afc4f36c1d
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Jan 10 03:07:15 2018 +1100

    powerpc/64: Add macros for annotating the destination of rfid/hrfid
    
    commit 50e51c13b3822d14ff6df4279423e4b7b2269bc3 upstream.
    
    The rfid/hrfid ((Hypervisor) Return From Interrupt) instruction is
    used for switching from the kernel to userspace, and from the
    hypervisor to the guest kernel. However it can and is also used for
    other transitions, eg. from real mode kernel code to virtual mode
    kernel code, and it's not always clear from the code what the
    destination context is.
    
    To make it clearer when reading the code, add macros which encode the
    expected destination context.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4167dcbc91b1d12873f86d508563967e6ae8cb80
Author: Michael Neuling <mikey@neuling.org>
Date:   Tue Jan 9 03:52:05 2018 +1100

    powerpc/pseries: Add H_GET_CPU_CHARACTERISTICS flags & wrapper
    
    commit 191eccb1580939fb0d47deb405b82a85b0379070 upstream.
    
    A new hypervisor call has been defined to communicate various
    characteristics of the CPU to guests. Add definitions for the hcall
    number, flags and a wrapper function.
    
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5174ec1d498bf2ddff440fbdd8dbf860a8594015
Author: Simon Ser <contact@emersion.fr>
Date:   Sat Dec 30 14:43:31 2017 -0600

    objtool: Fix seg fault caused by missing parameter
    
    commit d89e426499cf36b96161bd32970d6783f1fbcb0e upstream.
    
    Fix a seg fault when no parameter is provided to 'objtool orc'.
    
    Signed-off-by: Simon Ser <contact@emersion.fr>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/9172803ec7ebb72535bcd0b7f966ae96d515968e.1514666459.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78172c7d5c2c956667c360c9a3f30f69f6e15478
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Tue Dec 26 15:27:20 2017 -0600

    objtool: Fix Clang enum conversion warning
    
    commit e7e83dd3ff1dd2f9e60213f6eedc7e5b08192062 upstream.
    
    Fix the following Clang enum conversion warning:
    
      arch/x86/decode.c:141:20: error: implicit conversion from enumeration
      type 'enum op_src_type' to different enumeration
      type 'enum op_dest_type' [-Werror,-Wenum-conversion]
    
        op->dest.type = OP_SRC_REG;
                      ~ ^~~~~~~~~~
    
    It just happened to work before because OP_SRC_REG and OP_DEST_REG have
    the same value.
    
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Reviewed-by: Nicholas Mc Guire <der.herr@hofr.at>
    Reviewed-by: Nick Desaulniers <nick.desaulniers@gmail.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: baa41469a7b9 ("objtool: Implement stack validation 2.0")
    Link: http://lkml.kernel.org/r/b4156c5738bae781c392e7a3691aed4514ebbdf2.1514323568.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e093c0810354e3be3a79c063f0d39152aa9e5e09
Author: Simon Ser <contact@emersion.fr>
Date:   Sat Dec 30 14:43:32 2017 -0600

    objtool: Fix seg fault with clang-compiled objects
    
    commit ce90aaf5cde4ce057b297bb6c955caf16ef00ee6 upstream.
    
    Fix a seg fault which happens when an input file provided to 'objtool
    orc generate' doesn't have a '.shstrtab' section (for instance, object
    files produced by clang don't have this section).
    
    Signed-off-by: Simon Ser <contact@emersion.fr>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/c0f2231683e9bed40fac1f13ce2c33b8389854bc.1514666459.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa9b50158262bb9cbba82ac9ad5ea3bac0c81e25
Author: Rob Clark <robdclark@gmail.com>
Date:   Sat Jan 6 10:59:41 2018 -0500

    drm/nouveau/disp/gf119: add missing drive vfunc ptr
    
    commit 1b5c7ef3d0d0610bda9b63263f7c5b7178d11015 upstream.
    
    Fixes broken dp on GF119:
    
      Call Trace:
       ? nvkm_dp_train_drive+0x183/0x2c0 [nouveau]
       nvkm_dp_acquire+0x4f3/0xcd0 [nouveau]
       nv50_disp_super_2_2+0x5d/0x470 [nouveau]
       ? nvkm_devinit_pll_set+0xf/0x20 [nouveau]
       gf119_disp_super+0x19c/0x2f0 [nouveau]
       process_one_work+0x193/0x3c0
       worker_thread+0x35/0x3b0
       kthread+0x125/0x140
       ? process_one_work+0x3c0/0x3c0
       ? kthread_park+0x60/0x60
       ret_from_fork+0x25/0x30
      Code:  Bad RIP value.
      RIP:           (null) RSP: ffffb1e243e4bc38
      CR2: 0000000000000000
    
    Fixes: af85389c614a drm/nouveau/disp: shuffle functions around
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=103421
    Signed-off-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Cc: Sven Joachim <svenjoac@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50c1c6cc09dcea608ace4bd258714d01909fed45
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Fri Jan 12 16:53:17 2018 -0800

    tools/objtool/Makefile: don't assume sync-check.sh is executable
    
    commit 0f908ccbeca99ddf0ad60afa710e72aded4a5ea7 upstream.
    
    patch(1) loses the x bit.  So if a user follows our patching
    instructions in Documentation/admin-guide/README.rst, their kernel will
    not compile.
    
    Fixes: 3bd51c5a371de ("objtool: Move kernel headers/code sync check to a script")
    Reported-by: Nicolas Bock <nicolasbock@gentoo.org>
    Reported-by Joakim Tjernlund <Joakim.Tjernlund@infinera.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Holger Hoffstätte <holger@applied-asynchrony.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c0bf9847171edd597a13adf3ddc879e96d947cd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jan 17 09:45:30 2018 +0100

    Linux 4.14.14

commit 198660b7a5dd33b114001023d540c9072603e2a8
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 14 22:13:29 2018 +0100

    x86/retpoline: Remove compile time warning
    
    commit b8b9ce4b5aec8de9e23cabb0a26b78641f9ab1d6 upstream.
    
    Remove the compile time warning when CONFIG_RETPOLINE=y and the compiler
    does not have retpoline support. Linus rationale for this is:
    
      It's wrong because it will just make people turn off RETPOLINE, and the
      asm updates - and return stack clearing - that are independent of the
      compiler are likely the most important parts because they are likely the
      ones easiest to target.
    
      And it's annoying because most people won't be able to do anything about
      it. The number of people building their own compiler? Very small. So if
      their distro hasn't got a compiler yet (and pretty much nobody does), the
      warning is just annoying crap.
    
      It is already properly reported as part of the sysfs interface. The
      compile-time warning only encourages bad things.
    
    Fixes: 76b043848fd2 ("x86/retpoline: Add initial retpoline support")
    Requested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Link: https://lkml.kernel.org/r/CA+55aFzWgquv4i6Mab6bASqYXg3ErV3XDFEYf=GEcCDQg5uAtw@mail.gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d8b7d3934b2c4f718441784823fbaeaa4c5327d
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Sun Jan 14 11:27:13 2018 +0100

    x86,perf: Disable intel_bts when PTI
    
    commit 99a9dc98ba52267ce5e062b52de88ea1f1b2a7d8 upstream.
    
    The intel_bts driver does not use the 'normal' BTS buffer which is exposed
    through the cpu_entry_area but instead uses the memory allocated for the
    perf AUX buffer.
    
    This obviously comes apart when using PTI because then the kernel mapping;
    which includes that AUX buffer memory; disappears. Fixing this requires to
    expose a mapping which is visible in all context and that's not trivial.
    
    As a quick fix disable this driver when PTI is enabled to prevent
    malfunction.
    
    Fixes: 385ce0ea4c07 ("x86/mm/pti: Add Kconfig")
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Reported-by: Robert Święcki <robert@swiecki.net>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: greg@kroah.com
    Cc: hughd@google.com
    Cc: luto@amacapital.net
    Cc: Vince Weaver <vince@deater.net>
    Cc: torvalds@linux-foundation.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180114102713.GB6166@worktop.programming.kicks-ass.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3e7fc96545d83abbc1c2c1a7ac6809cf5fb6202
Author: W. Trevor King <wking@tremily.us>
Date:   Fri Jan 12 15:24:59 2018 -0800

    security/Kconfig: Correct the Documentation reference for PTI
    
    commit a237f762681e2a394ca67f21df2feb2b76a3609b upstream.
    
    When the config option for PTI was added a reference to documentation was
    added as well. But the documentation did not exist at that point. The final
    documentation has a different file name.
    
    Fix it up to point to the proper file.
    
    Fixes: 385ce0ea ("x86/mm/pti: Add Kconfig")
    Signed-off-by: W. Trevor King <wking@tremily.us>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: linux-mm@kvack.org
    Cc: linux-security-module@vger.kernel.org
    Cc: James Morris <james.l.morris@oracle.com>
    Cc: "Serge E. Hallyn" <serge@hallyn.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/3009cc8ccbddcd897ec1e0cb6dda524929de0d14.1515799398.git.wking@tremily.us
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 026b3f23c970a22165ffdbd47a2a0cdccfd8c009
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 14 00:23:57 2018 +0100

    x86/pti: Fix !PCID and sanitize defines
    
    commit f10ee3dcc9f0aba92a5c4c064628be5200765dc2 upstream.
    
    The switch to the user space page tables in the low level ASM code sets
    unconditionally bit 12 and bit 11 of CR3. Bit 12 is switching the base
    address of the page directory to the user part, bit 11 is switching the
    PCID to the PCID associated with the user page tables.
    
    This fails on a machine which lacks PCID support because bit 11 is set in
    CR3. Bit 11 is reserved when PCID is inactive.
    
    While the Intel SDM claims that the reserved bits are ignored when PCID is
    disabled, the AMD APM states that they should be cleared.
    
    This went unnoticed as the AMD APM was not checked when the code was
    developed and reviewed and test systems with Intel CPUs never failed to
    boot. The report is against a Centos 6 host where the guest fails to boot,
    so it's not yet clear whether this is a virt issue or can happen on real
    hardware too, but thats irrelevant as the AMD APM clearly ask for clearing
    the reserved bits.
    
    Make sure that on non PCID machines bit 11 is not set by the page table
    switching code.
    
    Andy suggested to rename the related bits and masks so they are clearly
    describing what they should be used for, which is done as well for clarity.
    
    That split could have been done with alternatives but the macro hell is
    horrible and ugly. This can be done on top if someone cares to remove the
    extra orq. For now it's a straight forward fix.
    
    Fixes: 6fd166aae78c ("x86/mm: Use/Fix PCID to optimize user/kernel switches")
    Reported-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: stable <stable@vger.kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801140009150.2371@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a6e7a27d01eee812e37030aa083ac7bbba762c5
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Jan 11 17:16:51 2018 -0800

    selftests/x86: Add test_vsyscall
    
    commit 352909b49ba0d74929b96af6dfbefc854ab6ebb5 upstream.
    
    This tests that the vsyscall entries do what they're expected to do.
    It also confirms that attempts to read the vsyscall page behave as
    expected.
    
    If changes are made to the vsyscall code or its memory map handling,
    running this test in all three of vsyscall=none, vsyscall=emulate,
    and vsyscall=native are helpful.
    
    (Because it's easy, this also compares the vsyscall results to their
     vDSO equivalents.)
    
    Note to KAISER backporters: please test this under all three
    vsyscall modes.  Also, in the emulate and native modes, make sure
    that test_vsyscall_64 agrees with the command line or config
    option as to which mode you're in.  It's quite easy to mess up
    the kernel such that native mode accidentally emulates
    or vice versa.
    
    Greg, etc: please backport this to all your Meltdown-patched
    kernels.  It'll help make sure the patches didn't regress
    vsyscalls.
    
    CSigned-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/2b9c5a174c1d60fd7774461d518aa75598b1d8fd.1515719552.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9cdaaf0a3becc52e8b4662fef28c452c4f009b4
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Fri Jan 12 11:11:27 2018 +0000

    x86/retpoline: Fill return stack buffer on vmexit
    
    commit 117cc7a908c83697b0b737d15ae1eb5943afe35b upstream.
    
    In accordance with the Intel and AMD documentation, we need to overwrite
    all entries in the RSB on exiting a guest, to prevent malicious branch
    target predictions from affecting the host kernel. This is needed both
    for retpoline and for IBRS.
    
    [ak: numbers again for the RSB stuffing labels]
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515755487-8524-1-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0edc2dfb684b43c56d81a58271430a614a4975a
Author: Andi Kleen <ak@linux.intel.com>
Date:   Thu Jan 11 21:46:33 2018 +0000

    x86/retpoline/irq32: Convert assembler indirect jumps
    
    commit 7614e913db1f40fff819b36216484dc3808995d4 upstream.
    
    Convert all indirect jumps in 32bit irq inline asm code to use non
    speculative sequences.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-12-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 470703735b39d743afe0d9e91edaab6ac400c6c7
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 11 21:46:32 2018 +0000

    x86/retpoline/checksum32: Convert assembler indirect jumps
    
    commit 5096732f6f695001fa2d6f1335a2680b37912c69 upstream.
    
    Convert all indirect jumps in 32bit checksum assembler code to use
    non-speculative sequences when CONFIG_RETPOLINE is enabled.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-11-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41f8af6a4656e9dd348506b4ebfa4677730994c3
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 11 21:46:31 2018 +0000

    x86/retpoline/xen: Convert Xen hypercall indirect jumps
    
    commit ea08816d5b185ab3d09e95e393f265af54560350 upstream.
    
    Convert indirect call in Xen hypercall to use non-speculative sequence,
    when CONFIG_RETPOLINE is enabled.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-10-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0dcc73d67359c67d8b81868c2dd388b0c6be1f2
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 11 21:46:30 2018 +0000

    x86/retpoline/hyperv: Convert assembler indirect jumps
    
    commit e70e5892b28c18f517f29ab6e83bd57705104b31 upstream.
    
    Convert all indirect jumps in hyperv inline asm code to use non-speculative
    sequences when CONFIG_RETPOLINE is enabled.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-9-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82de9301b4ea4389ee889558f770513930bf803f
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 11 21:46:29 2018 +0000

    x86/retpoline/ftrace: Convert ftrace assembler indirect jumps
    
    commit 9351803bd803cdbeb9b5a7850b7b6f464806e3db upstream.
    
    Convert all indirect jumps in ftrace assembler code to use non-speculative
    sequences when CONFIG_RETPOLINE is enabled.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-8-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4edaa981b8749acd8fdd7ab8d2be2585ebeeb9e
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 11 21:46:28 2018 +0000

    x86/retpoline/entry: Convert entry assembler indirect jumps
    
    commit 2641f08bb7fc63a636a2b18173221d7040a3512e upstream.
    
    Convert indirect jumps in core 32/64bit entry assembler code to use
    non-speculative sequences when CONFIG_RETPOLINE is enabled.
    
    Don't use CALL_NOSPEC in entry_SYSCALL_64_fastpath because the return
    address after the 'call' instruction must be *precisely* at the
    .Lentry_SYSCALL_64_after_fastpath label for stub_ptregs_64 to work,
    and the use of alternatives will mess that up unless we play horrid
    games to prepend with NOPs and make the variants the same length. It's
    not worth it; in the case where we ALTERNATIVE out the retpoline, the
    first instruction at __x86.indirect_thunk.rax is going to be a bare
    jmp *%rax anyway.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-7-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79f2c12856404c5acfbc33e021108c0810a6d2b8
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 11 21:46:27 2018 +0000

    x86/retpoline/crypto: Convert crypto assembler indirect jumps
    
    commit 9697fa39efd3fc3692f2949d4045f393ec58450b upstream.
    
    Convert all indirect jumps in crypto assembler code to use non-speculative
    sequences when CONFIG_RETPOLINE is enabled.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-6-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcd4311d0e646ae9e739f7238002b664613f2355
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 11 21:46:26 2018 +0000

    x86/spectre: Add boot time option to select Spectre v2 mitigation
    
    commit da285121560e769cc31797bba6422eea71d473e0 upstream.
    
    Add a spectre_v2= option to select the mitigation used for the indirect
    branch speculation vulnerability.
    
    Currently, the only option available is retpoline, in its various forms.
    This will be expanded to cover the new IBRS/IBPB microcode features.
    
    The RETPOLINE_AMD feature relies on a serializing LFENCE for speculation
    control. For AMD hardware, only set RETPOLINE_AMD if LFENCE is a
    serializing instruction, which is indicated by the LFENCE_RDTSC feature.
    
    [ tglx: Folded back the LFENCE/AMD fixes and reworked it so IBRS
            integration becomes simple ]
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-5-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a72bd4b60da338e66922e4f9eded174b3ad147d
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 11 21:46:25 2018 +0000

    x86/retpoline: Add initial retpoline support
    
    commit 76b043848fd22dbf7f8bf3a1452f8c70d557b860 upstream.
    
    Enable the use of -mindirect-branch=thunk-extern in newer GCC, and provide
    the corresponding thunks. Provide assembler macros for invoking the thunks
    in the same way that GCC does, from native and inline assembler.
    
    This adds X86_FEATURE_RETPOLINE and sets it by default on all CPUs. In
    some circumstances, IBRS microcode features may be used instead, and the
    retpoline can be disabled.
    
    On AMD CPUs if lfence is serialising, the retpoline can be dramatically
    simplified to a simple "lfence; jmp *\reg". A future patch, after it has
    been verified that lfence really is serialising in all circumstances, can
    enable this by setting the X86_FEATURE_RETPOLINE_AMD feature bit in addition
    to X86_FEATURE_RETPOLINE.
    
    Do not align the retpoline in the altinstr section, because there is no
    guarantee that it stays aligned when it's copied over the oldinstr during
    alternative patching.
    
    [ Andi Kleen: Rename the macros, add CONFIG_RETPOLINE option, export thunks]
    [ tglx: Put actual function CALL/JMP in front of the macros, convert to
            symbolic labels ]
    [ dwmw2: Convert back to numeric labels, merge objtool fixes ]
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-4-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b95f61a41349ef4a115520ac4868bf52555eab9
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu Jan 11 21:46:24 2018 +0000

    objtool: Allow alternatives to be ignored
    
    commit 258c76059cece01bebae098e81bacb1af2edad17 upstream.
    
    Getting objtool to understand retpolines is going to be a bit of a
    challenge.  For now, take advantage of the fact that retpolines are
    patched in with alternatives.  Just read the original (sane)
    non-alternative instruction, and ignore the patched-in retpoline.
    
    This allows objtool to understand the control flow *around* the
    retpoline, even if it can't yet follow what's inside.  This means the
    ORC unwinder will fail to unwind from inside a retpoline, but will work
    fine otherwise.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-3-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a4d11820d12836785f64a609eecbcadc0d526d0
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu Jan 11 21:46:23 2018 +0000

    objtool: Detect jumps to retpoline thunks
    
    commit 39b735332cb8b33a27c28592d969e4016c86c3ea upstream.
    
    A direct jump to a retpoline thunk is really an indirect jump in
    disguise.  Change the objtool instruction type accordingly.
    
    Objtool needs to know where indirect branches are so it can detect
    switch statement jump tables.
    
    This fixes a bunch of warnings with CONFIG_RETPOLINE like:
    
      arch/x86/events/intel/uncore_nhmex.o: warning: objtool: nhmex_rbox_msr_enable_event()+0x44: sibling call from callable instruction with modified stack frame
      kernel/signal.o: warning: objtool: copy_siginfo_to_user()+0x91: sibling call from callable instruction with modified stack frame
      ...
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515707194-20531-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22e64ef9cdc3eee09e230855e01f1a3826494ce7
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Wed Jan 10 14:49:39 2018 -0800

    x86/pti: Make unpoison of pgd for trusted boot work for real
    
    commit 445b69e3b75e42362a5bdc13c8b8f61599e2228a upstream.
    
    The inital fix for trusted boot and PTI potentially misses the pgd clearing
    if pud_alloc() sets a PGD.  It probably works in *practice* because for two
    adjacent calls to map_tboot_page() that share a PGD entry, the first will
    clear NX, *then* allocate and set the PGD (without NX clear).  The second
    call will *not* allocate but will clear the NX bit.
    
    Defer the NX clearing to a point after it is known that all top-level
    allocations have occurred.  Add a comment to clarify why.
    
    [ tglx: Massaged changelog ]
    
    Fixes: 262b6b30087 ("x86/tboot: Unbreak tboot with PTI enabled")
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Jon Masters <jcm@redhat.com>
    Cc: "Tim Chen" <tim.c.chen@linux.intel.com>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: peterz@infradead.org
    Cc: ning.sun@intel.com
    Cc: tboot-devel@lists.sourceforge.net
    Cc: andi@firstfloor.org
    Cc: luto@kernel.org
    Cc: law@redhat.com
    Cc: pbonzini@redhat.com
    Cc: torvalds@linux-foundation.org
    Cc: gregkh@linux-foundation.org
    Cc: dwmw@amazon.co.uk
    Cc: nickc@redhat.com
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180110224939.2695CD47@viggo.jf.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b50f563f7c1a4dc307ba2d7f3f9b8ef2f98a2aa2
Author: Borislav Petkov <bp@suse.de>
Date:   Wed Jan 10 12:28:16 2018 +0100

    x86/alternatives: Fix optimize_nops() checking
    
    commit 612e8e9350fd19cae6900cf36ea0c6892d1a0dca upstream.
    
    The alternatives code checks only the first byte whether it is a NOP, but
    with NOPs in front of the payload and having actual instructions after it
    breaks the "optimized' test.
    
    Make sure to scan all bytes before deciding to optimize the NOPs in there.
    
    Reported-by: David Woodhouse <dwmw2@infradead.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Andrew Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/20180110112815.mgciyf5acwacphkq@pd.tnic
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31431b7b4665cae7bc197980e42a5f3728258688
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Tue Jan 9 15:02:51 2018 +0000

    sysfs/cpu: Fix typos in vulnerability documentation
    
    commit 9ecccfaa7cb5249bd31bdceb93fcf5bedb8a24d8 upstream.
    
    Fixes: 87590ce6e ("sysfs/cpu: Add vulnerability folder")
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 268114cdb3086ef54652b214f4f1e5d0a961c5f8
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Jan 8 16:09:32 2018 -0600

    x86/cpu/AMD: Use LFENCE_RDTSC in preference to MFENCE_RDTSC
    
    commit 9c6a73c75864ad9fa49e5fa6513e4c4071c0e29f upstream.
    
    With LFENCE now a serializing instruction, use LFENCE_RDTSC in preference
    to MFENCE_RDTSC.  However, since the kernel could be running under a
    hypervisor that does not support writing that MSR, read the MSR back and
    verify that the bit has been set successfully.  If the MSR can be read
    and the bit is set, then set the LFENCE_RDTSC feature, otherwise set the
    MFENCE_RDTSC feature.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/20180108220932.12580.52458.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 649c1de819afc90cb6699dc04f5340009dd3783c
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Jan 8 16:09:21 2018 -0600

    x86/cpu/AMD: Make LFENCE a serializing instruction
    
    commit e4d0e84e490790798691aaa0f2e598637f1867ec upstream.
    
    To aid in speculation control, make LFENCE a serializing instruction
    since it has less overhead than MFENCE.  This is done by setting bit 1
    of MSR 0xc0011029 (DE_CFG).  Some families that support LFENCE do not
    have this MSR.  For these families, the LFENCE instruction is already
    serializing.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/20180108220921.12580.71694.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0090f9f280d576a3b0cab9fb5eec9fb0de988d0
Author: Jike Song <albcamus@gmail.com>
Date:   Tue Jan 9 00:03:41 2018 +0800

    x86/mm/pti: Remove dead logic in pti_user_pagetable_walk*()
    
    commit 8d56eff266f3e41a6c39926269c4c3f58f881a8e upstream.
    
    The following code contains dead logic:
    
     162 if (pgd_none(*pgd)) {
     163         unsigned long new_p4d_page = __get_free_page(gfp);
     164         if (!new_p4d_page)
     165                 return NULL;
     166
     167         if (pgd_none(*pgd)) {
     168                 set_pgd(pgd, __pgd(_KERNPG_TABLE | __pa(new_p4d_page)));
     169                 new_p4d_page = 0;
     170         }
     171         if (new_p4d_page)
     172                 free_page(new_p4d_page);
     173 }
    
    There can't be any difference between two pgd_none(*pgd) at L162 and L167,
    so it's always false at L171.
    
    Dave Hansen explained:
    
     Yes, the double-test was part of an optimization where we attempted to
     avoid using a global spinlock in the fork() path.  We would check for
     unallocated mid-level page tables without the lock.  The lock was only
     taken when we needed to *make* an entry to avoid collisions.
    
     Now that it is all single-threaded, there is no chance of a collision,
     no need for a lock, and no need for the re-check.
    
    As all these functions are only called during init, mark them __init as
    well.
    
    Fixes: 03f4424f348e ("x86/mm/pti: Add functions to clone kernel PMDs")
    Signed-off-by: Jike Song <albcamus@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alan Cox <gnomes@lxorguk.ukuu.org.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Jiri Koshina <jikos@kernel.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Kees Cook <keescook@google.com>
    Cc: Andi Lutomirski <luto@amacapital.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg KH <gregkh@linux-foundation.org>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/20180108160341.3461-1-albcamus@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 968a3bb156424a9e4ea7aa1eb2779b6e86b5a63e
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Sat Jan 6 18:41:14 2018 +0100

    x86/tboot: Unbreak tboot with PTI enabled
    
    commit 262b6b30087246abf09d6275eb0c0dc421bcbe38 upstream.
    
    This is another case similar to what EFI does: create a new set of
    page tables, map some code at a low address, and jump to it.  PTI
    mistakes this low address for userspace and mistakenly marks it
    non-executable in an effort to make it unusable for userspace.
    
    Undo the poison to allow execution.
    
    Fixes: 385ce0ea4c07 ("x86/mm/pti: Add Kconfig")
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alan Cox <gnomes@lxorguk.ukuu.org.uk>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Jon Masters <jcm@redhat.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Jeff Law <law@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: David <dwmw@amazon.co.uk>
    Cc: Nick Clifton <nickc@redhat.com>
    Link: https://lkml.kernel.org/r/20180108102805.GK25546@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0d753568c16f123e4805b7136734f3a83403fb6
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 7 22:48:01 2018 +0100

    x86/cpu: Implement CPU vulnerabilites sysfs functions
    
    commit 61dc0f555b5c761cdafb0ba5bd41ecf22d68a4c4 upstream.
    
    Implement the CPU vulnerabilty show functions for meltdown, spectre_v1 and
    spectre_v2.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/20180107214913.177414879@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a3e4b399ebc994516f7b6bd8ae0584027e72418
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 7 22:48:00 2018 +0100

    sysfs/cpu: Add vulnerability folder
    
    commit 87590ce6e373d1a5401f6539f0c59ef92dd924a9 upstream.
    
    As the meltdown/spectre problem affects several CPU architectures, it makes
    sense to have common way to express whether a system is affected by a
    particular vulnerability or not. If affected the way to express the
    mitigation should be common as well.
    
    Create /sys/devices/system/cpu/vulnerabilities folder and files for
    meltdown, spectre_v1 and spectre_v2.
    
    Allow architectures to override the show function.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/20180107214913.096657732@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9298e868dddd820829f814cd25a0f28c92036af7
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Jan 6 11:49:23 2018 +0000

    x86/cpufeatures: Add X86_BUG_SPECTRE_V[12]
    
    commit 99c6fa2511d8a683e61468be91b83f85452115fa upstream.
    
    Add the bug bits for spectre v1/2 and force them unconditionally for all
    cpus.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515239374-23361-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af17c6526b60d52a35033fede9461bd9fbfa5a70
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Jan 5 09:44:36 2018 -0800

    x86/Documentation: Add PTI description
    
    commit 01c9b17bf673b05bb401b76ec763e9730ccf1376 upstream.
    
    Add some details about how PTI works, what some of the downsides
    are, and how to debug it when things go wrong.
    
    Also document the kernel parameter: 'pti/nopti'.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: Moritz Lipp <moritz.lipp@iaik.tugraz.at>
    Cc: Daniel Gruss <daniel.gruss@iaik.tugraz.at>
    Cc: Michael Schwarz <michael.schwarz@iaik.tugraz.at>
    Cc: Richard Fellner <richard.fellner@student.tugraz.at>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Andi Lutomirsky <luto@kernel.org>
    Link: https://lkml.kernel.org/r/20180105174436.1BC6FA2B@viggo.jf.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58168505a9f13a60b3465fbdd85c70a560640a41
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Fri Jan 5 22:35:41 2018 +0100

    x86/pti: Unbreak EFI old_memmap
    
    commit de53c3786a3ce162a1c815d0c04c766c23ec9c0a upstream.
    
    EFI_OLD_MEMMAP's efi_call_phys_prolog() calls set_pgd() with swapper PGD that
    has PAGE_USER set, which makes PTI set NX on it, and therefore EFI can't
    execute it's code.
    
    Fix that by forcefully clearing _PAGE_NX from the PGD (this can't be done
    by the pgprot API).
    
    _PAGE_NX will be automatically reintroduced in efi_call_phys_epilog(), as
    _set_pgd() will again notice that this is _PAGE_USER, and set _PAGE_NX on
    it.
    
    Tested-by: Dimitri Sivanich <sivanich@hpe.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Link: http://lkml.kernel.org/r/nycvar.YFH.7.76.1801052215460.11852@cbobk.fhfr.pm
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbbc6c4eeb0a55935e0d4d89a46f3783cf170b84
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Mon Dec 11 16:26:40 2017 +0900

    e1000e: Fix e1000_check_for_copper_link_ich8lan return value.
    
    commit 4110e02eb45ea447ec6f5459c9934de0a273fb91 upstream.
    
    e1000e_check_for_copper_link() and e1000_check_for_copper_link_ich8lan()
    are the two functions that may be assigned to mac.ops.check_for_link when
    phy.media_type == e1000_media_type_copper. Commit 19110cfbb34d ("e1000e:
    Separate signaling for link check/link up") changed the meaning of the
    return value of check_for_link for copper media but only adjusted the first
    function. This patch adjusts the second function likewise.
    
    Reported-by: Christian Hesse <list@eworm.de>
    Reported-by: Gabriel C <nix.or.die@gmail.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=198047
    Fixes: 19110cfbb34d ("e1000e: Separate signaling for link check/link up")
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Tested-by: Christian Hesse <list@eworm.de>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 233363fd02c5fffdfd0be305b70adbbe661d22cf
Author: John Johansen <john.johansen@canonical.com>
Date:   Fri Dec 8 17:43:18 2017 -0800

    apparmor: fix ptrace label match when matching stacked labels
    
    commit 0dda0b3fb255048a221f736c8a2a24c674da8bf3 upstream.
    
    Given a label with a profile stack of
      A//&B or A//&C ...
    
    A ptrace rule should be able to specify a generic trace pattern with
    a rule like
    
      ptrace trace A//&**,
    
    however this is failing because while the correct label match routine
    is called, it is being done post label decomposition so it is always
    being done against a profile instead of the stacked label.
    
    To fix this refactor the cross check to pass the full peer label in to
    the label_match.
    
    Fixes: 290f458a4f16 ("apparmor: allow ptrace checks to be finer grained than just capability")
    Reported-by: Matthew Garrett <mjg59@google.com>
    Tested-by: Matthew Garrett <mjg59@google.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4ae05b7bfcdd72f135099b848e1777e486efb19
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri Jan 12 16:53:14 2018 -0800

    kdump: write correct address of mem_section into vmcoreinfo
    
    commit a0b1280368d1e91ab72f849ef095b4f07a39bbf1 upstream.
    
    Depending on configuration mem_section can now be an array or a pointer
    to an array allocated dynamically.  In most cases, we can continue to
    refer to it as 'mem_section' regardless of what it is.
    
    But there's one exception: '&mem_section' means "address of the array"
    if mem_section is an array, but if mem_section is a pointer, it would
    mean "address of the pointer".
    
    We've stepped onto this in kdump code.  VMCOREINFO_SYMBOL(mem_section)
    writes down address of pointer into vmcoreinfo, not array as we wanted.
    
    Let's introduce VMCOREINFO_SYMBOL_ARRAY() that would handle the
    situation correctly for both cases.
    
    Link: http://lkml.kernel.org/r/20180112162532.35896-1-kirill.shutemov@linux.intel.com
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Fixes: 83e3c48729d9 ("mm/sparsemem: Allocate mem_section at runtime for CONFIG_SPARSEMEM_EXTREME=y")
    Acked-by: Baoquan He <bhe@redhat.com>
    Acked-by: Dave Young <dyoung@redhat.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Vivek Goyal <vgoyal@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45a061d6b4e0e671cc3aa1bed8bf47078eade69e
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Dec 29 00:22:54 2017 +0100

    mux: core: fix double get_device()
    
    commit aa1f10e85b0ab53dee85d8e293c8159d18d293a8 upstream.
    
    class_find_device already does a get_device on the returned device.
    So the device returned by of_find_mux_chip_by_node is already referenced
    and we should not reference it again (and unref it on error).
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e13548c7f50cba68a0a122218431bec741938f9
Author: Icenowy Zheng <icenowy@aosc.io>
Date:   Sat Jan 6 00:56:44 2018 +0800

    uas: ignore UAS for Norelsys NS1068(X) chips
    
    commit 928afc85270753657b5543e052cc270c279a3fe9 upstream.
    
    The UAS mode of Norelsys NS1068(X) is reported to fail to work on
    several platforms with the following error message:
    
    xhci-hcd xhci-hcd.0.auto: ERROR Transfer event for unknown stream ring slot 1 ep 8
    xhci-hcd xhci-hcd.0.auto: @00000000bf04a400 00000000 00000000 1b000000 01098001
    
    And when trying to mount a partition on the disk the disk will
    disconnect from the USB controller, then after re-connecting the device
    will be offlined and not working at all.
    
    Falling back to USB mass storage can solve this problem, so ignore UAS
    function of this chip.
    
    Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02462928e2234eea95dd1ce05ca1f2c02088dc13
Author: Ben Seri <ben@armis.com>
Date:   Fri Dec 8 15:14:47 2017 +0100

    Bluetooth: Prevent stack info leak from the EFS element.
    
    commit 06e7e776ca4d36547e503279aeff996cbb292c16 upstream.
    
    In the function l2cap_parse_conf_rsp and in the function
    l2cap_parse_conf_req the following variable is declared without
    initialization:
    
    struct l2cap_conf_efs efs;
    
    In addition, when parsing input configuration parameters in both of
    these functions, the switch case for handling EFS elements may skip the
    memcpy call that will write to the efs variable:
    
    ...
    case L2CAP_CONF_EFS:
    if (olen == sizeof(efs))
    memcpy(&efs, (void *)val, olen);
    ...
    
    The olen in the above if is attacker controlled, and regardless of that
    if, in both of these functions the efs variable would eventually be
    added to the outgoing configuration request that is being built:
    
    l2cap_add_conf_opt(&ptr, L2CAP_CONF_EFS, sizeof(efs), (unsigned long) &efs);
    
    So by sending a configuration request, or response, that contains an
    L2CAP_CONF_EFS element, but with an element length that is not
    sizeof(efs) - the memcpy to the uninitialized efs variable can be
    avoided, and the uninitialized variable would be returned to the
    attacker (16 bytes).
    
    This issue has been assigned CVE-2017-1000410
    
    Cc: Marcel Holtmann <marcel@holtmann.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Cc: Johan Hedberg <johan.hedberg@gmail.com>
    Signed-off-by: Ben Seri <ben@armis.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 242e20a5b3cc2b99ace977546d3cffc6a2a35991
Author: Viktor Slavkovic <viktors@google.com>
Date:   Mon Jan 8 10:43:03 2018 -0800

    staging: android: ashmem: fix a race condition in ASHMEM_SET_SIZE ioctl
    
    commit 443064cb0b1fb4569fe0a71209da7625129fb760 upstream.
    
    A lock-unlock is missing in ASHMEM_SET_SIZE ioctl which can result in a
    race condition when mmap is called. After the !asma->file check, before
    setting asma->size, asma->file can be set in mmap. That would result in
    having different asma->size than the mapped memory size. Combined with
    ASHMEM_UNPIN ioctl and shrinker invocation, this can result in memory
    corruption.
    
    Signed-off-by: Viktor Slavkovic <viktors@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0382becc1d24e1cd00dc44e1fa5f7655441c258c
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Fri Dec 22 19:23:47 2017 -0700

    usbip: vudc_tx: fix v_send_ret_submit() vulnerability to null xfer buffer
    
    commit 5fd77a3a0e408c23ab4002a57db980e46bc16e72 upstream.
    
    v_send_ret_submit() handles urb with a null transfer_buffer, when it
    replays a packet with potential malicious data that could contain a
    null buffer.
    
    Add a check for the condition when actual_length > 0 and transfer_buffer
    is null.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e56d7cd5f31ef90b1c4ecb9a0f771bad46938a01
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Fri Dec 22 19:23:46 2017 -0700

    usbip: fix vudc_rx: harden CMD_SUBMIT path to handle malicious input
    
    commit b78d830f0049ef1966dc1e0ebd1ec2a594e2cf25 upstream.
    
    Harden CMD_SUBMIT path to handle malicious input that could trigger
    large memory allocations. Add checks to validate transfer_buffer_length
    and number_of_packets to protect against bad input requesting for
    unbounded memory allocations.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34e5d097bc36f9f62db3b08b570abcd91800d00d
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Fri Dec 22 17:00:06 2017 -0700

    usbip: remove kernel addresses from usb device and urb debug msgs
    
    commit e1346fd87c71a1f61de1fe476ec8df1425ac931c upstream.
    
    usbip_dump_usb_device() and usbip_dump_urb() print kernel addresses.
    Remove kernel addresses from usb device and urb debug msgs and improve
    the message content.
    
    Instead of printing parent device and bus addresses, print parent device
    and bus names.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2817c4c8fc1feab053b2e21f15bc040c3828d304
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Jan 3 12:51:51 2018 -0500

    USB: UDC core: fix double-free in usb_add_gadget_udc_release
    
    commit 7ae2c3c280db183ca9ada2675c34ec2f7378abfa upstream.
    
    The error-handling pathways in usb_add_gadget_udc_release() are messed
    up.  Aside from the uninformative statement labels, they can deallocate
    the udc structure after calling put_device(), which is a double-free.
    This was observed by KASAN in automatic testing.
    
    This patch cleans up the routine.  It preserves the requirement that
    when any failure occurs, we call put_device(&gadget->dev).
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Reviewed-by: Peter Chen <peter.chen@nxp.com>
    Acked-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 204d8fb1b417732359338ec0eae6eb16ff854bcc
Author: Pete Zaitcev <zaitcev@redhat.com>
Date:   Mon Jan 8 15:46:41 2018 -0600

    USB: fix usbmon BUG trigger
    
    commit 46eb14a6e1585d99c1b9f58d0e7389082a5f466b upstream.
    
    Automated tests triggered this by opening usbmon and accessing the
    mmap while simultaneously resizing the buffers. This bug was with
    us since 2006, because typically applications only size the buffers
    once and thus avoid racing. Reported by Kirill A. Shutemov.
    
    Reported-by: <syzbot+f9831b881b3e849829fc@syzkaller.appspotmail.com>
    Signed-off-by: Pete Zaitcev <zaitcev@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f562a823dd2564e8af78424e9580031387809bfd
Author: Stefan Agner <stefan@agner.ch>
Date:   Thu Jan 11 14:47:40 2018 +0100

    usb: misc: usb3503: make sure reset is low for at least 100us
    
    commit b8626f1dc29d3eee444bfaa92146ec7b291ef41c upstream.
    
    When using a GPIO which is high by default, and initialize the
    driver in USB Hub mode, initialization fails with:
      [  111.757794] usb3503 0-0008: SP_ILOCK failed (-5)
    
    The reason seems to be that the chip is not properly reset.
    Probe does initialize reset low, however some lines later the
    code already set it back high, which is not long enouth.
    
    Make sure reset is asserted for at least 100us by inserting a
    delay after initializing the reset pin during probe.
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5f322fea60a96812ba3ab079bf03e27be4fc225
Author: Christian Holl <cyborgx1@gmail.com>
Date:   Wed Jan 3 19:53:02 2018 +0100

    USB: serial: cp210x: add new device ID ELV ALC 8xxx
    
    commit d14ac576d10f865970bb1324d337e5e24d79aaf4 upstream.
    
    This adds the ELV ALC 8xxx Battery Charging device
    to the list of USB IDs of drivers/usb/serial/cp210x.c
    
    Signed-off-by: Christian Holl <cyborgx1@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbe0d2251b3896dc927cc980e6bfb4e73814d748
Author: Diego Elio Pettenò <flameeyes@flameeyes.eu>
Date:   Fri Dec 29 09:54:25 2017 +0000

    USB: serial: cp210x: add IDs for LifeScan OneTouch Verio IQ
    
    commit 4307413256ac1e09b8f53e8715af3df9e49beec3 upstream.
    
    Add IDs for the OneTouch Verio IQ that comes with an embedded
    USB-to-serial converter.
    
    Signed-off-by: Diego Elio Pettenò <flameeyes@flameeyes.eu>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2e0b5db9b581f78155bd4999b5bb2d0d8037eda
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Wed Jan 10 20:04:37 2018 +0100

    bpf: arsh is not supported in 32 bit alu thus reject it
    
    commit 7891a87efc7116590eaba57acc3c422487802c6f upstream.
    
    The following snippet was throwing an 'unknown opcode cc' warning
    in BPF interpreter:
    
      0: (18) r0 = 0x0
      2: (7b) *(u64 *)(r10 -16) = r0
      3: (cc) (u32) r0 s>>= (u32) r0
      4: (95) exit
    
    Although a number of JITs do support BPF_ALU | BPF_ARSH | BPF_{K,X}
    generation, not all of them do and interpreter does neither. We can
    leave existing ones and implement it later in bpf-next for the
    remaining ones, but reject this properly in verifier for the time
    being.
    
    Fixes: 17a5267067f3 ("bpf: verifier (add verifier core)")
    Reported-by: syzbot+93c4904c5c70348a6890@syzkaller.appspotmail.com
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67c05d9414512e1f9040d29e37e3d5533d8c51dd
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Wed Jan 10 23:25:05 2018 +0100

    bpf, array: fix overflow in max_entries and undefined behavior in index_mask
    
    commit bbeb6e4323dad9b5e0ee9f60c223dd532e2403b1 upstream.
    
    syzkaller tried to alloc a map with 0xfffffffd entries out of a userns,
    and thus unprivileged. With the recently added logic in b2157399cc98
    ("bpf: prevent out-of-bounds speculation") we round this up to the next
    power of two value for max_entries for unprivileged such that we can
    apply proper masking into potentially zeroed out map slots.
    
    However, this will generate an index_mask of 0xffffffff, and therefore
    a + 1 will let this overflow into new max_entries of 0. This will pass
    allocation, etc, and later on map access we still enforce on the original
    attr->max_entries value which was 0xfffffffd, therefore triggering GPF
    all over the place. Thus bail out on overflow in such case.
    
    Moreover, on 32 bit archs roundup_pow_of_two() can also not be used,
    since fls_long(max_entries - 1) can result in 32 and 1UL << 32 in 32 bit
    space is undefined. Therefore, do this by hand in a 64 bit variable.
    
    This fixes all the issues triggered by syzkaller's reproducers.
    
    Fixes: b2157399cc98 ("bpf: prevent out-of-bounds speculation")
    Reported-by: syzbot+b0efb8e572d01bce1ae0@syzkaller.appspotmail.com
    Reported-by: syzbot+6c15e9744f75f2364773@syzkaller.appspotmail.com
    Reported-by: syzbot+d2f5524fb46fd3b312ee@syzkaller.appspotmail.com
    Reported-by: syzbot+61d23c95395cc90dbc2b@syzkaller.appspotmail.com
    Reported-by: syzbot+0d363c942452cca68c01@syzkaller.appspotmail.com
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5dbaf87684c81693854a87b4a6c46460fc7a731
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Sun Jan 7 17:33:02 2018 -0800

    bpf: prevent out-of-bounds speculation
    
    commit b2157399cc9898260d6031c5bfe45fe137c1fbe7 upstream.
    
    Under speculation, CPUs may mis-predict branches in bounds checks. Thus,
    memory accesses under a bounds check may be speculated even if the
    bounds check fails, providing a primitive for building a side channel.
    
    To avoid leaking kernel data round up array-based maps and mask the index
    after bounds check, so speculated load with out of bounds index will load
    either valid value from the array or zero from the padded area.
    
    Unconditionally mask index for all array types even when max_entries
    are not rounded to power of 2 for root user.
    When map is created by unpriv user generate a sequence of bpf insns
    that includes AND operation to make sure that JITed code includes
    the same 'index & index_mask' operation.
    
    If prog_array map is created by unpriv user replace
      bpf_tail_call(ctx, map, index);
    with
      if (index >= max_entries) {
        index &= map->index_mask;
        bpf_tail_call(ctx, map, index);
      }
    (along with roundup to power 2) to prevent out-of-bounds speculation.
    There is secondary redundant 'if (index >= max_entries)' in the interpreter
    and in all JITs, but they can be optimized later if necessary.
    
    Other array-like maps (cpumap, devmap, sockmap, perf_event_array, cgroup_array)
    cannot be used by unpriv, so no changes there.
    
    That fixes bpf side of "Variant 1: bounds check bypass (CVE-2017-5753)" on
    all architectures with and without JIT.
    
    v2->v3:
    Daniel noticed that attack potentially can be crafted via syscall commands
    without loading the program, so add masking to those paths as well.
    
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b00cb5a35082c1b8b0616283a2a8ac834989f0cd
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu Nov 16 18:02:15 2017 +0200

    drm/i915: Fix init_clock_gating for resume
    
    commit 3572f04c69ed4369da5d3c65d84fb18774aa60b6 upstream.
    
    Moving the init_clock_gating() call from intel_modeset_init_hw() to
    intel_modeset_gem_init() had an unintended effect of not applying
    some workarounds on resume. This, for example, cause some kind of
    corruption to appear at the top of my IVB Thinkpad X1 Carbon LVDS
    screen after hibernation. Fix the problem by explicitly calling
    init_clock_gating() from the resume path.
    
    I really hope this doesn't break something else again. At least
    the problems reported at https://bugs.freedesktop.org/show_bug.cgi?id=103549
    didn't make a comeback, even after a hibernate cycle.
    
    v2: Reorder the init_clock_gating vs. modeset_init_hw to match
        the display reset path (Rodrigo)
    
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Fixes: 6ac43272768c ("drm/i915: Move init_clock_gating() back to where it was")
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171116160215.25715-1-ville.syrjala@linux.intel.com
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    (cherry picked from commit 675f7ff35bd256e65d3d0f52718d8babf5d1002a)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37928ffde45d9a638c6e8a04966e07f4ee845d1b
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Nov 8 15:35:55 2017 +0200

    drm/i915: Move init_clock_gating() back to where it was
    
    commit 6ac43272768ca901daac4076a66c2c4e3c7b9321 upstream.
    
    Apparently setting up a bunch of GT registers before we've properly
    initialized the rest of the GT hardware leads to these setting being
    lost. So looks like I broke HSW with commit b7048ea12fbb ("drm/i915:
    Do .init_clock_gating() earlier to avoid it clobbering watermarks")
    by doing init_clock_gating() too early. This should actually affect
    other platforms as well, but apparently not to such a great degree.
    
    What I was ultimately after in that commit was to move the
    ilk_init_lp_watermarks() call earlier. So let's undo the damage and
    move init_clock_gating() back to where it was, and call
    ilk_init_lp_watermarks() just before the watermark state readout.
    
    This highlights how fragile and messed up our init order really is.
    I wonder why we even initialize the display before gem. The opposite
    order would make much more sense to me...
    
    v2: Keep WaRsPkgCStateDisplayPMReq:hsw early as it really must
        be done before all planes might get disabled.
    
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Mark Janes <mark.a.janes@intel.com>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Oscar Mateo <oscar.mateo@intel.com>
    Cc: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Reported-by: Mark Janes <mark.a.janes@intel.com>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=103549
    Fixes: b7048ea12fbb ("drm/i915: Do .init_clock_gating() earlier to avoid it clobbering watermarks")
    References: https://lists.freedesktop.org/archives/intel-gfx/2017-November/145432.html
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171108133555.14091-1-ville.syrjala@linux.intel.com
    Tested-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    (cherry picked from commit f72b84c677d61f201b869223a8d6e389c7bb7d3d)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08a56f347a28d697d2f3cec14bce5ec8ad290bd7
Author: Kenneth Graunke <kenneth@whitecape.org>
Date:   Fri Jan 5 00:59:05 2018 -0800

    drm/i915: Whitelist SLICE_COMMON_ECO_CHICKEN1 on Geminilake.
    
    commit 4636bda86aa1f34f45c629477476a0dcfa04e597 upstream.
    
    Geminilake requires the 3D driver to select whether barriers are
    intended for compute shaders, or tessellation control shaders, by
    whacking a "Barrier Mode" bit in SLICE_COMMON_ECO_CHICKEN1 when
    switching pipelines.  Failure to do this properly can result in GPU
    hangs.
    
    Unfortunately, this means it needs to switch mid-batch, so only
    userspace can properly set it.  To facilitate this, the kernel needs
    to whitelist the register.
    
    The workarounds page currently tags this as applying to Broxton only,
    but that doesn't make sense.  The documentation for the register it
    references says the bit userspace is supposed to toggle only exists on
    Geminilake.  Empirically, the Mesa patch to toggle this bit appears to
    fix intermittent GPU hangs in tessellation control shader barrier tests
    on Geminilake; we haven't seen those hangs on Broxton.
    
    v2: Mention WA #0862 in the comment (it doesn't have a name).
    
    Signed-off-by: Kenneth Graunke <kenneth@whitecape.org>
    Acked-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180105085905.9298-1-kenneth@whitecape.org
    (cherry picked from commit ab062639edb0412daf6de540725276b9a5d217f9)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4675bdd85ca4c9b90f7f051c72856c857b4df43f
Author: Zhi Wang <zhi.a.wang@intel.com>
Date:   Fri Dec 29 02:50:08 2017 +0800

    drm/i915/gvt: Clear the shadow page table entry after post-sync
    
    commit 121d760d0788f95619049c63449d977065cab69d upstream.
    
    A shadow page table entry needs to be cleared after being set as
    post-sync. This patch fixes the recent error reported in Win7-32 test.
    
    Fixes: 2707e4446688 ("drm/i915/gvt: vGPU graphics memory virtualization")
    Signed-off-by: Zhi Wang <zhi.a.wang@intel.com>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fc16b259ac276da269b97f66ad72a5b182c523a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jan 10 12:40:04 2018 +0300

    drm/vmwgfx: Potential off by one in vmw_view_add()
    
    commit 0d9cac0ca0429830c40fe1a4e50e60f6221fd7b6 upstream.
    
    The vmw_view_cmd_to_type() function returns vmw_view_max (3) on error.
    It's one element beyond the end of the vmw_view_cotables[] table.
    
    My read on this is that it's possible to hit this failure.  header->id
    comes from vmw_cmd_check() and it's a user controlled number between
    1040 and 1225 so we can hit that error.  But I don't have the hardware
    to test this code.
    
    Fixes: d80efd5cb3de ("drm/vmwgfx: Initial DX support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f6ff75e484bca49202cdc132787bc5d29d8a139
Author: Thomas Hellstrom <thellstrom@vmware.com>
Date:   Tue Jan 9 15:33:42 2018 +0100

    drm/vmwgfx: Don't cache framebuffer maps
    
    commit 98648ae6ef6bdcdcb88c46cad963906ab452e96d upstream.
    
    Buffer objects need to be either pinned or reserved while a map is active,
    that's not the case here, so avoid caching the framebuffer map.
    This will cause increasing mapping activity mainly when we don't do
    page flipping.
    
    This fixes occasional garbage filled screens when the framebuffer has been
    evicted after the map.
    
    Since in-kernel mapping of whole buffer objects is error-prone on 32-bit
    architectures and also quite inefficient, we will revisit this later.
    
    Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
    Reviewed-by: Sinclair Yeh <syeh@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02453a0f8f54a00aff82daa287627c328f121a18
Author: David Gibson <david@gibson.dropbear.id.au>
Date:   Wed Jan 10 17:04:39 2018 +1100

    KVM: PPC: Book3S HV: Always flush TLB in kvmppc_alloc_reset_hpt()
    
    commit ecba8297aafd50db6ae867e90844eead1611ef1c upstream.
    
    The KVM_PPC_ALLOCATE_HTAB ioctl(), implemented by kvmppc_alloc_reset_hpt()
    is supposed to completely clear and reset a guest's Hashed Page Table (HPT)
    allocating or re-allocating it if necessary.
    
    In the case where an HPT of the right size already exists and it just
    zeroes it, it forces a TLB flush on all guest CPUs, to remove any stale TLB
    entries loaded from the old HPT.
    
    However, that situation can arise when the HPT is resizing as well - or
    even when switching from an RPT to HPT - so those cases need a TLB flush as
    well.
    
    So, move the TLB flush to trigger in all cases except for errors.
    
    Fixes: f98a8bf9ee20 ("KVM: PPC: Book3S HV: Allow KVM_PPC_ALLOCATE_HTAB ioctl() to change HPT size")
    Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8e754fe3b8e7961cd6127793ffbb38108b29629
Author: Serhii Popovych <spopovyc@redhat.com>
Date:   Mon Dec 4 09:36:42 2017 -0500

    KVM: PPC: Book3S HV: Fix use after free in case of multiple resize requests
    
    commit 4ed11aeefda439c76ddae3ceebcfa4fad111f149 upstream.
    
    When serving multiple resize requests following could happen:
    
        CPU0                                    CPU1
        ----                                    ----
        kvm_vm_ioctl_resize_hpt_prepare(1);
          -> schedule_work()
                                                /* system_rq might be busy: delay */
        kvm_vm_ioctl_resize_hpt_prepare(2);
          mutex_lock();
          if (resize) {
             ...
             release_hpt_resize();
          }
          ...                                   resize_hpt_prepare_work()
          -> schedule_work()                    {
          mutex_unlock()                           /* resize->kvm could be wrong */
                                                   struct kvm *kvm = resize->kvm;
    
                                                   mutex_lock(&kvm->lock);   <<<< UAF
                                                   ...
                                                }
    
    i.e. a second resize request with different order could be started by
    kvm_vm_ioctl_resize_hpt_prepare(), causing the previous request to be
    free()d when there's still an active worker thread which will try to
    access it.  This leads to a use after free in point marked with UAF on
    the diagram above.
    
    To prevent this from happening, instead of unconditionally releasing a
    pre-existing resize structure from the prepare ioctl(), we check if
    the existing structure has an in-progress worker.  We do that by
    checking if the resize->error == -EBUSY, which is safe because the
    resize->error field is protected by the kvm->lock.  If there is an
    active worker, instead of releasing, we mark the structure as stale by
    unlinking it from kvm_struct.
    
    In the worker thread we check for a stale structure (with kvm->lock
    held), and in that case abort, releasing the stale structure ourself.
    We make the check both before and the actual allocation.  Strictly,
    only the check afterwards is needed, the check before is an
    optimization: if the structure happens to become stale before the
    worker thread is dispatched, rather than during the allocation, it
    means we can avoid allocating then immediately freeing a potentially
    substantial amount of memory.
    
    This fixes following or similar host kernel crash message:
    
    [  635.277361] Unable to handle kernel paging request for data at address 0x00000000
    [  635.277438] Faulting instruction address: 0xc00000000052f568
    [  635.277446] Oops: Kernel access of bad area, sig: 11 [#1]
    [  635.277451] SMP NR_CPUS=2048 NUMA PowerNV
    [  635.277470] Modules linked in: xt_CHECKSUM iptable_mangle ipt_MASQUERADE
    nf_nat_masquerade_ipv4 iptable_nat nf_nat_ipv4 nf_nat nf_conntrack_ipv4
    nf_defrag_ipv4 xt_conntrack nf_conntrack ipt_REJECT nf_reject_ipv4 tun bridge stp llc
    ebtable_filter ebtables ip6table_filter ip6_tables iptable_filter nfsv3 nfs_acl nfs
    lockd grace fscache kvm_hv kvm rpcrdma sunrpc ib_isert iscsi_target_mod ib_iser libiscsi
    scsi_transport_iscsi ib_srpt target_core_mod ext4 ib_srp scsi_transport_srp
    ib_ipoib mbcache jbd2 rdma_ucm ib_ucm ib_uverbs ib_umad rdma_cm ib_cm iw_cm ocrdma(T)
    ib_core ses enclosure scsi_transport_sas sg shpchp leds_powernv ibmpowernv i2c_opal
    i2c_core powernv_rng ipmi_powernv ipmi_devintf ipmi_msghandler ip_tables xfs
    libcrc32c sr_mod sd_mod cdrom lpfc nvme_fc(T) nvme_fabrics nvme_core ipr nvmet_fc(T)
    tg3 nvmet libata be2net crc_t10dif crct10dif_generic scsi_transport_fc ptp scsi_tgt
    pps_core crct10dif_common dm_mirror dm_region_hash dm_log dm_mod
    [  635.278687] CPU: 40 PID: 749 Comm: kworker/40:1 Tainted: G
    ------------ T 3.10.0.bz1510771+ #1
    [  635.278782] Workqueue: events resize_hpt_prepare_work [kvm_hv]
    [  635.278851] task: c0000007e6840000 ti: c0000007e9180000 task.ti: c0000007e9180000
    [  635.278919] NIP: c00000000052f568 LR: c0000000009ea310 CTR: c0000000009ea4f0
    [  635.278988] REGS: c0000007e91837f0 TRAP: 0300   Tainted: G
    ------------ T  (3.10.0.bz1510771+)
    [  635.279077] MSR: 9000000100009033 <SF,HV,EE,ME,IR,DR,RI,LE>  CR: 24002022  XER:
    00000000
    [  635.279248] CFAR: c000000000009368 DAR: 0000000000000000 DSISR: 40000000 SOFTE: 1
    GPR00: c0000000009ea310 c0000007e9183a70 c000000001250b00 c0000007e9183b10
    GPR04: 0000000000000000 0000000000000000 c0000007e9183650 0000000000000000
    GPR08: c0000007ffff7b80 00000000ffffffff 0000000080000028 d00000000d2529a0
    GPR12: 0000000000002200 c000000007b56800 c000000000120028 c0000007f135bb40
    GPR16: 0000000000000000 c000000005c1e018 c000000005c1e018 0000000000000000
    GPR20: 0000000000000001 c0000000011bf778 0000000000000001 fffffffffffffef7
    GPR24: 0000000000000000 c000000f1e262e50 0000000000000002 c0000007e9180000
    GPR28: c000000f1e262e4c c000000f1e262e50 0000000000000000 c0000007e9183b10
    [  635.280149] NIP [c00000000052f568] __list_add+0x38/0x110
    [  635.280197] LR [c0000000009ea310] __mutex_lock_slowpath+0xe0/0x2c0
    [  635.280253] Call Trace:
    [  635.280277] [c0000007e9183af0] [c0000000009ea310] __mutex_lock_slowpath+0xe0/0x2c0
    [  635.280356] [c0000007e9183b70] [c0000000009ea554] mutex_lock+0x64/0x70
    [  635.280426] [c0000007e9183ba0] [d00000000d24da04]
    resize_hpt_prepare_work+0xe4/0x1c0 [kvm_hv]
    [  635.280507] [c0000007e9183c40] [c000000000113c0c] process_one_work+0x1dc/0x680
    [  635.280587] [c0000007e9183ce0] [c000000000114250] worker_thread+0x1a0/0x520
    [  635.280655] [c0000007e9183d80] [c00000000012010c] kthread+0xec/0x100
    [  635.280724] [c0000007e9183e30] [c00000000000a4b8] ret_from_kernel_thread+0x5c/0xa4
    [  635.280814] Instruction dump:
    [  635.280880] 7c0802a6 fba1ffe8 fbc1fff0 7cbd2b78 fbe1fff8 7c9e2378 7c7f1b78
    f8010010
    [  635.281099] f821ff81 e8a50008 7fa52040 40de00b8 <e8be0000> 7fbd2840 40de008c
    7fbff040
    [  635.281324] ---[ end trace b628b73449719b9d ]---
    
    Fixes: b5baa6877315 ("KVM: PPC: Book3S HV: KVM-HV HPT resizing implementation")
    Signed-off-by: Serhii Popovych <spopovyc@redhat.com>
    [dwg: Replaced BUG_ON()s with WARN_ONs() and reworded commit message
     for clarity]
    Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5584082e854f3ac81bb9ad7ee663a4594ca21bdd
Author: Serhii Popovych <spopovyc@redhat.com>
Date:   Mon Dec 4 09:36:41 2017 -0500

    KVM: PPC: Book3S HV: Drop prepare_done from struct kvm_resize_hpt
    
    commit 3073774e638ef18d222465fe92bfc8fccb90d288 upstream.
    
    Currently the kvm_resize_hpt structure has two fields relevant to the
    state of an ongoing resize: 'prepare_done', which indicates whether
    the worker thread has completed or not, and 'error' which indicates
    whether it was successful or not.
    
    Since the success/failure isn't known until completion, this is
    confusingly redundant.  This patch consolidates the information into
    just the 'error' value: -EBUSY indicates the worked is still in
    progress, other negative values indicate (completed) failure, 0
    indicates successful completion.
    
    As a bonus this reduces size of struct kvm_resize_hpt by
    __alignof__(struct kvm_hpt_info) and saves few bytes of code.
    
    While there correct comment in struct kvm_resize_hpt which references
    a non-existent semaphore (leftover from an early draft).
    
    Assert with WARN_ON() in case of HPT allocation thread work runs more
    than once for resize request or resize_hpt_allocate() returns -EBUSY
    that is treated specially.
    
    Change comparison against zero to make checkpatch.pl happy.
    
    Signed-off-by: Serhii Popovych <spopovyc@redhat.com>
    [dwg: Changed BUG_ON()s to WARN_ON()s and altered commit message for
     clarity]
    Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fead4387523df571c01b5cb9f88609f0e49c3feb
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Wed Nov 22 14:42:21 2017 +1100

    KVM: PPC: Book3S PR: Fix WIMG handling under pHyp
    
    commit 6c7d47c33ed323f14f2a3b8de925e831dbaa4e69 upstream.
    
    Commit 96df226 ("KVM: PPC: Book3S PR: Preserve storage control bits")
    added code to preserve WIMG bits but it missed 2 special cases:
    - a magic page in kvmppc_mmu_book3s_64_xlate() and
    - guest real mode in kvmppc_handle_pagefault().
    
    For these ptes, WIMG was 0 and pHyp failed on these causing a guest to
    stop in the very beginning at NIP=0x100 (due to bd9166ffe "KVM: PPC:
    Book3S PR: Exit KVM on failed mapping").
    
    According to LoPAPR v1.1 14.5.4.1.2 H_ENTER:
    
     The hypervisor checks that the WIMG bits within the PTE are appropriate
     for the physical page number else H_Parameter return. (For System Memory
     pages WIMG=0010, or, 1110 if the SAO option is enabled, and for IO pages
     WIMG=01**.)
    
    This hence initializes WIMG to non-zero value HPTE_R_M (0x10), as expected
    by pHyp.
    
    [paulus@ozlabs.org - fix compile for 32-bit]
    
    Fixes: 96df226 "KVM: PPC: Book3S PR: Preserve storage control bits"
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Tested-by: Ruediger Oertel <ro@suse.de>
    Reviewed-by: Greg Kurz <groug@kaod.org>
    Tested-by: Greg Kurz <groug@kaod.org>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 679090724f774c9865b10ebc2a4b6945ebf3cb1d
Author: Andrew Honig <ahonig@google.com>
Date:   Wed Jan 10 10:12:03 2018 -0800

    KVM: x86: Add memory barrier on vmcs field lookup
    
    commit 75f139aaf896d6fdeec2e468ddfa4b2fe469bf40 upstream.
    
    This adds a memory barrier when performing a lookup into
    the vmcs_field_to_offset_table.  This is related to
    CVE-2017-5753.
    
    Signed-off-by: Andrew Honig <ahonig@google.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d98309da07fdce96f13534494f4c8210325f48fd
Author: Jia Zhang <qianyue.zj@alibaba-inc.com>
Date:   Mon Jan 1 10:04:47 2018 +0800

    x86/microcode/intel: Extend BDW late-loading with a revision check
    
    commit b94b7373317164402ff7728d10f7023127a02b60 upstream.
    
    Instead of blacklisting all model 79 CPUs when attempting a late
    microcode loading, limit that only to CPUs with microcode revisions <
    0x0b000021 because only on those late loading may cause a system hang.
    
    For such processors either:
    
    a) a BIOS update which might contain a newer microcode revision
    
    or
    
    b) the early microcode loading method
    
    should be considered.
    
    Processors with revisions 0x0b000021 or higher will not experience such
    hangs.
    
    For more details, see erratum BDF90 in document #334165 (Intel Xeon
    Processor E7-8800/4800 v4 Product Family Specification Update) from
    September 2017.
    
    [ bp: Heavily massage commit message and pr_* statements. ]
    
    Fixes: 723f2828a98c ("x86/microcode/intel: Disable late loading on model 79")
    Signed-off-by: Jia Zhang <qianyue.zj@alibaba-inc.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Tony Luck <tony.luck@intel.com>
    Cc: x86-ml <x86@kernel.org>
    Link: http://lkml.kernel.org/r/1514772287-92959-1-git-send-email-qianyue.zj@alibaba-inc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ec160c5f0a7fbf153a4c0dd8cd520f476b46aa0
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Thu Jan 4 09:19:13 2018 +0200

    iwlwifi: pcie: fix DMA memory mapping / unmapping
    
    commit 943309d4aad6732b905f3f500e6e17e33c211494 upstream.
    
    22000 devices (previously referenced as A000) can support
    short transmit queues. This means that we have less DMA
    descriptors (TFD) for those shorter queues.
    Previous devices must still have 256 TFDs for each queue
    even if those 256 TFDs point to fewer buffers.
    
    When I introduced support for the short queues for 22000
    I broke older devices by assuming that they can also have
    less TFDs in their queues. This led to several problems:
    
    1) the payload of the commands weren't unmapped properly
       which caused the SWIOTLB to complain at some point.
    2) the hardware could get confused and we get hardware
       crashes.
    
    The corresponding bugzilla entries are:
    
    https://bugzilla.kernel.org/show_bug.cgi?id=198201
    https://bugzilla.kernel.org/show_bug.cgi?id=198265
    
    Fixes: 4ecab5616023 ("iwlwifi: pcie: support short Tx queues for A000 device family")
    Reviewed-by: Sharon, Sara <sara.sharon@intel.com>
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b5e3dbf479614c79e03cc2ba361d261e8b0f340
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Thu Dec 21 15:35:11 2017 +0100

    rbd: set max_segments to USHRT_MAX
    
    commit 21acdf45f4958135940f0b4767185cf911d4b010 upstream.
    
    Commit d3834fefcfe5 ("rbd: bump queue_max_segments") bumped
    max_segments (unsigned short) to max_hw_sectors (unsigned int).
    max_hw_sectors is set to the number of 512-byte sectors in an object
    and overflows unsigned short for 32M (largest possible) objects, making
    the block layer resort to handing us single segment (i.e. single page
    or even smaller) bios in that case.
    
    Fixes: d3834fefcfe5 ("rbd: bump queue_max_segments")
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e068cdee6347eda64a2ecf60c14382bb465175a2
Author: Florian Margaine <florian@platform.sh>
Date:   Wed Dec 13 16:43:59 2017 +0100

    rbd: reacquire lock should update lock owner client id
    
    commit edd8ca8015800b354453b891d38960f3a474b7e4 upstream.
    
    Otherwise, future operations on this RBD using exclusive-lock are
    going to require the lock from a non-existent client id.
    
    Fixes: 14bb211d324d ("rbd: support updating the lock cookie without releasing the lock")
    Link: http://tracker.ceph.com/issues/19929
    Signed-off-by: Florian Margaine <florian@platform.sh>
    [idryomov@gmail.com: rbd_set_owner_cid() call, __rbd_lock() helper]
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 961becd84df940157cced59d2d3b6ab8be70fa9a
Author: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
Date:   Wed Dec 13 11:33:00 2017 +0900

    mmc: renesas_sdhi: Add MODULE_LICENSE
    
    commit 967a6a07e95c58eb9c1581d22a1d9c2d1929843f upstream.
    
    The following error occurs when loading renesas_sdhi_core.c module,
    so add MODULE_LICENSE("GPL v2").
    
     renesas_sdhi_core: module license 'unspecified' taints kernel.
    
    Signed-off-by: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
    Fixes: 9d08428afb72 ("mmc: renesas-sdhi: make renesas_sdhi_sys_dmac main module file")
    [Shimoda: Added Fixes tag and Cc to the stable ML]
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Acked-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3662493dbdad17c3d144cfb73d0c897ccc28cc52
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 29 14:30:19 2017 -0600

    crypto: algapi - fix NULL dereference in crypto_remove_spawns()
    
    commit 9a00674213a3f00394f4e3221b88f2d21fc05789 upstream.
    
    syzkaller triggered a NULL pointer dereference in crypto_remove_spawns()
    via a program that repeatedly and concurrently requests AEADs
    "authenc(cmac(des3_ede-asm),pcbc-aes-aesni)" and hashes "cmac(des3_ede)"
    through AF_ALG, where the hashes are requested as "untested"
    (CRYPTO_ALG_TESTED is set in ->salg_mask but clear in ->salg_feat; this
    causes the template to be instantiated for every request).
    
    Although AF_ALG users really shouldn't be able to request an "untested"
    algorithm, the NULL pointer dereference is actually caused by a
    longstanding race condition where crypto_remove_spawns() can encounter
    an instance which has had spawn(s) "grabbed" but hasn't yet been
    registered, resulting in ->cra_users still being NULL.
    
    We probably should properly initialize ->cra_users earlier, but that
    would require updating many templates individually.  For now just fix
    the bug in a simple way that can easily be backported: make
    crypto_remove_spawns() treat a NULL ->cra_users list as empty.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d01c7936966982fa6723ec80c018c5e89045fde3
Author: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date:   Fri Dec 15 14:23:10 2017 -0500

    membarrier: Disable preemption when calling smp_call_function_many()
    
    commit 541676078b52f365f53d46ee5517d305cd1b6350 upstream.
    
    smp_call_function_many() requires disabling preemption around the call.
    
    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Andrea Parri <parri.andrea@gmail.com>
    Cc: Andrew Hunter <ahh@google.com>
    Cc: Avi Kivity <avi@scylladb.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Boqun Feng <boqun.feng@gmail.com>
    Cc: Dave Watson <davejwatson@fb.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Maged Michael <maged.michael@gmail.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Paul E . McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171215192310.25293-1-mathieu.desnoyers@efficios.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 208c17515130e2d97ab81a52ca0afb1c40722f7b
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Tue Dec 26 23:15:17 2017 +0000

    sfp: fix sfp-bus oops when removing socket/upstream
    
    
    [ Upstream commit 0b2122e4934c7783d336397864e34ee53aad0965 ]
    
    When we remove a socket or upstream, and the other side isn't
    registered, we dereference a NULL pointer, causing a kernel oops.
    Fix this.
    
    Fixes: ce0aa27ff3f6 ("sfp: add sfp-bus to bridge between network devices and sfp cages")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce66902de86a310da28f4ea0a5da0c7bd7c6745b
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Mon Dec 25 09:05:33 2017 +0100

    mlxsw: spectrum: Relax sanity checks during enslavement
    
    
    [ Upstream commit 90045fc9c78855bdc625a0ab185d97b72a937613 ]
    
    Since commit 25cc72a33835 ("mlxsw: spectrum: Forbid linking to devices that
    have uppers") the driver forbids enslavement to netdevs that already
    have uppers of their own, as this can result in various ordering
    problems.
    
    This requirement proved to be too strict for some users who need to be
    able to enslave ports to a bridge that already has uppers. In this case,
    we can allow the enslavement if the bridge is already known to us, as
    any configuration performed on top of the bridge was already reflected
    to the device.
    
    Fixes: 25cc72a33835 ("mlxsw: spectrum: Forbid linking to devices that have uppers")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-by: Alexander Petrovskiy <alexpe@mellanox.com>
    Tested-by: Alexander Petrovskiy <alexpe@mellanox.com>
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c21439334069b0cf8cac9f9115918b9b3a11287
Author: Mathieu Xhonneux <m.xhonneux@gmail.com>
Date:   Wed Jan 10 13:35:49 2018 +0000

    ipv6: sr: fix TLVs not being copied using setsockopt
    
    
    [ Upstream commit ccc12b11c5332c84442ef120dcd631523be75089 ]
    
    Function ipv6_push_rthdr4 allows to add an IPv6 Segment Routing Header
    to a socket through setsockopt, but the current implementation doesn't
    copy possible TLVs at the end of the SRH received from userspace.
    
    Therefore, the execution of the following branch if (sr_has_hmac(sr_phdr))
    { ... } will never complete since the len and type fields of a possible
    HMAC TLV are not copied, hence seg6_get_tlv_hmac will return an error,
    and the HMAC will not be computed.
    
    This commit adds a memcpy in case TLVs have been appended to the SRH.
    
    Fixes: a149e7c7ce81 ("ipv6: sr: add support for SRH injection through setsockopt")
    Acked-by: David Lebrun <dlebrun@google.com>
    Signed-off-by: Mathieu Xhonneux <m.xhonneux@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71e7f85e10f189f4aa0162d6eea4a7163a48e3a6
Author: Roi Dayan <roid@mellanox.com>
Date:   Tue Dec 26 07:48:51 2017 +0200

    net/sched: Fix update of lastuse in act modules implementing stats_update
    
    
    [ Upstream commit 3bb23421a504f01551b7cb9dff0e41dbf16656b0 ]
    
    We need to update lastuse to to the most updated value between what
    is already set and the new value.
    If HW matching fails, i.e. because of an issue, the stats are not updated
    but it could be that software did match and updated lastuse.
    
    Fixes: 5712bf9c5c30 ("net/sched: act_mirred: Use passed lastuse argument")
    Fixes: 9fea47d93bcc ("net/sched: act_gact: Update statistics when offloaded to hardware")
    Signed-off-by: Roi Dayan <roid@mellanox.com>
    Reviewed-by: Paul Blakey <paulb@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ef57b767e1b70ca594d5c6f7de687326cedcc7f
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Mon Dec 25 08:57:35 2017 +0100

    mlxsw: spectrum_router: Fix NULL pointer deref
    
    
    [ Upstream commit 8764a8267b128405cf383157d5e9a4a3735d2409 ]
    
    When we remove the neighbour associated with a nexthop we should always
    refuse to write the nexthop to the adjacency table. Regardless if it is
    already present in the table or not.
    
    Otherwise, we risk dereferencing the NULL pointer that was set instead
    of the neighbour.
    
    Fixes: a7ff87acd995 ("mlxsw: spectrum_router: Implement next-hop routing")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-by: Alexander Petrovskiy <alexpe@mellanox.com>
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7e3ea5326cb668f457624476d6dc924c6585658
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Fri Dec 29 10:02:52 2017 -0800

    ethtool: do not print warning for applications using legacy API
    
    
    [ Upstream commit 71891e2dab6b55a870f8f7735e44a2963860b5c6 ]
    
    In kernel log ths message appears on every boot:
     "warning: `NetworkChangeNo' uses legacy ethtool link settings API,
      link modes are only partially reported"
    
    When ethtool link settings API changed, it started complaining about
    usages of old API. Ironically, the original patch was from google but
    the application using the legacy API is chrome.
    
    Linux ABI is fixed as much as possible. The kernel must not break it
    and should not complain about applications using legacy API's.
    This patch just removes the warning since using legacy API's
    in Linux is perfectly acceptable.
    
    Fixes: 3f1ac7a700d0 ("net: ethtool: add new ETHTOOL_xLINKSETTINGS API")
    Signed-off-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: David Decotigny <decot@googlers.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3ccc74c8998de058f40fecff71ada3dc49157b3
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 10 03:45:49 2018 -0800

    ipv6: fix possible mem leaks in ipv6_make_skb()
    
    
    [ Upstream commit 862c03ee1deb7e19e0f9931682e0294ecd1fcaf9 ]
    
    ip6_setup_cork() might return an error, while memory allocations have
    been done and must be rolled back.
    
    Fixes: 6422398c2ab0 ("ipv6: introduce ipv6_make_skb")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Reported-by: Mike Maloney <maloney@google.com>
    Acked-by:  Mike Maloney <maloney@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 705813e942332a4eb63f0cfcb3cd054b4e1d34a7
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Thu Jan 4 21:06:49 2018 +0300

    sh_eth: fix SH7757 GEther initialization
    
    
    [ Upstream commit 5133550296d43236439494aa955bfb765a89f615 ]
    
    Renesas  SH7757 has 2 Fast and 2 Gigabit Ether controllers, while the
    'sh_eth' driver can only reset and initialize TSU of the first controller
    pair. Shimoda-san tried to solve that adding the 'needs_init' member to the
    'struct sh_eth_plat_data', however the platform code still never sets this
    flag. I think  that we can infer this information from the 'devno' variable
    (set  to 'platform_device::id') and reset/init the Ether controller pair
    only for an even 'devno'; therefore 'sh_eth_plat_data::needs_init' can be
    removed...
    
    Fixes: 150647fb2c31 ("net: sh_eth: change the condition of initialization")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db21b74346d7cbbf4cca94fac6b634b3e52e9d56
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Wed Jan 3 16:46:29 2018 +0100

    net: stmmac: enable EEE in MII, GMII or RGMII only
    
    
    [ Upstream commit 879626e3a52630316d817cbda7cec9a5446d1d82 ]
    
    Note in the databook - Section 4.4 - EEE :
    " The EEE feature is not supported when the MAC is configured to use the
    TBI, RTBI, SMII, RMII or SGMII single PHY interface. Even if the MAC
    supports multiple PHY interfaces, you should activate the EEE mode only
    when the MAC is operating with GMII, MII, or RGMII interface."
    
    Applying this restriction solves a stability issue observed on Amlogic
    gxl platforms operating with RMII interface and the internal PHY.
    
    Fixes: 83bf79b6bb64 ("stmmac: disable at run-time the EEE if not supported")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Tested-by: Arnaud Patard <arnaud.patard@rtp-net.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47b5886f7310716dfb4b20f4cdc888fb59932b79
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Wed Jan 3 20:09:49 2018 +0300

    sh_eth: fix TSU resource handling
    
    
    [ Upstream commit dfe8266b8dd10e12a731c985b725fcf7f0e537f0 ]
    
    When switching  the driver to the managed device API,  I managed to break
    the  case of a  dual Ether devices sharing a single TSU: the 2nd Ether port
    wouldn't probe. Iwamatsu-san has tried to fix this but his patch was buggy
    and he then dropped the ball...
    
    The solution is to  limit calling devm_request_mem_region() to the first
    of  the two  ports  sharing the same TSU, so devm_ioremap_resource() can't
    be used anymore for the TSU resource...
    
    Fixes: d5e07e69218f ("sh_eth: use managed device API")
    Reported-by: Nobuhiro Iwamatsu <nobuhiro.iwamatsu.yj@renesas.com>
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d47da4eb8a60ce99149848ca03ca6c50e1a68bc4
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Fri Jan 5 11:17:18 2018 -0200

    sctp: fix the handling of ICMP Frag Needed for too small MTUs
    
    
    [ Upstream commit b6c5734db07079c9410147b32407f2366d584e6c ]
    
    syzbot reported a hang involving SCTP, on which it kept flooding dmesg
    with the message:
    [  246.742374] sctp: sctp_transport_update_pmtu: Reported pmtu 508 too
    low, using default minimum of 512
    
    That happened because whenever SCTP hits an ICMP Frag Needed, it tries
    to adjust to the new MTU and triggers an immediate retransmission. But
    it didn't consider the fact that MTUs smaller than the SCTP minimum MTU
    allowed (512) would not cause the PMTU to change, and issued the
    retransmission anyway (thus leading to another ICMP Frag Needed, and so
    on).
    
    As IPv4 (ip_rt_min_pmtu=556) and IPv6 (IPV6_MIN_MTU=1280) minimum MTU
    are higher than that, sctp_transport_update_pmtu() is changed to
    re-fetch the PMTU that got set after our request, and with that, detect
    if there was an actual change or not.
    
    The fix, thus, skips the immediate retransmission if the received ICMP
    resulted in no change, in the hope that SCTP will select another path.
    
    Note: The value being used for the minimum MTU (512,
    SCTP_DEFAULT_MINSEGMENT) is not right and instead it should be (576,
    SCTP_MIN_PMTU), but such change belongs to another patch.
    
    Changes from v1:
    - do not disable PMTU discovery, in the light of commit
    06ad391919b2 ("[SCTP] Don't disable PMTU discovery when mtu is small")
    and as suggested by Xin Long.
    - changed the way to break the rtx loop by detecting if the icmp
      resulted in a change or not
    Changes from v2:
    none
    
    See-also: https://lkml.org/lkml/2017/12/22/811
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4bab9461f89cde8ba11668cbb27a8a79b741416
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Fri Jan 5 11:17:17 2018 -0200

    sctp: do not retransmit upon FragNeeded if PMTU discovery is disabled
    
    
    [ Upstream commit cc35c3d1edf7a8373a1a5daa80a912dec96a9cd5 ]
    
    Currently, if PMTU discovery is disabled on a given transport, but the
    configured value is higher than the actual PMTU, it is likely that we
    will get some icmp Frag Needed. The issue is, if PMTU discovery is
    disabled, we won't update the information and will issue a
    retransmission immediately, which may very well trigger another ICMP,
    and another retransmission, leading to a loop.
    
    The fix is to simply not trigger immediate retransmissions if PMTU
    discovery is disabled on the given transport.
    
    Changes from v2:
    - updated stale comment, noticed by Xin Long
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d48c6464c50ef8e7eac7a04bbd2afcc23f020b21
Author: Fugang Duan <fugang.duan@nxp.com>
Date:   Thu Jan 4 10:47:20 2018 +0800

    net: fec: free/restore resource in related probe error pathes
    
    
    [ Upstream commit d1616f07e8f1a4a490d1791316d4a68906b284aa ]
    
    Fixes in probe error path:
    - Restore dev_id before failed_ioremap path.
      Fixes: ("net: fec: restore dev_id in the cases of probe error")
    - Call of_node_put(phy_node) before failed_phy path.
      Fixes: ("net: fec: Support phys probed from devicetree and fixed-link")
    
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7e73b10d690c5352cb11b1941a09e4f3dc4c8ce
Author: Fugang Duan <fugang.duan@nxp.com>
Date:   Wed Jan 3 10:39:30 2018 +0800

    net: fec: defer probe if regulator is not ready
    
    
    [ Upstream commit 3f38c683033a9a0a2738e7067f449deefabfa3ef ]
    
    Defer probe if regulator is not ready. E.g. some regulator is fixed
    regulator controlled by i2c expander gpio, the i2c device may be probed
    after the driver, then it should handle the case of defer probe error.
    
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90437795272dfe4b5abaa6dcc612ed0b304b4fb5
Author: Fugang Duan <fugang.duan@nxp.com>
Date:   Wed Jan 3 10:39:29 2018 +0800

    net: fec: restore dev_id in the cases of probe error
    
    
    [ Upstream commit e90f686b4358d7d7e5dbaa48b8e78c9a4e41826e ]
    
    The static variable dev_id always plus one before netdev registerred.
    It should restore the dev_id value in the cases of probe error.
    
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5edbe3c0249f54578636b71377861d579b1781cf
Author: Mohamed Ghannam <simo.ghannam@gmail.com>
Date:   Wed Jan 3 21:06:06 2018 +0000

    RDS: null pointer dereference in rds_atomic_free_op
    
    
    [ Upstream commit 7d11f77f84b27cef452cee332f4e469503084737 ]
    
    set rm->atomic.op_active to 0 when rds_pin_pages() fails
    or the user supplied address is invalid,
    this prevents a NULL pointer usage in rds_atomic_free_op()
    
    Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d127d15ad2f9f33af788f1edf720ba29317f55b
Author: Mohamed Ghannam <simo.ghannam@gmail.com>
Date:   Tue Jan 2 19:44:34 2018 +0000

    RDS: Heap OOB write in rds_message_alloc_sgs()
    
    
    [ Upstream commit c095508770aebf1b9218e77026e48345d719b17c ]
    
    When args->nr_local is 0, nr_pages gets also 0 due some size
    calculation via rds_rm_size(), which is later used to allocate
    pages for DMA, this bug produces a heap Out-Of-Bound write access
    to a specific memory region.
    
    Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5837f963300b63264dd1baf32e96063e807ca28c
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Tue Dec 26 23:15:12 2017 +0000

    phylink: ensure we report link down when LOS asserted
    
    
    [ Upstream commit ac817f5ad066697e4d4d35ec68c974eba2c5f17a ]
    
    Although we disable the netdev carrier, we fail to report in the kernel
    log that the link went down.  Fix this.
    
    Fixes: 9525ae83959b ("phylink: add phylink infrastructure")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecb89764ef039dfb651d868318e6ee3deb7e172f
Author: Andrii Vladyka <tulup@mail.ru>
Date:   Thu Jan 4 13:09:17 2018 +0200

    net: core: fix module type in sock_diag_bind
    
    
    [ Upstream commit b8fd0823e0770c2d5fdbd865bccf0d5e058e5287 ]
    
    Use AF_INET6 instead of AF_INET in IPv6-related code path
    
    Signed-off-by: Andrii Vladyka <tulup@mail.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b841bff14947b92523a5858db9d401f0e9588ed0
Author: Eli Cooper <elicooper@gmx.com>
Date:   Mon Dec 25 10:43:49 2017 +0800

    ip6_tunnel: disable dst caching if tunnel is dual-stack
    
    
    [ Upstream commit 23263ec86a5f44312d2899323872468752324107 ]
    
    When an ip6_tunnel is in mode 'any', where the transport layer
    protocol can be either 4 or 41, dst_cache must be disabled.
    
    This is because xfrm policies might apply to only one of the two
    protocols. Caching dst would cause xfrm policies for one protocol
    incorrectly used for the other.
    
    Signed-off-by: Eli Cooper <elicooper@gmx.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58a8bb5eef0e2bedeef8d01f4176e604ff04a07a
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Tue Jan 9 13:40:41 2018 -0800

    8021q: fix a memory leak for VLAN 0 device
    
    
    [ Upstream commit 78bbb15f2239bc8e663aa20bbe1987c91a0b75f6 ]
    
    A vlan device with vid 0 is allow to creat by not able to be fully
    cleaned up by unregister_vlan_dev() which checks for vlan_id!=0.
    
    Also, VLAN 0 is probably not a valid number and it is kinda
    "reserved" for HW accelerating devices, but it is probably too
    late to reject it from creation even if makes sense. Instead,
    just remove the check in unregister_vlan_dev().
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Fixes: ad1afb003939 ("vlan_dev: VLAN 0 should be treated as "no vlan tag" (802.1p packet)")
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ed11aaf6f2a72c1923c777c4edb670cfa286fcf
Author: Vikas C Sajjan <vikas.cha.sajjan@hpe.com>
Date:   Thu Nov 16 21:43:45 2017 +0530

    x86/acpi: Reduce code duplication in mp_override_legacy_irq()
    
    commit 4ee2ec1b122599f7b10c849fa7915cebb37b7edb upstream.
    
    The new function mp_register_ioapic_irq() is a subset of the code in
    mp_override_legacy_irq().
    
    Replace the code duplication by invoking mp_register_ioapic_irq() from
    mp_override_legacy_irq().
    
    Signed-off-by: Vikas C Sajjan <vikas.cha.sajjan@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: linux-pm@vger.kernel.org
    Cc: kkamagui@gmail.com
    Cc: linux-acpi@vger.kernel.org
    Link: https://lkml.kernel.org/r/1510848825-21965-3-git-send-email-vikas.cha.sajjan@hpe.com
    Cc: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2363bb2b5238dd5f02585b21102eacc5f4789bc
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 4 17:38:54 2018 +0100

    ALSA: aloop: Fix racy hw constraints adjustment
    
    commit 898dfe4687f460ba337a01c11549f87269a13fa2 upstream.
    
    The aloop driver tries to update the hw constraints of the connected
    target on the cable of the opened PCM substream.  This is done by
    adding the extra hw constraints rules referring to the substream
    runtime->hw fields, while the other substream may update the runtime
    hw of another side on the fly.
    
    This is, however, racy and may result in the inconsistent values when
    both PCM streams perform the prepare concurrently.  One of the reason
    is that it overwrites the other's runtime->hw field; which is not only
    racy but also broken when it's called before the open of another side
    finishes.  And, since the reference to runtime->hw isn't protected,
    the concurrent write may give the partial value update and become
    inconsistent.
    
    This patch is an attempt to fix and clean up:
    - The prepare doesn't change the runtime->hw of other side any longer,
      but only update the cable->hw that is referred commonly.
    - The extra rules refer to the loopback_pcm object instead of the
      runtime->hw.  The actual hw is deduced from cable->hw.
    - The extra rules take the cable_lock to protect against the race.
    
    Fixes: b1c73fc8e697 ("ALSA: snd-aloop: Fix hw_params restrictions and checking")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ea0bfaa76e90d98ec1bd718c9c03df24881afd5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 5 16:15:33 2018 +0100

    ALSA: aloop: Fix inconsistent format due to incomplete rule
    
    commit b088b53e20c7d09b5ab84c5688e609f478e5c417 upstream.
    
    The extra hw constraint rule for the formats the aloop driver
    introduced has a slight flaw, where it doesn't return a positive value
    when the mask got changed.  It came from the fact that it's basically
    a copy&paste from snd_hw_constraint_mask64().  The original code is
    supposed to be a single-shot and it modifies the mask bits only once
    and never after, while what we need for aloop is the dynamic hw rule
    that limits the mask bits.
    
    This difference results in the inconsistent state, as the hw_refine
    doesn't apply the dependencies fully.  The worse and surprisingly
    result is that it causes a crash in OSS emulation when multiple
    full-duplex reads/writes are performed concurrently (I leave why it
    triggers Oops to readers as a homework).
    
    For fixing this, replace a few open-codes with the standard
    snd_mask_*() macros.
    
    Reported-by: syzbot+3902b5220e8ca27889ca@syzkaller.appspotmail.com
    Fixes: b1c73fc8e697 ("ALSA: snd-aloop: Fix hw_params restrictions and checking")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd32d7c4d2349ec5c0ffb0898c29bd3f28daf552
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 5 16:09:47 2018 +0100

    ALSA: aloop: Release cable upon open error path
    
    commit 9685347aa0a5c2869058ca6ab79fd8e93084a67f upstream.
    
    The aloop runtime object and its assignment in the cable are left even
    when opening a substream fails.  This doesn't mean any memory leak,
    but it still keeps the invalid pointer that may be referred by the
    another side of the cable spontaneously, which is a potential Oops
    cause.
    
    Clean up the cable assignment and the empty cable upon the error path
    properly.
    
    Fixes: 597603d615d2 ("ALSA: introduce the snd-aloop module for the PCM loopback")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b9c7ed68db295f82e91654ba3ff3ee1346c358d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 8 14:03:53 2018 +0100

    ALSA: pcm: Allow aborting mutex lock at OSS read/write loops
    
    commit 900498a34a3ac9c611e9b425094c8106bdd7dc1c upstream.
    
    PCM OSS read/write loops keep taking the mutex lock for the whole
    read/write, and this might take very long when the exceptionally high
    amount of data is given.  Also, since it invokes with mutex_lock(),
    the concurrent read/write becomes unbreakable.
    
    This patch tries to address these issues by replacing mutex_lock()
    with mutex_lock_interruptible(), and also splits / re-takes the lock
    at each read/write period chunk, so that it can switch the context
    more finely if requested.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28ac4032652f7dcc65637bfa3f0c539ac6c772de
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 8 13:58:31 2018 +0100

    ALSA: pcm: Abort properly at pending signal in OSS read/write loops
    
    commit 29159a4ed7044c52e3e2cf1a9fb55cec4745c60b upstream.
    
    The loops for read and write in PCM OSS emulation have no proper check
    of pending signals, and they keep processing even after user tries to
    break.  This results in a very long delay, often seen as RCU stall
    when a huge unprocessed bytes remain queued.  The bug could be easily
    triggered by syzkaller.
    
    As a simple workaround, this patch adds the proper check of pending
    signals and aborts the loop appropriately.
    
    Reported-by: syzbot+993cb4cfcbbff3947c21@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 835004dc452aa5d0a2c25d65d9026f1d0a637ed4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 4 16:39:27 2018 +0100

    ALSA: pcm: Add missing error checks in OSS emulation plugin builder
    
    commit 6708913750344a900f2e73bfe4a4d6dbbce4fe8d upstream.
    
    In the OSS emulation plugin builder where the frame size is parsed in
    the plugin chain, some places miss the possible errors returned from
    the plugin src_ or dst_frames callback.
    
    This patch papers over such places.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef810a3d7d4e5c3d5a84e1169157adc11f81c6cd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 3 15:16:30 2018 +0100

    ALSA: pcm: Workaround for weird PulseAudio behavior on rewind error
    
    commit fb51f1cd06f9ced7b7085a2a4636375d520431ca upstream.
    
    The commit 9027c4639ef1 ("ALSA: pcm: Call ack() whenever appl_ptr is
    updated") introduced the possible error code returned from the PCM
    rewind ioctl.  Basically the change was for handling the indirect PCM
    more correctly, but ironically, it caused rather a side-effect:
    PulseAudio gets pissed off when receiving an error from rewind, throws
    everything away and stops processing further, resulting in the
    silence.
    
    It's clearly a failure in the application side, so the best would be
    to fix that bug in PA.  OTOH, PA is mostly the only user of the rewind
    feature, so it's not good to slap the sole customer.
    
    This patch tries to mitigate the situation: instead of returning an
    error, now the rewind ioctl returns zero when the driver can't rewind.
    It indicates that no rewind was performed, so the behavior is
    consistent, at least.
    
    Fixes: 9027c4639ef1 ("ALSA: pcm: Call ack() whenever appl_ptr is updated")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1069cfedae62190bc058a4c372fa60bcf37f75c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 1 09:50:50 2018 +0100

    ALSA: pcm: Remove incorrect snd_BUG_ON() usages
    
    commit fe08f34d066f4404934a509b6806db1a4f700c86 upstream.
    
    syzkaller triggered kernel warnings through PCM OSS emulation at
    closing a stream:
      WARNING: CPU: 0 PID: 3502 at sound/core/pcm_lib.c:1635
      snd_pcm_hw_param_first+0x289/0x690 sound/core/pcm_lib.c:1635
      Call Trace:
      ....
       snd_pcm_hw_param_near.constprop.27+0x78d/0x9a0 sound/core/oss/pcm_oss.c:457
       snd_pcm_oss_change_params+0x17d3/0x3720 sound/core/oss/pcm_oss.c:969
       snd_pcm_oss_make_ready+0xaa/0x130 sound/core/oss/pcm_oss.c:1128
       snd_pcm_oss_sync+0x257/0x830 sound/core/oss/pcm_oss.c:1638
       snd_pcm_oss_release+0x20b/0x280 sound/core/oss/pcm_oss.c:2431
       __fput+0x327/0x7e0 fs/file_table.c:210
       ....
    
    This happens while it tries to open and set up the aloop device
    concurrently.  The warning above (invoked from snd_BUG_ON() macro) is
    to detect the unexpected logical error where snd_pcm_hw_refine() call
    shouldn't fail.  The theory is true for the case where the hw_params
    config rules are static.  But for an aloop device, the hw_params rule
    condition does vary dynamically depending on the connected target;
    when another device is opened and changes the parameters, the device
    connected in another side is also affected, and it caused the error
    from snd_pcm_hw_refine().
    
    That is, the simplest "solution" for this is to remove the incorrect
    assumption of static rules, and treat such an error as a normal error
    path.  As there are a couple of other places using snd_BUG_ON()
    incorrectly, this patch removes these spurious snd_BUG_ON() calls.
    
    Reported-by: syzbot+6f11c7e2a1b91d466432@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5bdc95c0a0dc58c15dcd3ffb56497683f800c455
Author: Vikas C Sajjan <vikas.cha.sajjan@hpe.com>
Date:   Thu Nov 16 21:43:44 2017 +0530

    x86/acpi: Handle SCI interrupts above legacy space gracefully
    
    commit 252714155f04c5d16989cb3aadb85fd1b5772f99 upstream.
    
    Platforms which support only IOAPIC mode, pass the SCI information above
    the legacy space (0-15) via the FADT mechanism and not via MADT.
    
    In such cases mp_override_legacy_irq() which is invoked from
    acpi_sci_ioapic_setup() to register SCI interrupts fails for interrupts
    greater equal 16, since it is meant to handle only the legacy space and
    emits error "Invalid bus_irq %u for legacy override".
    
    Add a new function to handle SCI interrupts >= 16 and invoke it
    conditionally in acpi_sci_ioapic_setup().
    
    The code duplication due to this new function will be cleaned up in a
    separate patch.
    
    Co-developed-by: Sunil V L <sunil.vl@hpe.com>
    Signed-off-by: Vikas C Sajjan <vikas.cha.sajjan@hpe.com>
    Signed-off-by: Sunil V L <sunil.vl@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Abdul Lateef Attar <abdul-lateef.attar@hpe.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: linux-pm@vger.kernel.org
    Cc: kkamagui@gmail.com
    Cc: linux-acpi@vger.kernel.org
    Link: https://lkml.kernel.org/r/1510848825-21965-2-git-send-email-vikas.cha.sajjan@hpe.com
    Cc: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4659a641b36ed3f96c575ac1ef919a4d1c103936
Author: Steve Wise <swise@opengridcomputing.com>
Date:   Tue Dec 19 14:02:10 2017 -0800

    iw_cxgb4: when flushing, complete all wrs in a chain
    
    commit d14587334580bc94d3ee11e8320e0c157f91ae8f upstream.
    
    If a wr chain was posted and needed to be flushed, only the first
    wr in the chain was completed with FLUSHED status.  The rest were
    never completed.  This caused isert to hang on shutdown due to the
    missing completions which left iscsi IO commands referenced, stalling
    the shutdown.
    
    Fixes: 4fe7c2962e11 ("iw_cxgb4: refactor sq/rq drain logic")
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 623b8f8e90f0bb73e9566a6744b5c0577284977e
Author: Steve Wise <swise@opengridcomputing.com>
Date:   Tue Dec 19 10:29:25 2017 -0800

    iw_cxgb4: reflect the original WR opcode in drain cqes
    
    commit 96a236ed286776554fbd227c6d2876fd3b5dc65d upstream.
    
    The flush/drain logic was not retaining the original wr opcode in
    its completion.  This can cause problems if the application uses
    the completion opcode to make decisions.
    
    Use bit 10 of the CQE header word to indicate the CQE is a special
    drain completion, and save the original WR opcode in the cqe header
    opcode field.
    
    Fixes: 4fe7c2962e11 ("iw_cxgb4: refactor sq/rq drain logic")
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5042bde3ccbbd2326ac349a01109c8e56fc7bc4b
Author: Steve Wise <swise@opengridcomputing.com>
Date:   Thu Nov 30 09:41:56 2017 -0800

    iw_cxgb4: only clear the ARMED bit if a notification is needed
    
    commit 335ebf6fa35ca1c59b73f76fad19b249d3550e86 upstream.
    
    In __flush_qp(), the CQ ARMED bit was being cleared regardless of
    whether any notification is actually needed.  This resulted in the iser
    termination logic getting stuck in ib_drain_sq() because the CQ was not
    marked ARMED and thus the drain CQE notification wasn't triggered.
    
    This new bug was exposed when this commit was merged:
    
    commit cbb40fadd31c ("iw_cxgb4: only call the cq comp_handler when the
    cq is armed")
    
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f73c380ab3fea85e4fbc66f5cc6f9e6551b89f24
Author: Steve Wise <swise@opengridcomputing.com>
Date:   Thu Nov 9 07:21:26 2017 -0800

    iw_cxgb4: atomically flush the qp
    
    commit bc52e9ca74b9a395897bb640c6671b2cbf716032 upstream.
    
    __flush_qp() has a race condition where during the flush operation,
    the qp lock is released allowing another thread to possibly post a WR,
    which corrupts the queue state, possibly causing crashes.  The lock was
    released to preserve the cq/qp locking hierarchy of cq first, then qp.
    However releasing the qp lock is not necessary; both RQ and SQ CQ locks
    can be acquired first, followed by the qp lock, and then the RQ and SQ
    flushing can be done w/o unlocking.
    
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7f500dd4ff1f9032e1f73cdb0d4bc8cb6515bb3
Author: Steve Wise <swise@opengridcomputing.com>
Date:   Thu Nov 9 07:14:43 2017 -0800

    iw_cxgb4: only call the cq comp_handler when the cq is armed
    
    commit cbb40fadd31c6bbc59104e58ac95c6ef492d038b upstream.
    
    The ULPs completion handler should only be called if the CQ is
    armed for notification.
    
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 203c1e538eb6abf6298c2a4214c92022a204fdbc
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Jan 3 12:49:29 2018 +0100

    platform/x86: wmi: Call acpi_wmi_init() later
    
    commit 98b8e4e5c17bf87c1b18ed929472051dab39878c upstream.
    
    Calling acpi_wmi_init() at the subsys_initcall() level causes ordering
    issues to appear on some systems and they are difficult to reproduce,
    because there is no guaranteed ordering between subsys_initcall()
    calls, so they may occur in different orders on different systems.
    
    In particular, commit 86d9f48534e8 (mm/slab: fix kmemcg cache
    creation delayed issue) exposed one of these issues where genl_init()
    and acpi_wmi_init() are both called at the same initcall level, but
    the former must run before the latter so as to avoid a NULL pointer
    dereference.
    
    For this reason, move the acpi_wmi_init() invocation to the
    initcall_sync level which should still be early enough for things
    to work correctly in the WMI land.
    
    Link: https://marc.info/?t=151274596700002&r=1&w=2
    Reported-by: Jonathan McDowell <noodles@earth.li>
    Reported-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Tested-by: Jonathan McDowell <noodles@earth.li>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38244295d9e7663919d606cb9a005f7dee3b7799
Author: Jim Mattson <jmattson@google.com>
Date:   Wed Jan 3 14:31:38 2018 -0800

    kvm: vmx: Scrub hardware GPRs at VM-exit
    
    commit 0cb5b30698fdc8f6b4646012e3acb4ddce430788 upstream.
    
    Guest GPR values are live in the hardware GPRs at VM-exit.  Do not
    leave any guest values in hardware GPRs after the guest GPR values are
    saved to the vcpu_vmx structure.
    
    This is a partial mitigation for CVE 2017-5715 and CVE 2017-5753.
    Specifically, it defeats the Project Zero PoC for CVE 2017-5715.
    
    Suggested-by: Eric Northup <digitaleric@google.com>
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Eric Northup <digitaleric@google.com>
    Reviewed-by: Benjamin Serebrin <serebrin@google.com>
    Reviewed-by: Andrew Honig <ahonig@google.com>
    [Paolo: Add AMD bits, Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>]
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0196bdf590e3b0530a538c162a3d8fe46a363b5b
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Dec 20 07:09:19 2017 -0800

    cgroup: fix css_task_iter crash on CSS_TASK_ITER_PROC
    
    commit 74d0833c659a8a54735e5efdd44f4b225af68586 upstream.
    
    While teaching css_task_iter to handle skipping over tasks which
    aren't group leaders, bc2fb7ed089f ("cgroup: add @flags to
    css_task_iter_start() and implement CSS_TASK_ITER_PROCS") introduced a
    silly bug.
    
    CSS_TASK_ITER_PROCS is implemented by repeating
    css_task_iter_advance() while the advanced cursor is pointing to a
    non-leader thread.  However, the cursor variable, @l, wasn't updated
    when the iteration has to advance to the next css_set and the
    following repetition would operate on the terminal @l from the
    previous iteration which isn't pointing to a valid task leading to
    oopses like the following or infinite looping.
    
      BUG: unable to handle kernel NULL pointer dereference at 0000000000000254
      IP: __task_pid_nr_ns+0xc7/0xf0
      PGD 0 P4D 0
      Oops: 0000 [#1] SMP
      ...
      CPU: 2 PID: 1 Comm: systemd Not tainted 4.14.4-200.fc26.x86_64 #1
      Hardware name: System manufacturer System Product Name/PRIME B350M-A, BIOS 3203 11/09/2017
      task: ffff88c4baee8000 task.stack: ffff96d5c3158000
      RIP: 0010:__task_pid_nr_ns+0xc7/0xf0
      RSP: 0018:ffff96d5c315bd50 EFLAGS: 00010206
      RAX: 0000000000000000 RBX: ffff88c4b68c6000 RCX: 0000000000000250
      RDX: ffffffffa5e47960 RSI: 0000000000000000 RDI: ffff88c490f6ab00
      RBP: ffff96d5c315bd50 R08: 0000000000001000 R09: 0000000000000005
      R10: ffff88c4be006b80 R11: ffff88c42f1b8004 R12: ffff96d5c315bf18
      R13: ffff88c42d7dd200 R14: ffff88c490f6a510 R15: ffff88c4b68c6000
      FS:  00007f9446f8ea00(0000) GS:ffff88c4be680000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000254 CR3: 00000007f956f000 CR4: 00000000003406e0
      Call Trace:
       cgroup_procs_show+0x19/0x30
       cgroup_seqfile_show+0x4c/0xb0
       kernfs_seq_show+0x21/0x30
       seq_read+0x2ec/0x3f0
       kernfs_fop_read+0x134/0x180
       __vfs_read+0x37/0x160
       ? security_file_permission+0x9b/0xc0
       vfs_read+0x8e/0x130
       SyS_read+0x55/0xc0
       entry_SYSCALL_64_fastpath+0x1a/0xa5
      RIP: 0033:0x7f94455f942d
      RSP: 002b:00007ffe81ba2d00 EFLAGS: 00000293 ORIG_RAX: 0000000000000000
      RAX: ffffffffffffffda RBX: 00005574e2233f00 RCX: 00007f94455f942d
      RDX: 0000000000001000 RSI: 00005574e2321a90 RDI: 000000000000002b
      RBP: 0000000000000000 R08: 00005574e2321a90 R09: 00005574e231de60
      R10: 00007f94458c8b38 R11: 0000000000000293 R12: 00007f94458c8ae0
      R13: 00007ffe81ba3800 R14: 0000000000000000 R15: 00005574e2116560
      Code: 04 74 0e 89 f6 48 8d 04 76 48 8d 04 c5 f0 05 00 00 48 8b bf b8 05 00 00 48 01 c7 31 c0 48 8b 0f 48 85 c9 74 18 8b b2 30 08 00 00 <3b> 71 04 77 0d 48 c1 e6 05 48 01 f1 48 3b 51 38 74 09 5d c3 8b
      RIP: __task_pid_nr_ns+0xc7/0xf0 RSP: ffff96d5c315bd50
    
    Fix it by moving the initialization of the cursor below the repeat
    label.  While at it, rename it to @next for readability.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Fixes: bc2fb7ed089f ("cgroup: add @flags to css_task_iter_start() and implement CSS_TASK_ITER_PROCS")
    Reported-by: Laura Abbott <labbott@redhat.com>
    Reported-by: Bronek Kozicki <brok@incorrekt.com>
    Reported-by: George Amanakis <gamanakis@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cb77e7b1cc0fdac101c44994555a1d0e056e99d
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:56:54 2017 +0000

    MIPS: Disallow outsized PTRACE_SETREGSET NT_PRFPREG regset accesses
    
    commit c8c5a3a24d395b14447a9a89d61586a913840a3b upstream.
    
    Complement commit c23b3d1a5311 ("MIPS: ptrace: Change GP regset to use
    correct core dump register layout") and also reject outsized
    PTRACE_SETREGSET requests to the NT_PRFPREG regset, like with the
    NT_PRSTATUS regset.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: c23b3d1a5311 ("MIPS: ptrace: Change GP regset to use correct core dump register layout")
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17930/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5baee6683437639d095234bbb86d29696a8293f6
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:55:40 2017 +0000

    MIPS: Also verify sizeof `elf_fpreg_t' with PTRACE_SETREGSET
    
    commit 006501e039eec411842bb3150c41358867d320c2 upstream.
    
    Complement commit d614fd58a283 ("mips/ptrace: Preserve previous
    registers for short regset write") and like with the PTRACE_GETREGSET
    ptrace(2) request also apply a BUILD_BUG_ON check for the size of the
    `elf_fpreg_t' type in the PTRACE_SETREGSET request handler.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: d614fd58a283 ("mips/ptrace: Preserve previous registers for short regset write")
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17929/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 338ca3563dac0cf96b43936def3a6bc92bbc1c21
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:54:33 2017 +0000

    MIPS: Fix an FCSR access API regression with NT_PRFPREG and MSA
    
    commit be07a6a1188372b6d19a3307ec33211fc9c9439d upstream.
    
    Fix a commit 72b22bbad1e7 ("MIPS: Don't assume 64-bit FP registers for
    FP regset") public API regression, then activated by commit 1db1af84d6df
    ("MIPS: Basic MSA context switching support"), that caused the FCSR
    register not to be read or written for CONFIG_CPU_HAS_MSA kernel
    configurations (regardless of actual presence or absence of the MSA
    feature in a given processor) with ptrace(2) PTRACE_GETREGSET and
    PTRACE_SETREGSET requests nor recorded in core dumps.
    
    This is because with !CONFIG_CPU_HAS_MSA configurations the whole of
    `elf_fpregset_t' array is bulk-copied as it is, which includes the FCSR
    in one half of the last, 33rd slot, whereas with CONFIG_CPU_HAS_MSA
    configurations array elements are copied individually, and then only the
    leading 32 FGR slots while the remaining slot is ignored.
    
    Correct the code then such that only FGR slots are copied in the
    respective !MSA and MSA helpers an then the FCSR slot is handled
    separately in common code.  Use `ptrace_setfcr31' to update the FCSR
    too, so that the read-only mask is respected.
    
    Retrieving a correct value of FCSR is important in debugging not only
    for the human to be able to get the right interpretation of the
    situation, but for correct operation of GDB as well.  This is because
    the condition code bits in FSCR are used by GDB to determine the
    location to place a breakpoint at when single-stepping through an FPU
    branch instruction.  If such a breakpoint is placed incorrectly (i.e.
    with the condition reversed), then it will be missed, likely causing the
    debuggee to run away from the control of GDB and consequently breaking
    the process of investigation.
    
    Fortunately GDB continues using the older PTRACE_GETFPREGS ptrace(2)
    request which is unaffected, so the regression only really hits with
    post-mortem debug sessions using a core dump file, in which case
    execution, and consequently single-stepping through branches is not
    possible.  Of course core files created by buggy kernels out there will
    have the value of FCSR recorded clobbered, but such core files cannot be
    corrected and the person using them simply will have to be aware that
    the value of FCSR retrieved is not reliable.
    
    Which also means we can likely get away without defining a replacement
    API which would ensure a correct value of FSCR to be retrieved, or none
    at all.
    
    This is based on previous work by Alex Smith, extensively rewritten.
    
    Signed-off-by: Alex Smith <alex@alex-smith.me.uk>
    Signed-off-by: James Hogan <james.hogan@mips.com>
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: 72b22bbad1e7 ("MIPS: Don't assume 64-bit FP registers for FP regset")
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17928/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 323429be3b2f464b2e51f0c544e3dd6de4dadb79
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:53:14 2017 +0000

    MIPS: Consistently handle buffer counter with PTRACE_SETREGSET
    
    commit 80b3ffce0196ea50068885d085ff981e4b8396f4 upstream.
    
    Update commit d614fd58a283 ("mips/ptrace: Preserve previous registers
    for short regset write") bug and consistently consume all data supplied
    to `fpr_set_msa' with the ptrace(2) PTRACE_SETREGSET request, such that
    a zero data buffer counter is returned where insufficient data has been
    given to fill a whole number of FP general registers.
    
    In reality this is not going to happen, as the caller is supposed to
    only supply data covering a whole number of registers and it is verified
    in `ptrace_regset' and again asserted in `fpr_set', however structuring
    code such that the presence of trailing partial FP general register data
    causes `fpr_set_msa' to return with a non-zero data buffer counter makes
    it appear that this trailing data will be used if there are subsequent
    writes made to FP registers, which is going to be the case with the FCSR
    once the missing write to that register has been fixed.
    
    Fixes: d614fd58a283 ("mips/ptrace: Preserve previous registers for short regset write")
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17927/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a38f387c48c3b364c927e9d983b116824820ed38
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:52:15 2017 +0000

    MIPS: Guard against any partial write attempt with PTRACE_SETREGSET
    
    commit dc24d0edf33c3e15099688b6bbdf7bdc24bf6e91 upstream.
    
    Complement commit d614fd58a283 ("mips/ptrace: Preserve previous
    registers for short regset write") and ensure that no partial register
    write attempt is made with PTRACE_SETREGSET, as we do not preinitialize
    any temporaries used to hold incoming register data and consequently
    random data could be written.
    
    It is the responsibility of the caller, such as `ptrace_regset', to
    arrange for writes to span whole registers only, so here we only assert
    that it has indeed happened.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: 72b22bbad1e7 ("MIPS: Don't assume 64-bit FP registers for FP regset")
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17926/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc511ace4e306b0b0451a6169efe3f5e85d9d6c4
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:51:35 2017 +0000

    MIPS: Factor out NT_PRFPREG regset access helpers
    
    commit a03fe72572c12e98f4173f8a535f32468e48b6ec upstream.
    
    In preparation to fix a commit 72b22bbad1e7 ("MIPS: Don't assume 64-bit
    FP registers for FP regset") FCSR access regression factor out
    NT_PRFPREG regset access helpers for the non-MSA and the MSA variants
    respectively, to avoid having to deal with excessive indentation in the
    actual fix.
    
    No functional change, however use `target->thread.fpu.fpr[0]' rather
    than `target->thread.fpu.fpr[i]' for FGR holding type size determination
    as there's no `i' variable to refer to anymore, and for the factored out
    `i' variable declaration use `unsigned int' rather than `unsigned' as
    its type, following the common style.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: 72b22bbad1e7 ("MIPS: Don't assume 64-bit FP registers for FP regset")
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17925/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8caed0170147c55daf79793d72ed01b16610cf1
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Nov 27 09:33:03 2017 +0000

    MIPS: Validate PR_SET_FP_MODE prctl(2) requests against the ABI of the task
    
    commit b67336eee3fcb8ecedc6c13e2bf88aacfa3151e2 upstream.
    
    Fix an API loophole introduced with commit 9791554b45a2 ("MIPS,prctl:
    add PR_[GS]ET_FP_MODE prctl options for MIPS"), where the caller of
    prctl(2) is incorrectly allowed to make a change to CP0.Status.FR or
    CP0.Config5.FRE register bits even if CONFIG_MIPS_O32_FP64_SUPPORT has
    not been enabled, despite that an executable requesting the mode
    requested via ELF file annotation would not be allowed to run in the
    first place, or for n64 and n64 ABI tasks which do not have non-default
    modes defined at all.  Add suitable checks to `mips_set_process_fp_mode'
    and bail out if an invalid mode change has been requested for the ABI in
    effect, even if the FPU hardware or emulation would otherwise allow it.
    
    Always succeed however without taking any further action if the mode
    requested is the same as one already in effect, regardless of whether
    any mode change, should it be requested, would actually be allowed for
    the task concerned.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: 9791554b45a2 ("MIPS,prctl: add PR_[GS]ET_FP_MODE prctl options for MIPS")
    Reviewed-by: Paul Burton <paul.burton@mips.com>
    Cc: James Hogan <james.hogan@mips.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17800/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14af4f4c21968168209b37838bc8c571b562a0a6
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Wed Jan 3 13:39:16 2018 -0800

    IB/srpt: Fix ACL lookup during login
    
    commit a1ffa4670cb97ae3a4b3e8535d88be5f643f7c3b upstream.
    
    Make sure that the initiator port GUID is stored in ch->ini_guid.
    Note: when initiating a connection sgid and dgid members in struct
    sa_path_rec represent the source and destination GIDs. When accepting
    a connection however sgid represents the destination GID and dgid the
    source GID.
    
    Fixes: commit 2bce1a6d2209 ("IB/srpt: Accept GUIDs as port names")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68807cb2b38b2e10d01e5c033eb818836b250fd1
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Wed Jan 3 13:39:15 2018 -0800

    IB/srpt: Disable RDMA access by the initiator
    
    commit bec40c26041de61162f7be9d2ce548c756ce0f65 upstream.
    
    With the SRP protocol all RDMA operations are initiated by the target.
    Since no RDMA operations are initiated by the initiator, do not grant
    the initiator permission to submit RDMA reads or writes to the target.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83f8d47b31f52b40f0158581c41c086c00fcad5b
Author: Wolfgang Grandegger <wg@grandegger.com>
Date:   Wed Dec 13 19:52:23 2017 +0100

    can: gs_usb: fix return value of the "set_bittiming" callback
    
    commit d5b42e6607661b198d8b26a0c30969605b1bf5c7 upstream.
    
    The "set_bittiming" callback treats a positive return value as error!
    For that reason "can_changelink()" will quit silently after setting
    the bittiming values without processing ctrlmode, restart-ms, etc.
    
    Signed-off-by: Wolfgang Grandegger <wg@grandegger.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b043ea189d0fbd2f7a0b8d177109f60f5cd767f2
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Sat Dec 2 18:48:52 2017 +0100

    can: vxcan: improve handling of missing peer name attribute
    
    commit b4c2951a4833e66f1bbfe65ddcd4fdcdfafe5e8f upstream.
    
    Picking up the patch from Serhey Popovych (commit 191cdb3822e5df6b3c8,
    "veth: Be more robust on network device creation when no attributes").
    
    When the peer name attribute is not provided the former implementation tries
    to register the given device name twice ... which leads to -EEXIST.
    If only one device name is given apply an automatic generated and valid name
    for the peer.
    
    Cc: Serhey Popovych <serhe.popovych@gmail.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 653c41ac4729261cb356ee1aff0f3f4f342be1eb
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Thu Dec 14 17:40:50 2017 -0800

    KVM: Fix stack-out-of-bounds read in write_mmio
    
    commit e39d200fa5bf5b94a0948db0dae44c1b73b84a56 upstream.
    
    Reported by syzkaller:
    
      BUG: KASAN: stack-out-of-bounds in write_mmio+0x11e/0x270 [kvm]
      Read of size 8 at addr ffff8803259df7f8 by task syz-executor/32298
    
      CPU: 6 PID: 32298 Comm: syz-executor Tainted: G           OE    4.15.0-rc2+ #18
      Hardware name: LENOVO ThinkCentre M8500t-N000/SHARKBAY, BIOS FBKTC1AUS 02/16/2016
      Call Trace:
       dump_stack+0xab/0xe1
       print_address_description+0x6b/0x290
       kasan_report+0x28a/0x370
       write_mmio+0x11e/0x270 [kvm]
       emulator_read_write_onepage+0x311/0x600 [kvm]
       emulator_read_write+0xef/0x240 [kvm]
       emulator_fix_hypercall+0x105/0x150 [kvm]
       em_hypercall+0x2b/0x80 [kvm]
       x86_emulate_insn+0x2b1/0x1640 [kvm]
       x86_emulate_instruction+0x39a/0xb90 [kvm]
       handle_exception+0x1b4/0x4d0 [kvm_intel]
       vcpu_enter_guest+0x15a0/0x2640 [kvm]
       kvm_arch_vcpu_ioctl_run+0x549/0x7d0 [kvm]
       kvm_vcpu_ioctl+0x479/0x880 [kvm]
       do_vfs_ioctl+0x142/0x9a0
       SyS_ioctl+0x74/0x80
       entry_SYSCALL_64_fastpath+0x23/0x9a
    
    The path of patched vmmcall will patch 3 bytes opcode 0F 01 C1(vmcall)
    to the guest memory, however, write_mmio tracepoint always prints 8 bytes
    through *(u64 *)val since kvm splits the mmio access into 8 bytes. This
    leaks 5 bytes from the kernel stack (CVE-2017-17741).  This patch fixes
    it by just accessing the bytes which we operate on.
    
    Before patch:
    
    syz-executor-5567  [007] .... 51370.561696: kvm_mmio: mmio write len 3 gpa 0x10 val 0x1ffff10077c1010f
    
    After patch:
    
    syz-executor-13416 [002] .... 51302.299573: kvm_mmio: mmio write len 3 gpa 0x10 val 0xc1010f
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Reviewed-by: Darren Kenny <darren.kenny@oracle.com>
    Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
    Tested-by: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 883a082e8bdbcacfa6594ca8f9198491466cba2c
Author: Suren Baghdasaryan <surenb@google.com>
Date:   Wed Dec 6 09:27:30 2017 -0800

    dm bufio: fix shrinker scans when (nr_to_scan < retain_target)
    
    commit fbc7c07ec23c040179384a1f16b62b6030eb6bdd upstream.
    
    When system is under memory pressure it is observed that dm bufio
    shrinker often reclaims only one buffer per scan. This change fixes
    the following two issues in dm bufio shrinker that cause this behavior:
    
    1. ((nr_to_scan - freed) <= retain_target) condition is used to
    terminate slab scan process. This assumes that nr_to_scan is equal
    to the LRU size, which might not be correct because do_shrink_slab()
    in vmscan.c calculates nr_to_scan using multiple inputs.
    As a result when nr_to_scan is less than retain_target (64) the scan
    will terminate after the first iteration, effectively reclaiming one
    buffer per scan and making scans very inefficient. This hurts vmscan
    performance especially because mutex is acquired/released every time
    dm_bufio_shrink_scan() is called.
    New implementation uses ((LRU size - freed) <= retain_target)
    condition for scan termination. LRU size can be safely determined
    inside __scan() because this function is called after dm_bufio_lock().
    
    2. do_shrink_slab() uses value returned by dm_bufio_shrink_count() to
    determine number of freeable objects in the slab. However dm_bufio
    always retains retain_target buffers in its LRU and will terminate
    a scan when this mark is reached. Therefore returning the entire LRU size
    from dm_bufio_shrink_count() is misleading because that does not
    represent the number of freeable objects that slab will reclaim during
    a scan. Returning (LRU size - retain_target) better represents the
    number of freeable objects in the slab. This way do_shrink_slab()
    returns 0 when (LRU size < retain_target) and vmscan will not try to
    scan this shrinker avoiding scans that will not reclaim any memory.
    
    Test: tested using Android device running
    <AOSP>/system/extras/alloc-stress that generates memory pressure
    and causes intensive shrinker scans
    
    Signed-off-by: Suren Baghdasaryan <surenb@google.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8447222eb207d5a5ec20a0f357065963dabdcd0
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jan 10 09:31:23 2018 +0100

    Linux 4.14.13

commit 77bbeea7811f0857952d3f096438ce2e1bb16f1a
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Thu Dec 21 09:18:22 2017 +0100

    KVM: s390: prevent buffer overrun on memory hotplug during migration
    
    commit c2cf265d860882b51a200e4a7553c17827f2b730 upstream.
    
    We must not go beyond the pre-allocated buffer. This can happen when
    a new memory slot is added during migration.
    
    Reported-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Fixes: 190df4a212a7 (KVM: s390: CMMA tracking, ESSA emulation, migration mode)
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 853bcadeefe18ee0661a302811a17644b1f9e80b
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Fri Dec 15 13:14:31 2017 +0100

    KVM: s390: fix cmma migration for multiple memory slots
    
    commit 32aa144fc32abfcbf7140f473dfbd94c5b9b4105 upstream.
    
    When multiple memory slots are present the cmma migration code
    does not allocate enough memory for the bitmap. The memory slots
    are sorted in reverse order, so we must use gfn and size of
    slot[0] instead of the last one.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
    Fixes: 190df4a212a7 (KVM: s390: CMMA tracking, ESSA emulation, migration mode)
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 756ac0b046182487a2b813dd1dadb17e0d7b8b67
Author: Boris Brezillon <boris.brezillon@free-electrons.com>
Date:   Mon Dec 18 11:32:45 2017 +0100

    mtd: nand: pxa3xx: Fix READOOB implementation
    
    commit fee4380f368e84ed216b62ccd2fbc4126f2bf40b upstream.
    
    In the current driver, OOB bytes are accessed in raw mode, and when a
    page access is done with NDCR_SPARE_EN set and NDCR_ECC_EN cleared, the
    driver must read the whole spare area (64 bytes in case of a 2k page,
    16 bytes for a 512 page). The driver was only reading the free OOB
    bytes, which was leaving some unread data in the FIFO and was somehow
    leading to a timeout.
    
    We could patch the driver to read ->spare_size + ->ecc_size instead of
    just ->spare_size when READOOB is requested, but we'd better make
    in-band and OOB accesses consistent.
    Since the driver is always accessing in-band data in non-raw mode (with
    the ECC engine enabled), we should also access OOB data in this mode.
    That's particularly useful when using the BCH engine because in this
    mode the free OOB bytes are also ECC protected.
    
    Fixes: 43bcfd2bb24a ("mtd: nand: pxa3xx: Add driver-specific ECC BCH support")
    Reported-by: Sean Nyekjær <sean.nyekjaer@prevas.dk>
    Tested-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Acked-by: Ezequiel Garcia <ezequiel@vanguardiasur.com.ar>
    Tested-by: Sean Nyekjaer <sean.nyekjaer@prevas.dk>
    Acked-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0fdea2a407e0f2503f6b80b1a89c44fb58d64e9
Author: Helge Deller <deller@gmx.de>
Date:   Fri Jan 5 21:55:38 2018 +0100

    parisc: qemu idle sleep support
    
    commit 310d82784fb4d60c80569f5ca9f53a7f3bf1d477 upstream.
    
    Add qemu idle sleep support when running under qemu with SeaBIOS PDC
    firmware.
    
    Like the power architecture we use the "or" assembler instructions,
    which translate to nops on real hardware, to indicate that qemu shall
    idle sleep.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: Richard Henderson <rth@twiddle.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb510265edaf4809c050e620231b6ea69507fe82
Author: Helge Deller <deller@gmx.de>
Date:   Tue Jan 2 20:36:44 2018 +0100

    parisc: Fix alignment of pa_tlb_lock in assembly on 32-bit SMP kernel
    
    commit 88776c0e70be0290f8357019d844aae15edaa967 upstream.
    
    Qemu for PARISC reported on a 32bit SMP parisc kernel strange failures
    about "Not-handled unaligned insn 0x0e8011d6 and 0x0c2011c9."
    
    Those opcodes evaluate to the ldcw() assembly instruction which requires
    (on 32bit) an alignment of 16 bytes to ensure atomicity.
    
    As it turns out, qemu is correct and in our assembly code in entry.S and
    pacache.S we don't pay attention to the required alignment.
    
    This patch fixes the problem by aligning the lock offset in assembly
    code in the same manner as we do in our C-code.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5edee88ad430356e5c6b1c309782cce3f736272
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu Dec 7 00:28:27 2017 -0800

    apparmor: fix regression in mount mediation when feature set is pinned
    
    commit 5b9f57cf47b87f07210875d6a24776b4496b818d upstream.
    
    When the mount code was refactored for Labels it was not correctly
    updated to check whether policy supported mediation of the mount
    class.  This causes a regression when the kernel feature set is
    reported as supporting mount and policy is pinned to a feature set
    that does not support mount mediation.
    
    BugLink: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=882697#41
    Fixes: 2ea3ffb7782a ("apparmor: add mount mediation")
    Reported-by: Fabian Grünbichler <f.gruenbichler@proxmox.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46789641800ca2077acb66c6cbe8e2ce7575113c
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Thu Nov 30 16:46:40 2017 -0600

    x86/microcode/AMD: Add support for fam17h microcode loading
    
    commit f4e9b7af0cd58dd039a0fb2cd67d57cea4889abf upstream.
    
    The size for the Microcode Patch Block (MPB) for an AMD family 17h
    processor is 3200 bytes.  Add a #define for fam17h so that it does
    not default to 2048 bytes and fail a microcode load/update.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@alien8.de>
    Link: https://lkml.kernel.org/r/20171130224640.15391.40247.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Alice Ferrazzi <alicef@gentoo.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2df832f7aa68dd1cf454d6fa165f1c61a3cd04e5
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Sat Nov 25 16:48:41 2017 -0800

    Input: elantech - add new icbody type 15
    
    commit 10d900303f1c3a821eb0bef4e7b7ece16768fba4 upstream.
    
    The touchpad of Lenovo Thinkpad L480 reports it's version as 15.
    
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49b52457e1fc9cbf21ba7a3e24fcc4541e0c08d2
Author: John Sperbeck <jsperbeck@google.com>
Date:   Sun Dec 31 21:24:58 2017 -0800

    powerpc/mm: Fix SEGV on mapped region to return SEGV_ACCERR
    
    commit ecb101aed86156ec7cd71e5dca668e09146e6994 upstream.
    
    The recent refactoring of the powerpc page fault handler in commit
    c3350602e876 ("powerpc/mm: Make bad_area* helper functions") caused
    access to protected memory regions to indicate SEGV_MAPERR instead of
    the traditional SEGV_ACCERR in the si_code field of a user-space
    signal handler. This can confuse debug libraries that temporarily
    change the protection of memory regions, and expect to use SEGV_ACCERR
    as an indication to restore access to a region.
    
    This commit restores the previous behavior. The following program
    exhibits the issue:
    
        $ ./repro read  || echo "FAILED"
        $ ./repro write || echo "FAILED"
        $ ./repro exec  || echo "FAILED"
    
        #include <stdio.h>
        #include <stdlib.h>
        #include <string.h>
        #include <unistd.h>
        #include <signal.h>
        #include <sys/mman.h>
        #include <assert.h>
    
        static void segv_handler(int n, siginfo_t *info, void *arg) {
                _exit(info->si_code == SEGV_ACCERR ? 0 : 1);
        }
    
        int main(int argc, char **argv)
        {
                void *p = NULL;
                struct sigaction act = {
                        .sa_sigaction = segv_handler,
                        .sa_flags = SA_SIGINFO,
                };
    
                assert(argc == 2);
                p = mmap(NULL, getpagesize(),
                        (strcmp(argv[1], "write") == 0) ? PROT_READ : 0,
                        MAP_PRIVATE|MAP_ANONYMOUS, -1, 0);
                assert(p != MAP_FAILED);
    
                assert(sigaction(SIGSEGV, &act, NULL) == 0);
                if (strcmp(argv[1], "read") == 0)
                        printf("%c", *(unsigned char *)p);
                else if (strcmp(argv[1], "write") == 0)
                        *(unsigned char *)p = 0;
                else if (strcmp(argv[1], "exec") == 0)
                        ((void (*)(void))p)();
                return 1;  /* failed to generate SEGV */
        }
    
    Fixes: c3350602e876 ("powerpc/mm: Make bad_area* helper functions")
    Signed-off-by: John Sperbeck <jsperbeck@google.com>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    [mpe: Add commit references in change log]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d17237bbdf70eb2a30301eb94533fe712ba96cb0
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Fri Dec 8 08:26:58 2017 -0800

    ARC: uaccess: dont use "l" gcc inline asm constraint modifier
    
    commit 79435ac78d160e4c245544d457850a56f805ac0d upstream.
    
    This used to setup the LP_COUNT register automatically, but now has been
    removed.
    
    There was an earlier fix 3c7c7a2fc8811 which fixed instance in delay.h but
    somehow missed this one as gcc change had not made its way into
    production toolchains and was not pedantic as it is now !
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 986128f3a74b45c6d7e639c950b69cdc933d1686
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Tue Jan 2 12:33:14 2018 +0000

    iommu/arm-smmu-v3: Cope with duplicated Stream IDs
    
    commit 563b5cbe334e9503ab2b234e279d500fc4f76018 upstream.
    
    For PCI devices behind an aliasing PCIe-to-PCI/X bridge, the bridge
    alias to DevFn 0.0 on the subordinate bus may match the original RID of
    the device, resulting in the same SID being present in the device's
    fwspec twice. This causes trouble later in arm_smmu_write_strtab_ent()
    when we wind up visiting the STE a second time and find it already live.
    
    Avoid the issue by giving arm_smmu_install_ste_for_dev() the cleverness
    to skip over duplicates. It seems mildly counterintuitive compared to
    preventing the duplicates from existing in the first place, but since
    the DT and ACPI probe paths build their fwspecs differently, this is
    actually the cleanest and most self-contained way to deal with it.
    
    Fixes: 8f78515425da ("iommu/arm-smmu: Implement of_xlate() for SMMUv3")
    Reported-by: Tomasz Nowicki <tomasz.nowicki@caviumnetworks.com>
    Tested-by: Tomasz Nowicki <Tomasz.Nowicki@cavium.com>
    Tested-by: Jayachandran C. <jnair@caviumnetworks.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ea9d6d0ad67c6a978604e5f16af5683c435e082
Author: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
Date:   Thu Dec 14 11:03:01 2017 +0000

    iommu/arm-smmu-v3: Don't free page table ops twice
    
    commit 57d72e159b60456c8bb281736c02ddd3164037aa upstream.
    
    Kasan reports a double free when finalise_stage_fn fails: the io_pgtable
    ops are freed by arm_smmu_domain_finalise and then again by
    arm_smmu_domain_free. Prevent this by leaving pgtbl_ops empty on failure.
    
    Fixes: 48ec83bcbcf5 ("iommu/arm-smmu: Add initial driver support for ARM SMMUv3 devices")
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 289b51d3c17be8855c5b4be87d8e0e78cc70d511
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Nov 17 15:30:08 2017 -0800

    kernel/signal.c: remove the no longer needed SIGNAL_UNKILLABLE check in complete_signal()
    
    commit 426915796ccaf9c2bd9bb06dc5702225957bc2e5 upstream.
    
    complete_signal() checks SIGNAL_UNKILLABLE before it starts to destroy
    the thread group, today this is wrong in many ways.
    
    If nothing else, fatal_signal_pending() should always imply that the
    whole thread group (except ->group_exit_task if it is not NULL) is
    killed, this check breaks the rule.
    
    After the previous changes we can rely on sig_task_ignored();
    sig_fatal(sig) && SIGNAL_UNKILLABLE can only be true if we actually want
    to kill this task and sig == SIGKILL OR it is traced and debugger can
    intercept the signal.
    
    This should hopefully fix the problem reported by Dmitry.  This
    test-case
    
            static int init(void *arg)
            {
                    for (;;)
                            pause();
            }
    
            int main(void)
            {
                    char stack[16 * 1024];
    
                    for (;;) {
                            int pid = clone(init, stack + sizeof(stack)/2,
                                            CLONE_NEWPID | SIGCHLD, NULL);
                            assert(pid > 0);
    
                            assert(ptrace(PTRACE_ATTACH, pid, 0, 0) == 0);
                            assert(waitpid(-1, NULL, WSTOPPED) == pid);
    
                            assert(ptrace(PTRACE_DETACH, pid, 0, SIGSTOP) == 0);
                            assert(syscall(__NR_tkill, pid, SIGKILL) == 0);
                            assert(pid == wait(NULL));
                    }
            }
    
    triggers the WARN_ON_ONCE(!(task->jobctl & JOBCTL_STOP_PENDING)) in
    task_participate_group_stop().  do_signal_stop()->signal_group_exit()
    checks SIGNAL_GROUP_EXIT and return false, but task_set_jobctl_pending()
    checks fatal_signal_pending() and does not set JOBCTL_STOP_PENDING.
    
    And his should fix the minor security problem reported by Kyle,
    SECCOMP_RET_TRACE can miss fatal_signal_pending() the same way if the
    task is the root of a pid namespace.
    
    Link: http://lkml.kernel.org/r/20171103184246.GD21036@redhat.com
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: Kyle Huey <me@kylehuey.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Tested-by: Kyle Huey <me@kylehuey.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94429f353675f4e3e5fefdaf3e01a18d44074f87
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Nov 17 15:30:04 2017 -0800

    kernel/signal.c: protect the SIGNAL_UNKILLABLE tasks from !sig_kernel_only() signals
    
    commit ac25385089f673560867eb5179228a44ade0cfc1 upstream.
    
    Change sig_task_ignored() to drop the SIG_DFL && !sig_kernel_only()
    signals even if force == T.  This simplifies the next change and this
    matches the same check in get_signal() which will drop these signals
    anyway.
    
    Link: http://lkml.kernel.org/r/20171103184227.GC21036@redhat.com
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Tested-by: Kyle Huey <me@kylehuey.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ebd69e8c251597f51768dce320cc10f9b4c8894
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Nov 17 15:30:01 2017 -0800

    kernel/signal.c: protect the traced SIGNAL_UNKILLABLE tasks from SIGKILL
    
    commit 628c1bcba204052d19b686b5bac149a644cdb72e upstream.
    
    The comment in sig_ignored() says "Tracers may want to know about even
    ignored signals" but SIGKILL can not be reported to debugger and it is
    just wrong to return 0 in this case: SIGKILL should only kill the
    SIGNAL_UNKILLABLE task if it comes from the parent ns.
    
    Change sig_ignored() to ignore ->ptrace if sig == SIGKILL and rely on
    sig_task_ignored().
    
    SISGTOP coming from within the namespace is not really right too but at
    least debugger can intercept it, and we can't drop it here because this
    will break "gdb -p 1": ptrace_attach() won't work.  Perhaps we will add
    another ->ptrace check later, we will see.
    
    Link: http://lkml.kernel.org/r/20171103184206.GB21036@redhat.com
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Tested-by: Kyle Huey <me@kylehuey.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22af48be826c4193bba2f11112330aabb2568594
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Nov 15 02:13:40 2017 +0100

    x86 / CPU: Always show current CPU frequency in /proc/cpuinfo
    
    commit 7d5905dc14a87805a59f3c5bf70173aac2bb18f8 upstream.
    
    After commit 890da9cf0983 (Revert "x86: do not use cpufreq_quick_get()
    for /proc/cpuinfo "cpu MHz"") the "cpu MHz" number in /proc/cpuinfo
    on x86 can be either the nominal CPU frequency (which is constant)
    or the frequency most recently requested by a scaling governor in
    cpufreq, depending on the cpufreq configuration.  That is somewhat
    inconsistent and is different from what it was before 4.13, so in
    order to restore the previous behavior, make it report the current
    CPU frequency like the scaling_cur_freq sysfs file in cpufreq.
    
    To that end, modify the /proc/cpuinfo implementation on x86 to use
    aperfmperf_snapshot_khz() to snapshot the APERF and MPERF feedback
    registers, if available, and use their values to compute the CPU
    frequency to be reported as "cpu MHz".
    
    However, do that carefully enough to avoid accumulating delays that
    lead to unacceptable access times for /proc/cpuinfo on systems with
    many CPUs.  Run aperfmperf_snapshot_khz() once on all CPUs
    asynchronously at the /proc/cpuinfo open time, add a single delay
    upfront (if necessary) at that point and simply compute the current
    frequency while running show_cpuinfo() for each individual CPU.
    
    Also, to avoid slowing down /proc/cpuinfo accesses too much, reduce
    the default delay between consecutive APERF and MPERF reads to 10 ms,
    which should be sufficient to get large enough numbers for the
    frequency computation in all cases.
    
    Fixes: 890da9cf0983 (Revert "x86: do not use cpufreq_quick_get() for /proc/cpuinfo "cpu MHz"")
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eff3e4fde76492931a45e23767c7842524b0ea06
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Nov 13 02:15:39 2017 +0100

    x86 / CPU: Avoid unnecessary IPIs in arch_freq_get_on_cpu()
    
    commit b29c6ef7bb1257853c1e31616d84f55e561cf631 upstream.
    
    Even though aperfmperf_snapshot_khz() caches the samples.khz value to
    return if called again in a sufficiently short time, its caller,
    arch_freq_get_on_cpu(), still uses smp_call_function_single() to run it
    which may allow user space to trigger an IPI storm by reading from the
    scaling_cur_freq cpufreq sysfs file in a tight loop.
    
    To avoid that, move the decision on whether or not to return the cached
    samples.khz value to arch_freq_get_on_cpu().
    
    This change was part of commit 941f5f0f6ef5 ("x86: CPU: Fix up "cpu MHz"
    in /proc/cpuinfo"), but it was not the reason for the revert and it
    remains applicable.
    
    Fixes: 4815d3c56d1e (cpufreq: x86: Make scaling_cur_freq behave more as expected)
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: WANG Chao <chao.wang@ucloud.cn>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2335a22b2224f71ac639becef4a6cb8ef54c8b7e
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jan 2 10:02:19 2018 +0000

    fscache: Fix the default for fscache_maybe_release_page()
    
    commit 98801506552593c9b8ac11021b0cdad12cab4f6b upstream.
    
    Fix the default for fscache_maybe_release_page() for when the cookie isn't
    valid or the page isn't cached.  It mustn't return false as that indicates
    the page cannot yet be freed.
    
    The problem with the default is that if, say, there's no cache, but a
    network filesystem's pages are using up almost all the available memory, a
    system can OOM because the filesystem ->releasepage() op will not allow
    them to be released as fscache_maybe_release_page() incorrectly prevents
    it.
    
    This can be tested by writing a sequence of 512MiB files to an AFS mount.
    It does not affect NFS or CIFS because both of those wrap the call in a
    check of PG_fscache and it shouldn't bother Ceph as that only has
    PG_private set whilst writeback is in progress.  This might be an issue for
    9P, however.
    
    Note that the pages aren't entirely stuck.  Removing a file or unmounting
    will clear things because that uses ->invalidatepage() instead.
    
    Fixes: 201a15428bd5 ("FS-Cache: Handle pages pending storage that get evicted under OOM conditions")
    Reported-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Acked-by: Al Viro <viro@zeniv.linux.org.uk>
    Tested-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ee35943b11f07de678642a8f08e61e5d5f3867a
Author: Stefan Brüns <stefan.bruens@rwth-aachen.de>
Date:   Mon Nov 27 20:05:34 2017 +0100

    sunxi-rsb: Include OF based modalias in device uevent
    
    commit e2bf801ecd4e62222a46d1ba9e57e710171d29c1 upstream.
    
    Include the OF-based modalias in the uevent sent when registering devices
    on the sunxi RSB bus, so that user space has a chance to autoload the
    kernel module for the device.
    
    Fixes a regression caused by commit 3f241bfa60bd ("arm64: allwinner: a64:
    pine64: Use dcdc1 regulator for mmc0"). When the axp20x-rsb module for
    the AXP803 PMIC is built as a module, it is not loaded and the system
    ends up with an disfunctional MMC controller.
    
    Fixes: d787dcdb9c8f ("bus: sunxi-rsb: Add driver for Allwinner Reduced Serial Bus")
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d8c5beecdd9098458a047a871cd20fae3f4c6b2
Author: Lucas De Marchi <lucas.demarchi@intel.com>
Date:   Tue Jan 2 12:18:37 2018 -0800

    drm/i915: Apply Display WA #1183 on skl, kbl, and cfl
    
    commit 30414f3010aff95ffdb6bed7b9dce62cde94fdc7 upstream.
    
    Display WA #1183 was recently added to workaround
    "Failures when enabling DPLL0 with eDP link rate 2.16
    or 4.32 GHz and CD clock frequency 308.57 or 617.14 MHz
    (CDCLK_CTL CD Frequency Select 10b or 11b) used in this
     enabling or in previous enabling."
    
    This workaround was designed to minimize the impact only
    to save the bad case with that link rates. But HW engineers
    indicated that it should be safe to apply broadly, although
    they were expecting the DPLL0 link rate to be unchanged on
    runtime.
    
    We need to cover 2 cases: when we are in fact enabling DPLL0
    and when we are just changing the frequency with small
    differences.
    
    This is based on previous patch by Rodrigo Vivi with suggestions
    from Ville Syrjälä.
    
    Cc: Arthur J Runyan <arthur.j.runyan@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171204232210.4958-1-lucas.demarchi@intel.com
    (cherry picked from commit 53421c2fe99ce16838639ad89d772d914a119a49)
    [ Lucas: Backport to 4.15 adding back variable that has been removed on
      commits not meant to be backported ]
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180102201837.6812-1-lucas.demarchi@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d8c39173bd71ed53ae88de77a8ec94f30b69919
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Dec 8 23:37:36 2017 +0200

    drm/i915: Disable DC states around GMBUS on GLK
    
    commit 3488d0237f6364614f0c59d6d784bb79b11eeb92 upstream.
    
    Prevent the DMC from destroying GMBUS transfers on GLK. GMBUS
    lives in PG1 so DC off is all we need.
    
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171208213739.16388-1-ville.syrjala@linux.intel.com
    Reviewed-by: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
    (cherry picked from commit 156961ae7bdf6feb72778e8da83d321b273343fd)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4f9aaeb26d024f2f239b19a68d3e339628e1066
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Dec 5 11:10:26 2017 +0100

    crypto: chelsio - select CRYPTO_GF128MUL
    
    commit d042566d8c704e1ecec370300545d4a409222e39 upstream.
    
    Without the gf128mul library support, we can run into a link
    error:
    
    drivers/crypto/chelsio/chcr_algo.o: In function `chcr_update_tweak':
    chcr_algo.c:(.text+0x7e0): undefined reference to `gf128mul_x8_ble'
    
    This adds a Kconfig select statement for it, next to the ones we
    already have.
    
    Fixes: b8fd1f4170e7 ("crypto: chcr - Add ctr mode and process large sg entries for cipher")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7156c794b8ab462705e6ac80c5fa69565eb44c62
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Dec 20 14:28:25 2017 -0800

    crypto: pcrypt - fix freeing pcrypt instances
    
    commit d76c68109f37cb85b243a1cf0f40313afd2bae68 upstream.
    
    pcrypt is using the old way of freeing instances, where the ->free()
    method specified in the 'struct crypto_template' is passed a pointer to
    the 'struct crypto_instance'.  But the crypto_instance is being
    kfree()'d directly, which is incorrect because the memory was actually
    allocated as an aead_instance, which contains the crypto_instance at a
    nonzero offset.  Thus, the wrong pointer was being kfree()'d.
    
    Fix it by switching to the new way to free aead_instance's where the
    ->free() method is specified in the aead_instance itself.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Fixes: 0496f56065e0 ("crypto: pcrypt - Add support for new AEAD interface")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c36498f74533e0b1fdcb9692a04482bc2d91d8d
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Dec 11 12:15:17 2017 -0800

    crypto: chacha20poly1305 - validate the digest size
    
    commit e57121d08c38dabec15cf3e1e2ad46721af30cae upstream.
    
    If the rfc7539 template was instantiated with a hash algorithm with
    digest size larger than 16 bytes (POLY1305_DIGEST_SIZE), then the digest
    overran the 'tag' buffer in 'struct chachapoly_req_ctx', corrupting the
    subsequent memory, including 'cryptlen'.  This caused a crash during
    crypto_skcipher_decrypt().
    
    Fix it by, when instantiating the template, requiring that the
    underlying hash algorithm has the digest size expected for Poly1305.
    
    Reproducer:
    
        #include <linux/if_alg.h>
        #include <sys/socket.h>
        #include <unistd.h>
    
        int main()
        {
                int algfd, reqfd;
                struct sockaddr_alg addr = {
                        .salg_type = "aead",
                        .salg_name = "rfc7539(chacha20,sha256)",
                };
                unsigned char buf[32] = { 0 };
    
                algfd = socket(AF_ALG, SOCK_SEQPACKET, 0);
                bind(algfd, (void *)&addr, sizeof(addr));
                setsockopt(algfd, SOL_ALG, ALG_SET_KEY, buf, sizeof(buf));
                reqfd = accept(algfd, 0, 0);
                write(reqfd, buf, 16);
                read(reqfd, buf, 16);
        }
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Fixes: 71ebc4d1b27d ("crypto: chacha20poly1305 - Add a ChaCha20-Poly1305 AEAD construction, RFC7539")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 491062a0099c8bf6841dece8dd501d9fc2b80e34
Author: Jan Engelhardt <jengelh@inai.de>
Date:   Tue Dec 19 19:09:07 2017 +0100

    crypto: n2 - cure use after free
    
    commit 203f45003a3d03eea8fa28d74cfc74c354416fdb upstream.
    
    queue_cache_init is first called for the Control Word Queue
    (n2_crypto_probe). At that time, queue_cache[0] is NULL and a new
    kmem_cache will be allocated. If the subsequent n2_register_algs call
    fails, the kmem_cache will be released in queue_cache_destroy, but
    queue_cache_init[0] is not set back to NULL.
    
    So when the Module Arithmetic Unit gets probed next (n2_mau_probe),
    queue_cache_init will not allocate a kmem_cache again, but leave it
    as its bogus value, causing a BUG() to trigger when queue_cache[0] is
    eventually passed to kmem_cache_zalloc:
    
            n2_crypto: Found N2CP at /virtual-devices@100/n2cp@7
            n2_crypto: Registered NCS HVAPI version 2.0
            called queue_cache_init
            n2_crypto: md5 alg registration failed
            n2cp f028687c: /virtual-devices@100/n2cp@7: Unable to register algorithms.
            called queue_cache_destroy
            n2cp: probe of f028687c failed with error -22
            n2_crypto: Found NCP at /virtual-devices@100/ncp@6
            n2_crypto: Registered NCS HVAPI version 2.0
            called queue_cache_init
            kernel BUG at mm/slab.c:2993!
            Call Trace:
             [0000000000604488] kmem_cache_alloc+0x1a8/0x1e0
                      (inlined) kmem_cache_zalloc
                      (inlined) new_queue
                      (inlined) spu_queue_setup
                      (inlined) handle_exec_unit
             [0000000010c61eb4] spu_mdesc_scan+0x1f4/0x460 [n2_crypto]
             [0000000010c62b80] n2_mau_probe+0x100/0x220 [n2_crypto]
             [000000000084b174] platform_drv_probe+0x34/0xc0
    
    Signed-off-by: Jan Engelhardt <jengelh@inai.de>
    Acked-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95a362c9a6892085f714eb6e31eea6a0e3aa93bf
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Tue Jan 2 17:21:10 2018 +0000

    efi/capsule-loader: Reinstate virtual capsule mapping
    
    commit f24c4d478013d82bd1b943df566fff3561d52864 upstream.
    
    Commit:
    
      82c3768b8d68 ("efi/capsule-loader: Use a cached copy of the capsule header")
    
    ... refactored the capsule loading code that maps the capsule header,
    to avoid having to map it several times.
    
    However, as it turns out, the vmap() call we ended up removing did not
    just map the header, but the entire capsule image, and dropping this
    virtual mapping breaks capsules that are processed by the firmware
    immediately (i.e., without a reboot).
    
    Unfortunately, that change was part of a larger refactor that allowed
    a quirk to be implemented for Quark, which has a non-standard memory
    layout for capsules, and we have slightly painted ourselves into a
    corner by allowing quirk code to mangle the capsule header and memory
    layout.
    
    So we need to fix this without breaking Quark. Fortunately, Quark does
    not appear to care about the virtual mapping, and so we can simply
    do a partial revert of commit:
    
      2a457fb31df6 ("efi/capsule-loader: Use page addresses rather than struct page pointers")
    
    ... and create a vmap() mapping of the entire capsule (including header)
    based on the reinstated struct page array, unless running on Quark, in
    which case we pass the capsule header copy as before.
    
    Reported-by: Ge Song <ge.song@hxt-semitech.com>
    Tested-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Tested-by: Ge Song <ge.song@hxt-semitech.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Fixes: 82c3768b8d68 ("efi/capsule-loader: Use a cached copy of the capsule header")
    Link: http://lkml.kernel.org/r/20180102172110.17018-3-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9fa21f3daa6533ab2303caad72c996e3924cf3b
Author: Chris Mason <clm@fb.com>
Date:   Fri Dec 15 11:58:27 2017 -0800

    btrfs: fix refcount_t usage when deleting btrfs_delayed_nodes
    
    commit ec35e48b286959991cdbb886f1bdeda4575c80b4 upstream.
    
    refcounts have a generic implementation and an asm optimized one.  The
    generic version has extra debugging to make sure that once a refcount
    goes to zero, refcount_inc won't increase it.
    
    The btrfs delayed inode code wasn't expecting this, and we're tripping
    over the warnings when the generic refcounts are used.  We ended up with
    this race:
    
    Process A                                         Process B
                                                      btrfs_get_delayed_node()
                                                      spin_lock(root->inode_lock)
                                                      radix_tree_lookup()
    __btrfs_release_delayed_node()
    refcount_dec_and_test(&delayed_node->refs)
    our refcount is now zero
                                                      refcount_add(2) <---
                                                      warning here, refcount
                                                      unchanged
    
    spin_lock(root->inode_lock)
    radix_tree_delete()
    
    With the generic refcounts, we actually warn again when process B above
    tries to release his refcount because refcount_add() turned into a
    no-op.
    
    We saw this in production on older kernels without the asm optimized
    refcounts.
    
    The fix used here is to use refcount_inc_not_zero() to detect when the
    object is in the middle of being freed and return NULL.  This is almost
    always the right answer anyway, since we usually end up pitching the
    delayed_node if it didn't have fresh data in it.
    
    This also changes __btrfs_release_delayed_node() to remove the extra
    check for zero refcounts before radix tree deletion.
    btrfs_get_delayed_node() was the only path that was allowing refcounts
    to go from zero to one.
    
    Fixes: 6de5f18e7b0da ("btrfs: fix refcount_t usage when deleting btrfs_delayed_node")
    Signed-off-by: Chris Mason <clm@fb.com>
    Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 319122a71f306943a75217b3e78a9a0f8e9c1e95
Author: Andrea Arcangeli <aarcange@redhat.com>
Date:   Thu Jan 4 16:18:09 2018 -0800

    userfaultfd: clear the vma->vm_userfaultfd_ctx if UFFD_EVENT_FORK fails
    
    commit 0cbb4b4f4c44f54af268969b18d8deda63aded59 upstream.
    
    The previous fix in commit 384632e67e08 ("userfaultfd: non-cooperative:
    fix fork use after free") corrected the refcounting in case of
    UFFD_EVENT_FORK failure for the fork userfault paths.
    
    That still didn't clear the vma->vm_userfaultfd_ctx of the vmas that
    were set to point to the aborted new uffd ctx earlier in
    dup_userfaultfd.
    
    Link: http://lkml.kernel.org/r/20171223002505.593-2-aarcange@redhat.com
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Reviewed-by: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: Eric Biggers <ebiggers3@gmail.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c86ee796feed73dfa8a895be48c146b018d14393
Author: Baoquan He <bhe@redhat.com>
Date:   Thu Jan 4 16:18:06 2018 -0800

    mm/sparse.c: wrong allocation for mem_section
    
    commit d09cfbbfa0f761a97687828b5afb27b56cbf2e19 upstream.
    
    In commit 83e3c48729d9 ("mm/sparsemem: Allocate mem_section at runtime
    for CONFIG_SPARSEMEM_EXTREME=y") mem_section is allocated at runtime to
    save memory.
    
    It allocates the first dimension of array with sizeof(struct mem_section).
    
    It costs extra memory, should be sizeof(struct mem_section *).
    
    Fix it.
    
    Link: http://lkml.kernel.org/r/1513932498-20350-1-git-send-email-bhe@redhat.com
    Fixes: 83e3c48729 ("mm/sparsemem: Allocate mem_section at runtime for CONFIG_SPARSEMEM_EXTREME=y")
    Signed-off-by: Baoquan He <bhe@redhat.com>
    Tested-by: Dave Young <dyoung@redhat.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Atsushi Kumagai <ats-kumagai@wm.jp.nec.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abcc78627877cef68144475e88952b0957406024
Author: Anshuman Khandual <khandual@linux.vnet.ibm.com>
Date:   Thu Jan 4 16:17:52 2018 -0800

    mm/mprotect: add a cond_resched() inside change_pmd_range()
    
    commit 4991c09c7c812dba13ea9be79a68b4565bb1fa4e upstream.
    
    While testing on a large CPU system, detected the following RCU stall
    many times over the span of the workload.  This problem is solved by
    adding a cond_resched() in the change_pmd_range() function.
    
      INFO: rcu_sched detected stalls on CPUs/tasks:
       154-....: (670 ticks this GP) idle=022/140000000000000/0 softirq=2825/2825 fqs=612
       (detected by 955, t=6002 jiffies, g=4486, c=4485, q=90864)
      Sending NMI from CPU 955 to CPUs 154:
      NMI backtrace for cpu 154
      CPU: 154 PID: 147071 Comm: workload Not tainted 4.15.0-rc3+ #3
      NIP:  c0000000000b3f64 LR: c0000000000b33d4 CTR: 000000000000aa18
      REGS: 00000000a4b0fb44 TRAP: 0501   Not tainted  (4.15.0-rc3+)
      MSR:  8000000000009033 <SF,EE,ME,IR,DR,RI,LE>  CR: 22422082  XER: 00000000
      CFAR: 00000000006cf8f0 SOFTE: 1
      GPR00: 0010000000000000 c00003ef9b1cb8c0 c0000000010cc600 0000000000000000
      GPR04: 8e0000018c32b200 40017b3858fd6e00 8e0000018c32b208 40017b3858fd6e00
      GPR08: 8e0000018c32b210 40017b3858fd6e00 8e0000018c32b218 40017b3858fd6e00
      GPR12: ffffffffffffffff c00000000fb25100
      NIP [c0000000000b3f64] plpar_hcall9+0x44/0x7c
      LR [c0000000000b33d4] pSeries_lpar_flush_hash_range+0x384/0x420
      Call Trace:
        flush_hash_range+0x48/0x100
        __flush_tlb_pending+0x44/0xd0
        hpte_need_flush+0x408/0x470
        change_protection_range+0xaac/0xf10
        change_prot_numa+0x30/0xb0
        task_numa_work+0x2d0/0x3e0
        task_work_run+0x130/0x190
        do_notify_resume+0x118/0x120
        ret_from_except_lite+0x70/0x74
      Instruction dump:
      60000000 f8810028 7ca42b78 7cc53378 7ce63b78 7d074378 7d284b78 7d495378
      e9410060 e9610068 e9810070 44000022 <7d806378> e9810028 f88c0000 f8ac0008
    
    Link: http://lkml.kernel.org/r/20171214140551.5794-1-khandual@linux.vnet.ibm.com
    Signed-off-by: Anshuman Khandual <khandual@linux.vnet.ibm.com>
    Suggested-by: Nicholas Piggin <npiggin@gmail.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae04ca35247af576999da5ef726d1a03fc65de09
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Thu Jan 4 16:17:49 2018 -0800

    kernel/acct.c: fix the acct->needcheck check in check_free_space()
    
    commit 4d9570158b6260f449e317a5f9ed030c2504a615 upstream.
    
    As Tsukada explains, the time_is_before_jiffies(acct->needcheck) check
    is very wrong, we need time_is_after_jiffies() to make sys_acct() work.
    
    Ignoring the overflows, the code should "goto out" if needcheck >
    jiffies, while currently it checks "needcheck < jiffies" and thus in the
    likely case check_free_space() does nothing until jiffies overflow.
    
    In particular this means that sys_acct() is simply broken, acct_on()
    sets acct->needcheck = jiffies and expects that check_free_space()
    should set acct->active = 1 after the free-space check, but this won't
    happen if jiffies increments in between.
    
    This was broken by commit 32dc73086015 ("get rid of timer in
    kern/acct.c") in 2011, then another (correct) commit 795a2f22a8ea
    ("acct() should honour the limits from the very beginning") made the
    problem more visible.
    
    Link: http://lkml.kernel.org/r/20171213133940.GA6554@redhat.com
    Fixes: 32dc73086015 ("get rid of timer in kern/acct.c")
    Reported-by: TSUKADA Koutaro <tsukada@ascade.co.jp>
    Suggested-by: TSUKADA Koutaro <tsukada@ascade.co.jp>
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aea4ead5aba7d0990e007d55b806b1e7859a8bed
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Jan 5 15:27:34 2018 +0100

    x86/pti: Rename BUG_CPU_INSECURE to BUG_CPU_MELTDOWN
    
    commit de791821c295cc61419a06fe5562288417d1bc58 upstream.
    
    Use the name associated with the particular attack which needs page table
    isolation for mitigation.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Alan Cox <gnomes@lxorguk.ukuu.org.uk>
    Cc: Jiri Koshina <jikos@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Andi Lutomirski  <luto@amacapital.net>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Paul Turner <pjt@google.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Greg KH <gregkh@linux-foundation.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801051525300.1724@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83c7e4977221da397ac37119c50a1b21cc6a6677
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 4 14:37:05 2018 +0000

    x86/alternatives: Add missing '\n' at end of ALTERNATIVE inline asm
    
    commit b9e705ef7cfaf22db0daab91ad3cd33b0fa32eb9 upstream.
    
    Where an ALTERNATIVE is used in the middle of an inline asm block, this
    would otherwise lead to the following instruction being appended directly
    to the trailing ".popsection", and a failed compile.
    
    Fixes: 9cebed423c84 ("x86, alternative: Use .pushsection/.popsection")
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: ak@linux.intel.com
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Paul Turner <pjt@google.com>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Link: https://lkml.kernel.org/r/20180104143710.8961-8-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98f42e3f849412895171d096b901bfa3ff0fe004
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 4 22:19:04 2018 +0100

    x86/tlb: Drop the _GPL from the cpu_tlbstate export
    
    commit 1e5476815fd7f98b888e01a0f9522b63085f96c9 upstream.
    
    The recent changes for PTI touch cpu_tlbstate from various tlb_flush
    inlines. cpu_tlbstate is exported as GPL symbol, so this causes a
    regression when building out of tree drivers for certain graphics cards.
    
    Aside of that the export was wrong since it was introduced as it should
    have been EXPORT_PER_CPU_SYMBOL_GPL().
    
    Use the correct PER_CPU export and drop the _GPL to restore the previous
    state which allows users to utilize the cards they payed for.
    
    As always I'm really thrilled to make this kind of change to support the
    #friends (or however the hot hashtag of today is spelled) from that closet
    sauce graphics corp.
    
    Fixes: 1e02ce4cccdc ("x86: Store a per-cpu shadow copy of CR4")
    Fixes: 6fd166aae78c ("x86/mm: Use/Fix PCID to optimize user/kernel switches")
    Reported-by: Kees Cook <keescook@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4660939afccbe1d2af5d066d1337f1b29c87ae8
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jan 4 18:07:12 2018 +0100

    x86/events/intel/ds: Use the proper cache flush method for mapping ds buffers
    
    commit 42f3bdc5dd962a5958bc024c1e1444248a6b8b4a upstream.
    
    Thomas reported the following warning:
    
     BUG: using smp_processor_id() in preemptible [00000000] code: ovsdb-server/4498
     caller is native_flush_tlb_single+0x57/0xc0
     native_flush_tlb_single+0x57/0xc0
     __set_pte_vaddr+0x2d/0x40
     set_pte_vaddr+0x2f/0x40
     cea_set_pte+0x30/0x40
     ds_update_cea.constprop.4+0x4d/0x70
     reserve_ds_buffers+0x159/0x410
     x86_reserve_hardware+0x150/0x160
     x86_pmu_event_init+0x3e/0x1f0
     perf_try_init_event+0x69/0x80
     perf_event_alloc+0x652/0x740
     SyS_perf_event_open+0x3f6/0xd60
     do_syscall_64+0x5c/0x190
    
    set_pte_vaddr is used to map the ds buffers into the cpu entry area, but
    there are two problems with that:
    
     1) The resulting flush is not supposed to be called in preemptible context
    
     2) The cpu entry area is supposed to be per CPU, but the debug store
        buffers are mapped for all CPUs so these mappings need to be flushed
        globally.
    
    Add the necessary preemption protection across the mapping code and flush
    TLBs globally.
    
    Fixes: c1961a4631da ("x86/events/intel/ds: Map debug buffers in cpu_entry_area")
    Reported-by: Thomas Zeitlhofer <thomas.zeitlhofer+lkml@ze-it.at>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Thomas Zeitlhofer <thomas.zeitlhofer+lkml@ze-it.at>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Hugh Dickins <hughd@google.com>
    Link: https://lkml.kernel.org/r/20180104170712.GB3040@hirez.programming.kicks-ass.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67f67244f80a37fba03c9e6011853dba94952c7c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 4 12:32:03 2018 +0100

    x86/kaslr: Fix the vaddr_end mess
    
    commit 1dddd25125112ba49706518ac9077a1026a18f37 upstream.
    
    vaddr_end for KASLR is only documented in the KASLR code itself and is
    adjusted depending on config options. So it's not surprising that a change
    of the memory layout causes KASLR to have the wrong vaddr_end. This can map
    arbitrary stuff into other areas causing hard to understand problems.
    
    Remove the whole ifdef magic and define the start of the cpu_entry_area to
    be the end of the KASLR vaddr range.
    
    Add documentation to that effect.
    
    Fixes: 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Reported-by: Benjamin Gilbert <benjamin.gilbert@coreos.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Benjamin Gilbert <benjamin.gilbert@coreos.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Garnier <thgarnie@google.com>
    Cc: Alexander Kuleshov <kuleshovmail@gmail.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801041320360.1771@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1af9b74bfa59250f69578f6e6424aae7cb46d063
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 4 13:01:40 2018 +0100

    x86/mm: Map cpu_entry_area at the same place on 4/5 level
    
    commit f2078904810373211fb15f91888fba14c01a4acc upstream.
    
    There is no reason for 4 and 5 level pagetables to have a different
    layout. It just makes determining vaddr_end for KASLR harder than
    necessary.
    
    Fixes: 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Benjamin Gilbert <benjamin.gilbert@coreos.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Garnier <thgarnie@google.com>
    Cc: Alexander Kuleshov <kuleshovmail@gmail.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801041320360.1771@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7adf28df2f0bdeb2141f6e8edc2b746d4a6cc11f
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Thu Dec 28 19:06:20 2017 +0300

    x86/mm: Set MODULES_END to 0xffffffffff000000
    
    commit f5a40711fa58f1c109165a4fec6078bf2dfd2bdc upstream.
    
    Since f06bdd4001c2 ("x86/mm: Adapt MODULES_END based on fixmap section size")
    kasan_mem_to_shadow(MODULES_END) could be not aligned to a page boundary.
    
    So passing page unaligned address to kasan_populate_zero_shadow() have two
    possible effects:
    
    1) It may leave one page hole in supposed to be populated area. After commit
      21506525fb8d ("x86/kasan/64: Teach KASAN about the cpu_entry_area") that
      hole happens to be in the shadow covering fixmap area and leads to crash:
    
     BUG: unable to handle kernel paging request at fffffbffffe8ee04
     RIP: 0010:check_memory_region+0x5c/0x190
    
     Call Trace:
      <NMI>
      memcpy+0x1f/0x50
      ghes_copy_tofrom_phys+0xab/0x180
      ghes_read_estatus+0xfb/0x280
      ghes_notify_nmi+0x2b2/0x410
      nmi_handle+0x115/0x2c0
      default_do_nmi+0x57/0x110
      do_nmi+0xf8/0x150
      end_repeat_nmi+0x1a/0x1e
    
    Note, the crash likely disappeared after commit 92a0f81d8957, which
    changed kasan_populate_zero_shadow() call the way it was before
    commit 21506525fb8d.
    
    2) Attempt to load module near MODULES_END will fail, because
       __vmalloc_node_range() called from kasan_module_alloc() will hit the
       WARN_ON(!pte_none(*pte)) in the vmap_pte_range() and bail out with error.
    
    To fix this we need to make kasan_mem_to_shadow(MODULES_END) page aligned
    which means that MODULES_END should be 8*PAGE_SIZE aligned.
    
    The whole point of commit f06bdd4001c2 was to move MODULES_END down if
    NR_CPUS is big, so the cpu_entry_area takes a lot of space.
    But since 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    the cpu_entry_area is no longer in fixmap, so we could just set
    MODULES_END to a fixed 8*PAGE_SIZE aligned address.
    
    Fixes: f06bdd4001c2 ("x86/mm: Adapt MODULES_END based on fixmap section size")
    Reported-by: Jakub Kicinski <kubakici@wp.pl>
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Thomas Garnier <thgarnie@google.com>
    Link: https://lkml.kernel.org/r/20171228160620.23818-1-aryabinin@virtuozzo.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d577afdee3540808302d9dc7a0a7be96c91178f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Jan 5 15:48:59 2018 +0100

    Linux 4.14.12

commit 566fb9906ee25a697f4b694dd624398712adf00b
Author: Troy Kisky <troy.kisky@boundarydevices.com>
Date:   Thu Nov 2 18:58:16 2017 -0700

    rtc: m41t80: remove unneeded checks from m41t80_sqw_set_rate
    
    commit 05a03bf260e0480bfc0db91b1fdbc2115e3f193b upstream.
    
    m41t80_sqw_set_rate will be called with the result from
    m41t80_sqw_round_rate, so might as well make
    m41t80_sqw_set_rate(n) same as
    m41t80_sqw_set_rate(m41t80_sqw_round_rate(n))
    
    As Russell King wrote[1],
    "clk_round_rate() is supposed to tell you what you end up with if you
    ask clk_set_rate() to set the exact same value you passed in - but
    clk_round_rate() won't modify the hardware."
    
    [1]
    http://lists.infradead.org/pipermail/linux-arm-kernel/2012-January/080175.html
    
    Signed-off-by: Troy Kisky <troy.kisky@boundarydevices.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Cc: Christoph Fritz <chf.fritz@googlemail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7623bd95a6dccf74e30a21e437f2f789fbbe27f7
Author: Troy Kisky <troy.kisky@boundarydevices.com>
Date:   Thu Nov 2 18:58:15 2017 -0700

    rtc: m41t80: avoid i2c read in m41t80_sqw_is_prepared
    
    commit 13bb1d78f2e372ec0d9b30489ac63768240140fc upstream.
    
    This is a little more efficient and avoids the warning
    
     WARNING: possible circular locking dependency detected
     4.14.0-rc7-00010 #16 Not tainted
     ------------------------------------------------------
     kworker/2:1/70 is trying to acquire lock:
      (prepare_lock){+.+.}, at: [<c049300c>] clk_prepare_lock+0x80/0xf4
    
     but task is already holding lock:
      (i2c_register_adapter){+.+.}, at: [<c0690b04>]
                    i2c_adapter_lock_bus+0x14/0x18
    
     which lock already depends on the new lock.
    
     the existing dependency chain (in reverse order) is:
    
     -> #1 (i2c_register_adapter){+.+.}:
            rt_mutex_lock+0x44/0x5c
            i2c_adapter_lock_bus+0x14/0x18
            i2c_transfer+0xa8/0xbc
            i2c_smbus_xfer+0x20c/0x5d8
            i2c_smbus_read_byte_data+0x38/0x48
            m41t80_sqw_is_prepared+0x18/0x28
    
    Signed-off-by: Troy Kisky <troy.kisky@boundarydevices.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Cc: Christoph Fritz <chf.fritz@googlemail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11118640ae1705c57699a394d0754d4c699772c6
Author: Troy Kisky <troy.kisky@boundarydevices.com>
Date:   Thu Nov 2 18:58:14 2017 -0700

    rtc: m41t80: avoid i2c read in m41t80_sqw_recalc_rate
    
    commit 2cb90ed3de1e279dbaf23df141f54eb9fb1861e6 upstream.
    
    This is a little more efficient, and avoids the warning
    
     WARNING: possible circular locking dependency detected
     4.14.0-rc7-00007 #14 Not tainted
     ------------------------------------------------------
     alsactl/330 is trying to acquire lock:
     (prepare_lock){+.+.}, at: [<c049300c>] clk_prepare_lock+0x80/0xf4
    
     but task is already holding lock:
     (i2c_register_adapter){+.+.}, at: [<c0690ae0>]
                    i2c_adapter_lock_bus+0x14/0x18
    
     which lock already depends on the new lock.
    
     the existing dependency chain (in reverse order) is:
    
     -> #1 (i2c_register_adapter){+.+.}:
            rt_mutex_lock+0x44/0x5c
            i2c_adapter_lock_bus+0x14/0x18
            i2c_transfer+0xa8/0xbc
            i2c_smbus_xfer+0x20c/0x5d8
            i2c_smbus_read_byte_data+0x38/0x48
            m41t80_sqw_recalc_rate+0x24/0x58
    
    Signed-off-by: Troy Kisky <troy.kisky@boundarydevices.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Cc: Christoph Fritz <chf.fritz@googlemail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8932255e96ecd172783c2c5a3a414066bda844cf
Author: Troy Kisky <troy.kisky@boundarydevices.com>
Date:   Thu Nov 2 18:58:13 2017 -0700

    rtc: m41t80: fix m41t80_sqw_round_rate return value
    
    commit c8384bb04261b9d32fe7402a6068ddaf38913b23 upstream.
    
    Previously it was returning the best of
    32768, 8192, 1024, 64, 2, 0
    
    Now, best of
    32768, 8192, 4096, 2048, 1024, 512, 256, 128,
    64, 32, 16, 8, 4, 2, 1, 0
    
    Signed-off-by: Troy Kisky <troy.kisky@boundarydevices.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Cc: Christoph Fritz <chf.fritz@googlemail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56073ba4e7068a737a225631b5b642a2cd105b7a
Author: Troy Kisky <troy.kisky@boundarydevices.com>
Date:   Thu Nov 2 18:58:12 2017 -0700

    rtc: m41t80: m41t80_sqw_set_rate should return 0 on success
    
    commit de6042d2fa8afe22b76e3c68fd6e9584c9415a3b upstream.
    
    Previously it was returning -EINVAL upon success.
    
    Signed-off-by: Troy Kisky <troy.kisky@boundarydevices.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Cc: Christoph Fritz <chf.fritz@googlemail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d01ac8cc12b973668bf898b03bf9ffb12d83b83
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Wed Nov 15 06:40:57 2017 +0100

    Revert "xfrm: Fix stack-out-of-bounds read in xfrm_state_find."
    
    commit 94802151894d482e82c324edf2c658f8e6b96508 upstream.
    
    This reverts commit c9f3f813d462c72dbe412cee6a5cbacf13c4ad5e.
    
    This commit breaks transport mode when the policy template
    has widlcard addresses configured, so revert it.
    
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: From: Derek Robson <robsonde@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88dff1ab04d2792492e3f7e166d039f0dc4e1a09
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Wed Jan 3 12:39:52 2018 -0800

    x86/process: Define cpu_tss_rw in same section as declaration
    
    commit 2fd9c41aea47f4ad071accf94b94f94f2c4d31eb upstream.
    
    cpu_tss_rw is declared with DECLARE_PER_CPU_PAGE_ALIGNED
    but then defined with DEFINE_PER_CPU_SHARED_ALIGNED
    leading to section mismatch warnings.
    
    Use DEFINE_PER_CPU_PAGE_ALIGNED consistently. This is necessary because
    it's mapped to the cpu entry area and must be page aligned.
    
    [ tglx: Massaged changelog a bit ]
    
    Fixes: 1a935bc3d4ea ("x86/entry: Move SYSENTER_stack to the beginning of struct tss_struct")
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: thomas.lendacky@amd.com
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: tklauser@distanz.ch
    Cc: minipli@googlemail.com
    Cc: me@kylehuey.com
    Cc: namit@vmware.com
    Cc: luto@kernel.org
    Cc: jpoimboe@redhat.com
    Cc: tj@kernel.org
    Cc: cl@linux.com
    Cc: bp@suse.de
    Cc: thgarnie@google.com
    Cc: kirill.shutemov@linux.intel.com
    Link: https://lkml.kernel.org/r/20180103203954.183360-1-ndesaulniers@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7930cb29fb5feb6d18ffc20a83a1d3e5afac7a8a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Jan 3 19:52:04 2018 +0100

    x86/pti: Switch to kernel CR3 at early in entry_SYSCALL_compat()
    
    commit d7732ba55c4b6a2da339bb12589c515830cfac2c upstream.
    
    The preparation for PTI which added CR3 switching to the entry code
    misplaced the CR3 switch in entry_SYSCALL_compat().
    
    With PTI enabled the entry code tries to access a per cpu variable after
    switching to kernel GS. This fails because that variable is not mapped to
    user space. This results in a double fault and in the worst case a kernel
    crash.
    
    Move the switch ahead of the access and clobber RSP which has been saved
    already.
    
    Fixes: 8a09317b895f ("x86/mm/pti: Prepare the x86/entry assembly code for entry/exit CR3 switching")
    Reported-by: Lars Wendler <wendler.lars@web.de>
    Reported-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Betkov <bp@alien8.de>
    Cc: Andy Lutomirski <luto@kernel.org>,
    Cc: Dave Hansen <dave.hansen@linux.intel.com>,
    Cc: Peter Zijlstra <peterz@infradead.org>,
    Cc: Greg KH <gregkh@linuxfoundation.org>, ,
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>,
    Cc: Juergen Gross <jgross@suse.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801031949200.1957@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89c96233a9ed8ee76d6e8e6a13ea19b92971d33f
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Sun Dec 31 10:18:07 2017 -0600

    x86/dumpstack: Print registers for first stack frame
    
    commit 3ffdeb1a02be3086f1411a15c5b9c481fa28e21f upstream.
    
    In the stack dump code, if the frame after the starting pt_regs is also
    a regs frame, the registers don't get printed.  Fix that.
    
    Reported-by: Andy Lutomirski <luto@amacapital.net>
    Tested-by: Alexander Tsoy <alexander@tsoy.me>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Toralf Förster <toralf.foerster@gmx.de>
    Fixes: 3b3fa11bc700 ("x86/dumpstack: Print any pt_regs found on the stack")
    Link: http://lkml.kernel.org/r/396f84491d2f0ef64eda4217a2165f5712f6a115.1514736742.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a841ba8f4d7e37acc9d46f982f418ee8e876a752
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Sun Dec 31 10:18:06 2017 -0600

    x86/dumpstack: Fix partial register dumps
    
    commit a9cdbe72c4e8bf3b38781c317a79326e2e1a230d upstream.
    
    The show_regs_safe() logic is wrong.  When there's an iret stack frame,
    it prints the entire pt_regs -- most of which is random stack data --
    instead of just the five registers at the end.
    
    show_regs_safe() is also poorly named: the on_stack() checks aren't for
    safety.  Rename the function to show_regs_if_on_stack() and add a
    comment to explain why the checks are needed.
    
    These issues were introduced with the "partial register dump" feature of
    the following commit:
    
      b02fcf9ba121 ("x86/unwinder: Handle stack overflows more gracefully")
    
    That patch had gone through a few iterations of development, and the
    above issues were artifacts from a previous iteration of the patch where
    'regs' pointed directly to the iret frame rather than to the (partially
    empty) pt_regs.
    
    Tested-by: Alexander Tsoy <alexander@tsoy.me>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Toralf Förster <toralf.foerster@gmx.de>
    Fixes: b02fcf9ba121 ("x86/unwinder: Handle stack overflows more gracefully")
    Link: http://lkml.kernel.org/r/5b05b8b344f59db2d3d50dbdeba92d60f2304c54.1514736742.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 211ad3fdf63383772d492add846da4b0b2266531
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Jan 3 15:57:59 2018 +0100

    x86/pti: Make sure the user/kernel PTEs match
    
    commit 52994c256df36fda9a715697431cba9daecb6b11 upstream.
    
    Meelis reported that his K8 Athlon64 emits MCE warnings when PTI is
    enabled:
    
    [Hardware Error]: Error Addr: 0x0000ffff81e000e0
    [Hardware Error]: MC1 Error: L1 TLB multimatch.
    [Hardware Error]: cache level: L1, tx: INSN
    
    The address is in the entry area, which is mapped into kernel _AND_ user
    space. That's special because we switch CR3 while we are executing
    there.
    
    User mapping:
    0xffffffff81e00000-0xffffffff82000000           2M     ro         PSE     GLB x  pmd
    
    Kernel mapping:
    0xffffffff81000000-0xffffffff82000000          16M     ro         PSE         x  pmd
    
    So the K8 is complaining that the TLB entries differ. They differ in the
    GLB bit.
    
    Drop the GLB bit when installing the user shared mapping.
    
    Fixes: 6dc72c3cbca0 ("x86/mm/pti: Share entry text PMD")
    Reported-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Meelis Roos <mroos@linux.ee>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801031407180.1957@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 151d7039757b71ebd9d170af0944562f51149372
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Tue Dec 26 23:43:54 2017 -0600

    x86/cpu, x86/pti: Do not enable PTI on AMD processors
    
    commit 694d99d40972f12e59a3696effee8a376b79d7c8 upstream.
    
    AMD processors are not subject to the types of attacks that the kernel
    page table isolation feature protects against.  The AMD microarchitecture
    does not allow memory references, including speculative references, that
    access higher privileged data when running in a lesser privileged mode
    when that access would result in a page fault.
    
    Disable page table isolation by default on AMD processors by not setting
    the X86_BUG_CPU_INSECURE feature, which controls whether X86_FEATURE_PTI
    is set.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Link: https://lkml.kernel.org/r/20171227054354.20369.94587.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df4373c513b310d75aafeb8902917e7f8d0fe6a5
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Jan 1 09:28:31 2018 -0600

    capabilities: fix buffer overread on very short xattr
    
    commit dc32b5c3e6e2ef29cef76d9ce1b92d394446150e upstream.
    
    If userspace attempted to set a "security.capability" xattr shorter than
    4 bytes (e.g. 'setfattr -n security.capability -v x file'), then
    cap_convert_nscap() read past the end of the buffer containing the xattr
    value because it accessed the ->magic_etc field without verifying that
    the xattr value is long enough to contain that field.
    
    Fix it by validating the xattr value size first.
    
    This bug was found using syzkaller with KASAN.  The KASAN report was as
    follows (cleaned up slightly):
    
        BUG: KASAN: slab-out-of-bounds in cap_convert_nscap+0x514/0x630 security/commoncap.c:498
        Read of size 4 at addr ffff88002d8741c0 by task syz-executor1/2852
    
        CPU: 0 PID: 2852 Comm: syz-executor1 Not tainted 4.15.0-rc6-00200-gcc0aac99d977 #253
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
        Call Trace:
         __dump_stack lib/dump_stack.c:17 [inline]
         dump_stack+0xe3/0x195 lib/dump_stack.c:53
         print_address_description+0x73/0x260 mm/kasan/report.c:252
         kasan_report_error mm/kasan/report.c:351 [inline]
         kasan_report+0x235/0x350 mm/kasan/report.c:409
         cap_convert_nscap+0x514/0x630 security/commoncap.c:498
         setxattr+0x2bd/0x350 fs/xattr.c:446
         path_setxattr+0x168/0x1b0 fs/xattr.c:472
         SYSC_setxattr fs/xattr.c:487 [inline]
         SyS_setxattr+0x36/0x50 fs/xattr.c:483
         entry_SYSCALL_64_fastpath+0x18/0x85
    
    Fixes: 8db6c34f1dbc ("Introduce v3 namespaced file capabilities")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Serge Hallyn <serge@hallyn.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 611583d327961acad4405063fc7c690ac2cf21c3
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Jan 2 15:21:33 2018 -0800

    exec: Weaken dumpability for secureexec
    
    commit e816c201aed5232171f8eb80b5d46ae6516683b9 upstream.
    
    This is a logical revert of commit e37fdb785a5f ("exec: Use secureexec
    for setting dumpability")
    
    This weakens dumpability back to checking only for uid/gid changes in
    current (which is useless), but userspace depends on dumpability not
    being tied to secureexec.
    
      https://bugzilla.redhat.com/show_bug.cgi?id=1528633
    
    Reported-by: Tom Horsley <horsley1953@gmail.com>
    Fixes: e37fdb785a5f ("exec: Use secureexec for setting dumpability")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d59679df5b53755c00ea0292df696f97bfc950d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jan 2 20:31:17 2018 +0100

    Linux 4.14.11

commit 3ade66602bb7ea348ed8cbafcdd56eb1826c2177
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Nov 3 15:18:05 2017 +0100

    tty: fix tty_ldisc_receive_buf() documentation
    
    commit e7e51dcf3b8a5f65c5653a054ad57eb2492a90d0 upstream.
    
    The tty_ldisc_receive_buf() helper returns the number of bytes
    processed so drop the bogus "not" from the kernel doc comment.
    
    Fixes: 8d082cd300ab ("tty: Unify receive_buf() code paths")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aaa5a91ff744f91fb1d1c91853aa0c8f126be563
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Dec 20 17:57:06 2017 -0800

    n_tty: fix EXTPROC vs ICANON interaction with TIOCINQ (aka FIONREAD)
    
    commit 966031f340185eddd05affcf72b740549f056348 upstream.
    
    We added support for EXTPROC back in 2010 in commit 26df6d13406d ("tty:
    Add EXTPROC support for LINEMODE") and the intent was to allow it to
    override some (all?) ICANON behavior.  Quoting from that original commit
    message:
    
             There is a new bit in the termios local flag word, EXTPROC.
             When this bit is set, several aspects of the terminal driver
             are disabled.  Input line editing, character echo, and mapping
             of signals are all disabled.  This allows the telnetd to turn
             off these functions when in linemode, but still keep track of
             what state the user wants the terminal to be in.
    
    but the problem turns out that "several aspects of the terminal driver
    are disabled" is a bit ambiguous, and you can really confuse the n_tty
    layer by setting EXTPROC and then causing some of the ICANON invariants
    to no longer be maintained.
    
    This fixes at least one such case (TIOCINQ) becoming unhappy because of
    the confusion over whether ICANON really means ICANON when EXTPROC is set.
    
    This basically makes TIOCINQ match the case of read: if EXTPROC is set,
    we ignore ICANON.  Also, make sure to reset the ICANON state ie EXTPROC
    changes, not just if ICANON changes.
    
    Fixes: 26df6d13406d ("tty: Add EXTPROC support for LINEMODE")
    Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Cc: Jiri Slaby <jslaby@suse.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57849de13c7da3385611a1b9aca5c6040ef7dfe2
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Dec 31 16:52:15 2017 +0100

    x86/ldt: Make LDT pgtable free conditional
    
    commit 7f414195b0c3612acd12b4611a5fe75995cf10c7 upstream.
    
    Andy prefers to be paranoid about the pagetable free in the error path of
    write_ldt(). Make it conditional and warn whenever the installment of a
    secondary LDT fails.
    
    Requested-by: Andy Lutomirski <luto@amacapital.net>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e133155f22d59b0085ef63cbcbcfbd96c4d0b70
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Dec 31 11:24:34 2017 +0100

    x86/ldt: Plug memory leak in error path
    
    commit a62d69857aab4caa43049e72fe0ed5c4a60518dd upstream.
    
    The error path in write_ldt() tries to free 'old_ldt' instead of the newly
    allocated 'new_ldt', resulting in a memory leak. It also misses to clean up a
    half populated LDT pagetable, which is not a leak as it gets cleaned up
    when the process exits.
    
    Free both the potentially half populated LDT pagetable and the newly
    allocated LDT struct. This can be done unconditionally because once an LDT
    is mapped subsequent maps will succeed, because the PTE page is already
    populated and the two LDTs fit into that single page.
    
    Reported-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: f55f0501cbf6 ("x86/pti: Put the LDT in its own PGD if PTI is on")
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1712311121340.1899@nanos
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf6c3f7f4b1305596e261fb90201b737ad79e0d6
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Dec 12 07:56:36 2017 -0800

    x86/espfix/64: Fix espfix double-fault handling on 5-level systems
    
    commit c739f930be1dd5fd949030e3475a884fe06dae9b upstream.
    
    Using PGDIR_SHIFT to identify espfix64 addresses on 5-level systems
    was wrong, and it resulted in panics due to unhandled double faults.
    Use P4D_SHIFT instead, which is correct on 4-level and 5-level
    machines.
    
    This fixes a panic when running x86 selftests on 5-level machines.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Kirill A. Shutemov <kirill@shutemov.name>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 1d33b219563f ("x86/espfix: Add support for 5-level paging")
    Link: http://lkml.kernel.org/r/24c898b4f44fdf8c22d93703850fb384ef87cfdc.1513035461.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 530f5fa1600b6af56b138f9fb87b7f5148c979a0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Dec 27 11:48:50 2017 -0800

    x86-32: Fix kexec with stack canary (CONFIG_CC_STACKPROTECTOR)
    
    commit ac461122c88a10b7d775de2f56467f097c9e627a upstream.
    
    Commit e802a51ede91 ("x86/idt: Consolidate IDT invalidation") cleaned up
    and unified the IDT invalidation that existed in a couple of places.  It
    changed no actual real code.
    
    Despite not changing any actual real code, it _did_ change code generation:
    by implementing the common idt_invalidate() function in
    archx86/kernel/idt.c, it made the use of the function in
    arch/x86/kernel/machine_kexec_32.c be a real function call rather than an
    (accidental) inlining of the function.
    
    That, in turn, exposed two issues:
    
     - in load_segments(), we had incorrectly reset all the segment
       registers, which then made the stack canary load (which gcc does
       using offset of %gs) cause a trap.  Instead of %gs pointing to the
       stack canary, it will be the normal zero-based kernel segment, and
       the stack canary load will take a page fault at address 0x14.
    
     - to make this even harder to debug, we had invalidated the GDT just
       before calling idt_invalidate(), which meant that the fault happened
       with an invalid GDT, which in turn causes a triple fault and
       immediate reboot.
    
    Fix this by
    
     (a) not reloading the special segments in load_segments(). We currently
         don't do any percpu accesses (which would require %fs on x86-32) in
         this area, but there's no reason to think that we might not want to
         do them, and like %gs, it's pointless to break it.
    
     (b) doing idt_invalidate() before invalidating the GDT, to keep things
         at least _slightly_ more debuggable for a bit longer. Without a
         IDT, traps will not work. Without a GDT, traps also will not work,
         but neither will any segment loads etc. So in a very real sense,
         the GDT is even more core than the IDT.
    
    Fixes: e802a51ede91 ("x86/idt: Consolidate IDT invalidation")
    Reported-and-tested-by: Alexandru Chirvasitu <achirvasub@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Link: https://lkml.kernel.org/r/alpine.LFD.2.21.1712271143180.8572@i7.lan
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 082b7521a541a66f1fed68b1f76de6a3b910495e
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Dec 30 22:13:54 2017 +0100

    x86/mm: Remove preempt_disable/enable() from __native_flush_tlb()
    
    commit decab0888e6e14e11d53cefa85f8b3d3b45ce73c upstream.
    
    The preempt_disable/enable() pair in __native_flush_tlb() was added in
    commit:
    
      5cf0791da5c1 ("x86/mm: Disable preemption during CR3 read+write")
    
    ... to protect the UP variant of flush_tlb_mm_range().
    
    That preempt_disable/enable() pair should have been added to the UP variant
    of flush_tlb_mm_range() instead.
    
    The UP variant was removed with commit:
    
      ce4a4e565f52 ("x86/mm: Remove the UP asm/tlbflush.h code, always use the (formerly) SMP code")
    
    ... but the preempt_disable/enable() pair stayed around.
    
    The latest change to __native_flush_tlb() in commit:
    
      6fd166aae78c ("x86/mm: Use/Fix PCID to optimize user/kernel switches")
    
    ... added an access to a per CPU variable outside the preempt disabled
    regions, which makes no sense at all. __native_flush_tlb() must always
    be called with at least preemption disabled.
    
    Remove the preempt_disable/enable() pair and add a WARN_ON_ONCE() to catch
    bad callers independent of the smp_processor_id() debugging.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20171230211829.679325424@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5bef29785ff990a90238d4f59ccbeb656134eeb
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Dec 30 22:13:53 2017 +0100

    x86/smpboot: Remove stale TLB flush invocations
    
    commit 322f8b8b340c824aef891342b0f5795d15e11562 upstream.
    
    smpboot_setup_warm_reset_vector() and smpboot_restore_warm_reset_vector()
    invoke local_flush_tlb() for no obvious reason.
    
    Digging in history revealed that the original code in the 2.1 era added
    those because the code manipulated a swapper_pg_dir pagetable entry. The
    pagetable manipulation was removed long ago in the 2.3 timeframe, but the
    TLB flush invocations stayed around forever.
    
    Remove them along with the pointless pr_debug()s which come from the same 2.1
    change.
    
    Reported-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20171230211829.586548655@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e798502cfb471b95153de2f75a89501c45ec997a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Dec 22 15:51:13 2017 +0100

    nohz: Prevent a timer interrupt storm in tick_nohz_stop_sched_tick()
    
    commit 5d62c183f9e9df1deeea0906d099a94e8a43047a upstream.
    
    The conditions in irq_exit() to invoke tick_nohz_irq_exit() which
    subsequently invokes tick_nohz_stop_sched_tick() are:
    
      if ((idle_cpu(cpu) && !need_resched()) || tick_nohz_full_cpu(cpu))
    
    If need_resched() is not set, but a timer softirq is pending then this is
    an indication that the softirq code punted and delegated the execution to
    softirqd. need_resched() is not true because the current interrupted task
    takes precedence over softirqd.
    
    Invoking tick_nohz_irq_exit() in this case can cause an endless loop of
    timer interrupts because the timer wheel contains an expired timer, but
    softirqs are not yet executed. So it returns an immediate expiry request,
    which causes the timer to fire immediately again. Lather, rinse and
    repeat....
    
    Prevent that by adding a check for a pending timer soft interrupt to the
    conditions in tick_nohz_stop_sched_tick() which avoid calling
    get_next_timer_interrupt(). That keeps the tick sched timer on the tick and
    prevents a repetitive programming of an already expired timer.
    
    Reported-by: Sebastian Siewior <bigeasy@linutronix.d>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Paul McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Cc: Sebastian Siewior <bigeasy@linutronix.de>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1712272156050.2431@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a3ce39c2bcac61abcb4650b33945335a02ef6cd
Author: Sushmita Susheelendra <ssusheel@codeaurora.org>
Date:   Fri Dec 15 13:59:13 2017 -0700

    staging: android: ion: Fix dma direction for dma_sync_sg_for_cpu/device
    
    commit d6b246bb7a29703f53aa4c050b8b3205d749caee upstream.
    
    Use the direction argument passed into begin_cpu_access
    and end_cpu_access when calling the dma_sync_sg_for_cpu/device.
    The actual cache primitive called depends on the direction
    passed in.
    
    Signed-off-by: Sushmita Susheelendra <ssusheel@codeaurora.org>
    Acked-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2695c0f1f71e6022a6916584a4d19de8968e97c3
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Fri Nov 17 11:56:41 2017 +0000

    drivers: base: cacheinfo: fix cache type for non-architected system cache
    
    commit f57ab9a01a36ef3454333251cc57e3a9948b17bf upstream.
    
    Commit dfea747d2aba ("drivers: base: cacheinfo: support DT overrides for
    cache properties") doesn't initialise the cache type if it's present
    only in DT and the architecture is not aware of it. They are unified
    system level cache which are generally transparent.
    
    This patch check if the cache type is set to NOCACHE but the DT node
    indicates that it's unified cache and sets the cache type accordingly.
    
    Fixes: dfea747d2aba ("drivers: base: cacheinfo: support DT overrides for cache properties")
    Reported-and-tested-by: Tan Xiaojun <tanxiaojun@huawei.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3f5fa872d09109edfd7c10c57865301fee396d4
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Nov 15 10:43:16 2017 +0100

    phy: tegra: fix device-tree node lookups
    
    commit 046046737bd35bed047460f080ea47e186be731e upstream.
    
    Fix child-node lookups during probe, which ended up searching the whole
    device tree depth-first starting at the parents rather than just
    matching on their children.
    
    To make things worse, some parent nodes could end up being being
    prematurely freed (by tegra_xusb_pad_register()) as
    of_find_node_by_name() drops a reference to its first argument.
    
    Fixes: 53d2a715c240 ("phy: Add Tegra XUSB pad controller support")
    Cc: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d87f1bc7d15b89bd3bcf31020eb7f3b3cd6f84b5
Author: Todd Kjos <tkjos@android.com>
Date:   Mon Nov 27 09:32:33 2017 -0800

    binder: fix proc->files use-after-free
    
    commit 7f3dc0088b98533f17128058fac73cd8b2752ef1 upstream.
    
    proc->files cleanup is initiated by binder_vma_close. Therefore
    a reference on the binder_proc is not enough to prevent the
    files_struct from being released while the binder_proc still has
    a reference. This can lead to an attempt to dereference the
    stale pointer obtained from proc->files prior to proc->files
    cleanup. This has been seen once in task_get_unused_fd_flags()
    when __alloc_fd() is called with a stale "files".
    
    The fix is to protect proc->files with a mutex to prevent cleanup
    while in use.
    
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fae6de72ad44e98b5ae58a662d110c58594aad9
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Dec 27 21:37:25 2017 +0100

    timers: Reinitialize per cpu bases on hotplug
    
    commit 26456f87aca7157c057de65c9414b37f1ab881d1 upstream.
    
    The timer wheel bases are not (re)initialized on CPU hotplug. That leaves
    them with a potentially stale clk and next_expiry valuem, which can cause
    trouble then the CPU is plugged.
    
    Add a prepare callback which forwards the clock, sets next_expiry to far in
    the future and reset the control flags to a known state.
    
    Set base->must_forward_clk so the first timer which is queued will try to
    forward the clock to current jiffies.
    
    Fixes: 500462a9de65 ("timers: Switch to a non-cascading wheel")
    Reported-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Sebastian Siewior <bigeasy@linutronix.de>
    Cc: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1712272152200.2431@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f1aa64ab08621cc3d2b1600ab80da5d3128abb6
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Dec 22 15:51:14 2017 +0100

    timers: Invoke timer_start_debug() where it makes sense
    
    commit fd45bb77ad682be728d1002431d77b8c73342836 upstream.
    
    The timer start debug function is called before the proper timer base is
    set. As a consequence the trace data contains the stale CPU and flags
    values.
    
    Call the debug function after setting the new base and flags.
    
    Fixes: 500462a9de65 ("timers: Switch to a non-cascading wheel")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Sebastian Siewior <bigeasy@linutronix.de>
    Cc: rt@linutronix.de
    Cc: Paul McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Link: https://lkml.kernel.org/r/20171222145337.792907137@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4fb2e7e92ec638f0bd489c56b4b6d9004fd1f40
Author: Anna-Maria Gleixner <anna-maria@linutronix.de>
Date:   Fri Dec 22 15:51:12 2017 +0100

    timers: Use deferrable base independent of base::nohz_active
    
    commit ced6d5c11d3e7b342f1a80f908e6756ebd4b8ddd upstream.
    
    During boot and before base::nohz_active is set in the timer bases, deferrable
    timers are enqueued into the standard timer base. This works correctly as
    long as base::nohz_active is false.
    
    Once it base::nohz_active is set and a timer which was enqueued before that
    is accessed the lock selector code choses the lock of the deferred
    base. This causes unlocked access to the standard base and in case the
    timer is removed it does not clear the pending flag in the standard base
    bitmap which causes get_next_timer_interrupt() to return bogus values.
    
    To prevent that, the deferrable timers must be enqueued in the deferrable
    base, even when base::nohz_active is not set. Those deferrable timers also
    need to be expired unconditional.
    
    Fixes: 500462a9de65 ("timers: Switch to a non-cascading wheel")
    Signed-off-by: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sebastian Siewior <bigeasy@linutronix.de>
    Cc: rt@linutronix.de
    Cc: Paul McKenney <paulmck@linux.vnet.ibm.com>
    Link: https://lkml.kernel.org/r/20171222145337.633328378@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0f18aa8f70171f3e184b4185e673d7d4694300e
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Thu Dec 21 15:06:15 2017 +0200

    usb: xhci: Add XHCI_TRUST_TX_LENGTH for Renesas uPD720201
    
    commit da99706689481717998d1d48edd389f339eea979 upstream.
    
    When plugging in a USB webcam I see the following message:
    xhci_hcd 0000:04:00.0: WARN Successful completion on short TX: needs
    XHCI_TRUST_TX_LENGTH quirk?
    handle_tx_event: 913 callbacks suppressed
    
    All is quiet again with this patch (and I've done a fair but of soak
    testing with the camera since).
    
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7c4e00a66081ad6161f009a0c329b9a36085766
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Tue Dec 19 11:14:42 2017 +0200

    USB: Fix off by one in type-specific length check of BOS SSP capability
    
    commit 07b9f12864d16c3a861aef4817eb1efccbc5d0e6 upstream.
    
    USB 3.1 devices are not detected as 3.1 capable since 4.15-rc3 due to a
    off by one in commit 81cf4a45360f ("USB: core: Add type-specific length
    check of BOS descriptors")
    
    It uses USB_DT_USB_SSP_CAP_SIZE() to get SSP capability size which takes
    the zero based SSAC as argument, not the actual count of sublink speed
    attributes.
    
    USB3 spec 9.6.2.5 says "The number of Sublink Speed Attributes = SSAC + 1."
    
    The type-specific length check patch was added to stable and needs to be
    fixed there as well
    
    Fixes: 81cf4a45360f ("USB: core: Add type-specific length check of BOS descriptors")
    CC: Masakazu Mokuno <masakazu.mokuno@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2f33e5983cb1609805e267a3d2ef46d78257b2c
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Dec 12 16:11:30 2017 +0100

    usb: add RESET_RESUME for ELSA MicroLink 56K
    
    commit b9096d9f15c142574ebebe8fbb137012bb9d99c2 upstream.
    
    This modem needs this quirk to operate. It produces timeouts when
    resumed without reset.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9d02d3c5899b0abcb2df72252d7fc2f57028bfb
Author: Dmitry Fleytman Dmitry Fleytman <dmitry.fleytman@gmail.com>
Date:   Tue Dec 19 06:02:04 2017 +0200

    usb: Add device quirk for Logitech HD Pro Webcam C925e
    
    commit 7f038d256c723dd390d2fca942919573995f4cfd upstream.
    
    Commit e0429362ab15
    ("usb: Add device quirk for Logitech HD Pro Webcams C920 and C930e")
    introduced quirk to workaround an issue with some Logitech webcams.
    
    There is one more model that has the same issue - C925e, so applying
    the same quirk as well.
    
    See aforementioned commit message for detailed explanation of the problem.
    
    Signed-off-by: Dmitry Fleytman <dmitry.fleytman@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57211f0cf174f8fdf3dffcff99fad25f376bb2b5
Author: SZ Lin (林上智) <sz.lin@moxa.com>
Date:   Tue Dec 19 17:40:32 2017 +0800

    USB: serial: option: adding support for YUGA CLM920-NC5
    
    commit 3920bb713038810f25770e7545b79f204685c8f2 upstream.
    
    This patch adds support for YUGA CLM920-NC5 PID 0x9625 USB modem to option
    driver.
    
    Interface layout:
    0: QCDM/DIAG
    1: ADB
    2: MODEM
    3: AT
    4: RMNET
    
    Signed-off-by: Taiyi Wu <taiyity.wu@moxa.com>
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fa3c3b5598eec2040fa466941a59bfc15f03f17
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Thu Dec 14 16:54:45 2017 +0100

    USB: serial: option: add support for Telit ME910 PID 0x1101
    
    commit 08933099e6404f588f81c2050bfec7313e06eeaf upstream.
    
    This patch adds support for PID 0x1101 of Telit ME910.
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb6cc0af22a3b0c982e3a61de63736b2c667a94e
Author: Reinhard Speyerer <rspmn@arcor.de>
Date:   Fri Dec 15 00:39:27 2017 +0100

    USB: serial: qcserial: add Sierra Wireless EM7565
    
    commit 92a18a657fb2e2ffbfa0659af32cc18fd2346516 upstream.
    
    Sierra Wireless EM7565 devices use the QCSERIAL_SWI layout for their
    serial ports
    
    T:  Bus=01 Lev=03 Prnt=29 Port=01 Cnt=02 Dev#= 31 Spd=480  MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=1199 ProdID=9091 Rev= 0.06
    S:  Manufacturer=Sierra Wireless, Incorporated
    S:  Product=Sierra Wireless EM7565 Qualcomm Snapdragon X16 LTE-A
    S:  SerialNumber=xxxxxxxx
    C:* #Ifs= 4 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=qcserial
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=qcserial
    E:  Ad=83(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=qcserial
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 8 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    E:  Ad=86(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    E:  Ad=8e(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=0f(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    but need sendsetup = true for the NMEA port to make it work properly.
    
    Simplify the patch compared to v1 as suggested by Bjørn Mork by taking
    advantage of the fact that existing devices work with sendsetup = true
    too.
    
    Use sendsetup = true for the NMEA interface of QCSERIAL_SWI and add
    DEVICE_SWI entries for the EM7565 PID 0x9091 and the EM7565 QDL PID
    0x9090.
    
    Tests with several MC73xx/MC74xx/MC77xx devices have been performed in
    order to verify backward compatibility.
    
    Signed-off-by: Reinhard Speyerer <rspmn@arcor.de>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad61ff29f1049448fa389ba9ad464e49bdcdd61c
Author: Max Schulze <max.schulze@posteo.de>
Date:   Wed Dec 20 20:47:44 2017 +0100

    USB: serial: ftdi_sio: add id for Airbus DS P8GR
    
    commit c6a36ad383559a60a249aa6016cebf3cb8b6c485 upstream.
    
    Add AIRBUS_DS_P8GR device IDs to ftdi_sio driver.
    
    Signed-off-by: Max Schulze <max.schulze@posteo.de>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fcd9859a4b3f1df7316ff01a9993695ab929727
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Nov 13 11:12:58 2017 +0100

    USB: chipidea: msm: fix ulpi-node lookup
    
    commit 964728f9f407eca0b417fdf8e784b7a76979490c upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at the parent rather than just matching
    on its children.
    
    Note that the original premature free of the parent node has already
    been fixed separately, but that fix was apparently never backported to
    stable.
    
    Fixes: 47654a162081 ("usb: chipidea: msm: Restore wrapper settings after reset")
    Fixes: b74c43156c0c ("usb: chipidea: msm: ci_hdrc_msm_probe() missing of_node_get()")
    Cc: Stephen Boyd <stephen.boyd@linaro.org>
    Cc: Frank Rowand <frank.rowand@sony.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d6483bf78f859b827ea97a16b68cf64c3b56e67
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Mon Dec 18 17:24:22 2017 -0700

    usbip: vhci: stop printing kernel pointer addresses in messages
    
    commit 8272d099d05f7ab2776cf56a2ab9f9443be18907 upstream.
    
    Remove and/or change debug, info. and error messages to not print
    kernel pointer addresses.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed4db9a7f8cb9e83605e63e7656a6efb56846ebb
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Mon Dec 18 17:23:37 2017 -0700

    usbip: stub: stop printing kernel pointer addresses in messages
    
    commit 248a22044366f588d46754c54dfe29ffe4f8b4df upstream.
    
    Remove and/or change debug, info. and error messages to not print
    kernel pointer addresses.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b8335e48ae7171206eda3ae572f0cd0c75ca8a1
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Fri Dec 15 10:50:09 2017 -0700

    usbip: prevent leaking socket pointer address in messages
    
    commit 90120d15f4c397272aaf41077960a157fc4212bf upstream.
    
    usbip driver is leaking socket pointer address in messages. Remove
    the messages that aren't useful and print sockfd in the ones that
    are useful for debugging.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ee11dcfc9e1c894b058de64fb8b693cf697fbbe
Author: Juan Zea <juan.zea@qindel.com>
Date:   Fri Dec 15 10:21:20 2017 +0100

    usbip: fix usbip bind writing random string after command in match_busid
    
    commit 544c4605acc5ae4afe7dd5914147947db182f2fb upstream.
    
    usbip bind writes commands followed by random string when writing to
    match_busid attribute in sysfs, caused by using full variable size
    instead of string length.
    
    Signed-off-by: Juan Zea <juan.zea@qindel.com>
    Acked-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38e8981d5490b2908136baea1f9e3b84a87aec01
Author: Jan Engelhardt <jengelh@inai.de>
Date:   Mon Dec 25 03:43:53 2017 +0100

    sparc64: repair calling incorrect hweight function from stubs
    
    
    [ Upstream commit 59585b4be9ae4dc6506551709bdcd6f5210b8a01 ]
    
    Commit v4.12-rc4-1-g9289ea7f952b introduced a mistake that made the
    64-bit hweight stub call the 16-bit hweight function.
    
    Fixes: 9289ea7f952b ("sparc64: Use indirect calls in hamming weight stubs")
    Signed-off-by: Jan Engelhardt <jengelh@inai.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9edd6bf0ccb2939a7716b80d3e73a24ead9fe62
Author: Willem de Bruijn <willemb@google.com>
Date:   Thu Dec 28 12:38:13 2017 -0500

    skbuff: in skb_copy_ubufs unclone before releasing zerocopy
    
    
    skb_copy_ubufs must unclone before it is safe to modify its
    skb_shared_info with skb_zcopy_clear.
    
    Commit b90ddd568792 ("skbuff: skb_copy_ubufs must release uarg even
    without user frags") ensures that all skbs release their zerocopy
    state, even those without frags.
    
    But I forgot an edge case where such an skb arrives that is cloned.
    
    The stack does not build such packets. Vhost/tun skbs have their
    frags orphaned before cloning. TCP skbs only attach zerocopy state
    when a frag is added.
    
    But if TCP packets can be trimmed or linearized, this might occur.
    Tracing the code I found no instance so far (e.g., skb_linearize
    ends up calling skb_zcopy_clear if !skb->data_len).
    
    Still, it is non-obvious that no path exists. And it is fragile to
    rely on this.
    
    Fixes: b90ddd568792 ("skbuff: skb_copy_ubufs must release uarg even without user frags")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49cd180d4a104159f240a9a896e5f13844227378
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Dec 20 17:37:50 2017 -0500

    skbuff: skb_copy_ubufs must release uarg even without user frags
    
    
    [ Upstream commit b90ddd568792bcb0054eaf0f61785c8f80c3bd1c ]
    
    skb_copy_ubufs creates a private copy of frags[] to release its hold
    on user frags, then calls uarg->callback to notify the owner.
    
    Call uarg->callback even when no frags exist. This edge case can
    happen when zerocopy_sg_from_iter finds enough room in skb_headlen
    to copy all the data.
    
    Fixes: 3ece782693c4 ("sock: skb_copy_ubufs support for compound pages")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17155ea827b2fd81330a442ed56d0edafd9969e1
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Dec 20 17:37:49 2017 -0500

    skbuff: orphan frags before zerocopy clone
    
    
    [ Upstream commit 268b790679422a89e9ab0685d9f291edae780c98 ]
    
    Call skb_zerocopy_clone after skb_orphan_frags, to avoid duplicate
    calls to skb_uarg(skb)->callback for the same data.
    
    skb_zerocopy_clone associates skb_shinfo(skb)->uarg from frag_skb
    with each segment. This is only safe for uargs that do refcounting,
    which is those that pass skb_orphan_frags without dropping their
    shared frags. For others, skb_orphan_frags drops the user frags and
    sets the uarg to NULL, after which sock_zerocopy_clone has no effect.
    
    Qemu hangs were reported due to duplicate vhost_net_zerocopy_callback
    calls for the same data causing the vhost_net_ubuf_ref_>refcount to
    drop below zero.
    
    Link: http://lkml.kernel.org/r/<CAF=yD-LWyCD4Y0aJ9O0e_CHLR+3JOeKicRRTEVCPxgw4XOcqGQ@mail.gmail.com>
    Fixes: 1f8b977ab32d ("sock: enable MSG_ZEROCOPY")
    Reported-by: Andreas Hartmann <andihartmann@01019freenet.de>
    Reported-by: David Hill <dhill@redhat.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f5bbb29b62c818e16de49c0bbc945b501c157cf
Author: Saeed Mahameed <saeedm@mellanox.com>
Date:   Fri Nov 10 15:59:52 2017 +0900

    Revert "mlx5: move affinity hints assignments to generic code"
    
    
    [ Upstream commit 231243c82793428467524227ae02ca451e6a98e7 ]
    
    Before the offending commit, mlx5 core did the IRQ affinity itself,
    and it seems that the new generic code have some drawbacks and one
    of them is the lack for user ability to modify irq affinity after
    the initial affinity values got assigned.
    
    The issue is still being discussed and a solution in the new generic code
    is required, until then we need to revert this patch.
    
    This fixes the following issue:
    echo <new affinity> > /proc/irq/<x>/smp_affinity
    fails with  -EIO
    
    This reverts commit a435393acafbf0ecff4deb3e3cb554b34f0d0664.
    Note: kept mlx5_get_vector_affinity in include/linux/mlx5/driver.h since
    it is used in mlx5_ib driver.
    
    Fixes: a435393acafb ("mlx5: move affinity hints assignments to generic code")
    Cc: Sagi Grimberg <sagi@grimberg.me>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jes Sorensen <jsorensen@fb.com>
    Reported-by: Jes Sorensen <jsorensen@fb.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2272d5dce7905d605f26ba8a5f9961d05263e74
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Tue Nov 14 14:21:32 2017 +0100

    ipv6: set all.accept_dad to 0 by default
    
    
    [ Upstream commit 094009531612246d9e13f9e0c3ae2205d7f63a0a ]
    
    With commits 35e015e1f577 and a2d3f3e33853, the global 'accept_dad' flag
    is also taken into account (default value is 1). If either global or
    per-interface flag is non-zero, DAD will be enabled on a given interface.
    
    This is not backward compatible: before those patches, the user could
    disable DAD just by setting the per-interface flag to 0. Now, the
    user instead needs to set both flags to 0 to actually disable DAD.
    
    Restore the previous behaviour by setting the default for the global
    'accept_dad' flag to 0. This way, DAD is still enabled by default,
    as per-interface flags are set to 1 on device creation, but setting
    them to 0 is enough to disable DAD on a given interface.
    
    - Before 35e015e1f57a7 and a2d3f3e33853:
              global    per-interface    DAD enabled
    [default]   1             1              yes
                X             0              no
                X             1              yes
    
    - After 35e015e1f577 and a2d3f3e33853:
              global    per-interface    DAD enabled
    [default]   1             1              yes
                0             0              no
                0             1              yes
                1             0              yes
    
    - After this fix:
              global    per-interface    DAD enabled
                1             1              yes
                0             0              no
    [default]   0             1              yes
                1             0              yes
    
    Fixes: 35e015e1f577 ("ipv6: fix net.ipv6.conf.all interface DAD handlers")
    Fixes: a2d3f3e33853 ("ipv6: fix net.ipv6.conf.all.accept_dad behaviour for real")
    CC: Stefano Brivio <sbrivio@redhat.com>
    CC: Matteo Croce <mcroce@redhat.com>
    CC: Erik Kline <ek@google.com>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Acked-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86deaaa0ca2b0657e1f72e1087153d4ff22a312b
Author: Phil Sutter <phil@nwl.cc>
Date:   Tue Dec 19 15:17:13 2017 +0100

    ipv4: fib: Fix metrics match when deleting a route
    
    
    [ Upstream commit d03a45572efa068fa64db211d6d45222660e76c5 ]
    
    The recently added fib_metrics_match() causes a regression for routes
    with both RTAX_FEATURES and RTAX_CC_ALGO if the latter has
    TCP_CONG_NEEDS_ECN flag set:
    
    | # ip link add d0 type dummy
    | # ip link set d0 up
    | # ip route add 172.29.29.0/24 dev d0 features ecn congctl dctcp
    | # ip route del 172.29.29.0/24 dev d0 features ecn congctl dctcp
    | RTNETLINK answers: No such process
    
    During route insertion, fib_convert_metrics() detects that the given CC
    algo requires ECN and hence sets DST_FEATURE_ECN_CA bit in
    RTAX_FEATURES.
    
    During route deletion though, fib_metrics_match() compares stored
    RTAX_FEATURES value with that from userspace (which obviously has no
    knowledge about DST_FEATURE_ECN_CA) and fails.
    
    Fixes: 5f9ae3d9e7e4a ("ipv4: do metrics match when looking up and deleting a route")
    Signed-off-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 185a3475dee6c14dd67d1a94178b6b5615cf167b
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Dec 20 23:21:34 2017 +0000

    phylink: ensure AN is enabled
    
    
    [ Upstream commit 74ee0e8c1bf9925c59cc8f1c65c29adf6e4cf603 ]
    
    Ensure that we mark AN as enabled at boot time, rather than leaving
    it disabled.  This is noticable if your SFP module is fiber, and
    it supports faster speeds than 1G with 2.5G support in place.
    
    Fixes: 9525ae83959b ("phylink: add phylink infrastructure")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39889c293371e826503b61d98050a49742ccaf9c
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Dec 20 23:21:28 2017 +0000

    phylink: ensure the PHY interface mode is appropriately set
    
    
    [ Upstream commit 182088aa3c6c7f7c20a2c1dcc9ded4a3fc631f38 ]
    
    When setting the ethtool settings, ensure that the validated PHY
    interface mode is propagated to the current link settings, so that
    2500BaseX can be selected.
    
    Fixes: 9525ae83959b ("phylink: add phylink infrastructure")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f6dcb82d04045f143758f56caf031376f9bf16c
Author: Calvin Owens <calvinowens@fb.com>
Date:   Fri Dec 8 09:05:26 2017 -0800

    bnxt_en: Fix sources of spurious netpoll warnings
    
    
    [ Upstream commit 2edbdb3159d6f6bd3a9b6e7f789f2b879699a519 ]
    
    After applying 2270bc5da3497945 ("bnxt_en: Fix netpoll handling") and
    903649e718f80da2 ("bnxt_en: Improve -ENOMEM logic in NAPI poll loop."),
    we still see the following WARN fire:
    
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 1875170 at net/core/netpoll.c:165 netpoll_poll_dev+0x15a/0x160
      bnxt_poll+0x0/0xd0 exceeded budget in poll
      <snip>
      Call Trace:
       [<ffffffff814be5cd>] dump_stack+0x4d/0x70
       [<ffffffff8107e013>] __warn+0xd3/0xf0
       [<ffffffff8107e07f>] warn_slowpath_fmt+0x4f/0x60
       [<ffffffff8179519a>] netpoll_poll_dev+0x15a/0x160
       [<ffffffff81795f38>] netpoll_send_skb_on_dev+0x168/0x250
       [<ffffffff817962fc>] netpoll_send_udp+0x2dc/0x440
       [<ffffffff815fa9be>] write_ext_msg+0x20e/0x250
       [<ffffffff810c8125>] call_console_drivers.constprop.23+0xa5/0x110
       [<ffffffff810c9549>] console_unlock+0x339/0x5b0
       [<ffffffff810c9a88>] vprintk_emit+0x2c8/0x450
       [<ffffffff810c9d5f>] vprintk_default+0x1f/0x30
       [<ffffffff81173df5>] printk+0x48/0x50
       [<ffffffffa0197713>] edac_raw_mc_handle_error+0x563/0x5c0 [edac_core]
       [<ffffffffa0197b9b>] edac_mc_handle_error+0x42b/0x6e0 [edac_core]
       [<ffffffffa01c3a60>] sbridge_mce_output_error+0x410/0x10d0 [sb_edac]
       [<ffffffffa01c47cc>] sbridge_check_error+0xac/0x130 [sb_edac]
       [<ffffffffa0197f3c>] edac_mc_workq_function+0x3c/0x90 [edac_core]
       [<ffffffff81095f8b>] process_one_work+0x19b/0x480
       [<ffffffff810967ca>] worker_thread+0x6a/0x520
       [<ffffffff8109c7c4>] kthread+0xe4/0x100
       [<ffffffff81884c52>] ret_from_fork+0x22/0x40
    
    This happens because we increment rx_pkts on -ENOMEM and -EIO, resulting
    in rx_pkts > 0. Fix this by only bumping rx_pkts if we were actually
    given a non-zero budget.
    
    Signed-off-by: Calvin Owens <calvinowens@fb.com>
    Acked-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11295730446fd654aeef28a575d801f3679424fa
Author: Jiri Pirko <jiri@mellanox.com>
Date:   Fri Dec 15 12:40:13 2017 +0100

    net: sched: fix static key imbalance in case of ingress/clsact_init error
    
    
    [ Upstream commit b59e6979a86384e68b0ab6ffeab11f0034fba82d ]
    
    Move static key increments to the beginning of the init function
    so they pair 1:1 with decrements in ingress/clsact_destroy,
    which is called in case ingress/clsact_init fails.
    
    Fixes: 6529eaba33f0 ("net: sched: introduce tcf block infractructure")
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 215b69e208089f42c29f9343ef11f4adc6ea6f6b
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Thu Dec 14 20:20:00 2017 +0300

    vxlan: restore dev->mtu setting based on lower device
    
    
    [ Upstream commit f870c1ff65a6d1f3a083f277280802ee09a5b44d ]
    
    Stefano Brivio says:
        Commit a985343ba906 ("vxlan: refactor verification and
        application of configuration") introduced a change in the
        behaviour of initial MTU setting: earlier, the MTU for a link
        created on top of a given lower device, without an initial MTU
        specification, was set to the MTU of the lower device minus
        headroom as a result of this path in vxlan_dev_configure():
    
            if (!conf->mtu)
                    dev->mtu = lowerdev->mtu -
                               (use_ipv6 ? VXLAN6_HEADROOM : VXLAN_HEADROOM);
    
        which is now gone. Now, the initial MTU, in absence of a
        configured value, is simply set by ether_setup() to ETH_DATA_LEN
        (1500 bytes).
    
        This breaks userspace expectations in case the MTU of
        the lower device is higher than 1500 bytes minus headroom.
    
    This patch restores the previous behaviour on newlink operation. Since
    max_mtu can be negative and we update dev->mtu directly, also check it
    for valid minimum.
    
    Reported-by: Junhan Yan <juyan@redhat.com>
    Fixes: a985343ba906 ("vxlan: refactor verification and application of configuration")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Acked-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cea58617977baafe4a1be8f55c8e55d21c6cfb20
Author: Kamal Heib <kamalh@mellanox.com>
Date:   Sun Oct 29 04:03:37 2017 +0200

    net/mlx5: FPGA, return -EINVAL if size is zero
    
    
    [ Upstream commit bae115a2bb479142605726e6aa130f43f50e801a ]
    
    Currently, if a size of zero is passed to
    mlx5_fpga_mem_{read|write}_i2c()
    the "err" return value will not be initialized, which triggers gcc
    warnings:
    
    [..]/mlx5/core/fpga/sdk.c:87 mlx5_fpga_mem_read_i2c() error:
    uninitialized symbol 'err'.
    [..]/mlx5/core/fpga/sdk.c:115 mlx5_fpga_mem_write_i2c() error:
    uninitialized symbol 'err'.
    
    fix that.
    
    Fixes: a9956d35d199 ('net/mlx5: FPGA, Add SBU infrastructure')
    Signed-off-by: Kamal Heib <kamalh@mellanox.com>
    Reviewed-by: Yevgeny Kliteynik <kliteyn@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5504319c6993d51565b582c685c3e09c0e07fded
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Dec 12 18:22:52 2017 -0800

    tcp: refresh tcp_mstamp from timers callbacks
    
    
    [ Upstream commit 4688eb7cf3ae2c2721d1dacff5c1384cba47d176 ]
    
    Only the retransmit timer currently refreshes tcp_mstamp
    
    We should do the same for delayed acks and keepalives.
    
    Even if RFC 7323 does not request it, this is consistent to what linux
    did in the past, when TS values were based on jiffies.
    
    Fixes: 385e20706fac ("tcp: use tp->tcp_mstamp in output path")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Soheil Hassas Yeganeh <soheil@google.com>
    Cc: Mike Maloney <maloney@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by:  Mike Maloney <maloney@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 333921964046fe8453a90b60aa55dc4725955073
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Wed Dec 20 12:28:25 2017 +0200

    ipv6: Honor specified parameters in fibmatch lookup
    
    
    [ Upstream commit 58acfd714e6b02e8617448b431c2b64a2f1f0792 ]
    
    Currently, parameters such as oif and source address are not taken into
    account during fibmatch lookup. Example (IPv4 for reference) before
    patch:
    
    $ ip -4 route show
    192.0.2.0/24 dev dummy0 proto kernel scope link src 192.0.2.1
    198.51.100.0/24 dev dummy1 proto kernel scope link src 198.51.100.1
    
    $ ip -6 route show
    2001:db8:1::/64 dev dummy0 proto kernel metric 256 pref medium
    2001:db8:2::/64 dev dummy1 proto kernel metric 256 pref medium
    fe80::/64 dev dummy0 proto kernel metric 256 pref medium
    fe80::/64 dev dummy1 proto kernel metric 256 pref medium
    
    $ ip -4 route get fibmatch 192.0.2.2 oif dummy0
    192.0.2.0/24 dev dummy0 proto kernel scope link src 192.0.2.1
    $ ip -4 route get fibmatch 192.0.2.2 oif dummy1
    RTNETLINK answers: No route to host
    
    $ ip -6 route get fibmatch 2001:db8:1::2 oif dummy0
    2001:db8:1::/64 dev dummy0 proto kernel metric 256 pref medium
    $ ip -6 route get fibmatch 2001:db8:1::2 oif dummy1
    2001:db8:1::/64 dev dummy0 proto kernel metric 256 pref medium
    
    After:
    
    $ ip -6 route get fibmatch 2001:db8:1::2 oif dummy0
    2001:db8:1::/64 dev dummy0 proto kernel metric 256 pref medium
    $ ip -6 route get fibmatch 2001:db8:1::2 oif dummy1
    RTNETLINK answers: Network is unreachable
    
    The problem stems from the fact that the necessary route lookup flags
    are not set based on these parameters.
    
    Instead of duplicating the same logic for fibmatch, we can simply
    resolve the original route from its copy and dump it instead.
    
    Fixes: 18c3a61c4264 ("net: ipv6: RTM_GETROUTE: return matched fib result when requested")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Acked-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e255d684d0554893768b4452de404f293c71696
Author: Zhao Qiang <qiang.zhao@nxp.com>
Date:   Mon Dec 18 10:26:43 2017 +0800

    net: phy: marvell: Limit 88m1101 autoneg errata to 88E1145 as well.
    
    
    [ Upstream commit c505873eaece2b4aefd07d339dc7e1400e0235ac ]
    
    88E1145 also need this autoneg errata.
    
    Fixes: f2899788353c ("net: phy: marvell: Limit errata to 88m1101")
    Signed-off-by: Zhao Qiang <qiang.zhao@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 583395a81f00a42f178c1d8ba3c4858d76c9f5b4
Author: Wei Wang <weiwan@google.com>
Date:   Tue Dec 12 16:28:58 2017 -0800

    tcp: fix potential underestimation on rcv_rtt
    
    
    [ Upstream commit 9ee11bd03cb1a5c3ca33c2bb70e7ed325f68890f ]
    
    When ms timestamp is used, current logic uses 1us in
    tcp_rcv_rtt_update() when the real rcv_rtt is within 1 - 999us.
    This could cause rcv_rtt underestimation.
    Fix it by always using a min value of 1ms if ms timestamp is used.
    
    Fixes: 645f4c6f2ebd ("tcp: switch rcv_rtt_est and rcvq_space to high resolution timestamps")
    Signed-off-by: Wei Wang <weiwan@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcc029ff5dafc68d00a5fceadd93763d2b43e0e3
Author: Yuval Mintz <yuvalm@mellanox.com>
Date:   Fri Dec 15 08:44:21 2017 +0100

    mlxsw: spectrum: Disable MAC learning for ovs port
    
    
    [ Upstream commit fccff0862838908d21eaf956d57e09c6c189f7c5 ]
    
    Learning is currently enabled for ports which are OVS slaves -
    even though OVS doesn't need this indication.
    Since we're not associating a fid with the port, HW would continuously
    notify driver of learned [& aged] MACs which would be logged as errors.
    
    Fixes: 2b94e58df58c ("mlxsw: spectrum: Allow ports to work under OVS master")
    Signed-off-by: Yuval Mintz <yuvalm@mellanox.com>
    Reviewed-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92ae8233467b3a19a50fb02a7ebe065c6de3df17
Author: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@gmail.com>
Date:   Thu Dec 28 12:03:06 2017 +0100

    tipc: fix hanging poll() for stream sockets
    
    
    [ Upstream commit 517d7c79bdb39864e617960504bdc1aa560c75c6 ]
    
    In commit 42b531de17d2f6 ("tipc: Fix missing connection request
    handling"), we replaced unconditional wakeup() with condtional
    wakeup for clients with flags POLLIN | POLLRDNORM | POLLRDBAND.
    
    This breaks the applications which do a connect followed by poll
    with POLLOUT flag. These applications are not woken when the
    connection is ESTABLISHED and hence sleep forever.
    
    In this commit, we fix it by including the POLLOUT event for
    sockets in TIPC_CONNECTING state.
    
    Fixes: 42b531de17d2f6 ("tipc: Fix missing connection request handling")
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 201c59bb7ba69fd6a41ac6606d8049b94fb26232
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sun Dec 10 15:40:51 2017 +0800

    sctp: make sure stream nums can match optlen in sctp_setsockopt_reset_streams
    
    
    [ Upstream commit 2342b8d95bcae5946e1b9b8d58645f37500ef2e7 ]
    
    Now in sctp_setsockopt_reset_streams, it only does the check
    optlen < sizeof(*params) for optlen. But it's not enough, as
    params->srs_number_streams should also match optlen.
    
    If the streams in params->srs_stream_list are less than stream
    nums in params->srs_number_streams, later when dereferencing
    the stream list, it could cause a slab-out-of-bounds crash, as
    reported by syzbot.
    
    This patch is to fix it by also checking the stream numbers in
    sctp_setsockopt_reset_streams to make sure at least it's not
    greater than the streams in the list.
    
    Fixes: 7f9d68ac944e ("sctp: implement sender-side procedures for SSN Reset Request Parameter")
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f38ffe325b209f367c003bab291cf7e96cd1a6d9
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Wed Dec 20 18:07:18 2017 +0100

    s390/qeth: fix error handling in checksum cmd callback
    
    
    [ Upstream commit ad3cbf61332914711e5f506972b1dc9af8d62146 ]
    
    Make sure to check both return code fields before processing the
    response. Otherwise we risk operating on invalid data.
    
    Fixes: c9475369bd2b ("s390/qeth: rework RX/TX checksum offload")
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff1ff3815c2483ac19bd6f926a535dd4cea27e2e
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Nov 21 17:37:46 2017 -0800

    net: dsa: bcm_sf2: Clear IDDQ_GLOBAL_PWR bit for PHY
    
    
    [ Upstream commit 4b52d010113e11006a389f2a8315167ede9e0b10 ]
    
    The PHY on BCM7278 has an additional bit that needs to be cleared:
    IDDQ_GLOBAL_PWR, without doing this, the PHY remains stuck in reset out
    of suspend/resume cycles.
    
    Fixes: 0fe9933804eb ("net: dsa: bcm_sf2: Add support for BCM7278 integrated switch")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 701768dc9a1030d3f02b9b3e9b4690d15f637dad
Author: Bert Kenward <bkenward@solarflare.com>
Date:   Thu Dec 7 17:18:58 2017 +0000

    sfc: pass valid pointers from efx_enqueue_unwind
    
    
    [ Upstream commit d4a7a8893d4cdbc89d79ac4aa704bf8d4b67b368 ]
    
    The bytes_compl and pkts_compl pointers passed to efx_dequeue_buffers
    cannot be NULL. Add a paranoid warning to check this condition and fix
    the one case where they were NULL.
    
    efx_enqueue_unwind() is called very rarely, during error handling.
    Without this fix it would fail with a NULL pointer dereference in
    efx_dequeue_buffer, with efx_enqueue_skb in the call stack.
    
    Fixes: e9117e5099ea ("sfc: Firmware-Assisted TSO version 2")
    Reported-by: Jarod Wilson <jarod@redhat.com>
    Signed-off-by: Bert Kenward <bkenward@solarflare.com>
    Tested-by: Jarod Wilson <jarod@redhat.com>
    Acked-by: Jarod Wilson <jarod@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6cc63e125ffb3ae9f6b4e2b4642ddea9a932b46
Author: Eric Garver <e@erig.me>
Date:   Wed Dec 20 15:09:22 2017 -0500

    openvswitch: Fix pop_vlan action for double tagged frames
    
    
    [ Upstream commit c48e74736fccf25fb32bb015426359e1c2016e3b ]
    
    skb_vlan_pop() expects skb->protocol to be a valid TPID for double
    tagged frames. So set skb->protocol to the TPID and let skb_vlan_pop()
    shift the true ethertype into position for us.
    
    Fixes: 5108bbaddc37 ("openvswitch: add processing of L3 packets")
    Signed-off-by: Eric Garver <e@erig.me>
    Reviewed-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf070305213031e1300070d10334ac012116d470
Author: Moni Shoua <monis@mellanox.com>
Date:   Mon Dec 4 08:59:25 2017 +0200

    net/mlx5: Fix error flow in CREATE_QP command
    
    
    [ Upstream commit dbff26e44dc3ec4de6578733b054a0114652a764 ]
    
    In error flow, when DESTROY_QP command should be executed, the wrong
    mailbox was set with data, not the one that is written to hardware,
    Fix that.
    
    Fixes: 09a7d9eca1a6 '{net,IB}/mlx5: QP/XRCD commands via mlx5 ifc'
    Signed-off-by: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 999755ec40a6206d0c9f3edfffe2b00a7a66a6e9
Author: Gal Pressman <galp@mellanox.com>
Date:   Mon Dec 4 09:57:43 2017 +0200

    net/mlx5e: Prevent possible races in VXLAN control flow
    
    
    [ Upstream commit 0c1cc8b2215f5122ca614b5adca60346018758c3 ]
    
    When calling add/remove VXLAN port, a lock must be held in order to
    prevent race scenarios when more than one add/remove happens at the
    same time.
    Fix by holding our state_lock (mutex) as done by all other parts of the
    driver.
    Note that the spinlock protecting the radix-tree is still needed in
    order to synchronize radix-tree access from softirq context.
    
    Fixes: b3f63c3d5e2c ("net/mlx5e: Add netdev support for VXLAN tunneling")
    Signed-off-by: Gal Pressman <galp@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4d0e614c151f102967ff38bdf7c4372c146a5a6
Author: Gal Pressman <galp@mellanox.com>
Date:   Sun Dec 3 13:58:50 2017 +0200

    net/mlx5e: Add refcount to VXLAN structure
    
    
    [ Upstream commit 23f4cc2cd9ed92570647220aca60d0197d8c1fa9 ]
    
    A refcount mechanism must be implemented in order to prevent unwanted
    scenarios such as:
    - Open an IPv4 VXLAN interface
    - Open an IPv6 VXLAN interface (different socket)
    - Remove one of the interfaces
    
    With current implementation, the UDP port will be removed from our VXLAN
    database and turn off the offloads for the other interface, which is
    still active.
    The reference count mechanism will only allow UDP port removals once all
    consumers are gone.
    
    Fixes: b3f63c3d5e2c ("net/mlx5e: Add netdev support for VXLAN tunneling")
    Signed-off-by: Gal Pressman <galp@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 597181622e649b30a4c4d6bec4816d2f8987d25a
Author: Gal Pressman <galp@mellanox.com>
Date:   Tue Nov 21 17:49:36 2017 +0200

    net/mlx5e: Fix features check of IPv6 traffic
    
    
    [ Upstream commit 2989ad1ec03021ee6d2193c35414f1d970a243de ]
    
    The assumption that the next header field contains the transport
    protocol is wrong for IPv6 packets with extension headers.
    Instead, we should look the inner-most next header field in the buffer.
    This will fix TSO offload for tunnels over IPv6 with extension headers.
    
    Performance testing: 19.25x improvement, cool!
    Measuring bandwidth of 16 threads TCP traffic over IPv6 GRE tap.
    CPU: Intel(R) Xeon(R) CPU E5-2660 v2 @ 2.20GHz
    NIC: Mellanox Technologies MT28800 Family [ConnectX-5 Ex]
    TSO: Enabled
    Before: 4,926.24  Mbps
    Now   : 94,827.91 Mbps
    
    Fixes: b3f63c3d5e2c ("net/mlx5e: Add netdev support for VXLAN tunneling")
    Signed-off-by: Gal Pressman <galp@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dc5654e6fbc46161c56058081258bd3ad8d1ab0
Author: Gal Pressman <galp@mellanox.com>
Date:   Thu Nov 23 13:52:28 2017 +0200

    net/mlx5e: Fix possible deadlock of VXLAN lock
    
    
    [ Upstream commit 6323514116404cc651df1b7fffa1311ddf8ce647 ]
    
    mlx5e_vxlan_lookup_port is called both from mlx5e_add_vxlan_port (user
    context) and mlx5e_features_check (softirq), but the lock acquired does
    not disable bottom half and might result in deadlock. Fix it by simply
    replacing spin_lock() with spin_lock_bh().
    While at it, replace all unnecessary spin_lock_irq() to spin_lock_bh().
    
    lockdep's WARNING: inconsistent lock state
    [  654.028136] inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
    [  654.028229] swapper/5/0 [HC0[0]:SC1[9]:HE1:SE0] takes:
    [  654.028321]  (&(&vxlan_db->lock)->rlock){+.?.}, at: [<ffffffffa06e7f0e>] mlx5e_vxlan_lookup_port+0x1e/0x50 [mlx5_core]
    [  654.028528] {SOFTIRQ-ON-W} state was registered at:
    [  654.028607]   _raw_spin_lock+0x3c/0x70
    [  654.028689]   mlx5e_vxlan_lookup_port+0x1e/0x50 [mlx5_core]
    [  654.028794]   mlx5e_vxlan_add_port+0x2e/0x120 [mlx5_core]
    [  654.028878]   process_one_work+0x1e9/0x640
    [  654.028942]   worker_thread+0x4a/0x3f0
    [  654.029002]   kthread+0x141/0x180
    [  654.029056]   ret_from_fork+0x24/0x30
    [  654.029114] irq event stamp: 579088
    [  654.029174] hardirqs last  enabled at (579088): [<ffffffff818f475a>] ip6_finish_output2+0x49a/0x8c0
    [  654.029309] hardirqs last disabled at (579087): [<ffffffff818f470e>] ip6_finish_output2+0x44e/0x8c0
    [  654.029446] softirqs last  enabled at (579030): [<ffffffff810b3b3d>] irq_enter+0x6d/0x80
    [  654.029567] softirqs last disabled at (579031): [<ffffffff810b3c05>] irq_exit+0xb5/0xc0
    [  654.029684] other info that might help us debug this:
    [  654.029781]  Possible unsafe locking scenario:
    
    [  654.029868]        CPU0
    [  654.029908]        ----
    [  654.029947]   lock(&(&vxlan_db->lock)->rlock);
    [  654.030045]   <Interrupt>
    [  654.030090]     lock(&(&vxlan_db->lock)->rlock);
    [  654.030162]
     *** DEADLOCK ***
    
    Fixes: b3f63c3d5e2c ("net/mlx5e: Add netdev support for VXLAN tunneling")
    Signed-off-by: Gal Pressman <galp@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ddcb727c71779c23097d440355c4abe27379558
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Mon Nov 13 10:11:27 2017 +0200

    net/mlx5: Fix rate limit packet pacing naming and struct
    
    
    [ Upstream commit 37e92a9d4fe38dc3e7308913575983a6a088c8d4 ]
    
    In mlx5_ifc, struct size was not complete, and thus driver was sending
    garbage after the last defined field. Fixed it by adding reserved field
    to complete the struct size.
    
    In addition, rename all set_rate_limit to set_pp_rate_limit to be
    compliant with the Firmware <-> Driver definition.
    
    Fixes: 7486216b3a0b ("{net,IB}/mlx5: mlx5_ifc updates")
    Fixes: 1466cc5b23d1 ("net/mlx5: Rate limit tables support")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f35318b289446015ce2d2cbfd240ba47bda6f187
Author: Yousuk Seung <ysseung@google.com>
Date:   Thu Dec 7 13:41:34 2017 -0800

    tcp: invalidate rate samples during SACK reneging
    
    
    [ Upstream commit d4761754b4fb2ef8d9a1e9d121c4bec84e1fe292 ]
    
    Mark tcp_sock during a SACK reneging event and invalidate rate samples
    while marked. Such rate samples may overestimate bw by including packets
    that were SACKed before reneging.
    
    < ack 6001 win 10000 sack 7001:38001
    < ack 7001 win 0 sack 8001:38001 // Reneg detected
    > seq 7001:8001 // RTO, SACK cleared.
    < ack 38001 win 10000
    
    In above example the rate sample taken after the last ack will count
    7001-38001 as delivered while the actual delivery rate likely could
    be much lower i.e. 7001-8001.
    
    This patch adds a new field tcp_sock.sack_reneg and marks it when we
    declare SACK reneging and entering TCP_CA_Loss, and unmarks it after
    the last rate sample was taken before moving back to TCP_CA_Open. This
    patch also invalidates rate samples taken while tcp_sock.is_sack_reneg
    is set.
    
    Fixes: b9f64820fb22 ("tcp: track data delivery rate for a TCP connection")
    Signed-off-by: Yousuk Seung <ysseung@google.com>
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Priyaranjan Jha <priyarjha@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 265ba7a046c05f67f80c2540ec3212dafe5b3673
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Dec 13 14:41:06 2017 -0500

    sock: free skb in skb_complete_tx_timestamp on error
    
    
    [ Upstream commit 35b99dffc3f710cafceee6c8c6ac6a98eb2cb4bf ]
    
    skb_complete_tx_timestamp must ingest the skb it is passed. Call
    kfree_skb if the skb cannot be enqueued.
    
    Fixes: b245be1f4db1 ("net-timestamp: no-payload only sysctl")
    Fixes: 9ac25fc06375 ("net: fix socket refcounting in skb_complete_tx_timestamp()")
    Reported-by: Richard Cochran <richardcochran@gmail.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 003514ffb447120d1a5997827ad5226d7b5a82e1
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Wed Dec 20 18:45:10 2017 -0600

    net: phy: micrel: ksz9031: reconfigure autoneg after phy autoneg workaround
    
    
    [ Upstream commit c1a8d0a3accf64a014d605e6806ce05d1c17adf1 ]
    
    Under some circumstances driver will perform PHY reset in
    ksz9031_read_status() to fix autoneg failure case (idle error count =
    0xFF). When this happens ksz9031 will not detect link status change any
    more when connecting to Netgear 1G switch (link can be recovered sometimes by
    restarting netdevice "ifconfig down up"). Reproduced with TI am572x board
    equipped with ksz9031 PHY while connecting to Netgear 1G switch.
    
    Fix the issue by reconfiguring autonegotiation after PHY reset in
    ksz9031_read_status().
    
    Fixes: d2fd719bcb0e ("net/phy: micrel: Add workaround for bad autoneg")
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd9a2648b3e35c2369f580215d916baf7e23253a
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Tue Dec 19 11:27:56 2017 -0600

    net: Fix double free and memory corruption in get_net_ns_by_id()
    
    
    [ Upstream commit 21b5944350052d2583e82dd59b19a9ba94a007f0 ]
    
    (I can trivially verify that that idr_remove in cleanup_net happens
     after the network namespace count has dropped to zero --EWB)
    
    Function get_net_ns_by_id() does not check for net::count
    after it has found a peer in netns_ids idr.
    
    It may dereference a peer, after its count has already been
    finaly decremented. This leads to double free and memory
    corruption:
    
    put_net(peer)                                   rtnl_lock()
    atomic_dec_and_test(&peer->count) [count=0]     ...
    __put_net(peer)                                 get_net_ns_by_id(net, id)
      spin_lock(&cleanup_list_lock)
      list_add(&net->cleanup_list, &cleanup_list)
      spin_unlock(&cleanup_list_lock)
    queue_work()                                      peer = idr_find(&net->netns_ids, id)
      |                                               get_net(peer) [count=1]
      |                                               ...
      |                                               (use after final put)
      v                                               ...
      cleanup_net()                                   ...
        spin_lock(&cleanup_list_lock)                 ...
        list_replace_init(&cleanup_list, ..)          ...
        spin_unlock(&cleanup_list_lock)               ...
        ...                                           ...
        ...                                           put_net(peer)
        ...                                             atomic_dec_and_test(&peer->count) [count=0]
        ...                                               spin_lock(&cleanup_list_lock)
        ...                                               list_add(&net->cleanup_list, &cleanup_list)
        ...                                               spin_unlock(&cleanup_list_lock)
        ...                                             queue_work()
        ...                                           rtnl_unlock()
        rtnl_lock()                                   ...
        for_each_net(tmp) {                           ...
          id = __peernet2id(tmp, peer)                ...
          spin_lock_irq(&tmp->nsid_lock)              ...
          idr_remove(&tmp->netns_ids, id)             ...
          ...                                         ...
          net_drop_ns()                               ...
            net_free(peer)                            ...
        }                                             ...
      |
      v
      cleanup_net()
        ...
        (Second free of peer)
    
    Also, put_net() on the right cpu may reorder with left's cpu
    list_replace_init(&cleanup_list, ..), and then cleanup_list
    will be corrupted.
    
    Since cleanup_net() is executed in worker thread, while
    put_net(peer) can happen everywhere, there should be
    enough time for concurrent get_net_ns_by_id() to pick
    the peer up, and the race does not seem to be unlikely.
    The patch fixes the problem in standard way.
    
    (Also, there is possible problem in peernet2id_alloc(), which requires
    check for net::count under nsid_lock and maybe_get_net(peer), but
    in current stable kernel it's used under rtnl_lock() and it has to be
    safe. Openswitch begun to use peernet2id_alloc(), and possibly it should
    be fixed too. While this is not in stable kernel yet, so I'll send
    a separate message to netdev@ later).
    
    Cc: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Fixes: 0c7aecd4bde4 "netns: add rtnl cmd to add and get peer netns ids"
    Reviewed-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Reviewed-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 126f42ecfcb48ec50b289124f23dafa499012650
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Mon Dec 18 17:35:09 2017 +0200

    net: bridge: fix early call to br_stp_change_bridge_id and plug newlink leaks
    
    
    [ Upstream commit 84aeb437ab98a2bce3d4b2111c79723aedfceb33 ]
    
    The early call to br_stp_change_bridge_id in bridge's newlink can cause
    a memory leak if an error occurs during the newlink because the fdb
    entries are not cleaned up if a different lladdr was specified, also
    another minor issue is that it generates fdb notifications with
    ifindex = 0. Another unrelated memory leak is the bridge sysfs entries
    which get added on NETDEV_REGISTER event, but are not cleaned up in the
    newlink error path. To remove this special case the call to
    br_stp_change_bridge_id is done after netdev register and we cleanup the
    bridge on changelink error via br_dev_delete to plug all leaks.
    
    This patch makes netlink bridge destruction on newlink error the same as
    dellink and ioctl del which is necessary since at that point we have a
    fully initialized bridge device.
    
    To reproduce the issue:
    $ ip l add br0 address 00:11:22:33:44:55 type bridge group_fwd_mask 1
    RTNETLINK answers: Invalid argument
    
    $ rmmod bridge
    [ 1822.142525] =============================================================================
    [ 1822.143640] BUG bridge_fdb_cache (Tainted: G           O    ): Objects remaining in bridge_fdb_cache on __kmem_cache_shutdown()
    [ 1822.144821] -----------------------------------------------------------------------------
    
    [ 1822.145990] Disabling lock debugging due to kernel taint
    [ 1822.146732] INFO: Slab 0x0000000092a844b2 objects=32 used=2 fp=0x00000000fef011b0 flags=0x1ffff8000000100
    [ 1822.147700] CPU: 2 PID: 13584 Comm: rmmod Tainted: G    B      O     4.15.0-rc2+ #87
    [ 1822.148578] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.7.5-20140531_083030-gandalf 04/01/2014
    [ 1822.150008] Call Trace:
    [ 1822.150510]  dump_stack+0x78/0xa9
    [ 1822.151156]  slab_err+0xb1/0xd3
    [ 1822.151834]  ? __kmalloc+0x1bb/0x1ce
    [ 1822.152546]  __kmem_cache_shutdown+0x151/0x28b
    [ 1822.153395]  shutdown_cache+0x13/0x144
    [ 1822.154126]  kmem_cache_destroy+0x1c0/0x1fb
    [ 1822.154669]  SyS_delete_module+0x194/0x244
    [ 1822.155199]  ? trace_hardirqs_on_thunk+0x1a/0x1c
    [ 1822.155773]  entry_SYSCALL_64_fastpath+0x23/0x9a
    [ 1822.156343] RIP: 0033:0x7f929bd38b17
    [ 1822.156859] RSP: 002b:00007ffd160e9a98 EFLAGS: 00000202 ORIG_RAX: 00000000000000b0
    [ 1822.157728] RAX: ffffffffffffffda RBX: 00005578316ba090 RCX: 00007f929bd38b17
    [ 1822.158422] RDX: 00007f929bd9ec60 RSI: 0000000000000800 RDI: 00005578316ba0f0
    [ 1822.159114] RBP: 0000000000000003 R08: 00007f929bff5f20 R09: 00007ffd160e8a11
    [ 1822.159808] R10: 00007ffd160e9860 R11: 0000000000000202 R12: 00007ffd160e8a80
    [ 1822.160513] R13: 0000000000000000 R14: 0000000000000000 R15: 00005578316ba090
    [ 1822.161278] INFO: Object 0x000000007645de29 @offset=0
    [ 1822.161666] INFO: Object 0x00000000d5df2ab5 @offset=128
    
    Fixes: 30313a3d5794 ("bridge: Handle IFLA_ADDRESS correctly when creating bridge device")
    Fixes: 5b8d5429daa0 ("bridge: netlink: register netdevice before executing changelink")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27ccace9b982ea796e15ba9dc6af5941539c6be8
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Wed Dec 20 19:34:19 2017 +0200

    ipv4: Fix use-after-free when flushing FIB tables
    
    
    [ Upstream commit b4681c2829e24943aadd1a7bb3a30d41d0a20050 ]
    
    Since commit 0ddcf43d5d4a ("ipv4: FIB Local/MAIN table collapse") the
    local table uses the same trie allocated for the main table when custom
    rules are not in use.
    
    When a net namespace is dismantled, the main table is flushed and freed
    (via an RCU callback) before the local table. In case the callback is
    invoked before the local table is iterated, a use-after-free can occur.
    
    Fix this by iterating over the FIB tables in reverse order, so that the
    main table is always freed after the local table.
    
    v3: Reworded comment according to Alex's suggestion.
    v2: Add a comment to make the fix more explicit per Dave's and Alex's
    feedback.
    
    Fixes: 0ddcf43d5d4a ("ipv4: FIB Local/MAIN table collapse")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Acked-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44319591ffa28770f12f33b70e4269d8cda8cb5f
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Wed Dec 20 19:36:03 2017 +0300

    ip6_gre: fix device features for ioctl setup
    
    
    [ Upstream commit e5a9336adb317db55eb3fe8200856096f3c71109 ]
    
    When ip6gre is created using ioctl, its features, such as
    scatter-gather, GSO and tx-checksumming will be turned off:
    
      # ip -f inet6 tunnel add gre6 mode ip6gre remote fd00::1
      # ethtool -k gre6 (truncated output)
        tx-checksumming: off
        scatter-gather: off
        tcp-segmentation-offload: off
        generic-segmentation-offload: off [requested on]
    
    But when netlink is used, they will be enabled:
      # ip link add gre6 type ip6gre remote fd00::1
      # ethtool -k gre6 (truncated output)
        tx-checksumming: on
        scatter-gather: on
        tcp-segmentation-offload: on
        generic-segmentation-offload: on
    
    This results in a loss of performance when gre6 is created via ioctl.
    The issue was found with LTP/gre tests.
    
    Fix it by moving the setup of device features to a separate function
    and invoke it with ndo_init callback because both netlink and ioctl
    will eventually call it via register_netdevice():
    
       register_netdevice()
           - ndo_init() callback -> ip6gre_tunnel_init() or ip6gre_tap_init()
               - ip6gre_tunnel_init_common()
                    - ip6gre_tnl_init_features()
    
    The moved code also contains two minor style fixes:
      * removed needless tab from GRE6_FEATURES on NETIF_F_HIGHDMA line.
      * fixed the issue reported by checkpatch: "Unnecessary parentheses around
        'nt->encap.type == TUNNEL_ENCAP_NONE'"
    
    Fixes: ac4eb009e477 ("ip6gre: Add support for basic offloads offloads excluding GSO")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d1c489810bcde9266ccdbedc0861a5dc9778f60
Author: Nikita V. Shirokov <tehnerd@fb.com>
Date:   Wed Dec 6 17:15:43 2017 -0800

    adding missing rcu_read_unlock in ipxip6_rcv
    
    
    [ Upstream commit 74c4b656c3d92ec4c824ea1a4afd726b7b6568c8 ]
    
    commit 8d79266bc48c ("ip6_tunnel: add collect_md mode to IPv6 tunnels")
    introduced new exit point in  ipxip6_rcv. however rcu_read_unlock is
    missing there. this diff is fixing this
    
    v1->v2:
     instead of doing rcu_read_unlock in place, we are going to "drop"
     section (to prevent skb leakage)
    
    Fixes: 8d79266bc48c ("ip6_tunnel: add collect_md mode to IPv6 tunnels")
    Signed-off-by: Nikita V. Shirokov <tehnerd@fb.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3927015a4bbcb73d35cdbed24f81efeba1d7a6a
Author: Tonghao Zhang <xiangxia.m.yue@gmail.com>
Date:   Fri Dec 22 10:15:20 2017 -0800

    sctp: Replace use of sockets_allocated with specified macro.
    
    
    [ Upstream commit 8cb38a602478e9f806571f6920b0a3298aabf042 ]
    
    The patch(180d8cd942ce) replaces all uses of struct sock fields'
    memory_pressure, memory_allocated, sockets_allocated, and sysctl_mem
    to accessor macros. But the sockets_allocated field of sctp sock is
    not replaced at all. Then replace it now for unifying the code.
    
    Fixes: 180d8cd942ce ("foundations of per-cgroup memory pressure controlling.")
    Cc: Glauber Costa <glommer@parallels.com>
    Signed-off-by: Tonghao Zhang <zhangtonghao@didichuxing.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f49cbc7cd207f27ead81246d9553515aea68131
Author: Tobias Jordan <Tobias.Jordan@elektrobit.com>
Date:   Wed Dec 6 15:23:23 2017 +0100

    net: mvmdio: disable/unprepare clocks in EPROBE_DEFER case
    
    
    [ Upstream commit 589bf32f09852041fbd3b7ce1a9e703f95c230ba ]
    
    add appropriate calls to clk_disable_unprepare() by jumping to out_mdio
    in case orion_mdio_probe() returns -EPROBE_DEFER.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: 3d604da1e954 ("net: mvmdio: get and enable optional clock")
    Signed-off-by: Tobias Jordan <Tobias.Jordan@elektrobit.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bc400bad0e003d40a0a2412411aed7cbae16f96
Author: Mohamed Ghannam <simo.ghannam@gmail.com>
Date:   Sun Dec 10 03:50:58 2017 +0000

    net: ipv4: fix for a race condition in raw_sendmsg
    
    
    [ Upstream commit 8f659a03a0ba9289b9aeb9b4470e6fb263d6f483 ]
    
    inet->hdrincl is racy, and could lead to uninitialized stack pointer
    usage, so its value should be read only once.
    
    Fixes: c008ba5bdc9f ("ipv4: Avoid reading user iov twice after raw_probe_proto_opt")
    Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72b44d0434c1a4688b55aaa59150d74344721306
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Wed Dec 13 18:56:32 2017 +0100

    s390/qeth: update takeover IPs after configuration change
    
    
    [ Upstream commit 02f510f326501470348a5df341e8232c3497bbbb ]
    
    Any modification to the takeover IP-ranges requires that we re-evaluate
    which IP addresses are takeover-eligible. Otherwise we might do takeover
    for some addresses when we no longer should, or vice-versa.
    
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8658408f284efd553a882ee717326845130c51d9
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Wed Dec 13 18:56:31 2017 +0100

    s390/qeth: lock IP table while applying takeover changes
    
    
    [ Upstream commit 8a03a3692b100d84785ee7a834e9215e304c9e00 ]
    
    Modifying the flags of an IP addr object needs to be protected against
    eg. concurrent removal of the same object from the IP table.
    
    Fixes: 5f78e29ceebf ("qeth: optimize IP handling in rx_mode callback")
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e34a43e57c218bf28f8ec73a1ce68fec41c4b20c
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Wed Dec 13 18:56:30 2017 +0100

    s390/qeth: don't apply takeover changes to RXIP
    
    
    [ Upstream commit b22d73d6689fd902a66c08ebe71ab2f3b351e22f ]
    
    When takeover is switched off, current code clears the 'TAKEOVER' flag on
    all IPs. But the flag is also used for RXIP addresses, and those should
    not be affected by the takeover mode.
    Fix the behaviour by consistenly applying takover logic to NORMAL
    addresses only.
    
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 621b5ae0f9f4f9ef91bf441afc086ecf5e752d51
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Wed Dec 13 18:56:29 2017 +0100

    s390/qeth: apply takeover changes when mode is toggled
    
    
    [ Upstream commit 7fbd9493f0eeae8cef58300505a9ef5c8fce6313 ]
    
    Just as for an explicit enable/disable, toggling the takeover mode also
    requires that the IP addresses get updated. Otherwise all IPs that were
    added to the table before the mode-toggle, get registered with the old
    settings.
    
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7e9d724785dc9b6a423bddc6b4fa6fb1368692f
Author: Neal Cardwell <ncardwell@google.com>
Date:   Thu Dec 7 12:43:32 2017 -0500

    tcp_bbr: reset long-term bandwidth sampling on loss recovery undo
    
    
    [ Upstream commit 600647d467c6d04b3954b41a6ee1795b5ae00550 ]
    
    Fix BBR so that upon notification of a loss recovery undo BBR resets
    long-term bandwidth sampling.
    
    Under high reordering, reordering events can be interpreted as loss.
    If the reordering and spurious loss estimates are high enough, this
    can cause BBR to spuriously estimate that we are seeing loss rates
    high enough to trigger long-term bandwidth estimation. To avoid that
    problem, this commit resets long-term bandwidth sampling on loss
    recovery undo events.
    
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Reviewed-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb710b5f62ad3a18742bae70f91e8664ee23cbe3
Author: Neal Cardwell <ncardwell@google.com>
Date:   Thu Dec 7 12:43:31 2017 -0500

    tcp_bbr: reset full pipe detection on loss recovery undo
    
    
    [ Upstream commit 2f6c498e4f15d27852c04ed46d804a39137ba364 ]
    
    Fix BBR so that upon notification of a loss recovery undo BBR resets
    the full pipe detection (STARTUP exit) state machine.
    
    Under high reordering, reordering events can be interpreted as loss.
    If the reordering and spurious loss estimates are high enough, this
    could previously cause BBR to spuriously estimate that the pipe is
    full.
    
    Since spurious loss recovery means that our overall sending will have
    slowed down spuriously, this commit gives a flow more time to probe
    robustly for bandwidth and decide the pipe is really full.
    
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Reviewed-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3f3d4134eb700ad087691effbdf26fe8f3bfd90
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Dec 15 15:21:50 2017 -0600

    tg3: Fix rx hang on MTU change with 5717/5719
    
    
    [ Upstream commit 748a240c589824e9121befb1cba5341c319885bc ]
    
    This fixes a hang issue seen when changing the MTU size from 1500 MTU
    to 9000 MTU on both 5717 and 5719 chips. In discussion with Broadcom,
    they've indicated that these chipsets have the same phy as the 57766
    chipset, so the same workarounds apply. This has been tested by IBM
    on both Power 8 and Power 9 systems as well as by Broadcom on x86
    hardware and has been confirmed to resolve the hang issue.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f2963559f29f34a8dbcc35a331f152fa3492224
Author: Christoph Paasch <cpaasch@apple.com>
Date:   Mon Dec 11 00:05:46 2017 -0800

    tcp md5sig: Use skb's saddr when replying to an incoming segment
    
    
    [ Upstream commit 30791ac41927ebd3e75486f9504b6d2280463bf0 ]
    
    The MD5-key that belongs to a connection is identified by the peer's
    IP-address. When we are in tcp_v4(6)_reqsk_send_ack(), we are replying
    to an incoming segment from tcp_check_req() that failed the seq-number
    checks.
    
    Thus, to find the correct key, we need to use the skb's saddr and not
    the daddr.
    
    This bug seems to have been there since quite a while, but probably got
    unnoticed because the consequences are not catastrophic. We will call
    tcp_v4_reqsk_send_ack only to send a challenge-ACK back to the peer,
    thus the connection doesn't really fail.
    
    Fixes: 9501f9722922 ("tcp md5sig: Let the caller pass appropriate key for tcp_v{4,6}_do_calc_md5_hash().")
    Signed-off-by: Christoph Paasch <cpaasch@apple.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e414e7f03c29a4d3f07e042e18bdfe84269897df
Author: Neal Cardwell <ncardwell@google.com>
Date:   Thu Dec 7 12:43:30 2017 -0500

    tcp_bbr: record "full bw reached" decision in new full_bw_reached bit
    
    
    [ Upstream commit c589e69b508d29ed8e644dfecda453f71c02ec27 ]
    
    This commit records the "full bw reached" decision in a new
    full_bw_reached bit. This is a pure refactor that does not change the
    current behavior, but enables subsequent fixes and improvements.
    
    In particular, this enables simple and clean fixes because the full_bw
    and full_bw_cnt can be unconditionally zeroed without worrying about
    forgetting that we estimated we filled the pipe in Startup. And it
    enables future improvements because multiple code paths can be used
    for estimating that we filled the pipe in Startup; any new code paths
    only need to set this bit when they think the pipe is full.
    
    Note that this fix intentionally reduces the width of the full_bw_cnt
    counter, since we have never used the most significant bit.
    
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Reviewed-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7728247372ca9f7faccca4a37e96964f796c94b
Author: Avinash Repaka <avinash.repaka@oracle.com>
Date:   Thu Dec 21 20:17:04 2017 -0800

    RDS: Check cmsg_len before dereferencing CMSG_DATA
    
    
    [ Upstream commit 14e138a86f6347c6199f610576d2e11c03bec5f0 ]
    
    RDS currently doesn't check if the length of the control message is
    large enough to hold the required data, before dereferencing the control
    message data. This results in following crash:
    
    BUG: KASAN: stack-out-of-bounds in rds_rdma_bytes net/rds/send.c:1013
    [inline]
    BUG: KASAN: stack-out-of-bounds in rds_sendmsg+0x1f02/0x1f90
    net/rds/send.c:1066
    Read of size 8 at addr ffff8801c928fb70 by task syzkaller455006/3157
    
    CPU: 0 PID: 3157 Comm: syzkaller455006 Not tainted 4.15.0-rc3+ #161
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x257 lib/dump_stack.c:53
     print_address_description+0x73/0x250 mm/kasan/report.c:252
     kasan_report_error mm/kasan/report.c:351 [inline]
     kasan_report+0x25b/0x340 mm/kasan/report.c:409
     __asan_report_load8_noabort+0x14/0x20 mm/kasan/report.c:430
     rds_rdma_bytes net/rds/send.c:1013 [inline]
     rds_sendmsg+0x1f02/0x1f90 net/rds/send.c:1066
     sock_sendmsg_nosec net/socket.c:628 [inline]
     sock_sendmsg+0xca/0x110 net/socket.c:638
     ___sys_sendmsg+0x320/0x8b0 net/socket.c:2018
     __sys_sendmmsg+0x1ee/0x620 net/socket.c:2108
     SYSC_sendmmsg net/socket.c:2139 [inline]
     SyS_sendmmsg+0x35/0x60 net/socket.c:2134
     entry_SYSCALL_64_fastpath+0x1f/0x96
    RIP: 0033:0x43fe49
    RSP: 002b:00007fffbe244ad8 EFLAGS: 00000217 ORIG_RAX: 0000000000000133
    RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 000000000043fe49
    RDX: 0000000000000001 RSI: 000000002020c000 RDI: 0000000000000003
    RBP: 00000000006ca018 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000217 R12: 00000000004017b0
    R13: 0000000000401840 R14: 0000000000000000 R15: 0000000000000000
    
    To fix this, we verify that the cmsg_len is large enough to hold the
    data to be read, before proceeding further.
    
    Reported-by: syzbot <syzkaller-bugs@googlegroups.com>
    Signed-off-by: Avinash Repaka <avinash.repaka@oracle.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Reviewed-by: Yuval Shaia <yuval.shaia@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78ce0e9c4183a34b0910ec36c4ad8df1f7bf7874
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Tue Dec 5 21:29:37 2017 +0200

    ptr_ring: add barriers
    
    
    [ Upstream commit a8ceb5dbfde1092b466936bca0ff3be127ecf38e ]
    
    Users of ptr_ring expect that it's safe to give the
    data structure a pointer and have it be available
    to consumers, but that actually requires an smb_wmb
    or a stronger barrier.
    
    In absence of such barriers and on architectures that reorder writes,
    consumer might read an un=initialized value from an skb pointer stored
    in the skb array.  This was observed causing crashes.
    
    To fix, add memory barriers.  The barrier we use is a wmb, the
    assumption being that producers do not need to read the value so we do
    not need to order these reads.
    
    Reported-by: George Cherian <george.cherian@cavium.com>
    Suggested-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d0317869c9153d7e6efa769a764b54019d4a3d3
Author: Shaohua Li <shli@fb.com>
Date:   Wed Dec 20 12:10:21 2017 -0800

    net: reevalulate autoflowlabel setting after sysctl setting
    
    
    [ Upstream commit 513674b5a2c9c7a67501506419da5c3c77ac6f08 ]
    
    sysctl.ip6.auto_flowlabels is default 1. In our hosts, we set it to 2.
    If sockopt doesn't set autoflowlabel, outcome packets from the hosts are
    supposed to not include flowlabel. This is true for normal packet, but
    not for reset packet.
    
    The reason is ipv6_pinfo.autoflowlabel is set in sock creation. Later if
    we change sysctl.ip6.auto_flowlabels, the ipv6_pinfo.autoflowlabel isn't
    changed, so the sock will keep the old behavior in terms of auto
    flowlabel. Reset packet is suffering from this problem, because reset
    packet is sent from a special control socket, which is created at boot
    time. Since sysctl.ipv6.auto_flowlabels is 1 by default, the control
    socket will always have its ipv6_pinfo.autoflowlabel set, even after
    user set sysctl.ipv6.auto_flowlabels to 1, so reset packset will always
    have flowlabel. Normal sock created before sysctl setting suffers from
    the same issue. We can't even turn off autoflowlabel unless we kill all
    socks in the hosts.
    
    To fix this, if IPV6_AUTOFLOWLABEL sockopt is used, we use the
    autoflowlabel setting from user, otherwise we always call
    ip6_default_np_autolabel() which has the new settings of sysctl.
    
    Note, this changes behavior a little bit. Before commit 42240901f7c4
    (ipv6: Implement different admin modes for automatic flow labels), the
    autoflowlabel behavior of a sock isn't sticky, eg, if sysctl changes,
    existing connection will change autoflowlabel behavior. After that
    commit, autoflowlabel behavior is sticky in the whole life of the sock.
    With this patch, the behavior isn't sticky again.
    
    Cc: Martin KaFai Lau <kafai@fb.com>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: Tom Herbert <tom@quantonium.net>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bad9c5ea85e7522d403559cc249dd7a0ae705b1
Author: Sebastian Sjoholm <ssjoholm@mac.com>
Date:   Mon Dec 11 21:51:14 2017 +0100

    net: qmi_wwan: add Sierra EM7565 1199:9091
    
    
    [ Upstream commit aceef61ee56898cfa7b6960fb60b9326c3860441 ]
    
    Sierra Wireless EM7565 is an Qualcomm MDM9x50 based M.2 modem.
    The USB id is added to qmi_wwan.c to allow QMI communication
    with the EM7565.
    
    Signed-off-by: Sebastian Sjoholm <ssjoholm@mac.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3fb538e5715250d6a61a26925215229f2e9f52f
Author: Kevin Cernekee <cernekee@chromium.org>
Date:   Wed Dec 6 12:12:27 2017 -0800

    netlink: Add netns check on taps
    
    
    [ Upstream commit 93c647643b48f0131f02e45da3bd367d80443291 ]
    
    Currently, a nlmon link inside a child namespace can observe systemwide
    netlink activity.  Filter the traffic so that nlmon can only sniff
    netlink messages from its own netns.
    
    Test case:
    
        vpnns -- bash -c "ip link add nlmon0 type nlmon; \
                          ip link set nlmon0 up; \
                          tcpdump -i nlmon0 -q -w /tmp/nlmon.pcap -U" &
        sudo ip xfrm state add src 10.1.1.1 dst 10.1.1.2 proto esp \
            spi 0x1 mode transport \
            auth sha1 0x6162633132330000000000000000000000000000 \
            enc aes 0x00000000000000000000000000000000
        grep --binary abc123 /tmp/nlmon.pcap
    
    Signed-off-by: Kevin Cernekee <cernekee@chromium.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9c48469278060450e99c3995c5b0717c48d50b8
Author: Kevin Cernekee <cernekee@chromium.org>
Date:   Mon Dec 11 11:13:45 2017 -0800

    net: igmp: Use correct source address on IGMPv3 reports
    
    
    [ Upstream commit a46182b00290839fa3fa159d54fd3237bd8669f0 ]
    
    Closing a multicast socket after the final IPv4 address is deleted
    from an interface can generate a membership report that uses the
    source IP from a different interface.  The following test script, run
    from an isolated netns, reproduces the issue:
    
        #!/bin/bash
    
        ip link add dummy0 type dummy
        ip link add dummy1 type dummy
        ip link set dummy0 up
        ip link set dummy1 up
        ip addr add 10.1.1.1/24 dev dummy0
        ip addr add 192.168.99.99/24 dev dummy1
    
        tcpdump -U -i dummy0 &
        socat EXEC:"sleep 2" \
            UDP4-DATAGRAM:239.101.1.68:8889,ip-add-membership=239.0.1.68:10.1.1.1 &
    
        sleep 1
        ip addr del 10.1.1.1/24 dev dummy0
        sleep 5
        kill %tcpdump
    
    RFC 3376 specifies that the report must be sent with a valid IP source
    address from the destination subnet, or from address 0.0.0.0.  Add an
    extra check to make sure this is the case.
    
    Signed-off-by: Kevin Cernekee <cernekee@chromium.org>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f55ac6684640a285465cf31a8d5e23bcc3da872d
Author: Fugang Duan <fugang.duan@nxp.com>
Date:   Fri Dec 22 17:12:09 2017 +0800

    net: fec: unmap the xmit buffer that are not transferred by DMA
    
    
    [ Upstream commit 178e5f57a8d8f8fc5799a624b96fc31ef9a29ffa ]
    
    The enet IP only support 32 bit, it will use swiotlb buffer to do dma
    mapping when xmit buffer DMA memory address is bigger than 4G in i.MX
    platform. After stress suspend/resume test, it will print out:
    
    log:
    [12826.352864] fec 5b040000.ethernet: swiotlb buffer is full (sz: 191 bytes)
    [12826.359676] DMA: Out of SW-IOMMU space for 191 bytes at device 5b040000.ethernet
    [12826.367110] fec 5b040000.ethernet eth0: Tx DMA memory map failed
    
    The issue is that the ready xmit buffers that are dma mapped but DMA still
    don't copy them into fifo, once MAC restart, these DMA buffers are not unmapped.
    So it should check the dma mapping buffer and unmap them.
    
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 521f4d9625b7b2359dbec6039724b4feb9e8490d
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Dec 11 07:03:38 2017 -0800

    ipv6: mcast: better catch silly mtu values
    
    
    [ Upstream commit b9b312a7a451e9c098921856e7cfbc201120e1a7 ]
    
    syzkaller reported crashes in IPv6 stack [1]
    
    Xin Long found that lo MTU was set to silly values.
    
    IPv6 stack reacts to changes to small MTU, by disabling itself under
    RTNL.
    
    But there is a window where threads not using RTNL can see a wrong
    device mtu. This can lead to surprises, in mld code where it is assumed
    the mtu is suitable.
    
    Fix this by reading device mtu once and checking IPv6 minimal MTU.
    
    [1]
     skbuff: skb_over_panic: text:0000000010b86b8d len:196 put:20
     head:000000003b477e60 data:000000000e85441e tail:0xd4 end:0xc0 dev:lo
     ------------[ cut here ]------------
     kernel BUG at net/core/skbuff.c:104!
     invalid opcode: 0000 [#1] SMP KASAN
     Dumping ftrace buffer:
        (ftrace buffer empty)
     Modules linked in:
     CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.15.0-rc2-mm1+ #39
     Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
     Google 01/01/2011
     RIP: 0010:skb_panic+0x15c/0x1f0 net/core/skbuff.c:100
     RSP: 0018:ffff8801db307508 EFLAGS: 00010286
     RAX: 0000000000000082 RBX: ffff8801c517e840 RCX: 0000000000000000
     RDX: 0000000000000082 RSI: 1ffff1003b660e61 RDI: ffffed003b660e95
     RBP: ffff8801db307570 R08: 1ffff1003b660e23 R09: 0000000000000000
     R10: 0000000000000000 R11: 0000000000000000 R12: ffffffff85bd4020
     R13: ffffffff84754ed2 R14: 0000000000000014 R15: ffff8801c4e26540
     FS:  0000000000000000(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000463610 CR3: 00000001c6698000 CR4: 00000000001406e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     Call Trace:
      <IRQ>
      skb_over_panic net/core/skbuff.c:109 [inline]
      skb_put+0x181/0x1c0 net/core/skbuff.c:1694
      add_grhead.isra.24+0x42/0x3b0 net/ipv6/mcast.c:1695
      add_grec+0xa55/0x1060 net/ipv6/mcast.c:1817
      mld_send_cr net/ipv6/mcast.c:1903 [inline]
      mld_ifc_timer_expire+0x4d2/0x770 net/ipv6/mcast.c:2448
      call_timer_fn+0x23b/0x840 kernel/time/timer.c:1320
      expire_timers kernel/time/timer.c:1357 [inline]
      __run_timers+0x7e1/0xb60 kernel/time/timer.c:1660
      run_timer_softirq+0x4c/0xb0 kernel/time/timer.c:1686
      __do_softirq+0x29d/0xbb2 kernel/softirq.c:285
      invoke_softirq kernel/softirq.c:365 [inline]
      irq_exit+0x1d3/0x210 kernel/softirq.c:405
      exiting_irq arch/x86/include/asm/apic.h:540 [inline]
      smp_apic_timer_interrupt+0x16b/0x700 arch/x86/kernel/apic/apic.c:1052
      apic_timer_interrupt+0xa9/0xb0 arch/x86/entry/entry_64.S:920
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Tested-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57dfc3d10e40053e70691260a791bb453f183cfd
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Dec 11 07:17:39 2017 -0800

    ipv4: igmp: guard against silly MTU values
    
    
    [ Upstream commit b5476022bbada3764609368f03329ca287528dc8 ]
    
    IPv4 stack reacts to changes to small MTU, by disabling itself under
    RTNL.
    
    But there is a window where threads not using RTNL can see a wrong
    device mtu. This can lead to surprises, in igmp code where it is
    assumed the mtu is suitable.
    
    Fix this by reading device mtu once and checking IPv4 minimal MTU.
    
    This patch adds missing IPV4_MIN_MTU define, to not abuse
    ETH_MIN_MTU anymore.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa7f9011bc01b22658d4c255e2feecf0193e092d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Dec 29 17:34:43 2017 -0800

    kbuild: add '-fno-stack-check' to kernel build options
    
    commit 3ce120b16cc548472f80cf8644f90eda958cf1b6 upstream.
    
    It appears that hardened gentoo enables "-fstack-check" by default for
    gcc.
    
    That doesn't work _at_all_ for the kernel, because the kernel stack
    doesn't act like a user stack at all: it's much smaller, and it doesn't
    auto-expand on use.  So the extra "probe one page below the stack" code
    generated by -fstack-check just breaks the kernel in horrible ways,
    causing infinite double faults etc.
    
    [ I have to say, that the particular code gcc generates looks very
      stupid even for user space where it works, but that's a separate
      issue.  ]
    
    Reported-and-tested-by: Alexander Tsoy <alexander@tsoy.me>
    Reported-and-tested-by: Toralf Förster <toralf.foerster@gmx.de>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaedee932c91120868d42df39a1fc17fa6a313ef
Author: Ming Lei <ming.lei@redhat.com>
Date:   Mon Dec 18 15:40:43 2017 +0800

    block: don't let passthrough IO go into .make_request_fn()
    
    commit 14cb0dc6479dc5ebc63b3a459a5d89a2f1b39fed upstream.
    
    Commit a8821f3f3("block: Improvements to bounce-buffer handling") tries
    to make sure that the bio to .make_request_fn won't exceed BIO_MAX_PAGES,
    but ignores that passthrough I/O can use blk_queue_bounce() too.
    Especially, passthrough IO may not be sector-aligned, and the check
    of 'sectors < bio_sectors(*bio_orig)' inside __blk_queue_bounce() may
    become true even though the max bvec number doesn't exceed BIO_MAX_PAGES,
    then cause the bio splitted, and the original passthrough bio is submited
    to generic_make_request().
    
    This patch fixes this issue by checking if the bio is passthrough IO,
    and use bio_kmalloc() to allocate the cloned passthrough bio.
    
    Cc: NeilBrown <neilb@suse.com>
    Fixes: a8821f3f3("block: Improvements to bounce-buffer handling")
    Tested-by: Michele Ballabio <barra_cuda@katamail.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88da02868f7741cc7c1d895840e236e6df5483ef
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Dec 18 15:40:44 2017 +0800

    block: fix blk_rq_append_bio
    
    commit 0abc2a10389f0c9070f76ca906c7382788036b93 upstream.
    
    Commit caa4b02476e3(blk-map: call blk_queue_bounce from blk_rq_append_bio)
    moves blk_queue_bounce() into blk_rq_append_bio(), but don't consider
    the fact that the bounced bio becomes invisible to caller since the
    parameter type is 'struct bio *'. Make it a pointer to a pointer to
    a bio, so the caller sees the right bio also after a bounce.
    
    Fixes: caa4b02476e3 ("blk-map: call blk_queue_bounce from blk_rq_append_bio")
    Cc: Christoph Hellwig <hch@lst.de>
    Reported-by: Michele Ballabio <barra_cuda@katamail.com>
    (handling failure of blk_rq_append_bio(), only call bio_get() after
    blk_rq_append_bio() returns OK)
    Tested-by: Michele Ballabio <barra_cuda@katamail.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c688c288f8e82fdb5f3e0d0f3b2b1f3498ad187
Author: Joel Fernandes <joelaf@google.com>
Date:   Thu Dec 21 02:22:45 2017 +0100

    cpufreq: schedutil: Use idle_calls counter of the remote CPU
    
    commit 466a2b42d67644447a1765276259a3ea5531ddff upstream.
    
    Since the recent remote cpufreq callback work, its possible that a cpufreq
    update is triggered from a remote CPU. For single policies however, the current
    code uses the local CPU when trying to determine if the remote sg_cpu entered
    idle or is busy. This is incorrect. To remedy this, compare with the nohz tick
    idle_calls counter of the remote CPU.
    
    Fixes: 674e75411fc2 (sched: cpufreq: Allow remote cpufreq callbacks)
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Joel Fernandes <joelaf@google.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c5ee053a67eb374878b20eab7d16feb2a87a851
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 27 08:53:59 2017 +0100

    ALSA: hda - Fix missing COEF init for ALC225/295/299
    
    commit 44be77c590f381bc629815ac789b8b15ecc4ddcf upstream.
    
    There was a long-standing problem on HP Spectre X360 with Kabylake
    where it lacks of the front speaker output in some situations.  Also
    there are other products showing the similar behavior.  The culprit
    seems to be the missing COEF setup on ALC codecs, ALC225/295/299,
    which are all compatible.
    
    This patch adds the proper COEF setup (to initialize idx 0x67 / bits
    0x3000) for addressing the issue.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=195457
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fcd2ae2abb5efb67f331f567ed22a7305461a80
Author: Hui Wang <hui.wang@canonical.com>
Date:   Fri Dec 22 11:17:45 2017 +0800

    ALSA: hda - fix headset mic detection issue on a Dell machine
    
    commit 285d5ddcffafa5d5e68c586f4c9eaa8b24a2897d upstream.
    
    It has the codec alc256, and add its pin definition to pin quirk
    table to let it apply ALC255_FIXUP_DELL1_MIC_NO_PRESENCE.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d858b85e376b08db9c9de42aa4e0b9b47fac466
Author: Hui Wang <hui.wang@canonical.com>
Date:   Fri Dec 22 11:17:46 2017 +0800

    ALSA: hda - change the location for one mic on a Lenovo machine
    
    commit 8da5bbfc7cbba909f4f32d5e1dda3750baa5d853 upstream.
    
    There are two front mics on this machine, and current driver assign
    the same name Mic to both of them, but pulseaudio can't handle them.
    As a workaround, we change the location for one of them, then the
    driver will assign "Front Mic" and "Mic" for them.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2845bbd1ef1f574ce2bbd7a7f6feab04ca137cf3
Author: Hui Wang <hui.wang@canonical.com>
Date:   Fri Dec 22 11:17:44 2017 +0800

    ALSA: hda - Add MIC_NO_PRESENCE fixup for 2 HP machines
    
    commit 322f74ede933b3e2cb78768b6a6fdbfbf478a0c1 upstream.
    
    There is a headset jack on the front panel, when we plug a headset
    into it, the headset mic can't trigger unsol events, and
    read_pin_sense() can't detect its presence too. So add this fixup
    to fix this issue.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 056305595a9940005ff34d0a67e2a2b231d162b7
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Dec 22 10:45:07 2017 +0100

    ALSA: hda: Drop useless WARN_ON()
    
    commit a36c2638380c0a4676647a1f553b70b20d3ebce1 upstream.
    
    Since the commit 97cc2ed27e5a ("ALSA: hda - Fix yet another i915
    pointer leftover in error path") cleared hdac_acomp pointer, the
    WARN_ON() non-NULL check in snd_hdac_i915_register_notifier() may give
    a false-positive warning, as the function gets called no matter
    whether the component is registered or not.  For fixing it, let's get
    rid of the spurious WARN_ON().
    
    Fixes: 97cc2ed27e5a ("ALSA: hda - Fix yet another i915 pointer leftover in error path")
    Reported-by: Kouta Okamoto <kouta.okamoto@toshiba.co.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af0dc162f644335c50e2384ba485e4aa79b25e28
Author: Moni Shoua <monis@mellanox.com>
Date:   Sun Dec 24 13:54:58 2017 +0200

    IB/core: Verify that QP is security enabled in create and destroy
    
    commit 4a50881bbac309e6f0684816a180bc3c14e1485d upstream.
    
    The XRC target QP create flow sets up qp_sec only if there is an IB link with
    LSM security enabled. However, several other related uAPI entry points blindly
    follow the qp_sec NULL pointer, resulting in a possible oops.
    
    Check for NULL before using qp_sec.
    
    Fixes: d291f1a65232 ("IB/core: Enforce PKey security on QPs")
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f3b36984c7b15e9d6ace5fc836b3474a8bb4213
Author: Moni Shoua <monis@mellanox.com>
Date:   Sun Dec 24 13:54:57 2017 +0200

    IB/uverbs: Fix command checking as part of ib_uverbs_ex_modify_qp()
    
    commit 05d14e7b0c138cb07ba30e464f47b39434f3fdef upstream.
    
    If the input command length is larger than the kernel supports an error should
    be returned in case the unsupported bytes are not cleared, instead of the
    other way aroudn. This matches what all other callers of ib_is_udata_cleared
    do and will avoid user ABI problems in the future.
    
    Fixes: 189aba99e700 ("IB/uverbs: Extend modify_qp and support packet pacing")
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d471542b9f0706b9d37dba40bc02ef27b05a6bc1
Author: Majd Dibbiny <majd@mellanox.com>
Date:   Sun Dec 24 13:54:56 2017 +0200

    IB/mlx5: Serialize access to the VMA list
    
    commit ad9a3668a434faca1339789ed2f043d679199309 upstream.
    
    User-space applications can do mmap and munmap directly at
    any time.
    
    Since the VMA list is not protected with a mutex, concurrent
    accesses to the VMA list from the mmap and munmap can cause
    data corruption. Add a mutex around the list.
    
    Fixes: 7c2344c3bbf9 ("IB/mlx5: Implements disassociate_ucontext API")
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 907145e68e21947ec76d99827ab4eeeecff4a34c
Author: Michael J. Ruhl <michael.j.ruhl@intel.com>
Date:   Fri Dec 22 08:47:20 2017 -0800

    IB/hfi: Only read capability registers if the capability exists
    
    commit 4c009af473b2026caaa26107e34d7cc68dad7756 upstream.
    
    During driver init, various registers are saved to allow restoration
    after an FLR or gen3 bump.  Some of these registers are not available
    in some circumstances (i.e. Virtual machines).
    
    This bug makes the driver unusable when the PCI device is passed into
    a VM, it fails during probe.
    
    Delete unnecessary register read/write, and only access register if
    the capability exists.
    
    Fixes: a618b7e40af2 ("IB/hfi1: Move saving PCI values to a separate function")
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 074e2892a4205b0c88742d9d000c0c19e0b98244
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri Dec 15 15:02:33 2017 +0100

    gpio: fix "gpio-line-names" property retrieval
    
    commit 822703354774ec935169cbbc8d503236bcb54fda upstream.
    
    Following commit 9427ecbed46cc ("gpio: Rework of_gpiochip_set_names()
    to use device property accessors"), "gpio-line-names" DT property is
    not retrieved anymore when chip->parent is not set by the driver.
    This is due to OF based property reads having been replaced by device
    based property reads.
    
    This patch fixes that by making use of
    fwnode_property_read_string_array() instead of
    device_property_read_string_array() and handing over either
    of_fwnode_handle(chip->of_node) or dev_fwnode(chip->parent)
    to that function.
    
    Fixes: 9427ecbed46cc ("gpio: Rework of_gpiochip_set_names() to use device property accessors")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 077cb91c9fc35d638e014374491ac6a9f41b19ba
Author: Andrew F. Davis <afd@ti.com>
Date:   Wed Nov 29 15:32:46 2017 -0600

    ASoC: tlv320aic31xx: Fix GPIO1 register definition
    
    commit 737e0b7b67bdfe24090fab2852044bb283282fc5 upstream.
    
    GPIO1 control register is number 51, fix this here.
    
    Fixes: bafcbfe429eb ("ASoC: tlv320aic31xx: Make the register values human readable")
    Signed-off-by: Andrew F. Davis <afd@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 314d9cdf7e0fb83781e8fae836044856a449ffe0
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Nov 13 12:12:56 2017 +0100

    ASoC: twl4030: fix child-node lookup
    
    commit 15f8c5f2415bfac73f33a14bcd83422bcbfb5298 upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at the parent rather than just matching
    on its children.
    
    To make things worse, the parent codec node was also prematurely freed,
    while the child node was leaked.
    
    Fixes: 2d6d649a2e0f ("ASoC: twl4030: Support for DT booted kernel")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe9f7bd45c01b4bc328d2442136c5456608f1637
Author: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
Date:   Mon Nov 20 23:14:55 2017 +0100

    ASoC: fsl_ssi: AC'97 ops need regmap, clock and cleaning up on failure
    
    commit 695b78b548d8a26288f041e907ff17758df9e1d5 upstream.
    
    AC'97 ops (register read / write) need SSI regmap and clock, so they have
    to be set after them.
    
    We also need to set these ops back to NULL if we fail the probe.
    
    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Acked-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7d231ca5e0bf38f6920e92c97feadede0978d1a
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Nov 13 12:12:55 2017 +0100

    ASoC: da7218: fix fix child-node lookup
    
    commit bc6476d6c1edcb9b97621b5131bd169aa81f27db upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at the parent rather than just matching
    on its children.
    
    To make things worse, the parent codec node was also prematurely freed.
    
    Fixes: 4d50934abd22 ("ASoC: da7218: Add da7218 codec driver")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Acked-by: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 308ddf2afe83994719006200204dc819fcbd9e7a
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Fri Dec 8 16:15:20 2017 +0000

    ASoC: wm_adsp: Fix validation of firmware and coeff lengths
    
    commit 50dd2ea8ef67a1617e0c0658bcbec4b9fb03b936 upstream.
    
    The checks for whether another region/block header could be present
    are subtracting the size from the current offset.  Obviously we should
    instead subtract the offset from the size.
    
    The checks for whether the region/block data fit in the file are
    adding the data size to the current offset and header size, without
    checking for integer overflow.  Rearrange these so that overflow is
    impossible.
    
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Tested-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23ef17a49f1edfa2c4b437c03b1c0d4da1d116d2
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu Nov 30 10:15:02 2017 +0000

    ASoC: codecs: msm8916-wcd: Fix supported formats
    
    commit 51f493ae71adc2c49a317a13c38e54e1cdf46005 upstream.
    
    This codec is configurable for only 16 bit and 32 bit samples, so reflect
    this in the supported formats also remove 24bit sample from supported list.
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2aec84963e5edf3c463c37da0a94fb4c12c2d2c2
Author: Steve Wise <swise@opengridcomputing.com>
Date:   Mon Dec 18 13:10:00 2017 -0800

    iw_cxgb4: Only validate the MSN for successful completions
    
    commit f55688c45442bc863f40ad678c638785b26cdce6 upstream.
    
    If the RECV CQE is in error, ignore the MSN check.  This was causing
    recvs that were flushed into the sw cq to be completed with the wrong
    status (BAD_MSN instead of FLUSHED).
    
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aea6fb0e777bb89437c8883c289e05e1f153ec8
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Fri Dec 22 21:19:29 2017 -0500

    ring-buffer: Do no reuse reader page if still in use
    
    commit ae415fa4c5248a8cf4faabd5a3c20576cb1ad607 upstream.
    
    To free the reader page that is allocated with ring_buffer_alloc_read_page(),
    ring_buffer_free_read_page() must be called. For faster performance, this
    page can be reused by the ring buffer to avoid having to free and allocate
    new pages.
    
    The issue arises when the page is used with a splice pipe into the
    networking code. The networking code may up the page counter for the page,
    and keep it active while sending it is queued to go to the network. The
    incrementing of the page ref does not prevent it from being reused in the
    ring buffer, and this can cause the page that is being sent out to the
    network to be modified before it is sent by reading new data.
    
    Add a check to the page ref counter, and only reuse the page if it is not
    being used anywhere else.
    
    Fixes: 73a757e63114d ("ring-buffer: Return reader page back into existing ring buffer")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66f833dbed02d39c44440b6b35ac088655c32edb
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Fri Dec 22 20:32:35 2017 -0500

    ring-buffer: Mask out the info bits when returning buffer page length
    
    commit 45d8b80c2ac5d21cd1e2954431fb676bc2b1e099 upstream.
    
    Two info bits were added to the "commit" part of the ring buffer data page
    when returned to be consumed. This was to inform the user space readers that
    events have been missed, and that the count may be stored at the end of the
    page.
    
    What wasn't handled, was the splice code that actually called a function to
    return the length of the data in order to zero out the rest of the page
    before sending it up to user space. These data bits were returned with the
    length making the value negative, and that negative value was not checked.
    It was compared to PAGE_SIZE, and only used if the size was less than
    PAGE_SIZE. Luckily PAGE_SIZE is unsigned long which made the compare an
    unsigned compare, meaning the negative size value did not end up causing a
    large portion of memory to be randomly zeroed out.
    
    Fixes: 66a8cb95ed040 ("ring-buffer: Add place holder recording of dropped events")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e08acdb9620bcd4c55128cad07e625cd1825e533
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Dec 15 20:35:11 2017 +0100

    x86/ldt: Make the LDT mapping RO
    
    commit 9f5cb6b32d9e0a3a7453222baaf15664d92adbf2 upstream.
    
    Now that the LDT mapping is in a known area when PAGE_TABLE_ISOLATION is
    enabled its a primary target for attacks, if a user space interface fails
    to validate a write address correctly. That can never happen, right?
    
    The SDM states:
    
        If the segment descriptors in the GDT or an LDT are placed in ROM, the
        processor can enter an indefinite loop if software or the processor
        attempts to update (write to) the ROM-based segment descriptors. To
        prevent this problem, set the accessed bits for all segment descriptors
        placed in a ROM. Also, remove operating-system or executive code that
        attempts to modify segment descriptors located in ROM.
    
    So its a valid approach to set the ACCESS bit when setting up the LDT entry
    and to map the table RO. Fixup the selftest so it can handle that new mode.
    
    Remove the manual ACCESS bit setter in set_tls_desc() as this is now
    pointless. Folded the patch from Peter Ziljstra.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 704cfa04dde3a35cde59a67cafbcaeacbb3a76c8
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:08:06 2017 +0100

    x86/mm/dump_pagetables: Allow dumping current pagetables
    
    commit a4b51ef6552c704764684cef7e753162dc87c5fa upstream.
    
    Add two debugfs files which allow to dump the pagetable of the current
    task.
    
    current_kernel dumps the regular page table. This is the page table which
    is normally shared between kernel and user space. If kernel page table
    isolation is enabled this is the kernel space mapping.
    
    If kernel page table isolation is enabled the second file, current_user,
    dumps the user space page table.
    
    These files allow to verify the resulting page tables for page table
    isolation, but even in the normal case its useful to be able to inspect
    user space page tables of current for debugging purposes.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27e16c33bb796cceb92e339998d30145076b43cd
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:08:05 2017 +0100

    x86/mm/dump_pagetables: Check user space page table for WX pages
    
    commit b4bf4f924b1d7bade38fd51b2e401d20d0956e4d upstream.
    
    ptdump_walk_pgd_level_checkwx() checks the kernel page table for WX pages,
    but does not check the PAGE_TABLE_ISOLATION user space page table.
    
    Restructure the code so that dmesg output is selected by an explicit
    argument and not implicit via checking the pgd argument for !NULL.
    
    Add the check for the user space page table.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfa58126d7630c0db0b64fa7bd15741293b517b5
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Dec 4 15:08:04 2017 +0100

    x86/mm/dump_pagetables: Add page table directory to the debugfs VFS hierarchy
    
    commit 75298aa179d56cd64f54e58a19fffc8ab922b4c0 upstream.
    
    The upcoming support for dumping the kernel and the user space page tables
    of the current process would create more random files in the top level
    debugfs directory.
    
    Add a page table directory and move the existing file to it.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3dfd9fd8d897214b1a880c7fd8ed36b88faa1c02
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:08:03 2017 +0100

    x86/mm/pti: Add Kconfig
    
    commit 385ce0ea4c078517fa51c261882c4e72fba53005 upstream.
    
    Finally allow CONFIG_PAGE_TABLE_ISOLATION to be enabled.
    
    PARAVIRT generally requires that the kernel not manage its own page tables.
    It also means that the hypervisor and kernel must agree wholeheartedly
    about what format the page tables are in and what they contain.
    PAGE_TABLE_ISOLATION, unfortunately, changes the rules and they
    can not be used together.
    
    I've seen conflicting feedback from maintainers lately about whether they
    want the Kconfig magic to go first or last in a patch series.  It's going
    last here because the partially-applied series leads to kernels that can
    not boot in a bunch of cases.  I did a run through the entire series with
    CONFIG_PAGE_TABLE_ISOLATION=y to look for build errors, though.
    
    [ tglx: Removed SMP and !PARAVIRT dependencies as they not longer exist ]
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33d9d7836f0fa02777667d72bc815c12fbe61cac
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Tue Dec 19 22:33:46 2017 +0100

    x86/dumpstack: Indicate in Oops whether PTI is configured and enabled
    
    commit 5f26d76c3fd67c48806415ef8b1116c97beff8ba upstream.
    
    CONFIG_PAGE_TABLE_ISOLATION is relatively new and intrusive feature that may
    still have some corner cases which could take some time to manifest and be
    fixed. It would be useful to have Oops messages indicate whether it was
    enabled for building the kernel, and whether it was disabled during boot.
    
    Example of fully enabled:
    
            Oops: 0001 [#1] SMP PTI
    
    Example of enabled during build, but disabled during boot:
    
            Oops: 0001 [#1] SMP NOPTI
    
    We can decide to remove this after the feature has been tested in the field
    long enough.
    
    [ tglx: Made it use boot_cpu_has() as requested by Borislav ]
    
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Eduardo Valentin <eduval@amazon.com>
    Acked-by: Dave Hansen <dave.hansen@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Andy Lutomirsky <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: bpetkov@suse.de
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: jkosina@suse.cz
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef4b38472d6b1bf587554dfc7d5ab7abc835c1a5
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Dec 5 13:34:53 2017 +0100

    x86/mm: Clarify the whole ASID/kernel PCID/user PCID naming
    
    commit 0a126abd576ebc6403f063dbe20cf7416c9d9393 upstream.
    
    Ideally we'd also use sparse to enforce this separation so it becomes much
    more difficult to mess up.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5548af97ae98f9d9e6ae5a9a005e605bd3c06b5
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:08:01 2017 +0100

    x86/mm: Use INVPCID for __native_flush_tlb_single()
    
    commit 6cff64b86aaaa07f89f50498055a20e45754b0c1 upstream.
    
    This uses INVPCID to shoot down individual lines of the user mapping
    instead of marking the entire user map as invalid. This
    could/might/possibly be faster.
    
    This for sure needs tlb_single_page_flush_ceiling to be redetermined;
    esp. since INVPCID is _slow_.
    
    A detailed performance analysis is available here:
    
      https://lkml.kernel.org/r/3062e486-3539-8a1f-5724-16199420be71@intel.com
    
    [ Peterz: Split out from big combo patch ]
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36a72ab52c8d969a7a302082f52731c1be0e9ada
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Dec 4 15:08:00 2017 +0100

    x86/mm: Optimize RESTORE_CR3
    
    commit 21e94459110252d41b45c0c8ba50fd72a664d50c upstream.
    
    Most NMI/paranoid exceptions will not in fact change pagetables and would
    thus not require TLB flushing, however RESTORE_CR3 uses flushing CR3
    writes.
    
    Restores to kernel PCIDs can be NOFLUSH, because we explicitly flush the
    kernel mappings and now that we track which user PCIDs need flushing we can
    avoid those too when possible.
    
    This does mean RESTORE_CR3 needs an additional scratch_reg, luckily both
    sites have plenty available.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b63812b81349e5d1a35107e2464547187bc25a61
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Dec 4 15:07:59 2017 +0100

    x86/mm: Use/Fix PCID to optimize user/kernel switches
    
    commit 6fd166aae78c0ab738d49bda653cbd9e3b1491cf upstream.
    
    We can use PCID to retain the TLBs across CR3 switches; including those now
    part of the user/kernel switch. This increases performance of kernel
    entry/exit at the cost of more expensive/complicated TLB flushing.
    
    Now that we have two address spaces, one for kernel and one for user space,
    we need two PCIDs per mm. We use the top PCID bit to indicate a user PCID
    (just like we use the PFN LSB for the PGD). Since we do TLB invalidation
    from kernel space, the existing code will only invalidate the kernel PCID,
    we augment that by marking the corresponding user PCID invalid, and upon
    switching back to userspace, use a flushing CR3 write for the switch.
    
    In order to access the user_pcid_flush_mask we use PER_CPU storage, which
    means the previously established SWAPGS vs CR3 ordering is now mandatory
    and required.
    
    Having to do this memory access does require additional registers, most
    sites have a functioning stack and we can spill one (RAX), sites without
    functional stack need to otherwise provide the second scratch register.
    
    Note: PCID is generally available on Intel Sandybridge and later CPUs.
    Note: Up until this point TLB flushing was broken in this series.
    
    Based-on-code-from: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 954339c41cceca991c0aec6dd3b7e164c5b9f48b
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:58 2017 +0100

    x86/mm: Abstract switching CR3
    
    commit 48e111982cda033fec832c6b0592c2acedd85d04 upstream.
    
    In preparation to adding additional PCID flushing, abstract the
    loading of a new ASID into CR3.
    
    [ PeterZ: Split out from big combo patch ]
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c796e2324094f098575e47ec6d19f22cc4a4f9b9
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:57 2017 +0100

    x86/mm: Allow flushing for future ASID switches
    
    commit 2ea907c4fe7b78e5840c1dc07800eae93248cad1 upstream.
    
    If changing the page tables in such a way that an invalidation of all
    contexts (aka. PCIDs / ASIDs) is required, they can be actively invalidated
    by:
    
     1. INVPCID for each PCID (works for single pages too).
    
     2. Load CR3 with each PCID without the NOFLUSH bit set
    
     3. Load CR3 with the NOFLUSH bit set for each and do INVLPG for each address.
    
    But, none of these are really feasible since there are ~6 ASIDs (12 with
    PAGE_TABLE_ISOLATION) at the time that invalidation is required.
    Instead of actively invalidating them, invalidate the *current* context and
    also mark the cpu_tlbstate _quickly_ to indicate future invalidation to be
    required.
    
    At the next context-switch, look for this indicator
    ('invalidate_other' being set) invalidate all of the
    cpu_tlbstate.ctxs[] entries.
    
    This ensures that any future context switches will do a full flush
    of the TLB, picking up the previous changes.
    
    [ tglx: Folded more fixups from Peter ]
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9617ee896217558a2488b6dc71968a4489fb18b6
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Dec 12 07:56:42 2017 -0800

    x86/pti: Map the vsyscall page if needed
    
    commit 85900ea51577e31b186e523c8f4e068c79ecc7d3 upstream.
    
    Make VSYSCALLs work fully in PTI mode by mapping them properly to the user
    space visible page tables.
    
    [ tglx: Hide unused functions (Patch by Arnd Bergmann) ]
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7aef823ee7e9a74de0d2665d116bde557aa134ca
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Dec 12 07:56:45 2017 -0800

    x86/pti: Put the LDT in its own PGD if PTI is on
    
    commit f55f0501cbf65ec41cca5058513031b711730b1d upstream.
    
    With PTI enabled, the LDT must be mapped in the usermode tables somewhere.
    The LDT is per process, i.e. per mm.
    
    An earlier approach mapped the LDT on context switch into a fixmap area,
    but that's a big overhead and exhausted the fixmap space when NR_CPUS got
    big.
    
    Take advantage of the fact that there is an address space hole which
    provides a completely unused pgd. Use this pgd to manage per-mm LDT
    mappings.
    
    This has a down side: the LDT isn't (currently) randomized, and an attack
    that can write the LDT is instant root due to call gates (thanks, AMD, for
    leaving call gates in AMD64 but designing them wrong so they're only useful
    for exploits).  This can be mitigated by making the LDT read-only or
    randomizing the mapping, either of which is strightforward on top of this
    patch.
    
    This will significantly slow down LDT users, but that shouldn't matter for
    important workloads -- the LDT is only used by DOSEMU(2), Wine, and very
    old libc implementations.
    
    [ tglx: Cleaned it up. ]
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Kirill A. Shutemov <kirill@shutemov.name>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c125107490107fc4ce6bad0d9b45fd5e33bfa3f3
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Dec 12 07:56:44 2017 -0800

    x86/mm/64: Make a full PGD-entry size hole in the memory map
    
    commit 9f449772a3106bcdd4eb8fdeb281147b0e99fb30 upstream.
    
    Shrink vmalloc space from 16384TiB to 12800TiB to enlarge the hole starting
    at 0xff90000000000000 to be a full PGD entry.
    
    A subsequent patch will use this hole for the pagetable isolation LDT
    alias.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Kirill A. Shutemov <kirill@shutemov.name>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b82023b7fc2c3734aae23bc03ed5937e67f7388
Author: Hugh Dickins <hughd@google.com>
Date:   Mon Dec 4 15:07:50 2017 +0100

    x86/events/intel/ds: Map debug buffers in cpu_entry_area
    
    commit c1961a4631daef4aeabee8e368b1b13e8f173c91 upstream.
    
    The BTS and PEBS buffers both have their virtual addresses programmed into
    the hardware.  This means that any access to them is performed via the page
    tables.  The times that the hardware accesses these are entirely dependent
    on how the performance monitoring hardware events are set up.  In other
    words, there is no way for the kernel to tell when the hardware might
    access these buffers.
    
    To avoid perf crashes, place 'debug_store' allocate pages and map them into
    the cpu_entry_area.
    
    The PEBS fixup buffer does not need this treatment.
    
    [ tglx: Got rid of the kaiser_add_mapping() complication ]
    
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0eb34665d2eecddfa7a1810b76fae52313c1286
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:49 2017 +0100

    x86/cpu_entry_area: Add debugstore entries to cpu_entry_area
    
    commit 10043e02db7f8a4161f76434931051e7d797a5f6 upstream.
    
    The Intel PEBS/BTS debug store is a design trainwreck as it expects virtual
    addresses which must be visible in any execution context.
    
    So it is required to make these mappings visible to user space when kernel
    page table isolation is active.
    
    Provide enough room for the buffer mappings in the cpu_entry_area so the
    buffers are available in the user space visible page tables.
    
    At the point where the kernel side entry area is populated there is no
    buffer available yet, but the kernel PMD must be populated. To achieve this
    set the entries for these buffers to non present.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d230c1917f57c3beee2e0204a4c8c58999758b95
Author: Andy Lutomirski <luto@kernel.org>
Date:   Fri Dec 15 22:08:18 2017 +0100

    x86/mm/pti: Map ESPFIX into user space
    
    commit 4b6bbe95b87966ba08999574db65c93c5e925a36 upstream.
    
    Map the ESPFIX pages into user space when PTI is enabled.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e08aa2f1988a7d4ded9c9674fe18857ee5c6fc53
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:47 2017 +0100

    x86/mm/pti: Share entry text PMD
    
    commit 6dc72c3cbca0580642808d677181cad4c6433893 upstream.
    
    Share the entry text PMD of the kernel mapping with the user space
    mapping. If large pages are enabled this is a single PMD entry and at the
    point where it is copied into the user page table the RW bit has not been
    cleared yet. Clear it right away so the user space visible map becomes RX.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 088baf5de12eb7660e20f3f4efc1cf270acff5f4
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:46 2017 +0100

    x86/entry: Align entry text section to PMD boundary
    
    commit 2f7412ba9c6af5ab16bdbb4a3fdb1dcd2b4fd3c2 upstream.
    
    The (irq)entry text must be visible in the user space page tables. To allow
    simple PMD based sharing, make the entry text PMD aligned.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb9dfabb6e803801b9e88ee6c0d56d3b54531b95
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:45 2017 +0100

    x86/mm/pti: Share cpu_entry_area with user space page tables
    
    commit f7cfbee91559ca7e3e961a00ffac921208a115ad upstream.
    
    Share the cpu entry area so the user space and kernel space page tables
    have the same P4D page.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35531133abf37ea2f00673a0953e397c286f7c7c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:43 2017 +0100

    x86/mm/pti: Force entry through trampoline when PTI active
    
    commit 8d4b067895791ab9fdb1aadfc505f64d71239dd2 upstream.
    
    Force the entry through the trampoline only when PTI is active. Otherwise
    go through the normal entry code.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f006b0247234e6448e5fd04b5bcb0c56c968698
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:42 2017 +0100

    x86/mm/pti: Add functions to clone kernel PMDs
    
    commit 03f4424f348e8be95eb1bbeba09461cd7b867828 upstream.
    
    Provide infrastructure to:
    
     - find a kernel PMD for a mapping which must be visible to user space for
       the entry/exit code to work.
    
     - walk an address range and share the kernel PMD with it.
    
    This reuses a small part of the original KAISER patches to populate the
    user space page table.
    
    [ tglx: Made it universally usable so it can be used for any kind of shared
            mapping. Add a mechanism to clear specific bits in the user space
            visible PMD entry. Folded Andys simplifactions ]
    
    Originally-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bcd98df0f50b28a5fb40eeb2cb7a17a02820232
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:40 2017 +0100

    x86/mm/pti: Populate user PGD
    
    commit fc2fbc8512ed08d1de7720936fd7d2e4ce02c3a2 upstream.
    
    In clone_pgd_range() copy the init user PGDs which cover the kernel half of
    the address space, so a process has all the required kernel mappings
    visible.
    
    [ tglx: Split out from the big kaiser dump and folded Andys simplification ]
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61fd4049e6760eb8832d4e0bec592d8a810b270f
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:39 2017 +0100

    x86/mm/pti: Allocate a separate user PGD
    
    commit d9e9a6418065bb376e5de8d93ce346939b9a37a6 upstream.
    
    Kernel page table isolation requires to have two PGDs. One for the kernel,
    which contains the full kernel mapping plus the user space mapping and one
    for user space which contains the user space mappings and the minimal set
    of kernel mappings which are required by the architecture to be able to
    transition from and to user space.
    
    Add the necessary preliminaries.
    
    [ tglx: Split out from the big kaiser dump. EFI fixup from Kirill ]
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffcb80ad79e8c3d87b43f2c9ee4b9170c7ec12ea
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:38 2017 +0100

    x86/mm/pti: Allow NX poison to be set in p4d/pgd
    
    commit 1c4de1ff4fe50453b968579ee86fac3da80dd783 upstream.
    
    With PAGE_TABLE_ISOLATION the user portion of the kernel page tables is
    poisoned with the NX bit so if the entry code exits with the kernel page
    tables selected in CR3, userspace crashes.
    
    But doing so trips the p4d/pgd_bad() checks.  Make sure it does not do
    that.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9feab7dcf86df222a405df3e0d95b85741a2d73
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:37 2017 +0100

    x86/mm/pti: Add mapping helper functions
    
    commit 61e9b3671007a5da8127955a1a3bda7e0d5f42e8 upstream.
    
    Add the pagetable helper functions do manage the separate user space page
    tables.
    
    [ tglx: Split out from the big combo kaiser patch. Folded Andys
            simplification and made it out of line as Boris suggested ]
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a2533407f4d60a43effadf7b62825d213cd678c
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Dec 12 14:39:52 2017 +0100

    x86/pti: Add the pti= cmdline option and documentation
    
    commit 41f4c20b57a4890ea7f56ff8717cc83fefb8d537 upstream.
    
    Keep the "nopti" optional for traditional reasons.
    
    [ tglx: Don't allow force on when running on XEN PV and made 'on'
            printout conditional ]
    
    Requested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Andy Lutomirsky <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171212133952.10177-1-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4b07fb4e5a6aef3b87a6540cc04cf972525a723
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:36 2017 +0100

    x86/mm/pti: Add infrastructure for page table isolation
    
    commit aa8c6248f8c75acfd610fe15d8cae23cf70d9d09 upstream.
    
    Add the initial files for kernel page table isolation, with a minimal init
    function and the boot time detection for this misfeature.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3d2b767e912b11d146b9c9922bf28efeda0cdc7
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:35 2017 +0100

    x86/mm/pti: Prepare the x86/entry assembly code for entry/exit CR3 switching
    
    commit 8a09317b895f073977346779df52f67c1056d81d upstream.
    
    PAGE_TABLE_ISOLATION needs to switch to a different CR3 value when it
    enters the kernel and switch back when it exits.  This essentially needs to
    be done before leaving assembly code.
    
    This is extra challenging because the switching context is tricky: the
    registers that can be clobbered can vary.  It is also hard to store things
    on the stack because there is an established ABI (ptregs) or the stack is
    entirely unsafe to use.
    
    Establish a set of macros that allow changing to the user and kernel CR3
    values.
    
    Interactions with SWAPGS:
    
      Previous versions of the PAGE_TABLE_ISOLATION code relied on having
      per-CPU scratch space to save/restore a register that can be used for the
      CR3 MOV.  The %GS register is used to index into our per-CPU space, so
      SWAPGS *had* to be done before the CR3 switch.  That scratch space is gone
      now, but the semantic that SWAPGS must be done before the CR3 MOV is
      retained.  This is good to keep because it is not that hard to do and it
      allows to do things like add per-CPU debugging information.
    
    What this does in the NMI code is worth pointing out.  NMIs can interrupt
    *any* context and they can also be nested with NMIs interrupting other
    NMIs.  The comments below ".Lnmi_from_kernel" explain the format of the
    stack during this situation.  Changing the format of this stack is hard.
    Instead of storing the old CR3 value on the stack, this depends on the
    *regular* register save/restore mechanism and then uses %r14 to keep CR3
    during the NMI.  It is callee-saved and will not be clobbered by the C NMI
    handlers that get called.
    
    [ PeterZ: ESPFIX optimization ]
    
    Based-on-code-from: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acfee9b8e27e7b5d69276e8b804fed7ff5071c10
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:34 2017 +0100

    x86/mm/pti: Disable global pages if PAGE_TABLE_ISOLATION=y
    
    commit c313ec66317d421fb5768d78c56abed2dc862264 upstream.
    
    Global pages stay in the TLB across context switches.  Since all contexts
    share the same kernel mapping, these mappings are marked as global pages
    so kernel entries in the TLB are not flushed out on a context switch.
    
    But, even having these entries in the TLB opens up something that an
    attacker can use, such as the double-page-fault attack:
    
       http://www.ieee-security.org/TC/SP2013/papers/4977a191.pdf
    
    That means that even when PAGE_TABLE_ISOLATION switches page tables
    on return to user space the global pages would stay in the TLB cache.
    
    Disable global pages so that kernel TLB entries can be flushed before
    returning to user space. This way, all accesses to kernel addresses from
    userspace result in a TLB miss independent of the existence of a kernel
    mapping.
    
    Suppress global pages via the __supported_pte_mask. The user space
    mappings set PAGE_GLOBAL for the minimal kernel mappings which are
    required for entry/exit. These mappings are set up manually so the
    filtering does not take place.
    
    [ The __supported_pte_mask simplification was written by Thomas Gleixner. ]
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72a2beddcd3240047552de69ce45a28029c7e56c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:33 2017 +0100

    x86/cpufeatures: Add X86_BUG_CPU_INSECURE
    
    commit a89f040fa34ec9cd682aed98b8f04e3c47d998bd upstream.
    
    Many x86 CPUs leak information to user space due to missing isolation of
    user space and kernel space page tables. There are many well documented
    ways to exploit that.
    
    The upcoming software migitation of isolating the user and kernel space
    page tables needs a misfeature flag so code can be made runtime
    conditional.
    
    Add the BUG bits which indicates that the CPU is affected and add a feature
    bit which indicates that the software migitation is enabled.
    
    Assume for now that _ALL_ x86 CPUs are affected by this. Exceptions can be
    made later.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98669825616890a96c9fc67c5f983484578e4dd9
Author: Jing Xia <jing.xia@spreadtrum.com>
Date:   Tue Dec 26 15:12:53 2017 +0800

    tracing: Fix crash when it fails to alloc ring buffer
    
    commit 24f2aaf952ee0b59f31c3a18b8b36c9e3d3c2cf5 upstream.
    
    Double free of the ring buffer happens when it fails to alloc new
    ring buffer instance for max_buffer if TRACER_MAX_TRACE is configured.
    The root cause is that the pointer is not set to NULL after the buffer
    is freed in allocate_trace_buffers(), and the freeing of the ring
    buffer is invoked again later if the pointer is not equal to Null,
    as:
    
    instance_mkdir()
        |-allocate_trace_buffers()
            |-allocate_trace_buffer(tr, &tr->trace_buffer...)
            |-allocate_trace_buffer(tr, &tr->max_buffer...)
    
              // allocate fail(-ENOMEM),first free
              // and the buffer pointer is not set to null
            |-ring_buffer_free(tr->trace_buffer.buffer)
    
           // out_free_tr
        |-free_trace_buffers()
            |-free_trace_buffer(&tr->trace_buffer);
    
                  //if trace_buffer is not null, free again
                |-ring_buffer_free(buf->buffer)
                    |-rb_free_cpu_buffer(buffer->buffers[cpu])
                        // ring_buffer_per_cpu is null, and
                        // crash in ring_buffer_per_cpu->pages
    
    Link: http://lkml.kernel.org/r/20171226071253.8968-1-chunyan.zhang@spreadtrum.com
    
    Fixes: 737223fbca3b1 ("tracing: Consolidate buffer allocation code")
    Signed-off-by: Jing Xia <jing.xia@spreadtrum.com>
    Signed-off-by: Chunyan Zhang <chunyan.zhang@spreadtrum.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21a9c7346ef696161dacbbd9f47dabb0f062c4c8
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Tue Dec 26 20:07:34 2017 -0500

    tracing: Fix possible double free on failure of allocating trace buffer
    
    commit 4397f04575c44e1440ec2e49b6302785c95fd2f8 upstream.
    
    Jing Xia and Chunyan Zhang reported that on failing to allocate part of the
    tracing buffer, memory is freed, but the pointers that point to them are not
    initialized back to NULL, and later paths may try to free the freed memory
    again. Jing and Chunyan fixed one of the locations that does this, but
    missed a spot.
    
    Link: http://lkml.kernel.org/r/20171226071253.8968-1-chunyan.zhang@spreadtrum.com
    
    Fixes: 737223fbca3b1 ("tracing: Consolidate buffer allocation code")
    Reported-by: Jing Xia <jing.xia@spreadtrum.com>
    Reported-by: Chunyan Zhang <chunyan.zhang@spreadtrum.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 234bc12669a362773e84834ace52f1af7510196b
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Fri Dec 22 20:38:57 2017 -0500

    tracing: Remove extra zeroing out of the ring buffer page
    
    commit 6b7e633fe9c24682df550e5311f47fb524701586 upstream.
    
    The ring_buffer_read_page() takes care of zeroing out any extra data in the
    page that it returns. There's no need to zero it out again from the
    consumer. It was removed from one consumer of this function, but
    read_buffers_splice_read() did not remove it, and worse, it contained a
    nasty bug because of it.
    
    Fixes: 2711ca237a084 ("ring-buffer: Move zeroing out excess in page to ring buffer code")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8ce8232fcc37fe7a97db79ea0a5f32098c25e72
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Dec 29 17:53:50 2017 +0100

    Linux 4.14.10

commit af1eddcc176e36104f50abf32b14cb979385d9f6
Author: John Einar Reitan <john.einar@gmail.com>
Date:   Sun Dec 24 00:03:44 2017 +0100

    Revert "ipmi_si: fix memory leak on new_smi"
    
    This reverts commit c97e41076a298dbc4e910c33048e553658388eed, which
    incorrectly was taken from upstream c0a32fe13cd323ca9420500b16fd69589c9ba91e.
    
    The referenced memory leak doesn't exist on the 4.14 stable branch as
    the new logic of doing the kzalloc hasn't moved to this function.
    By adding this kfree we actually end up doing double kfree as all callers of
    smi_add does a kfree on error.
    
    Sample with SLAB_FREELIST_HARDENED=y:
    
    ipmi_si: Adding ACPI-specified kcs state machine
    IPMI System Interface driver.
    ipmi_si: probing via SPMI
    ipmi_si: SPMI: io 0xca2 regsize 1 spacing 1 irq 0
    (NULL device *): SPMI-specified kcs state machine: duplicate
    ------------[ cut here ]------------
    kernel BUG at mm/slub.c:295!
    invalid opcode: 0000 [#1] SMP
    Modules linked in:
    CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.14.8-gentoo-r1 #5
    Hardware name: Supermicro X9SCL/X9SCM/X9SCL/X9SCM, BIOS 2.2 02/20/2015
    task: ffff88080c208000 task.stack: ffffc90000020000
    RIP: 0010:kfree+0xf5/0x157
    RSP: 0000:ffffc90000023e58 EFLAGS: 00010246
    RAX: ffff88080b2e6200 RBX: ffff88080b2e6200 RCX: ffff88080b2e6200
    RDX: 000000000000008e RSI: ffff88082fc1cd60 RDI: ffff88080c003080
    RBP: ffffc90000002808 R08: 000000000001cd60 R09: ffffffff814da10e
    R10: ffffea00202cb980 R11: 000000000000005c R12: ffffffff814da10e
    R13: 00000000ffffffed R14: ffffffff82317bd0 R15: 0000000000000003
    FS:  0000000000000000(0000) GS:ffff88082fc00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000000 CR3: 0000000002e09001 CR4: 00000000001606f0
    Call Trace:
     init_ipmi_si+0x493/0x5c7
     ? cleanup_ipmi_si+0x84/0x84
     ? set_debug_rodata+0xc/0xc
     ? kthread+0x4c/0x11c
     do_one_initcall+0x94/0x13d
     ? set_debug_rodata+0xc/0xc
     kernel_init_freeable+0x112/0x18e
     ? rest_init+0xa0/0xa0
     kernel_init+0x5/0xe1
     ret_from_fork+0x22/0x30
    Code: 24 18 49 8b 7a 30 48 8b 37 65 48 8b 56 08 65 48 03 35 3a 29 e2 7e 4c 3b 56 10 75 39 48 8b 0e 48 63 47 20 48 01 d8 48 39 cb 75 02 <0f> 0b 49 89 c0 4c 33
     87 40 01 00 00 4c 31 c1 48 89 08 48 8d 4a
    ---[ end trace 4ac2e2c100842676 ]---
    
    Signed-off-by: John Einar Reitan <john.einar@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 646809937c02396f06a38a38ac686eff1b5e85fb
Author: Yelena Krivosheev <yelena@marvell.com>
Date:   Tue Dec 19 17:59:47 2017 +0100

    net: mvneta: eliminate wrong call to handle rx descriptor error
    
    commit 2eecb2e04abb62ef8ea7b43e1a46bdb5b99d1bf8 upstream.
    
    There are few reasons in mvneta_rx_swbm() function when received packet
    is dropped. mvneta_rx_error() should be called only if error bit [16]
    is set in rx descriptor.
    
    [gregory.clement@free-electrons.com: add fixes tag]
    Fixes: dc35a10f68d3 ("net: mvneta: bm: add support for hardware buffer management")
    Signed-off-by: Yelena Krivosheev <yelena@marvell.com>
    Tested-by: Dmitri Epshtein <dima@marvell.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c00802d53ddf3724602c1da0344c6fcaf9001358
Author: Yelena Krivosheev <yelena@marvell.com>
Date:   Tue Dec 19 17:59:46 2017 +0100

    net: mvneta: use proper rxq_number in loop on rx queues
    
    commit ca5902a6547f662419689ca28b3c29a772446caa upstream.
    
    When adding the RX queue association with each CPU, a typo was made in
    the mvneta_cleanup_rxqs() function. This patch fixes it.
    
    [gregory.clement@free-electrons.com: add commit log and fixes tag]
    Fixes: 2dcf75e2793c ("net: mvneta: Associate RX queues with each CPU")
    Signed-off-by: Yelena Krivosheev <yelena@marvell.com>
    Tested-by: Dmitri Epshtein <dima@marvell.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7c0181c47c4369cfccd97bca7e9e211026aa94c
Author: Yelena Krivosheev <yelena@marvell.com>
Date:   Tue Dec 19 17:59:45 2017 +0100

    net: mvneta: clear interface link status on port disable
    
    commit 4423c18e466afdfb02a36ee8b9f901d144b3c607 upstream.
    
    When port connect to PHY in polling mode (with poll interval 1 sec),
    port and phy link status must be synchronize in order don't loss link
    change event.
    
    [gregory.clement@free-electrons.com: add fixes tag]
    Fixes: c5aff18204da ("net: mvneta: driver for Marvell Armada 370/XP network unit")
    Signed-off-by: Yelena Krivosheev <yelena@marvell.com>
    Tested-by: Dmitri Epshtein <dima@marvell.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01b1a29e32c13c69c0fd8a70e6cd66ac91316862
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Dec 19 15:07:10 2017 -0800

    libnvdimm, pfn: fix start_pad handling for aligned namespaces
    
    commit 19deaa217bc04e83b59b5e8c8229eb0e53ad9efc upstream.
    
    The alignment checks at pfn driver startup fail to properly account for
    the 'start_pad' in the case where the namespace is misaligned relative
    to its internal alignment. This is typically triggered in 1G aligned
    namespace, but could theoretically trigger with small namespace
    alignments. When this triggers the kernel reports messages of the form:
    
        dax2.1: bad offset: 0x3c000000 dax disabled align: 0x40000000
    
    Fixes: 1ee6667cd8d1 ("libnvdimm, pfn, dax: fix initialization vs autodetect...")
    Reported-by: Jane Chu <jane.chu@oracle.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 166f39bc340d0eb739d31ddd347df593d7b6ff97
Author: Vishal Verma <vishal.l.verma@intel.com>
Date:   Mon Dec 18 09:28:39 2017 -0700

    libnvdimm, btt: Fix an incompatibility in the log layout
    
    commit 24e3a7fb60a9187e5df90e5fa655ffc94b9c4f77 upstream.
    
    Due to a spec misinterpretation, the Linux implementation of the BTT log
    area had different padding scheme from other implementations, such as
    UEFI and NVML.
    
    This fixes the padding scheme, and defaults to it for new BTT layouts.
    We attempt to detect the padding scheme in use when probing for an
    existing BTT. If we detect the older/incompatible scheme, we continue
    using it.
    
    Reported-by: Juston Li <juston.li@intel.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Fixes: 5212e11fde4d ("nd_btt: atomic sector updates")
    Signed-off-by: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d80b15a226e59ebbc3ca8c14b65885bc8ffb2b9
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Dec 4 14:07:43 2017 -0800

    libnvdimm, dax: fix 1GB-aligned namespaces vs physical misalignment
    
    commit 41fce90f26333c4fa82e8e43b9ace86c4e8a0120 upstream.
    
    The following namespace configuration attempt:
    
        # ndctl create-namespace -e namespace0.0 -m devdax -a 1G -f
        libndctl: ndctl_dax_enable: dax0.1: failed to enable
          Error: namespace0.0: failed to enable
    
        failed to reconfigure namespace: No such device or address
    
    ...fails when the backing memory range is not physically aligned to 1G:
    
        # cat /proc/iomem | grep Persistent
        210000000-30fffffff : Persistent Memory (legacy)
    
    In the above example the 4G persistent memory range starts and ends on a
    256MB boundary.
    
    We handle this case correctly when needing to handle cases that violate
    section alignment (128MB) collisions against "System RAM", and we simply
    need to extend that padding/truncation for the 1GB alignment use case.
    
    Fixes: 315c562536c4 ("libnvdimm, pfn: add 'align' attribute...")
    Reported-and-tested-by: Jane Chu <jane.chu@oracle.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7681f90a45a8f0eb6da8c0dc68a8334e3ed2251
Author: Maxime Ripard <maxime.ripard@free-electrons.com>
Date:   Thu Dec 7 16:58:50 2017 +0100

    drm/sun4i: Fix error path handling
    
    commit 92411f6d7f1afcc95e54295d40e96a75385212ec upstream.
    
    The commit 4c7f16d14a33 ("drm/sun4i: Fix TCON clock and regmap
    initialization sequence") moved a bunch of logic around, but forgot to
    update the gotos after the introduction of the err_free_dotclock label.
    
    It means that if we fail later that the one introduced in that commit,
    we'll just to the old label which isn't free the clock we created. This
    will result in a breakage as soon as someone tries to do something with
    that clock, since its resources will have been long reclaimed.
    
    Fixes: 4c7f16d14a33 ("drm/sun4i: Fix TCON clock and regmap initialization sequence")
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/f83c1cebc731f0b4251f5ddd7b38c718cd79bb0b.1512662253.git-series.maxime.ripard@free-electrons.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6209cb514d977e323a7dad1b0ee7e83fc906215d
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Dec 4 13:25:13 2017 +0000

    drm/i915: Flush pending GTT writes before unbinding
    
    commit 2797c4a11f373b2545c2398ccb02e362ee66a142 upstream.
    
    From the shrinker paths, we want to relinquish the GPU and GGTT access to
    the object, releasing the backing storage back to the system for
    swapout. As a part of that process we would unpin the pages, marking
    them for access by the CPU (for the swapout/swapin). However, if that
    process was interrupted after unbind the vma, we missed a flush of the
    inflight GGTT writes before we made that GTT space available again for
    reuse, with the prospect that we would redirect them to another page.
    
    The bug dates back to the introduction of multiple GGTT vma, but the
    code itself dates to commit 02bef8f98d26 ("drm/i915: Unbind closed vma
    for i915_gem_object_unbind()").
    
    Fixes: 02bef8f98d26 ("drm/i915: Unbind closed vma for i915_gem_object_unbind()")
    Fixes: c5ad54cf7dd8 ("drm/i915: Use partial view in mmap fault handler")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Reviewed-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171204132513.7303-1-chris@chris-wilson.co.uk
    (cherry picked from commit 5888fc9eac3c2ff96e76aeeb865fdb46ab2d711e)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a971d10f67df27a16cce5084092e151dba3e037d
Author: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
Date:   Tue Dec 12 17:59:15 2017 +0530

    powerpc/perf: Dereference BHRB entries safely
    
    commit f41d84dddc66b164ac16acf3f584c276146f1c48 upstream.
    
    It's theoretically possible that branch instructions recorded in
    BHRB (Branch History Rolling Buffer) entries have already been
    unmapped before they are processed by the kernel. Hence, trying to
    dereference such memory location will result in a crash. eg:
    
        Unable to handle kernel paging request for data at address 0xd000000019c41764
        Faulting instruction address: 0xc000000000084a14
        NIP [c000000000084a14] branch_target+0x4/0x70
        LR [c0000000000eb828] record_and_restart+0x568/0x5c0
        Call Trace:
        [c0000000000eb3b4] record_and_restart+0xf4/0x5c0 (unreliable)
        [c0000000000ec378] perf_event_interrupt+0x298/0x460
        [c000000000027964] performance_monitor_exception+0x54/0x70
        [c000000000009ba4] performance_monitor_common+0x114/0x120
    
    Fix it by deferefencing the addresses safely.
    
    Fixes: 691231846ceb ("powerpc/perf: Fix setting of "to" addresses for BHRB")
    Suggested-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
    Reviewed-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    [mpe: Use probe_kernel_read() which is clearer, tweak change log]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2d769198ff7cb3eecb60a427706d498d87aa0a0
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Mon Dec 18 11:57:51 2017 +0800

    clk: sunxi: sun9i-mmc: Implement reset callback for reset controls
    
    commit 61d2f2a05765a5f57149efbd93e3e81a83cbc2c1 upstream.
    
    Our MMC host driver now issues a reset, instead of just deasserting
    the reset control, since commit c34eda69ad4c ("mmc: sunxi: Reset the
    device at probe time"). The sun9i-mmc clock driver does not support
    this, and will fail, which results in MMC not probing.
    
    This patch implements the reset callback by asserting the reset control,
    then deasserting it after a small delay.
    
    Fixes: 7a6fca879f59 ("clk: sunxi: Add driver for A80 MMC config clocks/resets")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Michael Turquette <mturquette@baylibre.com>
    Link: lkml.kernel.org/r/20171218035751.20661-1-wens@csie.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6461005967ed1a92ad67f8d864fdb3f0794a8682
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Dec 21 00:49:14 2017 +0100

    kvm: x86: fix RSM when PCID is non-zero
    
    commit fae1a3e775cca8c3a9e0eb34443b310871a15a92 upstream.
    
    rsm_load_state_64() and rsm_enter_protected_mode() load CR3, then
    CR4 & ~PCIDE, then CR0, then CR4.
    
    However, setting CR4.PCIDE fails if CR3[11:0] != 0.  It's probably easier
    in the long run to replace rsm_enter_protected_mode() with an emulator
    callback that sets all the special registers (like KVM_SET_SREGS would
    do).  For now, set the PCID field of CR3 only after CR4.PCIDE is 1.
    
    Reported-by: Laszlo Ersek <lersek@redhat.com>
    Tested-by: Laszlo Ersek <lersek@redhat.com>
    Fixes: 660a5d517aaab9187f93854425c4c63f4a09195c
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cc3f6f10240df375f6d7457187b467c1817bdad
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Thu Dec 7 00:30:08 2017 -0800

    KVM: X86: Fix load RFLAGS w/o the fixed bit
    
    commit d73235d17ba63b53dc0e1051dbc10a1f1be91b71 upstream.
    
     *** Guest State ***
     CR0: actual=0x0000000000000030, shadow=0x0000000060000010, gh_mask=fffffffffffffff7
     CR4: actual=0x0000000000002050, shadow=0x0000000000000000, gh_mask=ffffffffffffe871
     CR3 = 0x00000000fffbc000
     RSP = 0x0000000000000000  RIP = 0x0000000000000000
     RFLAGS=0x00000000         DR7 = 0x0000000000000400
            ^^^^^^^^^^
    
    The failed vmentry is triggered by the following testcase when ept=Y:
    
        #include <unistd.h>
        #include <sys/syscall.h>
        #include <string.h>
        #include <stdint.h>
        #include <linux/kvm.h>
        #include <fcntl.h>
        #include <sys/ioctl.h>
    
        long r[5];
        int main()
        {
            r[2] = open("/dev/kvm", O_RDONLY);
            r[3] = ioctl(r[2], KVM_CREATE_VM, 0);
            r[4] = ioctl(r[3], KVM_CREATE_VCPU, 7);
            struct kvm_regs regs = {
                    .rflags = 0,
            };
            ioctl(r[4], KVM_SET_REGS, &regs);
            ioctl(r[4], KVM_RUN, 0);
        }
    
    X86 RFLAGS bit 1 is fixed set, userspace can simply clearing bit 1
    of RFLAGS with KVM_SET_REGS ioctl which results in vmentry fails.
    This patch fixes it by oring X86_EFLAGS_FIXED during ioctl.
    
    Suggested-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Quan Xu <quan.xu0@gmail.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Jim Mattson <jmattson@google.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41e1386388dc53bc0b9d7744fd1a99567d737fed
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Mon Dec 4 22:21:30 2017 -0800

    KVM: MMU: Fix infinite loop when there is no available mmu page
    
    commit ed52870f4676489124d8697fd00e6ae6c504e586 upstream.
    
    The below test case can cause infinite loop in kvm when ept=0.
    
        #include <unistd.h>
        #include <sys/syscall.h>
        #include <string.h>
        #include <stdint.h>
        #include <linux/kvm.h>
        #include <fcntl.h>
        #include <sys/ioctl.h>
    
        long r[5];
        int main()
        {
            r[2] = open("/dev/kvm", O_RDONLY);
            r[3] = ioctl(r[2], KVM_CREATE_VM, 0);
            r[4] = ioctl(r[3], KVM_CREATE_VCPU, 7);
            ioctl(r[4], KVM_RUN, 0);
        }
    
    It doesn't setup the memory regions, mmu_alloc_shadow/direct_roots() in
    kvm return 1 when kvm fails to allocate root page table which can result
    in beblow infinite loop:
    
        vcpu_run() {
            for (;;) {
                    r = vcpu_enter_guest()::kvm_mmu_reload() returns 1
                    if (r <= 0)
                            break;
                    if (need_resched())
                            cond_resched();
          }
        }
    
    This patch fixes it by returning -ENOSPC when there is no available kvm mmu
    page for root page table.
    
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Fixes: 26eeb53cf0f (KVM: MMU: Bail out immediately if there is no available mmu page)
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5aa30b450a8b8b6c8a0921e00e900c0ab9b8c4ae
Author: Laurent Vivier <lvivier@redhat.com>
Date:   Tue Dec 12 18:23:56 2017 +0100

    KVM: PPC: Book3S HV: Fix pending_pri value in kvmppc_xive_get_icp()
    
    commit 7333b5aca412d6ad02667b5a513485838a91b136 upstream.
    
    When we migrate a VM from a POWER8 host (XICS) to a POWER9 host
    (XICS-on-XIVE), we have an error:
    
    qemu-kvm: Unable to restore KVM interrupt controller state \
              (0xff000000) for CPU 0: Invalid argument
    
    This is because kvmppc_xics_set_icp() checks the new state
    is internaly consistent, and especially:
    
    ...
       1129         if (xisr == 0) {
       1130                 if (pending_pri != 0xff)
       1131                         return -EINVAL;
    ...
    
    On the other side, kvmppc_xive_get_icp() doesn't set
    neither the pending_pri value, nor the xisr value (set to 0)
    (and kvmppc_xive_set_icp() ignores the pending_pri value)
    
    As xisr is 0, pending_pri must be set to 0xff.
    
    Fixes: 5af50993850a ("KVM: PPC: Book3S HV: Native usage of the XIVE interrupt controller")
    Signed-off-by: Laurent Vivier <lvivier@redhat.com>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8708f682836827e8c593e370430a3156766b2fe2
Author: Cédric Le Goater <clg@kaod.org>
Date:   Tue Dec 12 12:02:04 2017 +0000

    KVM: PPC: Book3S: fix XIVE migration of pending interrupts
    
    commit dc1c4165d189350cb51bdd3057deb6ecd164beda upstream.
    
    When restoring a pending interrupt, we are setting the Q bit to force
    a retrigger in xive_finish_unmask(). But we also need to force an EOI
    in this case to reach the same initial state : P=1, Q=0.
    
    This can be done by not setting 'old_p' for pending interrupts which
    will inform xive_finish_unmask() that an EOI needs to be sent.
    
    Fixes: 5af50993850a ("KVM: PPC: Book3S HV: Native usage of the XIVE interrupt controller")
    Suggested-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Cédric Le Goater <clg@kaod.org>
    Reviewed-by: Laurent Vivier <lvivier@redhat.com>
    Tested-by: Laurent Vivier <lvivier@redhat.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e9cca9267feb13658a3bb6785a5649b76e684e0
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Thu Dec 7 11:45:45 2017 +0000

    KVM: arm/arm64: Fix HYP unmapping going off limits
    
    commit 7839c672e58bf62da8f2f0197fefb442c02ba1dd upstream.
    
    When we unmap the HYP memory, we try to be clever and unmap one
    PGD at a time. If we start with a non-PGD aligned address and try
    to unmap a whole PGD, things go horribly wrong in unmap_hyp_range
    (addr and end can never match, and it all goes really badly as we
    keep incrementing pgd and parse random memory as page tables...).
    
    The obvious fix is to let unmap_hyp_range do what it does best,
    which is to iterate over a range.
    
    The size of the linear mapping, which begins at PAGE_OFFSET, can be
    easily calculated by subtracting PAGE_OFFSET form high_memory, because
    high_memory is defined as the linear map address of the last byte of
    DRAM, plus one.
    
    The size of the vmalloc region is given trivially by VMALLOC_END -
    VMALLOC_START.
    
    Reported-by: Andre Przywara <andre.przywara@arm.com>
    Tested-by: Andre Przywara <andre.przywara@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a74c8e87e46fa85fbd0c73273c831559c25d576
Author: Julien Thierry <julien.thierry@arm.com>
Date:   Wed Dec 6 17:09:49 2017 +0000

    arm64: kvm: Prevent restoring stale PMSCR_EL1 for vcpu
    
    commit bfe766cf65fb65e68c4764f76158718560bdcee5 upstream.
    
    When VHE is not present, KVM needs to save and restores PMSCR_EL1 when
    possible. If SPE is used by the host, value of PMSCR_EL1 cannot be saved
    for the guest.
    If the host starts using SPE between two save+restore on the same vcpu,
    restore will write the value of PMSCR_EL1 read during the first save.
    
    Make sure __debug_save_spe_nvhe clears the value of the saved PMSCR_EL1
    when the guest cannot use SPE.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Cc: Christoffer Dall <christoffer.dall@linaro.org>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Reviewed-by: Will Deacon <will.deacon@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efc9b7ae524dfbd4cb9122d2f1d4e9c33d0f11dd
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Mon Dec 4 12:11:02 2017 +0300

    pinctrl: cherryview: Mask all interrupts on Intel_Strago based systems
    
    commit d2b3c353595a855794f8b9df5b5bdbe8deb0c413 upstream.
    
    Guenter Roeck reported an interrupt storm on a prototype system which is
    based on Cyan Chromebook. The root cause turned out to be a incorrectly
    configured pin that triggers spurious interrupts. This will be fixed in
    coreboot but currently we need to prevent the interrupt storm from
    happening by masking all interrupts (but not GPEs) on those systems.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=197953
    Fixes: bcb48cca23ec ("pinctrl: cherryview: Do not mask all interrupts in probe")
    Reported-and-tested-by: Guenter Roeck <linux@roeck-us.net>
    Reported-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed1918e287547d92a795729993ce8e6ca7940eda
Author: Maxime Chevallier <maxime.chevallier@smile.fr>
Date:   Mon Nov 27 15:16:32 2017 +0100

    spi: a3700: Fix clk prescaling for coefficient over 15
    
    commit 251c201bf4f8b5bf4f1ccb4f8920eed2e1f57580 upstream.
    
    The Armada 3700 SPI controller has 2 ranges of prescaler coefficients.
    One ranging from 0 to 15 by steps of 1, and one ranging from 0 to 30 by
    steps of 2.
    
    This commit fixes the prescaler coefficients that are over 15 so that it
    uses the correct range of values. The prescaling coefficient is rounded
    to the upper value if it is odd.
    
    This was tested on Espressobin with spidev and a locigal analyser.
    
    Signed-off-by: Maxime Chevallier <maxime.chevallier@smile.fr>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8f28db0f737690e3d7ecb26cfaf60c7af74f7e5
Author: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
Date:   Tue Nov 21 10:09:02 2017 +0100

    spi: xilinx: Detect stall with Unknown commands
    
    commit 5a1314fa697fc65cefaba64cd4699bfc3e6882a6 upstream.
    
    When the core is configured in C_SPI_MODE > 0, it integrates a
    lookup table that automatically configures the core in dual or quad mode
    based on the command (first byte on the tx fifo).
    
    Unfortunately, that list mode_?_memoy_*.mif does not contain all the
    supported commands by the flash.
    
    Since 4.14 spi-nor automatically tries to probe the flash using SFDP
    (command 0x5a), and that command is not part of the list_mode table.
    
    Whit the right combination of C_SPI_MODE and C_SPI_MEMORY this leads
    into a stall that can only be recovered with a soft rest.
    
    This patch detects this kind of stall and returns -EIO to the caller on
    those commands. spi-nor can handle this error properly:
    
    m25p80 spi0.0: Detected stall. Check C_SPI_MODE and C_SPI_MEMORY. 0x21 0x2404
    m25p80 spi0.0: SPI transfer failed: -5
    spi_master spi0: failed to transfer one message from queue
    m25p80 spi0.0: s25sl064p (8192 Kbytes)
    
    Signed-off-by: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b1f78c02c79d8e5398d3a0cbf45c4a3dee2e9ee
Author: John David Anglin <dave.anglin@bell.net>
Date:   Mon Nov 13 19:35:33 2017 -0500

    Revert "parisc: Re-enable interrupts early"
    
    commit 9352aeada4d8d8753fc0e414fbfe8fdfcb68a12c upstream.
    
    This reverts commit 5c38602d83e584047906b41b162ababd4db4106d.
    
    Interrupts can't be enabled early because the register saves are done on
    the thread stack prior to switching to the IRQ stack.  This caused stack
    overflows and the thread stack needed increasing to 32k.  Even then,
    stack overflows still occasionally occurred.
    
    Background:
    Even with a 32 kB thread stack, I have seen instances where the thread
    stack overflowed on the mx3210 buildd.  Detection of stack overflow only
    occurs when we have an external interrupt.  When an external interrupt
    occurs, we switch to the thread stack if we are not already on a kernel
    stack.  Then, registers and specials are saved to the kernel stack.
    
    The bug occurs in intr_return where interrupts are reenabled prior to
    returning from the interrupt.  This was done incase we need to schedule
    or deliver signals.  However, it introduces the possibility that
    multiple external interrupts may occur on the thread stack and cause a
    stack overflow.  These might not be detected and cause the kernel to
    misbehave in random ways.
    
    This patch changes the code back to only reenable interrupts when we are
    going to schedule or deliver signals.  As a result, we generally return
    from an interrupt before reenabling interrupts.  This minimizes the
    growth of the thread stack.
    
    Fixes: 5c38602d83e5 ("parisc: Re-enable interrupts early")
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13a41fbd867ae482650aab1cee068e1f7f5ad94a
Author: Helge Deller <deller@gmx.de>
Date:   Tue Dec 12 21:52:26 2017 +0100

    parisc: Hide Diva-built-in serial aux and graphics card
    
    commit bcf3f1752a622f1372d3252d0fea8855d89812e7 upstream.
    
    Diva GSP card has built-in serial AUX port and ATI graphic card which simply
    don't work and which both don't have external connectors.  User Guides even
    mention that those devices shouldn't be used.
    So, prevent that Linux drivers try to enable those devices.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 117b8b85e5777b76128a808533c4f711be564360
Author: Helge Deller <deller@gmx.de>
Date:   Tue Dec 12 21:32:16 2017 +0100

    parisc: Fix indenting in puts()
    
    commit 203c110b39a89b48156c7450504e454fedb7f7f6 upstream.
    
    Static analysis tools complain that we intended to have curly braces
    around this indent block. In this case this assumption is wrong, so fix
    the indenting.
    
    Fixes: 2f3c7b8137ef ("parisc: Add core code for self-extracting kernel")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 482b6942a8c1e5110a44787f6e72e0d0775bf4c0
Author: Helge Deller <deller@gmx.de>
Date:   Tue Dec 12 21:25:41 2017 +0100

    parisc: Align os_hpmc_size on word boundary
    
    commit 0ed9d3de5f8f97e6efd5ca0e3377cab5f0451ead upstream.
    
    The os_hpmc_size variable sometimes wasn't aligned at word boundary and thus
    triggered the unaligned fault handler at startup.
    Fix it by aligning it properly.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ef1c33f98c82876555813e301aca7a765f28f92
Author: Shaohua Li <shli@fb.com>
Date:   Wed Dec 20 11:10:17 2017 -0700

    block-throttle: avoid double charge
    
    commit 111be883981748acc9a56e855c8336404a8e787c upstream.
    
    If a bio is throttled and split after throttling, the bio could be
    resubmited and enters the throttling again. This will cause part of the
    bio to be charged multiple times. If the cgroup has an IO limit, the
    double charge will significantly harm the performance. The bio split
    becomes quite common after arbitrary bio size change.
    
    To fix this, we always set the BIO_THROTTLED flag if a bio is throttled.
    If the bio is cloned/split, we copy the flag to new bio too to avoid a
    double charge. However, cloned bio could be directed to a new disk,
    keeping the flag be a problem. The observation is we always set new disk
    for the bio in this case, so we can clear the flag in bio_set_dev().
    
    This issue exists for a long time, arbitrary bio size change just makes
    it worse, so this should go into stable at least since v4.2.
    
    V1-> V2: Not add extra field in bio based on discussion with Tejun
    
    Cc: Vivek Goyal <vgoyal@redhat.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f349652293fb79fbd5768dfc18605200177b74d7
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Dec 20 13:13:58 2017 -0700

    block: unalign call_single_data in struct request
    
    commit 4ccafe032005e9b96acbef2e389a4de5b1254add upstream.
    
    A previous change blindly added massive alignment to the
    call_single_data structure in struct request. This ballooned it in size
    from 296 to 320 bytes on my setup, for no valid reason at all.
    
    Use the unaligned struct __call_single_data variant instead.
    
    Fixes: 966a967116e69 ("smp: Avoid using two cache lines for struct call_single_data")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8f477a5cd2021552b135764b77df7c39b7dc504
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Dec 15 03:07:18 2017 +0100

    PCI / PM: Force devices to D0 in pci_pm_thaw_noirq()
    
    commit 5839ee7389e893a31e4e3c9cf17b50d14103c902 upstream.
    
    It is incorrect to call pci_restore_state() for devices in low-power
    states (D1-D3), as that involves the restoration of MSI setup which
    requires MMIO to be operational and that is only the case in D0.
    
    However, pci_pm_thaw_noirq() may do that if the driver's "freeze"
    callbacks put the device into a low-power state, so fix it by making
    it force devices into D0 via pci_set_power_state() instead of trying
    to "update" their power state which is pointless.
    
    Fixes: e60514bd4485 (PCI/PM: Restore the status of PCI devices across hibernation)
    Reported-by: Thomas Gleixner <tglx@linutronix.de>
    Reported-by: Maarten Lankhorst <dev@mblankhorst.nl>
    Tested-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Maarten Lankhorst <dev@mblankhorst.nl>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c7b98ffac666d4f54d1b57b82c3341f473f7dc5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Dec 18 23:36:57 2017 +0100

    ALSA: usb-audio: Fix the missing ctl name suffix at parsing SU
    
    commit 5a15f289ee87eaf33f13f08a4909ec99d837ec5f upstream.
    
    The commit 89b89d121ffc ("ALSA: usb-audio: Add check return value for
    usb_string()") added the check of the return value from
    snd_usb_copy_string_desc(), which is correct per se, but it introduced
    a regression.  In the original code, either the "Clock Source",
    "Playback Source" or "Capture Source" suffix is added after the
    terminal string, while the commit changed it to add the suffix only
    when get_term_name() is failing.  It ended up with an incorrect ctl
    name like "PCM" instead of "PCM Capture Source".
    
    Also, even the original code has a similar bug: when the ctl name is
    generated from snd_usb_copy_string_desc() for the given iSelector, it
    also doesn't put the suffix.
    
    This patch addresses these issues: the suffix is added always when no
    static mapping is found.  Also the patch tries to put more comments
    and cleans up the if/else block for better readability in order to
    avoid the same pitfall again.
    
    Fixes: 89b89d121ffc ("ALSA: usb-audio: Add check return value for usb_string()")
    Reported-and-tested-by: Mauro Santos <registo.mailling@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39384674586f371503728661d0ded892c348717a
Author: Jussi Laako <jussi@sonarnerd.net>
Date:   Thu Dec 7 12:58:33 2017 +0200

    ALSA: usb-audio: Add native DSD support for Esoteric D-05X
    
    commit 866f7ed7d67936dcdbcddc111c8af878c918fe7c upstream.
    
    Adds VID:PID of Esoteric D-05X to the TEAC device id's.
    Renames the is_teac_50X_dac() function to is_teac_dsd_dac() to cover
    broader device family from the same corporation sharing the same USB
    audio implementation.
    
    Signed-off-by: Jussi Laako <jussi@sonarnerd.net>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70709c277cdcee4e1700e9155a316700ba1446b9
Author: Guneshwor Singh <guneshwor.o.singh@intel.com>
Date:   Thu Dec 7 18:06:20 2017 +0530

    ALSA: hda - Add vendor id for Cannonlake HDMI codec
    
    commit 2b4584d00a6bc02b63ab3c7213060d41a74bdff1 upstream.
    
    Cannonlake HDMI codec has the same nid as Geminilake. This adds the
    codec entry for it.
    
    Signed-off-by: Guneshwor Singh <guneshwor.o.singh@intel.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a6a8463978679e3453785270543abadecb07ab7
Author: Kailang Yang <kailang@realtek.com>
Date:   Thu Dec 14 15:28:58 2017 +0800

    ALSA: hda/realtek - Fix Dell AIO LineOut issue
    
    commit 9226665159f0367ad08bc7d5dd194aeadb90316f upstream.
    
    Dell AIO had LineOut jack.
    Add LineOut verb into this patch.
    
    [ Additional notes:
      the ALC274 codec seems requiring the fixed pin / DAC connections for
      HP / line-out pins for enabling EQ for speakers; i.e. the HP / LO
      pins expect to be connected with NID 0x03 while keeping the speaker
      with NID 0x02.  However, by adding a new line-out pin, the
      auto-parser assigns the NID 0x02 for HP/LO pins as primary outputs.
      As an easy workaround, we provide the preferred_pairs[] to map
      forcibly for these pins. -- tiwai ]
    
    Fixes: 75ee94b20b46 ("ALSA: hda - fix headset mic problem for Dell machines with alc274")
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 065a28657370ce3a7ebbc13030ba6231db4a6138
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 14 16:44:12 2017 +0100

    ALSA: rawmidi: Avoid racy info ioctl via ctl device
    
    commit c1cfd9025cc394fd137a01159d74335c5ac978ce upstream.
    
    The rawmidi also allows to obtaining the information via ioctl of ctl
    API.  It means that user can issue an ioctl to the rawmidi device even
    when it's being removed as long as the control device is present.
    Although the code has some protection via the global register_mutex,
    its range is limited to the search of the corresponding rawmidi
    object, and the mutex is already unlocked at accessing the rawmidi
    object.  This may lead to a use-after-free.
    
    For avoiding it, this patch widens the application of register_mutex
    to the whole snd_rawmidi_info_select() function.  We have another
    mutex per rawmidi object, but this operation isn't very hot path, so
    it shouldn't matter from the performance POV.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 637de99c7a1523b31aedb83537b0fcba8775663e
Author: Johan Hovold <johan@kernel.org>
Date:   Sat Nov 11 16:38:44 2017 +0100

    mfd: twl6040: Fix child-node lookup
    
    commit 85e9b13cbb130a3209f21bd7933933399c389ffe upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at the parent rather than just matching
    on its children.
    
    To make things worse, the parent node was prematurely freed, while the
    child node was leaked.
    
    Note that the CONFIG_OF compile guard can be removed as
    of_get_child_by_name() provides a !CONFIG_OF implementation which always
    fails.
    
    Fixes: 37e13cecaa14 ("mfd: Add support for Device Tree to twl6040")
    Fixes: ca2cad6ae38e ("mfd: Fix twl6040 build failure")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6300daa071b21eec1e7411609a09f050966b392e
Author: Johan Hovold <johan@kernel.org>
Date:   Sat Nov 11 16:38:43 2017 +0100

    mfd: twl4030-audio: Fix sibling-node lookup
    
    commit 0a423772de2f3d7b00899987884f62f63ae00dcb upstream.
    
    A helper purported to look up a child node based on its name was using
    the wrong of-helper and ended up prematurely freeing the parent of-node
    while leaking any matching node.
    
    To make things worse, any matching node would not even necessarily be a
    child node as the whole device tree was searched depth-first starting at
    the parent.
    
    Fixes: 019a7e6b7b31 ("mfd: twl4030-audio: Add DT support")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de3b66c01edc8ac2bea82c0337e75f6b5498bf37
Author: Jon Hunter <jonathanh@nvidia.com>
Date:   Tue Nov 14 14:43:27 2017 +0000

    mfd: cros ec: spi: Don't send first message too soon
    
    commit 15d8374874ded0bec37ef27f8301a6d54032c0e5 upstream.
    
    On the Tegra124 Nyan-Big chromebook the very first SPI message sent to
    the EC is failing.
    
    The Tegra SPI driver configures the SPI chip-selects to be active-high
    by default (and always has for many years). The EC SPI requires an
    active-low chip-select and so the Tegra chip-select is reconfigured to
    be active-low when the EC SPI driver calls spi_setup(). The problem is
    that if the first SPI message to the EC is sent too soon after
    reconfiguring the SPI chip-select, it fails.
    
    The EC SPI driver prevents back-to-back SPI messages being sent too
    soon by keeping track of the time the last transfer was sent via the
    variable 'last_transfer_ns'. To prevent the very first transfer being
    sent too soon, initialise the 'last_transfer_ns' variable after calling
    spi_setup() and before sending the first SPI message.
    
    Signed-off-by: Jon Hunter <jonathanh@nvidia.com>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Acked-by: Benson Leung <bleung@chromium.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f09fca41e29c68944e75ab5f65a2efcfcc88aceb
Author: Stephan Mueller <smueller@chronox.de>
Date:   Fri Dec 8 11:50:37 2017 +0100

    crypto: af_alg - fix race accessing cipher request
    
    commit d53c5135792319e095bb126bc43b2ee98586f7fe upstream.
    
    When invoking an asynchronous cipher operation, the invocation of the
    callback may be performed before the subsequent operations in the
    initial code path are invoked. The callback deletes the cipher request
    data structure which implies that after the invocation of the
    asynchronous cipher operation, this data structure must not be accessed
    any more.
    
    The setting of the return code size with the request data structure must
    therefore be moved before the invocation of the asynchronous cipher
    operation.
    
    Fixes: e870456d8e7c ("crypto: algif_skcipher - overhaul memory management")
    Fixes: d887c52d6ae4 ("crypto: algif_aead - overhaul memory management")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c692698ebebed838627aa3879e30959c4a75f033
Author: Stephan Mueller <smueller@chronox.de>
Date:   Wed Nov 29 12:02:23 2017 +0100

    crypto: af_alg - wait for data at beginning of recvmsg
    
    commit 11edb555966ed2c66c533d17c604f9d7e580a829 upstream.
    
    The wait for data is a non-atomic operation that can sleep and therefore
    potentially release the socket lock. The release of the socket lock
    allows another thread to modify the context data structure. The waiting
    operation for new data therefore must be called at the beginning of
    recvmsg. This prevents a race condition where checks of the members of
    the context data structure are performed by recvmsg while there is a
    potential for modification of these values.
    
    Fixes: e870456d8e7c ("crypto: algif_skcipher - overhaul memory management")
    Fixes: d887c52d6ae4 ("crypto: algif_aead - overhaul memory management")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88990591f0b0e7d4aedf0255fc26a09a2f899212
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Thu Nov 30 13:39:27 2017 +0100

    crypto: mcryptd - protect the per-CPU queue with a lock
    
    commit 9abffc6f2efe46c3564c04312e52e07622d40e51 upstream.
    
    mcryptd_enqueue_request() grabs the per-CPU queue struct and protects
    access to it with disabled preemption. Then it schedules a worker on the
    same CPU. The worker in mcryptd_queue_worker() guards access to the same
    per-CPU variable with disabled preemption.
    
    If we take CPU-hotplug into account then it is possible that between
    queue_work_on() and the actual invocation of the worker the CPU goes
    down and the worker will be scheduled on _another_ CPU. And here the
    preempt_disable() protection does not work anymore. The easiest thing is
    to add a spin_lock() to guard access to the list.
    
    Another detail: mcryptd_queue_worker() is not processing more than
    MCRYPTD_BATCH invocation in a row. If there are still items left, then
    it will invoke queue_work() to proceed with more later. *I* would
    suggest to simply drop that check because it does not use a system
    workqueue and the workqueue is already marked as "CPU_INTENSIVE". And if
    preemption is required then the scheduler should do it.
    However if queue_work() is used then the work item is marked as CPU
    unbound. That means it will try to run on the local CPU but it may run
    on another CPU as well. Especially with CONFIG_DEBUG_WQ_FORCE_RR_CPU=y.
    Again, the preempt_disable() won't work here but lock which was
    introduced will help.
    In order to keep work-item on the local CPU (and avoid RR) I changed it
    to queue_work_on().
    
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29082870f58a9b0c793bea745de52a07c74f09aa
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Nov 29 01:18:57 2017 -0800

    crypto: skcipher - set walk.iv for zero-length inputs
    
    commit 2b4f27c36bcd46e820ddb9a8e6fe6a63fa4250b8 upstream.
    
    All the ChaCha20 algorithms as well as the ARM bit-sliced AES-XTS
    algorithms call skcipher_walk_virt(), then access the IV (walk.iv)
    before checking whether any bytes need to be processed (walk.nbytes).
    
    But if the input is empty, then skcipher_walk_virt() doesn't set the IV,
    and the algorithms crash trying to use the uninitialized IV pointer.
    
    Fix it by setting the IV earlier in skcipher_walk_virt().  Also fix it
    for the AEAD walk functions.
    
    This isn't a perfect solution because we can't actually align the IV to
    ->cra_alignmask unless there are bytes to process, for one because the
    temporary buffer for the aligned IV is freed by skcipher_walk_done(),
    which is only called when there are bytes to process.  Thus, algorithms
    that require aligned IVs will still need to avoid accessing the IV when
    walk.nbytes == 0.  Still, many algorithms/architectures are fine with
    IVs having any alignment, and even for those that aren't, a misaligned
    pointer bug is much less severe than an uninitialized pointer bug.
    
    This change also matches the behavior of the older blkcipher_walk API.
    
    Fixes: 0cabf2af6f5a ("crypto: skcipher - Fix crash on zero-length input")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94e0c5ab52e2bdc1ddbaec32ca0e477a2737eb04
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Nov 30 19:42:52 2017 -0800

    acpi, nfit: fix health event notification
    
    commit adf6895754e2503d994a765535fd1813f8834674 upstream.
    
    Integration testing with a BIOS that generates injected health event
    notifications fails to communicate those events to userspace. The nfit
    driver neglects to link the ACPI DIMM device with the necessary driver
    data so acpi_nvdimm_notify() fails this lookup:
    
            nfit_mem = dev_get_drvdata(dev);
            if (nfit_mem && nfit_mem->flags_attr)
                    sysfs_notify_dirent(nfit_mem->flags_attr);
    
    Add the necessary linkage when installing the notification handler and
    clean it up when the nfit driver instance is torn down.
    
    Cc: Toshi Kani <toshi.kani@hpe.com>
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Fixes: ba9c8dd3c222 ("acpi, nfit: add dimm device notification support")
    Reported-by: Daniel Osawa <daniel.k.osawa@intel.com>
    Tested-by: Daniel Osawa <daniel.k.osawa@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a5d5789819417d67ccb6c81f9339ee75f97370a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 14 13:31:16 2017 +0100

    ACPI: APEI / ERST: Fix missing error handling in erst_reader()
    
    commit bb82e0b4a7e96494f0c1004ce50cec3d7b5fb3d1 upstream.
    
    The commit f6f828513290 ("pstore: pass allocated memory region back to
    caller") changed the check of the return value from erst_read() in
    erst_reader() in the following way:
    
            if (len == -ENOENT)
                    goto skip;
    -       else if (len < 0) {
    -               rc = -1;
    +       else if (len < sizeof(*rcd)) {
    +               rc = -EIO;
                    goto out;
    
    This introduced another bug: since the comparison with sizeof() is
    cast to unsigned, a negative len value doesn't hit any longer.
    As a result, when an error is returned from erst_read(), the code
    falls through, and it may eventually lead to some weird thing like
    memory corruption.
    
    This patch adds the negative error value check more explicitly for
    addressing the issue.
    
    Fixes: f6f828513290 (pstore: pass allocated memory region back to caller)
    Tested-by: Jerry Tang <jtang@suse.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 752d01704ad18371fa6d15ef16f5dea7972be821
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Dec 23 19:45:11 2017 +0100

    x86/cpu_entry_area: Prevent wraparound in setup_cpu_entry_area_ptes() on 32bit
    
    commit f6c4fd506cb626e4346aa81688f255e593a7c5a0 upstream.
    
    The loop which populates the CPU entry area PMDs can wrap around on 32bit
    machines when the number of CPUs is small.
    
    It worked wonderful for NR_CPUS=64 for whatever reason and the moron who
    wrote that code did not bother to test it with !SMP.
    
    Check for the wraparound to fix it.
    
    Fixes: 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Reported-by: kernel test robot <fengguang.wu@intel.com>
    Signed-off-by: Thomas "Feels stupid" Gleixner <tglx@linutronix.de>
    Tested-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 763f7eaf606281ccfaa2f95445219f797697ed70
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Dec 17 10:56:29 2017 +0100

    init: Invoke init_espfix_bsp() from mm_init()
    
    commit 613e396bc0d4c7604fba23256644e78454c68cf6 upstream.
    
    init_espfix_bsp() needs to be invoked before the page table isolation
    initialization. Move it into mm_init() which is the place where pti_init()
    will be added.
    
    While at it get rid of the #ifdeffery and provide proper stub functions.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3440093266b786d8b8b2506ea788f4462437cd7a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Dec 20 18:51:31 2017 +0100

    x86/cpu_entry_area: Move it out of the fixmap
    
    commit 92a0f81d89571e3e8759366e050ee05cc545ef99 upstream.
    
    Put the cpu_entry_area into a separate P4D entry. The fixmap gets too big
    and 0-day already hit a case where the fixmap PTEs were cleared by
    cleanup_highmap().
    
    Aside of that the fixmap API is a pain as it's all backwards.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b0eddf0a1d1beabc2f3b23bf807758667c30fc7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Dec 20 18:28:54 2017 +0100

    x86/cpu_entry_area: Move it to a separate unit
    
    commit ed1bbc40a0d10e0c5c74fe7bdc6298295cf40255 upstream.
    
    Separate the cpu_entry_area code out of cpu/common.c and the fixmap.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6167aeb9faf5966daca3f9f973e1b428a43510c
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Dec 5 13:34:47 2017 +0100

    x86/mm: Create asm/invpcid.h
    
    commit 1a3b0caeb77edeac5ce5fa05e6a61c474c9a9745 upstream.
    
    Unclutter tlbflush.h a little.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acefb4516bcecc7d084205e00fe2de589d8259bc
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:56 2017 +0100

    x86/mm: Put MMU to hardware ASID translation in one place
    
    commit dd95f1a4b5ca904c78e6a097091eb21436478abb upstream.
    
    There are effectively two ASID types:
    
     1. The one stored in the mmu_context that goes from 0..5
     2. The one programmed into the hardware that goes from 1..6
    
    This consolidates the locations where converting between the two (by doing
    a +1) to a single place which gives us a nice place to comment.
    PAGE_TABLE_ISOLATION will also need to, given an ASID, know which hardware
    ASID to flush for the userspace mapping.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1765d0a565ee2585cf7b400e81be9a4da96fd7da
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:55 2017 +0100

    x86/mm: Remove hard-coded ASID limit checks
    
    commit cb0a9144a744e55207e24dcef812f05cd15a499a upstream.
    
    First, it's nice to remove the magic numbers.
    
    Second, PAGE_TABLE_ISOLATION is going to consume half of the available ASID
    space.  The space is currently unused, but add a comment to spell out this
    new restriction.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b72e0abe99abaa4e64db83776c11ff6847e829cf
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 15:07:54 2017 +0100

    x86/mm: Move the CR3 construction functions to tlbflush.h
    
    commit 50fb83a62cf472dc53ba23bd3f7bd6c1b2b3b53e upstream.
    
    For flushing the TLB, the ASID which has been programmed into the hardware
    must be known.  That differs from what is in 'cpu_tlbstate'.
    
    Add functions to transform the 'cpu_tlbstate' values into to the one
    programmed into the hardware (CR3).
    
    It's not easy to include mmu_context.h into tlbflush.h, so just move the
    CR3 building over to tlbflush.h.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29606f10f399dd159ab6718d05060294b29a4481
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Dec 5 13:34:52 2017 +0100

    x86/mm: Add comments to clarify which TLB-flush functions are supposed to flush what
    
    commit 3f67af51e56f291d7417d77c4f67cd774633c5e1 upstream.
    
    Per popular request..
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6472c50292d4e4b342f4ea4e3e46e7786ca5c99c
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Dec 5 13:34:46 2017 +0100

    x86/mm: Remove superfluous barriers
    
    commit b5fc6d943808b570bdfbec80f40c6b3855f1c48b upstream.
    
    atomic64_inc_return() already implies smp_mb() before and after.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0edc4947db9a3cbc6219143ff72e163ad7dbf80
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Dec 5 13:34:49 2017 +0100

    x86/mm: Use __flush_tlb_one() for kernel memory
    
    commit a501686b2923ce6f2ff2b1d0d50682c6411baf72 upstream.
    
    __flush_tlb_single() is for user mappings, __flush_tlb_one() for
    kernel mappings.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de4c8bbd6e1b631fa5f38e75453e331244ad7028
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Dec 5 13:34:51 2017 +0100

    x86/microcode: Dont abuse the TLB-flush interface
    
    commit 23cb7d46f371844c004784ad9552a57446f73e5a upstream.
    
    Commit:
    
      ec400ddeff20 ("x86/microcode_intel_early.c: Early update ucode on Intel's CPU")
    
    ... grubbed into tlbflush internals without coherent explanation.
    
    Since it says its a precaution and the SDM doesn't mention anything like
    this, take it out back.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: fenghua.yu@intel.com
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 032fd2e383cb112789bcbb9a728dd4d96a1c280d
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Dec 5 13:34:50 2017 +0100

    x86/uv: Use the right TLB-flush API
    
    commit 3e46e0f5ee3643a1239be9046c7ba6c66ca2b329 upstream.
    
    Since uv_flush_tlb_others() implements flush_tlb_others() which is
    about flushing user mappings, we should use __flush_tlb_single(),
    which too is about flushing user mappings.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Andrew Banman <abanman@hpe.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Travis <mike.travis@hpe.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06f9acfe0abcc9386bbeee8438b87f90ff2e04d1
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Mon Dec 4 17:25:07 2017 -0800

    x86/entry: Rename SYSENTER_stack to CPU_ENTRY_AREA_entry_stack
    
    commit 4fe2d8b11a370af286287a2661de9d4e6c9a145a upstream.
    
    If the kernel oopses while on the trampoline stack, it will print
    "<SYSENTER>" even if SYSENTER is not involved.  That is rather confusing.
    
    The "SYSENTER" stack is used for a lot more than SYSENTER now.  Give it a
    better string to display in stack dumps, and rename the kernel code to
    match.
    
    Also move the 32-bit code over to the new naming even though it still uses
    the entry stack only for SYSENTER.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8f29ac7363778f38dab7bcb79ca076b8534904c
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Dec 5 13:34:54 2017 +0100

    x86/doc: Remove obvious weirdnesses from the x86 MM layout documentation
    
    commit e8ffe96e5933d417195268478479933d56213a3f upstream.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88569f5e3a5648331066b49dd6918b8c70067ae7
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Dec 12 07:56:43 2017 -0800

    x86/mm/64: Improve the memory map documentation
    
    commit 5a7ccf4754fb3660569a6de52ba7f7fc3dfaf280 upstream.
    
    The old docs had the vsyscall range wrong and were missing the fixmap.
    Fix both.
    
    There used to be 8 MB reserved for future vsyscalls, but that's long gone.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Kirill A. Shutemov <kirill@shutemov.name>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c8e9099aecec2baaac8d34c7b823493f2d0eeed
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Dec 14 12:27:31 2017 +0100

    x86/ldt: Prevent LDT inheritance on exec
    
    commit a4828f81037f491b2cc986595e3a969a6eeb2fb5 upstream.
    
    The LDT is inherited across fork() or exec(), but that makes no sense
    at all because exec() is supposed to start the process clean.
    
    The reason why this happens is that init_new_context_ldt() is called from
    init_new_context() which obviously needs to be called for both fork() and
    exec().
    
    It would be surprising if anything relies on that behaviour, so it seems to
    be safe to remove that misfeature.
    
    Split the context initialization into two parts. Clear the LDT pointer and
    initialize the mutex from the general context init and move the LDT
    duplication to arch_dup_mmap() which is only called on fork().
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Andy Lutomirsky <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: dan.j.williams@intel.com
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: kirill.shutemov@linux.intel.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b17459342c55a209014a783d74bff6a0a5374339
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Dec 14 12:27:30 2017 +0100

    x86/ldt: Rework locking
    
    commit c2b3496bb30bd159e9de42e5c952e1f1f33c9a77 upstream.
    
    The LDT is duplicated on fork() and on exec(), which is wrong as exec()
    should start from a clean state, i.e. without LDT. To fix this the LDT
    duplication code will be moved into arch_dup_mmap() which is only called
    for fork().
    
    This introduces a locking problem. arch_dup_mmap() holds mmap_sem of the
    parent process, but the LDT duplication code needs to acquire
    mm->context.lock to access the LDT data safely, which is the reverse lock
    order of write_ldt() where mmap_sem nests into context.lock.
    
    Solve this by introducing a new rw semaphore which serializes the
    read/write_ldt() syscall operations and use context.lock to protect the
    actual installment of the LDT descriptor.
    
    So context.lock stabilizes mm->context.ldt and can nest inside of the new
    semaphore or mmap_sem.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Andy Lutomirsky <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: dan.j.williams@intel.com
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: kirill.shutemov@linux.intel.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee8e8b2df6d3f2a4ce25182d18964f891760ac65
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Dec 14 12:27:29 2017 +0100

    arch, mm: Allow arch_dup_mmap() to fail
    
    commit c10e83f598d08046dd1ebc8360d4bb12d802d51b upstream.
    
    In order to sanitize the LDT initialization on x86 arch_dup_mmap() must be
    allowed to fail. Fix up all instances.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Andy Lutomirsky <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: dan.j.williams@intel.com
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: kirill.shutemov@linux.intel.com
    Cc: linux-mm@kvack.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49c01662d3177e1814ceb52337add473fb4d264b
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sun Dec 10 22:47:20 2017 -0800

    x86/vsyscall/64: Warn and fail vsyscall emulation in NATIVE mode
    
    commit 4831b779403a836158917d59a7ca880483c67378 upstream.
    
    If something goes wrong with pagetable setup, vsyscall=native will
    accidentally fall back to emulation.  Make it warn and fail so that we
    notice.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit beb899c4bcdfb006293a593ffe31c9f13ec7c66b
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sun Dec 10 22:47:19 2017 -0800

    x86/vsyscall/64: Explicitly set _PAGE_USER in the pagetable hierarchy
    
    commit 49275fef986abfb8b476e4708aaecc07e7d3e087 upstream.
    
    The kernel is very erratic as to which pagetables have _PAGE_USER set.  The
    vsyscall page gets lucky: it seems that all of the relevant pagetables are
    among the apparently arbitrary ones that set _PAGE_USER.  Rather than
    relying on chance, just explicitly set _PAGE_USER.
    
    This will let us clean up pagetable setup to stop setting _PAGE_USER.  The
    added code can also be reused by pagetable isolation to manage the
    _PAGE_USER bit in the usermode tables.
    
    [ tglx: Folded paravirt fix from Juergen Gross ]
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b45ad6e0fd7710cb5a5fb9a6bdd0632f510bf50
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Dec 20 18:07:42 2017 +0100

    x86/mm/dump_pagetables: Make the address hints correct and readable
    
    commit 146122e24bdf208015d629babba673e28d090709 upstream.
    
    The address hints are a trainwreck. The array entry numbers have to kept
    magically in sync with the actual hints, which is doomed as some of the
    array members are initialized at runtime via the entry numbers.
    
    Designated initializers have been around before this code was
    implemented....
    
    Use the entry numbers to populate the address hints array and add the
    missing bits and pieces. Split 32 and 64 bit for readability sake.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4bc398080d80008e7d4a8cff528b8f3e8d8fb63
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Dec 16 01:14:39 2017 +0100

    x86/mm/dump_pagetables: Check PAGE_PRESENT for real
    
    commit c05344947b37f7cda726e802457370bc6eac4d26 upstream.
    
    The check for a present page in printk_prot():
    
           if (!pgprot_val(prot)) {
                    /* Not present */
    
    is bogus. If a PTE is set to PAGE_NONE then the pgprot_val is not zero and
    the entry is decoded in bogus ways, e.g. as RX GLB. That is confusing when
    analyzing mapping correctness. Check for the present bit to make an
    informed decision.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 662fd946aa4637a822bff0ec02afd59a8e2c2ba2
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Dec 20 18:02:34 2017 +0100

    x86/Kconfig: Limit NR_CPUS on 32-bit to a sane amount
    
    commit 7bbcbd3d1cdcbacd0f9f8dc4c98d550972f1ca30 upstream.
    
    The recent cpu_entry_area changes fail to compile on 32-bit when BIGSMP=y
    and NR_CPUS=512, because the fixmap area becomes too big.
    
    Limit the number of CPUs with BIGSMP to 64, which is already way to big for
    32-bit, but it's at least a working limitation.
    
    We performed a quick survey of 32-bit-only machines that might be affected
    by this change negatively, but found none.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adc37e209d954ffa235d036c1b71ca84691ae4f7
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Fri Oct 27 13:25:40 2017 -0700

    x86/insn-eval: Add utility functions to get segment selector
    
    commit 32d0b95300db03c2b23b2ea2c94769a4a138e79d upstream.
    
    [note, only the inat.h portion, to get objtool back in sync - gregkh]
    
    b0caa8c8c6bbc422bc3c32b64852d6d618f32b49 Mon Sep 17 00:00:00 2001
    When computing a linear address and segmentation is used, we need to know
    the base address of the segment involved in the computation. In most of
    the cases, the segment base address will be zero as in USER_DS/USER32_DS.
    However, it may be possible that a user space program defines its own
    segments via a local descriptor table. In such a case, the segment base
    address may not be zero. Thus, the segment base address is needed to
    calculate correctly the linear address.
    
    If running in protected mode, the segment selector to be used when
    computing a linear address is determined by either any of segment override
    prefixes in the instruction or inferred from the registers involved in the
    computation of the effective address; in that order. Also, there are cases
    when the segment override prefixes shall be ignored (i.e., code segments
    are always selected by the CS segment register; string instructions always
    use the ES segment register when using rDI register as operand). In long
    mode, segment registers are ignored, except for FS and GS. In these two
    cases, base addresses are obtained from the respective MSRs.
    
    For clarity, this process can be split into four steps (and an equal
    number of functions): determine if segment prefixes overrides can be used;
    parse the segment override prefixes, and use them if found; if not found
    or cannot be used, use the default segment registers associated with the
    operand registers. Once the segment register to use has been identified,
    read its value to obtain the segment selector.
    
    The method to obtain the segment selector depends on several factors. In
    32-bit builds, segment selectors are saved into a pt_regs structure
    when switching to kernel mode. The same is also true for virtual-8086
    mode. In 64-bit builds, segmentation is mostly ignored, except when
    running a program in 32-bit legacy mode. In this case, CS and SS can be
    obtained from pt_regs. DS, ES, FS and GS can be read directly from
    the respective segment registers.
    
    In order to identify the segment registers, a new set of #defines is
    introduced. It also includes two special identifiers. One of them
    indicates when the default segment register associated with instruction
    operands shall be used. Another one indicates that the contents of the
    segment register shall be ignored; this identifier is used when in long
    mode.
    
    Improvements-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: ricardo.neri@intel.com
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Huang Rui <ray.huang@amd.com>
    Cc: Qiaowei Ren <qiaowei.ren@intel.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Colin Ian King <colin.king@canonical.com>
    Cc: Chen Yucong <slaoub@gmail.com>
    Cc: Adam Buchbinder <adam.buchbinder@gmail.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Lorenzo Stoakes <lstoakes@gmail.com>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Thomas Garnier <thgarnie@google.com>
    Link: https://lkml.kernel.org/r/1509135945-13762-14-git-send-email-ricardo.neri-calderon@linux.intel.com
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da8eb8ad0e695ed34b114df28505d4dd5b4ea693
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Dec 11 10:38:36 2017 -0800

    x86/decoder: Fix and update the opcodes map
    
    commit f5b5fab1780c98b74526dbac527574bd02dc16f8 upstream
    
    Update x86-opcode-map.txt based on the October 2017 Intel SDM publication.
    Fix INVPID to INVVPID.
    Add UD0 and UD1 instruction opcodes.
    
    Also sync the objtool and perf tooling copies of this file.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Masami Hiramatsu <masami.hiramatsu@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/aac062d7-c0f6-96e3-5c92-ed299e2bd3da@infradead.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76358c8d90c73c896000ccee3375b709bc955bc5
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sat Dec 2 16:17:44 2017 -0600

    objtool: Fix 64-bit build on 32-bit host
    
    commit 14c47b54b0d9389e3ca0718e805cdd90c5a4303a upstream.
    
    The new ORC unwinder breaks the build of a 64-bit kernel on a 32-bit
    host.  Building the kernel on a i386 or x32 host fails with:
    
      orc_dump.c: In function 'orc_dump':
      orc_dump.c:105:26: error: passing argument 2 of 'elf_getshdrnum' from incompatible pointer type [-Werror=incompatible-pointer-types]
        if (elf_getshdrnum(elf, &nr_sections)) {
                                ^
      In file included from /usr/local/include/gelf.h:32:0,
                       from elf.h:22,
                       from warn.h:26,
                       from orc_dump.c:20:
      /usr/local/include/libelf.h:304:12: note: expected 'size_t * {aka unsigned int *}' but argument is of type 'long unsigned int *'
       extern int elf_getshdrnum (Elf *__elf, size_t *__dst);
                  ^~~~~~~~~~~~~~
      orc_dump.c:190:17: error: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'Elf64_Sxword {aka long long int}' [-Werror=format=]
          printf("%s+%lx:", name, rela.r_addend);
                     ~~^          ~~~~~~~~~~~~~
                     %llx
    
    Fix the build failure.
    
    Another problem is that if the user specifies HOSTCC or HOSTLD
    variables, they are ignored in the objtool makefile.  Change the
    Makefile to respect these variables.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sven Joachim <svenjoac@gmx.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 627fce14809b ("objtool: Add ORC unwind table generation")
    Link: http://lkml.kernel.org/r/19f0e64d8e07e30a7b307cd010eb780c404fe08d.1512252895.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a8f7688094c05e02b392b98e6977497a5096e20
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Nov 14 07:24:22 2017 +0100

    tools/headers: Sync objtool UAPI header
    
    commit a356d2ae50790f49858ebed35da9e206336fafee upstream.
    
    objtool grew this new warning:
    
      Warning: synced file at 'tools/objtool/arch/x86/include/asm/inat.h' differs from latest kernel version at 'arch/x86/include/asm/inat.h'
    
    which upstream header grew new INAT_SEG_* definitions.
    
    Sync up the tooling version of the header.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3033f9e601f45f372d48bd266629abd681cea116
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Tue Nov 7 21:01:52 2017 -0600

    objtool: Fix cross-build
    
    commit 9eb719855f6c9b21eb5889d9ac2ca1c60527ad89 upstream.
    
    Stephen Rothwell reported this cross-compilation build failure:
    
    | In file included from orc_dump.c:19:0:
    | orc.h:21:10: fatal error: asm/orc_types.h: No such file or directory
    | ...
    
    Caused by:
    
      6a77cff819ae ("objtool: Move synced files to their original relative locations")
    
    Use the proper arch header files location, not the host-arch location.
    
    Bisected-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Linux-Next Mailing List <linux-next@vger.kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171108030152.bd76eahiwjwjt3kp@treble
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2845aee45c363e15c1e677b1f4d0043f361c102b
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Nov 6 07:21:51 2017 -0600

    objtool: Move kernel headers/code sync check to a script
    
    commit 3bd51c5a371de917e4e7401c9df006b5998579df upstream.
    
    Replace the nasty diff checks in the objtool Makefile with a clean bash
    script, and make the warnings more specific.
    
    Heavily inspired by tools/perf/check-headers.sh.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/ab015f15ccd8c0c6008493c3c6ee3d495eaf2927.1509974346.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62c37437a110cfec0d2b46f5d28113a631187978
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Nov 6 07:21:50 2017 -0600

    objtool: Move synced files to their original relative locations
    
    commit 6a77cff819ae3e31992bde6432c9b5720748a89b upstream.
    
    This will enable more straightforward comparisons, and it also makes the
    files 100% identical.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/407b2aaa317741f48fcf821592c0e96ab3be1890.1509974346.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit add9f2a47035fe94603b8ffe8d1d323b5fb0429f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 27 13:53:08 2017 +0100

    Revert "ipv6: grab rt->rt6i_ref before allocating pcpu rt"
    
    This reverts commit 9704f8147e88213f2fa580f713b42b08a4f1a7d2 which was
    upstream commit a94b9367e044ba672c9f4105eb1516ff6ff4948a.
    
    Shouldn't have been here, sorry about that.
    
    Reported-by: Chris Rankin <rankincj@gmail.com>
    Reported-by: Willy Tarreau <w@1wt.eu>
    Cc: Ido Schimmel <idosch@idosch.org>
    Cc: Ozgur <ozgur@goosey.org>
    Cc: Wei Wang <weiwan@google.com>
    Cc: Martin KaFai Lau <kafai@fb.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dad5c1402c570cd07a80113784bc20a7f930c8ae
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Dec 25 14:26:48 2017 +0100

    Linux 4.14.9

commit a9772285a7246c2a816da7f50c8c1e94b264770d
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Oct 24 11:22:46 2017 +0100

    linux/compiler.h: Split into compiler.h and compiler_types.h
    
    commit d15155824c5014803d91b829736d249c500bdda6 upstream.
    
    linux/compiler.h is included indirectly by linux/types.h via
    uapi/linux/types.h -> uapi/linux/posix_types.h -> linux/stddef.h
    -> uapi/linux/stddef.h and is needed to provide a proper definition of
    offsetof.
    
    Unfortunately, compiler.h requires a definition of
    smp_read_barrier_depends() for defining lockless_dereference() and soon
    for defining READ_ONCE(), which means that all
    users of READ_ONCE() will need to include asm/barrier.h to avoid splats
    such as:
    
       In file included from include/uapi/linux/stddef.h:1:0,
                        from include/linux/stddef.h:4,
                        from arch/h8300/kernel/asm-offsets.c:11:
       include/linux/list.h: In function 'list_empty':
    >> include/linux/compiler.h:343:2: error: implicit declaration of function 'smp_read_barrier_depends' [-Werror=implicit-function-declaration]
         smp_read_barrier_depends(); /* Enforce dependency ordering from x */ \
         ^
    
    A better alternative is to include asm/barrier.h in linux/compiler.h,
    but this requires a type definition for "bool" on some architectures
    (e.g. x86), which is defined later by linux/types.h. Type "bool" is also
    used directly in linux/compiler.h, so the whole thing is pretty fragile.
    
    This patch splits compiler.h in two: compiler_types.h contains type
    annotations, definitions and the compiler-specific parts, whereas
    compiler.h #includes compiler-types.h and additionally defines macros
    such as {READ,WRITE.ACCESS}_ONCE().
    
    uapi/linux/stddef.h and linux/linkage.h are then moved over to include
    linux/compiler_types.h, which fixes the build for h8 and blackfin.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1508840570-22169-2-git-send-email-will.deacon@arm.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d605778b613a535d258c1e6a931bc2153aa63185
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:12 2017 +0100

    selftests/bpf: add tests for recent bugfixes
    
    
    From: Jann Horn <jannh@google.com>
    
    [ Upstream commit 2255f8d520b0a318fc6d387d0940854b2f522a7f ]
    
    These tests should cover the following cases:
    
     - MOV with both zero-extended and sign-extended immediates
     - implicit truncation of register contents via ALU32/MOV32
     - implicit 32-bit truncation of ALU32 output
     - oversized register source operand for ALU32 shift
     - right-shift of a number that could be positive or negative
     - map access where adding the operation size to the offset causes signed
       32-bit overflow
     - direct stack access at a ~4GiB offset
    
    Also remove the F_LOAD_WITH_STRICT_ALIGNMENT flag from a bunch of tests
    that should fail independent of what flags userspace passes.
    
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de31796c052e47c99b1bb342bc70aa826733e862
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:11 2017 +0100

    bpf: fix integer overflows
    
    
    From: Alexei Starovoitov <ast@kernel.org>
    
    [ Upstream commit bb7f0f989ca7de1153bd128a40a71709e339fa03 ]
    
    There were various issues related to the limited size of integers used in
    the verifier:
     - `off + size` overflow in __check_map_access()
     - `off + reg->off` overflow in check_mem_access()
     - `off + reg->var_off.value` overflow or 32-bit truncation of
       `reg->var_off.value` in check_mem_access()
     - 32-bit truncation in check_stack_boundary()
    
    Make sure that any integer math cannot overflow by not allowing
    pointer math with large values.
    
    Also reduce the scope of "scalar op scalar" tracking.
    
    Fixes: f1174f77b50c ("bpf/verifier: rework value tracking")
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb56cc1b292b8b3f787fad89f1208f8e98d12c7d
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:10 2017 +0100

    bpf: don't prune branches when a scalar is replaced with a pointer
    
    
    From: Jann Horn <jannh@google.com>
    
    [ Upstream commit 179d1c5602997fef5a940c6ddcf31212cbfebd14 ]
    
    This could be made safe by passing through a reference to env and checking
    for env->allow_ptr_leaks, but it would only work one way and is probably
    not worth the hassle - not doing it will not directly lead to program
    rejection.
    
    Fixes: f1174f77b50c ("bpf/verifier: rework value tracking")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c90268f7cbee0781331b96d1423d0f28a6183889
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:09 2017 +0100

    bpf: force strict alignment checks for stack pointers
    
    
    From: Jann Horn <jannh@google.com>
    
    [ Upstream commit a5ec6ae161d72f01411169a938fa5f8baea16e8f ]
    
    Force strict alignment checks for stack pointers because the tracking of
    stack spills relies on it; unaligned stack accesses can lead to corruption
    of spilled registers, which is exploitable.
    
    Fixes: f1174f77b50c ("bpf/verifier: rework value tracking")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2120fca0ecfb4552d27608d409ebd3403ce02ce4
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:08 2017 +0100

    bpf: fix missing error return in check_stack_boundary()
    
    
    From: Jann Horn <jannh@google.com>
    
    Prevent indirect stack accesses at non-constant addresses, which would
    permit reading and corrupting spilled pointers.
    
    Fixes: f1174f77b50c ("bpf/verifier: rework value tracking")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c8e098d0324412d4ae9e06c7e611a96b87faf80
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:07 2017 +0100

    bpf: fix 32-bit ALU op verification
    
    
    From: Jann Horn <jannh@google.com>
    
    [ Upstream commit 468f6eafa6c44cb2c5d8aad35e12f06c240a812a ]
    
    32-bit ALU ops operate on 32-bit values and have 32-bit outputs.
    Adjust the verifier accordingly.
    
    Fixes: f1174f77b50c ("bpf/verifier: rework value tracking")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf5ee24e87e39548bf30d4e18e479e61a5a98336
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:06 2017 +0100

    bpf: fix incorrect tracking of register size truncation
    
    
    From: Jann Horn <jannh@google.com>
    
    [ Upstream commit 0c17d1d2c61936401f4702e1846e2c19b200f958 ]
    
    Properly handle register truncation to a smaller size.
    
    The old code first mirrors the clearing of the high 32 bits in the bitwise
    tristate representation, which is correct. But then, it computes the new
    arithmetic bounds as the intersection between the old arithmetic bounds and
    the bounds resulting from the bitwise tristate representation. Therefore,
    when coerce_reg_to_32() is called on a number with bounds
    [0xffff'fff8, 0x1'0000'0007], the verifier computes
    [0xffff'fff8, 0xffff'ffff] as bounds of the truncated number.
    This is incorrect: The truncated number could also be in the range [0, 7],
    and no meaningful arithmetic bounds can be computed in that case apart from
    the obvious [0, 0xffff'ffff].
    
    Starting with v4.14, this is exploitable by unprivileged users as long as
    the unprivileged_bpf_disabled sysctl isn't set.
    
    Debian assigned CVE-2017-16996 for this issue.
    
    v2:
     - flip the mask during arithmetic bounds calculation (Ben Hutchings)
    v3:
     - add CVE number (Ben Hutchings)
    
    Fixes: b03c9f9fdc37 ("bpf/verifier: track signed and unsigned min/max values")
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Edward Cree <ecree@solarflare.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e12ea4fb45ca86cdd7425276b6993455fee947a
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:05 2017 +0100

    bpf: fix incorrect sign extension in check_alu_op()
    
    
    From: Jann Horn <jannh@google.com>
    
    [ Upstream commit 95a762e2c8c942780948091f8f2a4f32fce1ac6f ]
    
    Distinguish between
    BPF_ALU64|BPF_MOV|BPF_K (load 32-bit immediate, sign-extended to 64-bit)
    and BPF_ALU|BPF_MOV|BPF_K (load 32-bit immediate, zero-padded to 64-bit);
    only perform sign extension in the first case.
    
    Starting with v4.14, this is exploitable by unprivileged users as long as
    the unprivileged_bpf_disabled sysctl isn't set.
    
    Debian assigned CVE-2017-16995 for this issue.
    
    v3:
     - add CVE number (Ben Hutchings)
    
    Fixes: 484611357c19 ("bpf: allow access into map value arrays")
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Edward Cree <ecree@solarflare.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d54f7df5131d67f653f674003ec5f52c9818b53
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:04 2017 +0100

    bpf/verifier: fix bounds calculation on BPF_RSH
    
    
    From: Edward Cree <ecree@solarflare.com>
    
    [ Upstream commit 4374f256ce8182019353c0c639bb8d0695b4c941 ]
    
    Incorrect signed bounds were being computed.
    If the old upper signed bound was positive and the old lower signed bound was
    negative, this could cause the new upper signed bound to be too low,
    leading to security issues.
    
    Fixes: b03c9f9fdc37 ("bpf/verifier: track signed and unsigned min/max values")
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Edward Cree <ecree@solarflare.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    [jannh@google.com: changed description to reflect bug impact]
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82a9d62f603f0cb5549c4ca554f06e70510b7296
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:03 2017 +0100

    bpf, sparc: fix usage of wrong reg for load_skb_regs after call
    
    
    [ Upstream commit 07aee94394547721ac168cbf4e1c09c14a5fe671 ]
    
    When LD_ABS/IND is used in the program, and we have a BPF helper
    call that changes packet data (bpf_helper_changes_pkt_data() returns
    true), then in case of sparc JIT, we try to reload cached skb data
    from bpf2sparc[BPF_REG_6]. However, there is no such guarantee or
    assumption that skb sits in R6 at this point, all helpers changing
    skb data only have a guarantee that skb sits in R1. Therefore,
    store BPF R1 in L7 temporarily and after procedure call use L7 to
    reload cached skb data. skb sitting in R6 is only true at the time
    when LD_ABS/IND is executed.
    
    Fixes: 7a12b5031c6b ("sparc64: Add eBPF JIT.")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: David S. Miller <davem@davemloft.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a681dfd8fb253cd3cac03a59e2867f9baad7934
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:02 2017 +0100

    bpf, ppc64: do not reload skb pointers in non-skb context
    
    
    [ Upstream commit 87338c8e2cbb317b5f757e6172f94e2e3799cd20 ]
    
    The assumption of unconditionally reloading skb pointers on
    BPF helper calls where bpf_helper_changes_pkt_data() holds
    true is wrong. There can be different contexts where the helper
    would enforce a reload such as in case of XDP. Here, we do
    have a struct xdp_buff instead of struct sk_buff as context,
    thus this will access garbage.
    
    JITs only ever need to deal with cached skb pointer reload
    when ld_abs/ind was seen, therefore guard the reload behind
    SEEN_SKB.
    
    Fixes: 156d0e290e96 ("powerpc/ebpf/jit: Implement JIT compiler for extended BPF")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Tested-by: Sandipan Das <sandipan@linux.vnet.ibm.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83ab155d144922cb7421fb975e500901185e7644
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:01 2017 +0100

    bpf, s390x: do not reload skb pointers in non-skb context
    
    
    [ Upstream commit 6d59b7dbf72ed20d0138e2f9b75ca3d4a9d4faca ]
    
    The assumption of unconditionally reloading skb pointers on
    BPF helper calls where bpf_helper_changes_pkt_data() holds
    true is wrong. There can be different contexts where the
    BPF helper would enforce a reload such as in case of XDP.
    Here, we do have a struct xdp_buff instead of struct sk_buff
    as context, thus this will access garbage.
    
    JITs only ever need to deal with cached skb pointer reload
    when ld_abs/ind was seen, therefore guard the reload behind
    SEEN_SKB only. Tested on s390x.
    
    Fixes: 9db7f2b81880 ("s390/bpf: recache skb->data/hlen for skb_vlan_push/pop")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Cc: Michael Holzheu <holzheu@linux.vnet.ibm.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a23244e8845f510ce3ba8b77b32cdd3d3d8ae853
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:23:00 2017 +0100

    bpf: fix corruption on concurrent perf_event_output calls
    
    
    [ Upstream commit 283ca526a9bd75aed7350220d7b1f8027d99c3fd ]
    
    When tracing and networking programs are both attached in the
    system and both use event-output helpers that eventually call
    into perf_event_output(), then we could end up in a situation
    where the tracing attached program runs in user context while
    a cls_bpf program is triggered on that same CPU out of softirq
    context.
    
    Since both rely on the same per-cpu perf_sample_data, we could
    potentially corrupt it. This can only ever happen in a combination
    of the two types; all tracing programs use a bpf_prog_active
    counter to bail out in case a program is already running on
    that CPU out of a different context. XDP and cls_bpf programs
    by themselves don't have this issue as they run in the same
    context only. Therefore, split both perf_sample_data so they
    cannot be accessed from each other.
    
    Fixes: 20b9d7ac4852 ("bpf: avoid excessive stack usage for perf_sample_data")
    Reported-by: Alexei Starovoitov <ast@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Tested-by: Song Liu <songliubraving@fb.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b3ea8ceb2bb71e9e58527661261dba127137d9b
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:22:59 2017 +0100

    bpf: fix branch pruning logic
    
    
    From: Alexei Starovoitov <ast@fb.com>
    
    [ Upstream commit c131187db2d3fa2f8bf32fdf4e9a4ef805168467 ]
    
    when the verifier detects that register contains a runtime constant
    and it's compared with another constant it will prune exploration
    of the branch that is guaranteed not to be taken at runtime.
    This is all correct, but malicious program may be constructed
    in such a way that it always has a constant comparison and
    the other branch is never taken under any conditions.
    In this case such path through the program will not be explored
    by the verifier. It won't be taken at run-time either, but since
    all instructions are JITed the malicious program may cause JITs
    to complain about using reserved fields, etc.
    To fix the issue we have to track the instructions explored by
    the verifier and sanitize instructions that are dead at run time
    with NOPs. We cannot reject such dead code, since llvm generates
    it for valid C code, since it doesn't do as much data flow
    analysis as the verifier does.
    
    Fixes: 17a5267067f3 ("bpf: verifier (add verifier core)")
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d7545295e714751fa236c6284167342b066d825
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Tue Nov 7 11:33:37 2017 +0300

    mm/sparsemem: Fix ARM64 boot crash when CONFIG_SPARSEMEM_EXTREME=y
    
    commit 629a359bdb0e0652a8227b4ff3125431995fec6e upstream.
    
    Since commit:
    
      83e3c48729d9 ("mm/sparsemem: Allocate mem_section at runtime for CONFIG_SPARSEMEM_EXTREME=y")
    
    we allocate the mem_section array dynamically in sparse_memory_present_with_active_regions(),
    but some architectures, like arm64, don't call the routine to initialize sparsemem.
    
    Let's move the initialization into memory_present() it should cover all
    architectures.
    
    Reported-and-tested-by: Sudeep Holla <sudeep.holla@arm.com>
    Tested-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Fixes: 83e3c48729d9 ("mm/sparsemem: Allocate mem_section at runtime for CONFIG_SPARSEMEM_EXTREME=y")
    Link: http://lkml.kernel.org/r/20171107083337.89952-1-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Dan Rue <dan.rue@linaro.org>
    Cc: Naresh Kamboju <naresh.kamboju@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0237a0a456563d461814111db15ae26666ce730e
Author: Peter Hutterer <peter.hutterer@who-t.net>
Date:   Mon Dec 4 10:26:17 2017 +1000

    platform/x86: asus-wireless: send an EV_SYN/SYN_REPORT between state changes
    
    commit bff5bf9db1c9453ffd0a78abed3e2d040c092fd9 upstream.
    
    Sending the switch state change twice within the same frame is invalid
    evdev protocol and only works if the client handles keys immediately as
    well. Processing events immediately is incorrect, it forces a fake
    order of events that does not exist on the device.
    
    Recent versions of libinput changed to only process the device state and
    SYN_REPORT time, so now the key event is lost.
    
    https://bugs.freedesktop.org/show_bug.cgi?id=104041
    
    Signed-off-by: Peter Hutterer <peter.hutterer@who-t.net>
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5431aef93678a1f91e8b3ab41076f2cd1be34353
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu Oct 19 19:05:47 2017 +0200

    thermal/drivers/hisi: Fix multiple alarm interrupts firing
    
    commit db2b0332608c8e648ea1e44727d36ad37cdb56cb upstream.
    
    The DT specifies a threshold of 65000, we setup the register with a value in
    the temperature resolution for the controller, 64656.
    
    When we reach 64656, the interrupt fires, the interrupt is disabled. Then the
    irq thread runs and calls thermal_zone_device_update() which will call in turn
    hisi_thermal_get_temp().
    
    The function will look if the temperature decreased, assuming it was more than
    65000, but that is not the case because the current temperature is 64656
    (because of the rounding when setting the threshold). This condition being
    true, we re-enable the interrupt which fires immediately after exiting the irq
    thread. That happens again and again until the temperature goes to more than
    65000.
    
    Potentially, there is here an interrupt storm if the temperature stabilizes at
    this temperature. A very unlikely case but possible.
    
    In any case, it does not make sense to handle dozens of alarm interrupt for
    nothing.
    
    Fix this by rounding the threshold value to the controller resolution so the
    check against the threshold is consistent with the one set in the controller.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Tested-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Kevin Wangtao <kevin.wangtao@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02c17c0f825c2d22de05c18e97982796b634eff3
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu Oct 19 19:05:46 2017 +0200

    thermal/drivers/hisi: Simplify the temperature/step computation
    
    commit 48880b979cdc9ef5a70af020f42b8ba1e51dbd34 upstream.
    
    The step and the base temperature are fixed values, we can simplify the
    computation by converting the base temperature to milli celsius and use a
    pre-computed step value. That saves us a lot of mult + div for nothing at
    runtime.
    
    Take also the opportunity to change the function names to be consistent with
    the rest of the code.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Tested-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Kevin Wangtao <kevin.wangtao@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf826c57785384341c3f0cf2cfbfe86c02eb6b9b
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu Oct 19 19:05:45 2017 +0200

    thermal/drivers/hisi: Fix kernel panic on alarm interrupt
    
    commit 2cb4de785c40d4a2132cfc13e63828f5a28c3351 upstream.
    
    The threaded interrupt for the alarm interrupt is requested before the
    temperature controller is setup. This one can fire an interrupt immediately
    leading to a kernel panic as the sensor data is not initialized.
    
    In order to prevent that, move the threaded irq after the Tsensor is setup.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Tested-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Kevin Wangtao <kevin.wangtao@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7254834c43bd32842e96fd856c9c9793a29e6fe2
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu Oct 19 19:05:43 2017 +0200

    thermal/drivers/hisi: Fix missing interrupt enablement
    
    commit c176b10b025acee4dc8f2ab1cd64eb73b5ccef53 upstream.
    
    The interrupt for the temperature threshold is not enabled at the end of the
    probe function, enable it after the setup is complete.
    
    On the other side, the irq_enabled is not correctly set as we are checking if
    the interrupt is masked where 'yes' means irq_enabled=false.
    
            irq_get_irqchip_state(data->irq, IRQCHIP_STATE_MASKED,
                                    &data->irq_enabled);
    
    As we are always enabling the interrupt, it is pointless to check if
    the interrupt is masked or not, just set irq_enabled to 'true'.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Tested-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Kevin Wangtao <kevin.wangtao@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0da9db57c0423f281db8ae2fb1a67e88d3fecd34
Author: Niranjana Vishwanathapura <niranjana.vishwanathapura@intel.com>
Date:   Tue Sep 26 06:44:07 2017 -0700

    IB/opa_vnic: Properly return the total MACs in UC MAC list
    
    
    [ Upstream commit b77eb45e0d9c324245d165656ab3b38b6f386436 ]
    
    Do not include EM specified MAC address in total MACs of the
    UC MAC list.
    
    Reviewed-by: Sudeep Dutt <sudeep.dutt@intel.com>
    Signed-off-by: Niranjana Vishwanathapura <niranjana.vishwanathapura@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecffae11228f96c045eb38fa60bdf17dc677b94b
Author: Scott Franco <safranco@intel.com>
Date:   Tue Sep 26 06:44:13 2017 -0700

    IB/opa_vnic: Properly clear Mac Table Digest
    
    
    [ Upstream commit 4bbdfe25600c1909c26747d0b5c39fd0e409bb87 ]
    
    Clear the MAC table digest when the MAC table is freed.
    
    Reviewed-by: Niranjana Vishwanathapura <niranjana.vishwanathapura@intel.com>
    Signed-off-by: Scott Franco <safranco@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d74c05ca7ef083cbc676aacfd147ff60de54c95
Author: Eric Anholt <eric@anholt.net>
Date:   Tue Aug 15 16:47:19 2017 -0700

    drm/vc4: Avoid using vrefresh==0 mode in DSI htotal math.
    
    
    [ Upstream commit af2eca53206c59ce9308a4f5f46c4a104a179b6b ]
    
    The incoming mode might have a missing vrefresh field if it came from
    drmModeSetCrtc(), which the kernel is supposed to calculate using
    drm_mode_vrefresh().  We could either use that or the adjusted_mode's
    original vrefresh value.
    
    However, we can maintain a more exact vrefresh value (not just the
    integer approximation), by scaling by the ratio of our clocks.
    
    v2: Use math suggested by Andrzej Hajda instead.
    v3: Simplify math now that adjusted_mode->clock isn't padded.
    v4: Drop some parens.
    
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170815234722.20700-2-eric@anholt.net
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80879ecb4624d58e10cfe03550056c34483187a5
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Sep 1 14:29:56 2017 +1000

    cpuidle: fix broadcast control when broadcast can not be entered
    
    
    [ Upstream commit f187851b9b4a76952b1158b86434563dd2031103 ]
    
    When failing to enter broadcast timer mode for an idle state that
    requires it, a new state is selected that does not require broadcast,
    but the broadcast variable remains set. This causes
    tick_broadcast_exit to be called despite not having entered broadcast
    mode.
    
    This causes the WARN_ON_ONCE(!irqs_disabled()) to trigger in some
    cases. It does not appear to cause problems for code today, but seems
    to violate the interface so should be fixed.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 051c3df7d6b8d5f1948503637c69fc939db69035
Author: Alexandre Belloni <alexandre.belloni@free-electrons.com>
Date:   Thu Sep 28 13:53:27 2017 +0200

    rtc: set the alarm to the next expiring timer
    
    
    [ Upstream commit 74717b28cb32e1ad3c1042cafd76b264c8c0f68d ]
    
    If there is any non expired timer in the queue, the RTC alarm is never set.
    This is an issue when adding a timer that expires before the next non
    expired timer.
    
    Ensure the RTC alarm is set in that case.
    
    Fixes: 2b2f5ff00f63 ("rtc: interface: ignore expired timers when enqueuing new timers")
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aaff15c10132eb36ab16b4785cd207075e5943b
Author: Hoang Tran <tranviethoang.vn@gmail.com>
Date:   Wed Sep 27 18:30:58 2017 +0200

    tcp: fix under-evaluated ssthresh in TCP Vegas
    
    
    [ Upstream commit cf5d74b85ef40c202c76d90959db4d850f301b95 ]
    
    With the commit 76174004a0f19785 (tcp: do not slow start when cwnd equals
    ssthresh), the comparison to the reduced cwnd in tcp_vegas_ssthresh() would
    under-evaluate the ssthresh.
    
    Signed-off-by: Hoang Tran <hoang.tran@uclouvain.be>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71e51e4d488d56345d72dc3c89e67af015afea22
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Sep 29 16:22:54 2017 +0800

    clk: sunxi-ng: sun6i: Rename HDMI DDC clock to avoid name collision
    
    
    [ Upstream commit 7f3ed79188f2f094d0ee366fa858857fb7f511ba ]
    
    The HDMI DDC clock found in the CCU is the parent of the actual DDC
    clock within the HDMI controller. That clock is also named "hdmi-ddc".
    
    Rename the one in the CCU to "ddc". This makes more sense than renaming
    the one in the HDMI controller to something else.
    
    Fixes: c6e6c96d8fa6 ("clk: sunxi-ng: Add A31/A31s clocks")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae35e16e0a57da2a7aa8631c8929dd79bac74bde
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Sat Sep 23 13:25:30 2017 +0530

    staging: greybus: light: Release memory obtained by kasprintf
    
    
    [ Upstream commit 04820da21050b35eed68aa046115d810163ead0c ]
    
    Free memory region, if gb_lights_channel_config is not successful.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Reviewed-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fbdd907e4b3836b025b8690823c7271f939a938
Author: Wei Hu(Xavier) <xavier.huwei@huawei.com>
Date:   Fri Sep 29 23:10:12 2017 +0800

    RDMA/hns: Avoid NULL pointer exception
    
    
    [ Upstream commit 5e437b1d7e8d31ff9a4b8e898eb3a6cee309edd9 ]
    
    After the loop in hns_roce_v1_mr_free_work_fn function, it is possible that
    all qps will have been freed (in which case ne will be 0).  If that
    happens, then later in the function when we dereference hr_qp we will
    get an exception.  Check ne is not 0 to make sure we actually have an
    hr_qp left to work on.
    
    This patch fixes the smatch error as below:
    drivers/infiniband/hw/hns/hns_roce_hw_v1.c:1009 hns_roce_v1_mr_free_work_fn()
    error: we previously assumed 'hr_qp' could be null
    
    Signed-off-by: Wei Hu (Xavier) <xavier.huwei@huawei.com>
    Signed-off-by: Lijun Ou <oulijun@huawei.com>
    Signed-off-by: Shaobo Xu <xushaobo2@huawei.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0006d8c76b0cbfc1dfefe41ac93881f1f8c15432
Author: Mike Manning <mmanning@brocade.com>
Date:   Mon Sep 25 22:01:36 2017 +0100

    net: ipv6: send NS for DAD when link operationally up
    
    
    [ Upstream commit 1f372c7bfb23286d2bf4ce0423ab488e86b74bb2 ]
    
    The NS for DAD are sent on admin up as long as a valid qdisc is found.
    A race condition exists by which these packets will not egress the
    interface if the operational state of the lower device is not yet up.
    The solution is to delay DAD until the link is operationally up
    according to RFC2863. Rather than only doing this, follow the existing
    code checks by deferring IPv6 device initialization altogether. The fix
    allows DAD on devices like tunnels that are controlled by userspace
    control plane. The fix has no impact on regular deployments, but means
    that there is no IPv6 connectivity until the port has been opened in
    the case of port-based network access control, which should be
    desirable.
    
    Signed-off-by: Mike Manning <mmanning@brocade.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a58a3af86a4e8a2bd1d2d041341efa28818c6e89
Author: Mick Tarsel <mjtarsel@linux.vnet.ibm.com>
Date:   Thu Sep 28 13:53:18 2017 -0700

    ibmvnic: Set state UP
    
    
    [ Upstream commit e876a8a7e9dd89dc88c12ca2e81beb478dbe9897 ]
    
    State is initially reported as UNKNOWN. Before register call
    netif_carrier_off(). Once the device is opened, call netif_carrier_on() in
    order to set the state to UP.
    
    Signed-off-by: Mick Tarsel <mjtarsel@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb383223d00ffa445b266c5fd54ed80fd8c57d17
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Mon Oct 2 07:17:50 2017 -0700

    fm10k: ensure we process SM mbx when processing VF mbx
    
    
    [ Upstream commit 17a91809942ca32c70026d2d5ba3348a2c4fdf8f ]
    
    When we process VF mailboxes, the driver is likely going to also queue
    up messages to the switch manager. This process merely queues up the
    FIFO, but doesn't actually begin the transmission process. Because we
    hold the mailbox lock during this VF processing, the PF<->SM mailbox is
    not getting processed at this time. Ensure that we actually process the
    PF<->SM mailbox in between each PF<->VF mailbox.
    
    This should ensure prompt transmission of the messages queued up after
    each VF message is received and handled.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Krishneil Singh <krishneil.k.singh@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b401d9f1d4543e4e1ad23a46726376adb958831
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon Oct 2 08:39:35 2017 +0200

    ARM: exynos_defconfig: Enable UAS support for Odroid HC1 board
    
    
    [ Upstream commit a99897f550de96841aecb811455a67ad7a4e39a7 ]
    
    Odroid HC1 board has built-in JMicron USB to SATA bridge, which supports
    UAS protocol. Compile-in support for it (instead of enabling it as module)
    to make sure that all built-in storage devices are available for rootfs.
    The bridge itself also supports fallback to standard USB Mass Storage
    protocol, but USB Mass Storage class doesn't bind to it when UAS is
    compiled as module and modules are not (yet) available.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b27bbf1f5b9e62b7b0b8ce9a4f5e474c3119a9a9
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Mon Oct 2 12:39:09 2017 -0600

    vfio/pci: Virtualize Maximum Payload Size
    
    
    [ Upstream commit 523184972b282cd9ca17a76f6ca4742394856818 ]
    
    With virtual PCI-Express chipsets, we now see userspace/guest drivers
    trying to match the physical MPS setting to a virtual downstream port.
    Of course a lone physical device surrounded by virtual interconnects
    cannot make a correct decision for a proper MPS setting.  Instead,
    let's virtualize the MPS control register so that writes through to
    hardware are disallowed.  Userspace drivers like QEMU assume they can
    write anything to the device and we'll filter out anything dangerous.
    Since mismatched MPS can lead to AER and other faults, let's add it
    to the kernel side rather than relying on userspace virtualization to
    handle it.
    
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4297cf42691eb626ab5f72f416cf7d9ea126a410
Author: Alan Brady <alan.brady@intel.com>
Date:   Tue Aug 22 06:57:53 2017 -0400

    i40e: fix client notify of VF reset
    
    
    [ Upstream commit c53d11f669c0e7d0daf46a717b6712ad0b09de99 ]
    
    Currently there is a bug in which the PF driver fails to inform clients
    of a VF reset which then causes clients to leak resources.  The bug
    exists because we were incorrectly checking the I40E_VF_STATE_PRE_ENABLE
    bit.
    
    When a VF is first init we go through a reset to initialize variables
    and allocate resources but we don't want to inform clients of this first
    reset since the client isn't fully enabled yet so we set a state bit
    signifying we're in a "pre-enabled" client state.  During the first
    reset we should be clearing the bit, allowing all following resets to
    notify the client of the reset when the bit is not set.  This patch
    fixes the issue by negating the 'test_and_clear_bit' check to accurately
    reflect the behavior we want.
    
    Signed-off-by: Alan Brady <alan.brady@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8da9104839c86b9f80fb45df60ec0beae9f103b1
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:31 2017 -0700

    scsi: lpfc: Fix warning messages when NVME_TARGET_FC not defined
    
    
    [ Upstream commit 2299e4323d2bf6e0728fdc6b9e8e9704978d2dd7 ]
    
    Warning messages when NVME_TARGET_FC not defined on ppc builds
    
    The lpfc_nvmet_replenish_context() function is only meaningful when NVME
    target mode enabled. Surround the function body with ifdefs for target
    mode enablement.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fe8e4f3e4e937ab762fe9114818c64ae215c882
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:32 2017 -0700

    scsi: lpfc: PLOGI failures during NPIV testing
    
    
    [ Upstream commit e8bcf0ae4c0346fdc78ebefe0eefcaa6a6622d38 ]
    
    Local Reject/Invalid RPI errors seen during discovery.
    
    Temporary RPI cleanup was occurring regardless of SLI rev. It's only
    necessary on SLI-4.
    
    Adjust the test for whether cleanup is necessary.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 096232d99989e34c80bd3a15e343fc3bbdfa42d8
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:42 2017 -0700

    scsi: lpfc: Fix secure firmware updates
    
    
    [ Upstream commit 184fc2b9a8bcbda9c14d0a1e7fbecfc028c7702e ]
    
    Firmware update fails with: status x17 add_status x56 on the final write
    
    If multiple DMA buffers are used for the download, some firmware revs
    have difficulty with signatures and crcs split across the dma buffer
    boundaries.  Resolve by making all writes be a single 4k page in length.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16ddeff35b7b84eefccddae23133f3eced68a8c0
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Fri Aug 11 11:14:58 2017 -0700

    fm10k: fix mis-ordered parameters in declaration for .ndo_set_vf_bw
    
    
    [ Upstream commit 3e256ac5b1ec307e5dd5a4c99fbdbc651446c738 ]
    
    We've had support for setting both a minimum and maximum bandwidth via
    .ndo_set_vf_bw since commit 883a9ccbae56 ("fm10k: Add support for SR-IOV
    to driver", 2014-09-20).
    
    Likely because we do not support minimum rates, the declaration
    mis-ordered the "unused" parameter, which causes warnings when analyzed
    with cppcheck.
    
    Fix this warning by properly declaring the min_rate and max_rate
    variables in the declaration and definition (rather than using
    "unused"). Also rename "rate" to max_rate so as to clarify that we only
    support setting the maximum rate.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Krishneil Singh <krishneil.k.singh@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c01b06d9ac357e1d6d95d7b62be60ecd69071c2b
Author: Nicolas Dechesne <nicolas.dechesne@linaro.org>
Date:   Tue Oct 3 11:49:51 2017 +0200

    ASoC: codecs: msm8916-wcd-analog: fix module autoload
    
    
    [ Upstream commit 46d69e141d479585c105a4d5b2337cd2ce6967e5 ]
    
    If the driver is built as a module, autoload won't work because the module
    alias information is not filled. So user-space can't match the registered
    device with the corresponding module.
    
    Export the module alias information using the MODULE_DEVICE_TABLE() macro.
    
    Before this patch:
    
    $ modinfo snd_soc_msm8916_analog | grep alias
    $
    
    After this patch:
    
    $ modinfo snd_soc_msm8916_analog | grep alias
    alias:          of:N*T*Cqcom,pm8916-wcd-analog-codecC*
    alias:          of:N*T*Cqcom,pm8916-wcd-analog-codec
    
    Signed-off-by: Nicolas Dechesne <nicolas.dechesne@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d1b6695edb773d27f100eafc8cc9a34c58cb07f
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Tue Oct 3 19:20:08 2017 -0300

    sctp: silence warns on sctp_stream_init allocations
    
    
    [ Upstream commit 1ae2eaaa229bc350b6f38fbf4ab9c873532aecfb ]
    
    As SCTP supports up to 65535 streams, that can lead to very large
    allocations in sctp_stream_init(). As Xin Long noticed, systems with
    small amounts of memory are more prone to not have enough memory and
    dump warnings on dmesg initiated by user actions. Thus, silence them.
    
    Also, if the reallocation of stream->out is not necessary, skip it and
    keep the memory we already have.
    
    Reported-by: Xin Long <lucien.xin@gmail.com>
    Tested-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa21a13d76a7eed4b1df1a5223752051dbfde948
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Sep 29 13:29:39 2017 +1000

    powerpc/watchdog: Do not trigger SMP crash from touch_nmi_watchdog
    
    
    [ Upstream commit 80e4d70b06863e0104e5a0dc78aa3710297fbd4b ]
    
    In xmon, touch_nmi_watchdog() is not expected to be checking that
    other CPUs have not touched the watchdog, so the code will just call
    touch_nmi_watchdog() once before re-enabling hard interrupts.
    
    Just update our CPU's state, and ignore apparently stuck SMP threads.
    
    Arguably touch_nmi_watchdog should check for SMP lockups, and callers
    should be fixed, but that's not trivial for the input code of xmon.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97f41b41c432e5a80c91445d92c2f4b729984d36
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Sep 29 13:29:40 2017 +1000

    powerpc/xmon: Avoid tripping SMP hardlockup watchdog
    
    
    [ Upstream commit 064996d62a33ffe10264b5af5dca92d54f60f806 ]
    
    The SMP hardlockup watchdog cross-checks other CPUs for lockups, which
    causes xmon headaches because it's assuming interrupts hard disabled
    means no watchdog troubles. Try to improve that by calling
    touch_nmi_watchdog() in obvious places where secondaries are spinning.
    
    Also annotate these spin loops with spin_begin/end calls.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5fec0590cd8732c810c0b6d9ae9e3a42021f2cb
Author: Ed Blake <ed.blake@sondrel.com>
Date:   Mon Oct 2 11:00:33 2017 +0100

    ASoC: img-parallel-out: Add pm_runtime_get/put to set_fmt callback
    
    
    [ Upstream commit c70458890ff15d858bd347fa9f563818bcd6e457 ]
    
    Add pm_runtime_get_sync and pm_runtime_put calls to set_fmt callback
    function. This fixes a bus error during boot when CONFIG_SUSPEND is
    defined when this function gets called while the device is runtime
    disabled and device registers are accessed while the clock is disabled.
    
    Signed-off-by: Ed Blake <ed.blake@sondrel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9e51fb046db69a2e83d7d7422e33f3402d1800b
Author: Jean-François Têtu <jean-francois.tetu@savoirfairelinux.com>
Date:   Fri Sep 29 16:19:44 2017 -0400

    ASoC: codecs: msm8916-wcd-analog: fix micbias level
    
    
    [ Upstream commit 664611e7e02f76fbc5470ef545b2657ed25c292b ]
    
    The macro used to set the microphone bias level causes the
    snd_soc_write() call to overwrite other fields in the CDC_A_MICB_1_VAL
    register. The macro also does not return the proper level value
    to use. This fixes this by preserving all bits from the register
    that are not the level while setting the level.
    
    Signed-off-by: Jean-François Têtu <jean-francois.tetu@savoirfairelinux.com>
    Acked-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16e1626e54f835cb009de675d1f6b5a0ff9183d9
Author: Tom Zanussi <tom.zanussi@linux.intel.com>
Date:   Fri Sep 22 14:58:17 2017 -0500

    tracing: Exclude 'generic fields' from histograms
    
    
    [ Upstream commit a15f7fc20389a8827d5859907568b201234d4b79 ]
    
    There are a small number of 'generic fields' (comm/COMM/cpu/CPU) that
    are found by trace_find_event_field() but are only meant for
    filtering.  Specifically, they unlike normal fields, they have a size
    of 0 and thus wreak havoc when used as a histogram key.
    
    Exclude these (return -EINVAL) when used as histogram keys.
    
    Link: http://lkml.kernel.org/r/956154cbc3e8a4f0633d619b886c97f0f0edf7b4.1506105045.git.tom.zanussi@linux.intel.com
    
    Signed-off-by: Tom Zanussi <tom.zanussi@linux.intel.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45c911bb1814980da78a34423305310d5d327b39
Author: Gabriele Paoloni <gabriele.paoloni@huawei.com>
Date:   Thu Sep 28 15:33:05 2017 +0100

    PCI/AER: Report non-fatal errors only to the affected endpoint
    
    
    [ Upstream commit 86acc790717fb60fb51ea3095084e331d8711c74 ]
    
    Previously, if an non-fatal error was reported by an endpoint, we
    called report_error_detected() for the endpoint, every sibling on the
    bus, and their descendents.  If any of them did not implement the
    .error_detected() method, do_recovery() failed, leaving all these
    devices unrecovered.
    
    For example, the system described in the bugzilla below has two devices:
    
      0000:74:02.0 [19e5:a230] SAS controller, driver has .error_detected()
      0000:74:03.0 [19e5:a235] SATA controller, driver lacks .error_detected()
    
    When a device such as 74:02.0 reported a non-fatal error, do_recovery()
    failed because 74:03.0 lacked an .error_detected() method.  But per PCIe
    r3.1, sec 6.2.2.2.2, such an error does not compromise the Link and
    does not affect 74:03.0:
    
      Non-fatal errors are uncorrectable errors which cause a particular
      transaction to be unreliable but the Link is otherwise fully functional.
      Isolating Non-fatal from Fatal errors provides Requester/Receiver logic
      in a device or system management software the opportunity to recover from
      the error without resetting the components on the Link and disturbing
      other transactions in progress.  Devices not associated with the
      transaction in error are not impacted by the error.
    
    Report non-fatal errors only to the endpoint that reported them.  We really
    want to check for AER_NONFATAL here, but the current code structure doesn't
    allow that.  Looking for pci_channel_io_normal is the best we can do now.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=197055
    Fixes: 6c2b374d7485 ("PCI-Express AER implemetation: AER core and aerdriver")
    Signed-off-by: Gabriele Paoloni <gabriele.paoloni@huawei.com>
    Signed-off-by: Dongdong Liu <liudongdong3@huawei.com>
    [bhelgaas: changelog]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbd6b3694a4adec779cdb9266883a21254d5897c
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Tue Aug 29 05:32:31 2017 -0400

    i40e/i40evf: spread CPU affinity hints across online CPUs only
    
    
    [ Upstream commit be664cbefc50977aaefc868ba6a1109ec9b7449d ]
    
    Currently, when setting up the IRQ for a q_vector, we set an affinity
    hint based on the v_idx of that q_vector. Meaning a loop iterates on
    v_idx, which is an incremental value, and the cpumask is created based
    on this value.
    
    This is a problem in systems with multiple logical CPUs per core (like in
    simultaneous multithreading (SMT) scenarios). If we disable some logical
    CPUs, by turning SMT off for example, we will end up with a sparse
    cpu_online_mask, i.e., only the first CPU in a core is online, and
    incremental filling in q_vector cpumask might lead to multiple offline
    CPUs being assigned to q_vectors.
    
    Example: if we have a system with 8 cores each one containing 8 logical
    CPUs (SMT == 8 in this case), we have 64 CPUs in total. But if SMT is
    disabled, only the 1st CPU in each core remains online, so the
    cpu_online_mask in this case would have only 8 bits set, in a sparse way.
    
    In general case, when SMT is off the cpu_online_mask has only C bits set:
    0, 1*N, 2*N, ..., C*(N-1)  where
    C == # of cores;
    N == # of logical CPUs per core.
    In our example, only bits 0, 8, 16, 24, 32, 40, 48, 56 would be set.
    
    Instead, we should only assign hints for CPUs which are online. Even
    better, the kernel already provides a function, cpumask_local_spread()
    which takes an index and returns a CPU, spreading the interrupts across
    local NUMA nodes first, and then remote ones if necessary.
    
    Since we generally have a 1:1 mapping between vectors and CPUs, there
    is no real advantage to spreading vectors to local CPUs first. In order
    to avoid mismatch of the default XPS hints, we'll pass -1 so that it
    spreads across all CPUs without regard to the node locality.
    
    Note that we don't need to change the q_vector->affinity_mask as this is
    initialized to cpu_possible_mask, until an actual affinity is set and
    then notified back to us.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da548d5a6f9eb188b4b0b07dd70f60d0b7ca05d3
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Oct 4 20:43:36 2017 +0200

    Bluetooth: hci_bcm: Fix setting of irq trigger type
    
    
    [ Upstream commit 227630cccdbb8f8a1b24ac26517b75079c9a69c9 ]
    
    This commit fixes 2 issues with host-wake irq trigger type handling
    in hci_bcm:
    
    1) bcm_setup_sleep sets sleep_params.host_wake_active based on
    bcm_device.irq_polarity, but bcm_request_irq was always requesting
    IRQF_TRIGGER_RISING as trigger type independent of irq_polarity.
    
    This was a problem when the irq is described as a GpioInt rather then
    an Interrupt in the DSDT as for GpioInt-s the value passed to request_irq
    is honored. This commit fixes this by requesting the correct trigger
    type depending on bcm_device.irq_polarity.
    
    2) bcm_device.irq_polarity was used to directly store an ACPI polarity
    value (ACPI_ACTIVE_*). This is undesirable because hci_bcm is also
    used with device-tree and checking for something like ACPI_ACTIVE_LOW
    in a non ACPI specific function like bcm_request_irq feels wrong.
    
    This commit fixes this by renaming irq_polarity to irq_active_low
    and changing its type to a bool.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56ea88ec49042b34f6ba10280c1fddf0703b5e57
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Oct 4 20:43:35 2017 +0200

    Bluetooth: hci_uart_set_flow_control: Fix NULL deref when using serdev
    
    
    [ Upstream commit 7841d554809b518a22349e7e39b6b63f8a48d0fb ]
    
    Fix a NULL pointer deref (hu->tty) when calling hci_uart_set_flow_control
    on hci_uart-s using serdev.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44ee83c6d6e0b0913f32f3580270daa9c784cc0d
Author: Andrew Jeffery <andrew@aj.id.au>
Date:   Fri Sep 1 15:08:58 2017 +0930

    leds: pca955x: Don't invert requested value in pca955x_gpio_set_value()
    
    
    [ Upstream commit 52ca7d0f7bdad832b291ed979146443533ee79c0 ]
    
    The PCA9552 lines can be used either for driving LEDs or as GPIOs. The
    manual states that for LEDs, the operation is open-drain:
    
             The LSn LED select registers determine the source of the LED data.
    
               00 = output is set LOW (LED on)
               01 = output is set high-impedance (LED off; default)
               10 = output blinks at PWM0 rate
               11 = output blinks at PWM1 rate
    
    For GPIOs it suggests a pull-up so that the open-case drives the line
    high:
    
             For use as output, connect external pull-up resistor to the pin
             and size it according to the DC recommended operating
             characteristics.  LED output pin is HIGH when the output is
             programmed as high-impedance, and LOW when the output is
             programmed LOW through the ‘LED selector’ register.  The output
             can be pulse-width controlled when PWM0 or PWM1 are used.
    
    Now, I have a hardware design that uses the LED controller to control
    LEDs. However, for $reasons, we're using the leds-gpio driver to drive
    the them. The reasons are here are a tangent but lead to the discovery
    of the inversion, which manifested as the LEDs being set to full
    brightness at boot when we expected them to be off.
    
    As we're driving the LEDs through leds-gpio, this means wending our way
    through the gpiochip abstractions. So with that in mind we need to
    describe an active-low GPIO configuration to drive the LEDs as though
    they were GPIOs.
    
    The set() gpiochip callback in leds-pca955x does the following:
    
             ...
             if (val)
                    pca955x_led_set(&led->led_cdev, LED_FULL);
             else
                    pca955x_led_set(&led->led_cdev, LED_OFF);
             ...
    
    Where LED_FULL = 255. pca955x_led_set() in turn does:
    
             ...
             switch (value) {
             case LED_FULL:
                    ls = pca955x_ledsel(ls, ls_led, PCA955X_LS_LED_ON);
                    break;
             ...
    
    Where PCA955X_LS_LED_ON is defined as:
    
             #define PCA955X_LS_LED_ON      0x0     /* Output LOW */
    
    So here we have some type confusion: We've crossed domains from GPIO
    behaviour to LED behaviour without accounting for possible inversions
    in the process.
    
    Stepping back to leds-gpio for a moment, during probe() we call
    create_gpio_led(), which eventually executes:
    
             if (template->default_state == LEDS_GPIO_DEFSTATE_KEEP) {
                    state = gpiod_get_value_cansleep(led_dat->gpiod);
                    if (state < 0)
                            return state;
             } else {
                    state = (template->default_state == LEDS_GPIO_DEFSTATE_ON);
             }
             ...
             ret = gpiod_direction_output(led_dat->gpiod, state);
    
    In the devicetree the GPIO is annotated as active-low, and
    gpiod_get_value_cansleep() handles this for us:
    
             int gpiod_get_value_cansleep(const struct gpio_desc *desc)
             {
                     int value;
    
                     might_sleep_if(extra_checks);
                     VALIDATE_DESC(desc);
                     value = _gpiod_get_raw_value(desc);
                     if (value < 0)
                             return value;
    
                     if (test_bit(FLAG_ACTIVE_LOW, &desc->flags))
                             value = !value;
    
                     return value;
             }
    
    _gpiod_get_raw_value() in turn calls through the get() callback for the
    gpiochip implementation, so returning to our get() implementation in
    leds-pca955x we find we extract the raw value from hardware:
    
             static int pca955x_gpio_get_value(struct gpio_chip *gc, unsigned int offset)
             {
                     struct pca955x *pca955x = gpiochip_get_data(gc);
                     struct pca955x_led *led = &pca955x->leds[offset];
                     u8 reg = pca955x_read_input(pca955x->client, led->led_num / 8);
    
                     return !!(reg & (1 << (led->led_num % 8)));
             }
    
    This behaviour is not symmetric with that of set(), where the val is
    inverted by the driver.
    
    Closing the loop on the GPIO_ACTIVE_LOW inversions,
    gpiod_direction_output(), like gpiod_get_value_cansleep(), handles it
    for us:
    
             int gpiod_direction_output(struct gpio_desc *desc, int value)
             {
                      VALIDATE_DESC(desc);
                      if (test_bit(FLAG_ACTIVE_LOW, &desc->flags))
                               value = !value;
                      else
                               value = !!value;
                      return _gpiod_direction_output_raw(desc, value);
             }
    
    All-in-all, with a value of 'keep' for default-state property in a
    leds-gpio child node, the current state of the hardware will in-fact be
    inverted; precisely the opposite of what was intended.
    
    Rework leds-pca955x so that we avoid the incorrect inversion and clarify
    the semantics with respect to GPIO.
    
    Signed-off-by: Andrew Jeffery <andrew@aj.id.au>
    Reviewed-by: Cédric Le Goater <clg@kaod.org>
    Tested-by: Joel Stanley <joel@jms.id.au>
    Tested-by: Matt Spinler <mspinler@linux.vnet.ibm.com>
    Signed-off-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9704f8147e88213f2fa580f713b42b08a4f1a7d2
Author: Wei Wang <weiwan@google.com>
Date:   Fri Oct 6 12:06:04 2017 -0700

    ipv6: grab rt->rt6i_ref before allocating pcpu rt
    
    
    [ Upstream commit a94b9367e044ba672c9f4105eb1516ff6ff4948a ]
    
    After rwlock is replaced with rcu and spinlock, ip6_pol_route() will be
    called with only rcu held. That means rt6 route deletion could happen
    simultaneously with rt6_make_pcpu_rt(). This could potentially cause
    memory leak if rt6_release() is called right before rt6_make_pcpu_rt()
    on the same route.
    
    This patch grabs rt->rt6i_ref safely before calling rt6_make_pcpu_rt()
    to make sure rt6_release() will not get triggered while
    rt6_make_pcpu_rt() is in progress. And rt6_release() is called after
    rt6_make_pcpu_rt() is finished.
    
    Note: As we are incrementing rt->rt6i_ref in ip6_pol_route(), there is a
    very slim chance that fib6_purge_rt() will be triggered unnecessarily
    when deleting a route if ip6_pol_route() running on another thread picks
    this route as well and tries to make pcpu cache for it.
    
    Signed-off-by: Wei Wang <weiwan@google.com>
    Signed-off-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f48fc1742a2da6196482695ec3bcd2438d24a13
Author: William Tu <u9012063@gmail.com>
Date:   Thu Oct 5 12:07:12 2017 -0700

    ip_gre: check packet length and mtu correctly in erspan tx
    
    
    [ Upstream commit f192970de860d3ab90aa9e2a22853201a57bde78 ]
    
    Similarly to early patch for erspan_xmit(), the ARPHDR_ETHER device
    is the length of the whole ether packet.  So skb->len should subtract
    the dev->hard_header_len.
    
    Fixes: 1a66a836da63 ("gre: add collect_md mode to ERSPAN tunnel")
    Fixes: 84e54fe0a5ea ("gre: introduce native tunnel support for ERSPAN")
    Signed-off-by: William Tu <u9012063@gmail.com>
    Cc: Xin Long <lucien.xin@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d7bdad132d59c429dc340f8d10a4977e58813b0
Author: Guoqing Jiang <gqjiang@suse.com>
Date:   Mon Oct 9 10:32:48 2017 +0800

    md: always set THREAD_WAKEUP and wake up wqueue if thread existed
    
    
    [ Upstream commit d1d90147c9680aaec4a5757932c2103c42c9c23b ]
    
    Since commit 4ad23a976413 ("MD: use per-cpu counter for writes_pending"),
    the wait_queue is only got invoked if THREAD_WAKEUP is not set previously.
    
    With above change, I can see process_metadata_update could always hang on
    the wait queue, because mddev->thread could stay on 'D' status and the
    THREAD_WAKEUP flag is not cleared since there are lots of place to wake up
    mddev->thread. Then deadlock happened as follows:
    
    linux175:~ # ps aux|grep md|grep D
    root    20117   0.0 0.0         0   0 ? D   03:45   0:00 [md0_raid1]
    root    20125   0.0 0.0         0   0 ? D   03:45   0:00 [md0_cluster_rec]
    linux175:~ # cat /proc/20117/stack
    [<ffffffffa0635604>] dlm_lock_sync+0x94/0xd0 [md_cluster]
    [<ffffffffa0635674>] lock_token+0x34/0xd0 [md_cluster]
    [<ffffffffa0635804>] metadata_update_start+0x64/0x110 [md_cluster]
    [<ffffffffa04d985b>] md_update_sb.part.58+0x9b/0x860 [md_mod]
    [<ffffffffa04da035>] md_update_sb+0x15/0x30 [md_mod]
    [<ffffffffa04dc066>] md_check_recovery+0x266/0x490 [md_mod]
    [<ffffffffa06450e2>] raid1d+0x42/0x810 [raid1]
    [<ffffffffa04d2252>] md_thread+0x122/0x150 [md_mod]
    [<ffffffff81091741>] kthread+0x101/0x140
    linux175:~ # cat /proc/20125/stack
    [<ffffffffa0636679>] recv_daemon+0x3f9/0x5c0 [md_cluster]
    [<ffffffffa04d2252>] md_thread+0x122/0x150 [md_mod]
    [<ffffffff81091741>] kthread+0x101/0x140
    
    So let's revert the part of code in the commit to resovle the problem since
    we can't get lots of benefits of previous change.
    
    Fixes: 4ad23a976413 ("MD: use per-cpu counter for writes_pending")
    Signed-off-by: Guoqing Jiang <gqjiang@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7535afccf97c9dd1559e0b2d7586a522020e5522
Author: Luca Miccio <lucmiccio@gmail.com>
Date:   Mon Oct 9 16:27:21 2017 +0200

    block,bfq: Disable writeback throttling
    
    
    [ Upstream commit b5dc5d4d1f4ff9032eb6c21a3c571a1317dc9289 ]
    
    Similarly to CFQ, BFQ has its write-throttling heuristics, and it
    is better not to combine them with further write-throttling
    heuristics of a different nature.
    So this commit disables write-back throttling for a device if BFQ
    is used as I/O scheduler for that device.
    
    Signed-off-by: Luca Miccio <lucmiccio@gmail.com>
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Tested-by: Oleksandr Natalenko <oleksandr@natalenko.name>
    Tested-by: Lee Tibbert <lee.tibbert@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afdbec5d3c652e8d731861c460eee96ef9498315
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Sep 8 15:37:45 2017 +0100

    IB/rxe: check for allocation failure on elem
    
    
    [ Upstream commit 4831ca9e4a8e48cb27e0a792f73250390827a228 ]
    
    The allocation for elem may fail (especially because we're using
    GFP_ATOMIC) so best to check for a null return.  This fixes a potential
    null pointer dereference when assigning elem->pool.
    
    Detected by CoverityScan CID#1357507 ("Dereference null return value")
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afccf6f360df511a432d4c2b99f1eb8d9ac369e6
Author: Emil Tantilov <emil.s.tantilov@intel.com>
Date:   Mon Sep 11 14:21:31 2017 -0700

    ixgbe: fix use of uninitialized padding
    
    
    [ Upstream commit dcfd6b839c998bc9838e2a47f44f37afbdf3099c ]
    
    This patch is resolving Coverity hits where padding in a structure could
    be used uninitialized.
    
    - Initialize fwd_cmd.pad/2 before ixgbe_calculate_checksum()
    
    - Initialize buffer.pad2/3 before ixgbe_hic_unlocked()
    
    Signed-off-by: Emil Tantilov <emil.s.tantilov@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1f13dcad56bdd655a29f33b5ac84e0fae48a4eb
Author: Lorenzo Bianconi <lorenzo.bianconi83@gmail.com>
Date:   Wed Aug 30 13:50:39 2017 +0200

    iio: st_sensors: add register mask for status register
    
    
    [ Upstream commit e72a060151e5bb673af24993665e270fc4f674a7 ]
    
    Introduce register mask for data-ready status register since
    pressure sensors (e.g. LPS22HB) export just two channels
    (BIT(0) and BIT(1)) and BIT(2) is marked reserved while in
    st_sensors_new_samples_available() value read from status register
    is masked using 0x7.
    Moreover do not mask status register using active_scan_mask since
    now status value is properly masked and if the result is not zero the
    interrupt has to be consumed by the driver. This fix an issue on LPS25H
    and LPS331AP where channel definition is swapped respect to status
    register.
    Furthermore that change allows to properly support new devices
    (e.g LIS2DW12) that report just ZYXDA (data-ready) field in status register
    to figure out if the interrupt has been generated by the device.
    
    Fixes: 97865fe41322 (iio: st_sensors: verify interrupt event to status)
    Signed-off-by: Lorenzo Bianconi <lorenzo.bianconi@st.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c817cb56b8d62cf2677988cf5fa70cc515a526e1
Author: Lihong Yang <lihong.yang@intel.com>
Date:   Thu Sep 7 08:05:46 2017 -0400

    i40e: use the safe hash table iterator when deleting mac filters
    
    
    [ Upstream commit 784548c40d6f43eff2297220ad7800dc04be03c6 ]
    
    This patch replaces hash_for_each function with hash_for_each_safe
    when calling  __i40e_del_filter. The hash_for_each_safe function is
    the right one to use when iterating over a hash table to safely remove
    a hash entry. Otherwise, incorrect values may be read from freed memory.
    
    Detected by CoverityScan, CID 1402048 Read from pointer after free
    
    Signed-off-by: Lihong Yang <lihong.yang@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66efe26b0b074ef11575b883fc9a93af51aab597
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 27 08:39:51 2017 +0200

    igb: check memory allocation failure
    
    
    [ Upstream commit 18eb86362a52f0af933cc0fd5e37027317eb2d1c ]
    
    Check memory allocation failures and return -ENOMEM in such cases, as
    already done for other memory allocations in this function.
    
    This avoids NULL pointers dereference.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Acked-by: PJ Waskiewicz <peter.waskiewicz.jr@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 349384cd7028affdb23634b56d10da015b080cba
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Fri Sep 29 14:39:49 2017 -0300

    PM / OPP: Move error message to debug level
    
    
    [ Upstream commit 035ed07208dc501d023873447113f3f178592156 ]
    
    On some i.MX6 platforms which do not have speed grading
    check, opp table will not be created in platform code,
    so cpufreq driver prints the following error message:
    
    cpu cpu0: dev_pm_opp_get_opp_count: OPP table not found (-19)
    
    However, this is not really an error in this case because the
    imx6q-cpufreq driver first calls dev_pm_opp_get_opp_count()
    and if it fails, it means that platform code does not provide
    OPP and then dev_pm_opp_of_add_table() will be called.
    
    In order to avoid such confusing error message, move it to
    debug level.
    
    It is up to the caller of dev_pm_opp_get_opp_count() to check its
    return value and decide if it will print an error or not.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7af9f9cd68c7b6f009c4a0c0d8ea7703aa46a26b
Author: Stuart Hayes <stuart.w.hayes@gmail.com>
Date:   Wed Oct 4 10:57:52 2017 -0500

    PCI: Create SR-IOV virtfn/physfn links before attaching driver
    
    
    [ Upstream commit 27d6162944b9b34c32cd5841acd21786637ee743 ]
    
    When creating virtual functions, create the "virtfn%u" and "physfn" links
    in sysfs *before* attaching the driver instead of after.  When we attach
    the driver to the new virtual network interface first, there is a race when
    the driver attaches to the new sends out an "add" udev event, and the
    network interface naming software (biosdevname or systemd, for example)
    tries to look at these links.
    
    Signed-off-by: Stuart Hayes <stuart.w.hayes@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d95d05bafbafc88a13d81e7ad63fcb899de499d
Author: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
Date:   Tue Oct 10 18:41:18 2017 +0530

    scsi: mpt3sas: Fix IO error occurs on pulling out a drive from RAID1 volume created on two SATA drive
    
    
    [ Upstream commit 2ce9a3645299ba1752873d333d73f67620f4550b ]
    
    Whenever an I/O for a RAID volume fails with IOCStatus
    MPI2_IOCSTATUS_SCSI_IOC_TERMINATED and SCSIStatus equal to
    (MPI2_SCSI_STATE_TERMINATED | MPI2_SCSI_STATE_NO_SCSI_STATUS) then
    return the I/O to SCSI midlayer with "DID_RESET" (i.e. retry the IO
    infinite times) set in the host byte.
    
    Previously, the driver was completing the I/O with "DID_SOFT_ERROR"
    which causes the I/O to be quickly retried. However, firmware needed
    more time and hence I/Os were failing.
    
    Signed-off-by: Sreekanth Reddy <Sreekanth.Reddy@broadcom.com>
    Reviewed-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3aaaf02c110f36dc716780412add4799b2a89e5b
Author: Varun Prakash <varun@chelsio.com>
Date:   Wed Oct 11 19:33:07 2017 +0530

    scsi: cxgb4i: fix Tx skb leak
    
    
    [ Upstream commit 9b3a081fb62158b50bcc90522ca2423017544367 ]
    
    In case of connection reset Tx skb queue can have some skbs which are
    not transmitted so purge Tx skb queue in release_offload_resources() to
    avoid skb leak.
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfd66a406fe7e590055c1d6714adc697f18664c8
Author: David Daney <david.daney@cavium.com>
Date:   Fri Sep 8 10:10:31 2017 +0200

    PCI: Avoid bus reset if bridge itself is broken
    
    
    [ Upstream commit 357027786f3523d26f42391aa4c075b8495e5d28 ]
    
    When checking to see if a PCI bus can safely be reset, we previously
    checked to see if any of the children had their PCI_DEV_FLAGS_NO_BUS_RESET
    flag set.  Children marked with that flag are known not to behave well
    after a bus reset.
    
    Some PCIe root port bridges also do not behave well after a bus reset,
    sometimes causing the devices behind the bridge to become unusable.
    
    Add a check for PCI_DEV_FLAGS_NO_BUS_RESET being set in the bridge device
    to allow these bridges to be flagged, and prevent their secondary buses
    from being reset.
    
    Signed-off-by: David Daney <david.daney@cavium.com>
    [jglauber@cavium.com: fixed typo]
    Signed-off-by: Jan Glauber <jglauber@cavium.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Alex Williamson <alex.williamson@redhat.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5171fe705fb31bf3a0d93e8d69285d2b5b691c9
Author: Dan Murphy <dmurphy@ti.com>
Date:   Tue Oct 10 12:42:56 2017 -0500

    net: phy: at803x: Change error to EINVAL for invalid MAC
    
    
    [ Upstream commit fc7556877d1748ac00958822a0a3bba1d4bd9e0d ]
    
    Change the return error code to EINVAL if the MAC
    address is not valid in the set_wol function.
    
    Signed-off-by: Dan Murphy <dmurphy@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3a68b4b82f3f19b80b84cf11753082e7fb6ec8f
Author: Shakeel Butt <shakeelb@google.com>
Date:   Thu Oct 5 18:07:24 2017 -0700

    kvm, mm: account kvm related kmem slabs to kmemcg
    
    
    [ Upstream commit 46bea48ac241fe0b413805952dda74dd0c09ba8b ]
    
    The kvm slabs can consume a significant amount of system memory
    and indeed in our production environment we have observed that
    a lot of machines are spending significant amount of memory that
    can not be left as system memory overhead. Also the allocations
    from these slabs can be triggered directly by user space applications
    which has access to kvm and thus a buggy application can leak
    such memory. So, these caches should be accounted to kmemcg.
    
    Signed-off-by: Shakeel Butt <shakeelb@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af826fdfb14c51fc4416993d0fcef8f4aa43b54c
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Fri Sep 29 11:22:15 2017 +0100

    rtc: pl031: make interrupt optional
    
    
    [ Upstream commit 5b64a2965dfdfca8039e93303c64e2b15c19ff0c ]
    
    On some platforms, the interrupt for the PL031 is optional.  Avoid
    trying to claim the interrupt if it's not specified.
    
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd5139895727bcf97a411bf17fc137fb0d57f55c
Author: Christophe Jaillet <christophe.jaillet@wanadoo.fr>
Date:   Sun Oct 8 11:39:49 2017 +0200

    crypto: lrw - Fix an error handling path in 'create()'
    
    
    [ Upstream commit 616129cc6e75fb4da6681c16c981fa82dfe5e4c7 ]
    
    All error handling paths 'goto err_drop_spawn' except this one.
    In order to avoid some resources leak, we should do it as well here.
    
    Fixes: 700cb3f5fe75 ("crypto: lrw - Convert to skcipher")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 714abd2d6996bb36b334dd15c6c52d3ad00766a0
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Wed Oct 4 01:00:08 2017 +0200

    crypto: crypto4xx - increase context and scatter ring buffer elements
    
    
    [ Upstream commit 778f81d6cdb7d25360f082ac0384d5103f04eca5 ]
    
    If crypto4xx is used in conjunction with dm-crypt, the available
    ring buffer elements are not enough to handle the load properly.
    
    On an aes-cbc-essiv:sha256 encrypted swap partition the read
    performance is abyssal: (tested with hdparm -t)
    
    /dev/mapper/swap_crypt:
     Timing buffered disk reads:  14 MB in  3.68 seconds =   3.81 MB/sec
    
    The patch increases both PPC4XX_NUM_SD and PPC4XX_NUM_PD to 256.
    This improves the performance considerably:
    
    /dev/mapper/swap_crypt:
     Timing buffered disk reads: 104 MB in  3.03 seconds =  34.31 MB/sec
    
    Furthermore, PPC4XX_LAST_SD, PPC4XX_LAST_GD and PPC4XX_LAST_PD
    can be easily calculated from their respective PPC4XX_NUM_*
    constant.
    
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fe2989cdf3d433ab07d9e5979c5a811e26dd925
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Thu Oct 12 16:36:57 2017 +0800

    clk: sunxi-ng: sun5i: Fix bit offset of audio PLL post-divider
    
    
    [ Upstream commit d51fe3ba9773c8b6fc79f82bbe75d64baf604292 ]
    
    The post-divider for the audio PLL is in bits [29:26], as specified
    in the user manual, not [19:16] as currently programmed in the code.
    The post-divider has a default register value of 2, i.e. a divider
    of 3. This means the clock rate fed to the audio codec would be off.
    
    This was discovered when porting sigma-delta modulation for the PLL
    to sun5i, which needs the post-divider to be 1.
    
    Fix the bit offset, so we do actually force the post-divider to a
    certain value.
    
    Fixes: 5e73761786d6 ("clk: sunxi-ng: Add sun5i CCU driver")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7455b113feff0b99cad533c63bc6b877c1a1960
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Thu Oct 12 16:36:58 2017 +0800

    clk: sunxi-ng: nm: Check if requested rate is supported by fractional clock
    
    
    [ Upstream commit 4cdbc40d64d4b8303a97e29a52862e4d99502beb ]
    
    The round_rate callback for N-M-factor style clocks does not check if
    the requested clock rate is supported by the fractional clock mode.
    While this doesn't affect usage in practice, since the clock rates
    are also supported through N-M factors, it does not match the set_rate
    code.
    
    Add a check to the round_rate callback so it matches the set_rate
    callback.
    
    Fixes: 6174a1e24b0d ("clk: sunxi-ng: Add N-M-factor clock support")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d583a7e2d92a723e9833604f760517a64f630cc
Author: Shashank Sharma <shashank.sharma@intel.com>
Date:   Thu Oct 12 22:10:08 2017 +0530

    drm: Add retries for lspcon mode detection
    
    
    [ Upstream commit f687e25a7a245952349f1f9f9cc238ac5a3be258 ]
    
    >From the CI builds, its been observed that during a driver
    reload/insert, dp dual mode read function sometimes fails to
    read from LSPCON device over i2c-over-aux channel.
    
    This patch:
    - adds some delay and few retries, allowing a scope for these
      devices to settle down and respond.
    - changes one error log's level from ERROR->DEBUG as we want
      to call it an error only after all the retries are exhausted.
    
    V2: Addressed review comments from Jani (for loop for retry)
    V3: Addressed review comments from Imre (break on partial read too)
    V3: Addressed review comments from Ville/Imre (Add the retries
        exclusively for LSPCON, not for all dp_dual_mode devices)
    V4: Added r-b from Imre, sending it to dri-devel (Jani)
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=102294
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=102295
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=102359
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=103186
    Cc: Ville Syrjala <ville.syrjala@linux.intel.com>
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Reviewed-by: Imre Deak <imre.deak@intel.com>
    Acked-by: Dave Airlie <airlied@gmail.com>
    Signed-off-by: Shashank Sharma <shashank.sharma@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1507826408-19322-1-git-send-email-shashank.sharma@intel.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b04c22da18b53c7be730478282f7e6f62cef9425
Author: Derek Basehore <dbasehore@chromium.org>
Date:   Tue Aug 29 13:34:34 2017 -0700

    backlight: pwm_bl: Fix overflow condition
    
    
    [ Upstream commit 5d0c49acebc9488e37db95f1d4a55644e545ffe7 ]
    
    This fixes an overflow condition that can happen with high max
    brightness and period values in compute_duty_cycle. This fixes it by
    using a 64 bit variable for computing the duty cycle.
    
    Signed-off-by: Derek Basehore <dbasehore@chromium.org>
    Acked-by: Thierry Reding <thierry.reding@gmail.com>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23b22186b27f6f16cddc69fd12b607c71de6451f
Author: Jens Wiklander <jens.wiklander@linaro.org>
Date:   Mon Oct 9 11:11:49 2017 +0200

    optee: fix invalid of_node_put() in optee_driver_init()
    
    commit f044113113dd95ba73916bde10e804d3cdfa2662 upstream.
    
    The first node supplied to of_find_matching_node() has its reference
    counter decreased as part of call to that function. In optee_driver_init()
    after calling of_find_matching_node() it's invalid to call of_node_put() on
    the supplied node again.
    
    So remove the invalid call to of_node_put().
    
    Reported-by: Alex Shi <alex.shi@linaro.org>
    Signed-off-by: Jens Wiklander <jens.wiklander@linaro.org>
    Cc: <andi@linux-stable.l.notmuch.email>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8388d287e361a2fd0a39bece30a736d692d5c3d8
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:32 2017 +0100

    x86/cpufeatures: Make CPU bugs sticky
    
    commit 6cbd2171e89b13377261d15e64384df60ecb530e upstream.
    
    There is currently no way to force CPU bug bits like CPU feature bits. That
    makes it impossible to set a bug bit once at boot and have it stick for all
    upcoming CPUs.
    
    Extend the force set/clear arrays to handle bug bits as well.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.992156574@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1eb2e614fd17ae8de373aaf9919b803b0a6cfc27
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:31 2017 +0100

    x86/paravirt: Provide a way to check for hypervisors
    
    commit 79cc74155218316b9a5d28577c7077b2adba8e58 upstream.
    
    There is no generic way to test whether a kernel is running on a specific
    hypervisor. But that's required to prevent the upcoming user address space
    separation feature in certain guest modes.
    
    Make the hypervisor type enum unconditionally available and provide a
    helper function which allows to test for a specific type.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.912938129@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96e63420e281205e98cca0b6dbb5a79af98a5efd
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:30 2017 +0100

    x86/paravirt: Dont patch flush_tlb_single
    
    commit a035795499ca1c2bd1928808d1a156eda1420383 upstream.
    
    native_flush_tlb_single() will be changed with the upcoming
    PAGE_TABLE_ISOLATION feature. This requires to have more code in
    there than INVLPG.
    
    Remove the paravirt patching for it.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: linux-mm@kvack.org
    Cc: michael.schwarz@iaik.tugraz.at
    Cc: moritz.lipp@iaik.tugraz.at
    Cc: richard.fellner@student.tugraz.at
    Link: https://lkml.kernel.org/r/20171204150606.828111617@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25e2999e630c744c27c9179d1279c7f9d503385e
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:29 2017 +0100

    x86/entry/64: Make cpu_entry_area.tss read-only
    
    commit c482feefe1aeb150156248ba0fd3e029bc886605 upstream.
    
    The TSS is a fairly juicy target for exploits, and, now that the TSS
    is in the cpu_entry_area, it's no longer protected by kASLR.  Make it
    read-only on x86_64.
    
    On x86_32, it can't be RO because it's written by the CPU during task
    switches, and we use a task gate for double faults.  I'd also be
    nervous about errata if we tried to make it RO even on configurations
    without double fault handling.
    
    [ tglx: AMD confirmed that there is no problem on 64-bit with TSS RO.  So
            it's probably safe to assume that it's a non issue, though Intel
            might have been creative in that area. Still waiting for
            confirmation. ]
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bpetkov@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.733700132@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e313437c85da22a26fe1ba01d94abec7698b1987
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:28 2017 +0100

    x86/entry: Clean up the SYSENTER_stack code
    
    commit 0f9a48100fba3f189724ae88a450c2261bf91c80 upstream.
    
    The existing code was a mess, mainly because C arrays are nasty.  Turn
    SYSENTER_stack into a struct, add a helper to find it, and do all the
    obvious cleanups this enables.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bpetkov@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.653244723@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b25ca49efac58fe9744b9a3f725c4e4d69b276f8
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:27 2017 +0100

    x86/entry/64: Remove the SYSENTER stack canary
    
    commit 7fbbd5cbebf118a9e09f5453f686656a167c3d1c upstream.
    
    Now that the SYSENTER stack has a guard page, there's no need for a canary
    to detect overflow after the fact.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.572577316@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb568391775d4a840992e2d2493f39d6e86401e3
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:26 2017 +0100

    x86/entry/64: Move the IST stacks into struct cpu_entry_area
    
    commit 40e7f949e0d9a33968ebde5d67f7e3a47c97742a upstream.
    
    The IST stacks are needed when an IST exception occurs and are accessed
    before any kernel code at all runs.  Move them into struct cpu_entry_area.
    
    The IST stacks are unlike the rest of cpu_entry_area: they're used even for
    entries from kernel mode.  This means that they should be set up before we
    load the final IDT.  Move cpu_entry_area setup to trap_init() for the boot
    CPU and set it up for all possible CPUs at once in native_smp_prepare_cpus().
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.480598743@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c631a16e5b84521ae80ab10d47cd6ccd2afc6817
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:25 2017 +0100

    x86/entry/64: Create a per-CPU SYSCALL entry trampoline
    
    commit 3386bc8aed825e9f1f65ce38df4b109b2019b71a upstream.
    
    Handling SYSCALL is tricky: the SYSCALL handler is entered with every
    single register (except FLAGS), including RSP, live.  It somehow needs
    to set RSP to point to a valid stack, which means it needs to save the
    user RSP somewhere and find its own stack pointer.  The canonical way
    to do this is with SWAPGS, which lets us access percpu data using the
    %gs prefix.
    
    With PAGE_TABLE_ISOLATION-like pagetable switching, this is
    problematic.  Without a scratch register, switching CR3 is impossible, so
    %gs-based percpu memory would need to be mapped in the user pagetables.
    Doing that without information leaks is difficult or impossible.
    
    Instead, use a different sneaky trick.  Map a copy of the first part
    of the SYSCALL asm at a different address for each CPU.  Now RIP
    varies depending on the CPU, so we can use RIP-relative memory access
    to access percpu memory.  By putting the relevant information (one
    scratch slot and the stack address) at a constant offset relative to
    RIP, we can make SYSCALL work without relying on %gs.
    
    A nice thing about this approach is that we can easily switch it on
    and off if we want pagetable switching to be configurable.
    
    The compat variant of SYSCALL doesn't have this problem in the first
    place -- there are plenty of scratch registers, since we don't care
    about preserving r8-r15.  This patch therefore doesn't touch SYSCALL32
    at all.
    
    This patch actually seems to be a small speedup.  With this patch,
    SYSCALL touches an extra cache line and an extra virtual page, but
    the pipeline no longer stalls waiting for SWAPGS.  It seems that, at
    least in a tight loop, the latter outweights the former.
    
    Thanks to David Laight for an optimization tip.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bpetkov@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.403607157@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 564cea11777e9d73aa04ce5f6fbe9169d7c116a2
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:24 2017 +0100

    x86/entry/64: Return to userspace from the trampoline stack
    
    commit 3e3b9293d392c577b62e24e4bc9982320438e749 upstream.
    
    By itself, this is useless.  It gives us the ability to run some final code
    before exit that cannnot run on the kernel stack.  This could include a CR3
    switch a la PAGE_TABLE_ISOLATION or some kernel stack erasing, for
    example.  (Or even weird things like *changing* which kernel stack gets
    used as an ASLR-strengthening mechanism.)
    
    The SYSRET32 path is not covered yet.  It could be in the future or
    we could just ignore it and force the slow path if needed.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.306546484@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bc9fa0beaf10206a778f02e9e5cb62f50345b1a
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:23 2017 +0100

    x86/entry/64: Use a per-CPU trampoline stack for IDT entries
    
    commit 7f2590a110b837af5679d08fc25c6227c5a8c497 upstream.
    
    Historically, IDT entries from usermode have always gone directly
    to the running task's kernel stack.  Rearrange it so that we enter on
    a per-CPU trampoline stack and then manually switch to the task's stack.
    This touches a couple of extra cachelines, but it gives us a chance
    to run some code before we touch the kernel stack.
    
    The asm isn't exactly beautiful, but I think that fully refactoring
    it can wait.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.225330557@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3dbef1bd0f7eb09daf49409ea533aa1b0eeb82e
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:22 2017 +0100

    x86/espfix/64: Stop assuming that pt_regs is on the entry stack
    
    commit 6d9256f0a89eaff97fca6006100bcaea8d1d8bdb upstream.
    
    When we start using an entry trampoline, a #GP from userspace will
    be delivered on the entry stack, not on the task stack.  Fix the
    espfix64 #DF fixup to set up #GP according to TSS.SP0, rather than
    assuming that pt_regs + 1 == SP0.  This won't change anything
    without an entry stack, but it will make the code continue to work
    when an entry stack is added.
    
    While we're at it, improve the comments to explain what's actually
    going on.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.130778051@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d120cd749ef9770ee98b708a83b49547dcf1c0e1
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:21 2017 +0100

    x86/entry/64: Separate cpu_current_top_of_stack from TSS.sp0
    
    commit 9aaefe7b59ae00605256a7d6bd1c1456432495fc upstream.
    
    On 64-bit kernels, we used to assume that TSS.sp0 was the current
    top of stack.  With the addition of an entry trampoline, this will
    no longer be the case.  Store the current top of stack in TSS.sp1,
    which is otherwise unused but shares the same cacheline.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.050864668@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5bb40c6d4c2a453b21e8e7c2b9bae87e77c4d878
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:20 2017 +0100

    x86/entry: Remap the TSS into the CPU entry area
    
    commit 72f5e08dbba2d01aa90b592cf76c378ea233b00b upstream.
    
    This has a secondary purpose: it puts the entry stack into a region
    with a well-controlled layout.  A subsequent patch will take
    advantage of this to streamline the SYSCALL entry code to be able to
    find it more easily.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bpetkov@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.962042855@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 969f5706f6f51a4a01a0dfedfa405b33e25fb708
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:19 2017 +0100

    x86/entry: Move SYSENTER_stack to the beginning of struct tss_struct
    
    commit 1a935bc3d4ea61556461a9e92a68ca3556232efd upstream.
    
    SYSENTER_stack should have reliable overflow detection, which
    means that it needs to be at the bottom of a page, not the top.
    Move it to the beginning of struct tss_struct and page-align it.
    
    Also add an assertion to make sure that the fixed hardware TSS
    doesn't cross a page boundary.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.881827433@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41964ef17cce3f2497c1ec428d22b42fb615da8d
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:18 2017 +0100

    x86/dumpstack: Handle stack overflow on all stacks
    
    commit 6e60e583426c2f8751c22c2dfe5c207083b4483a upstream.
    
    We currently special-case stack overflow on the task stack.  We're
    going to start putting special stacks in the fixmap with a custom
    layout, so they'll have guard pages, too.  Teach the unwinder to be
    able to unwind an overflow of any of the stacks.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.802057305@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5be136953f62c551c1f40ddbb83c2f4e8fc9c41f
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:17 2017 +0100

    x86/entry: Fix assumptions that the HW TSS is at the beginning of cpu_tss
    
    commit 7fb983b4dd569e08564134a850dfd4eb1c63d9b8 upstream.
    
    A future patch will move SYSENTER_stack to the beginning of cpu_tss
    to help detect overflow.  Before this can happen, fix several code
    paths that hardcode assumptions about the old layout.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Dave Hansen <dave.hansen@intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.722425540@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 487f3ddcd9863d38490ca4f6f2b9e67d4f8a197c
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:16 2017 +0100

    x86/kasan/64: Teach KASAN about the cpu_entry_area
    
    commit 21506525fb8ddb0342f2a2370812d47f6a1f3833 upstream.
    
    The cpu_entry_area will contain stacks.  Make sure that KASAN has
    appropriate shadow mappings for them.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: kasan-dev@googlegroups.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.642806442@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ece614dcfd964ab04fb37186ea2c4b020dbc3ee9
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:15 2017 +0100

    x86/mm/fixmap: Generalize the GDT fixmap mechanism, introduce struct cpu_entry_area
    
    commit ef8813ab280507972bb57e4b1b502811ad4411e9 upstream.
    
    Currently, the GDT is an ad-hoc array of pages, one per CPU, in the
    fixmap.  Generalize it to be an array of a new 'struct cpu_entry_area'
    so that we can cleanly add new things to it.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.563271721@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5684dd300f675a9f5ad6a43f96f128839c98a7fd
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:14 2017 +0100

    x86/entry/gdt: Put per-CPU GDT remaps in ascending order
    
    commit aaeed3aeb39c1ba69f0a49baec8cb728121d0a91 upstream.
    
    We currently have CPU 0's GDT at the top of the GDT range and
    higher-numbered CPUs at lower addresses.  This happens because the
    fixmap is upside down (index 0 is the top of the fixmap).
    
    Flip it so that GDTs are in ascending order by virtual address.
    This will simplify a future patch that will generalize the GDT
    remap to contain multiple pages.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.471561421@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2329da3fc03d19a8fc3bb212972b97e9f57abb32
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:13 2017 +0100

    x86/dumpstack: Add get_stack_info() support for the SYSENTER stack
    
    commit 33a2f1a6c4d7c0a02d1c006fb0379cc5ca3b96bb upstream.
    
    get_stack_info() doesn't currently know about the SYSENTER stack, so
    unwinding will fail if we entered the kernel on the SYSENTER stack
    and haven't fully switched off.  Teach get_stack_info() about the
    SYSENTER stack.
    
    With future patches applied that run part of the entry code on the
    SYSENTER stack and introduce an intentional BUG(), I would get:
    
      PANIC: double fault, error_code: 0x0
      ...
      RIP: 0010:do_error_trap+0x33/0x1c0
      ...
      Call Trace:
      Code: ...
    
    With this patch, I get:
    
      PANIC: double fault, error_code: 0x0
      ...
      Call Trace:
       <SYSENTER>
       ? async_page_fault+0x36/0x60
       ? invalid_op+0x22/0x40
       ? async_page_fault+0x36/0x60
       ? sync_regs+0x3c/0x40
       ? sync_regs+0x2e/0x40
       ? error_entry+0x6c/0xd0
       ? async_page_fault+0x36/0x60
       </SYSENTER>
      Code: ...
    
    which is a lot more informative.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.392711508@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b654aba0360c10baa7cc8d15f976e7ca1af44ac
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:12 2017 +0100

    x86/entry/64: Allocate and enable the SYSENTER stack
    
    commit 1a79797b58cddfa948420a7553241c79c013e3ca upstream.
    
    This will simplify future changes that want scratch variables early in
    the SYSENTER handler -- they'll be able to spill registers to the
    stack.  It also lets us get rid of a SWAPGS_UNSAFE_STACK user.
    
    This does not depend on CONFIG_IA32_EMULATION=y because we'll want the
    stack space even without IA32 emulation.
    
    As far as I can tell, the reason that this wasn't done from day 1 is
    that we use IST for #DB and #BP, which is IMO rather nasty and causes
    a lot more problems than it solves.  But, since #DB uses IST, we don't
    actually need a real stack for SYSENTER (because SYSENTER with TF set
    will invoke #DB on the IST stack rather than the SYSENTER stack).
    
    I want to remove IST usage from these vectors some day, and this patch
    is a prerequisite for that as well.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.312726423@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9b7b111e5be68e41e1984bcaa03535cb5e76141
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:11 2017 +0100

    x86/irq/64: Print the offending IP in the stack overflow warning
    
    commit 4f3789e792296e21405f708cf3cb409d7c7d5683 upstream.
    
    In case something goes wrong with unwind (not unlikely in case of
    overflow), print the offending IP where we detected the overflow.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.231677119@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 996d087af015da99632fde450092923d574d4bbc
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:10 2017 +0100

    x86/irq: Remove an old outdated comment about context tracking races
    
    commit 6669a692605547892a026445e460bf233958bd7f upstream.
    
    That race has been fixed and code cleaned up for a while now.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.150551639@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5209e8ac937261925c12db63a28cfaa033fa30ed
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Dec 4 15:07:09 2017 +0100

    x86/unwinder: Handle stack overflows more gracefully
    
    commit b02fcf9ba1211097754b286043cd87a8b4907e75 upstream.
    
    There are at least two unwinder bugs hindering the debugging of
    stack-overflow crashes:
    
    - It doesn't deal gracefully with the case where the stack overflows and
      the stack pointer itself isn't on a valid stack but the
      to-be-dereferenced data *is*.
    
    - The ORC oops dump code doesn't know how to print partial pt_regs, for the
      case where if we get an interrupt/exception in *early* entry code
      before the full pt_regs have been saved.
    
    Fix both issues.
    
    http://lkml.kernel.org/r/20171126024031.uxi4numpbjm5rlbr@treble
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bpetkov@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150605.071425003@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40ddc692b5a11cf7c3f9677744676af617d54a24
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 4 15:07:08 2017 +0100

    x86/unwinder/orc: Dont bail on stack overflow
    
    commit d3a09104018cf2ad5973dfa8a9c138ef9f5015a3 upstream.
    
    If the stack overflows into a guard page and the ORC unwinder should work
    well: by construction, there can't be any meaningful data in the guard page
    because no writes to the guard page will have succeeded.
    
    But there is a bug that prevents unwinding from working correctly: if the
    starting register state has RSP pointing into a stack guard page, the ORC
    unwinder bails out immediately.
    
    Instead of bailing out immediately check whether the next page up is a
    valid check page and if so analyze that. As a result the ORC unwinder will
    start the unwind.
    
    Tested by intentionally overflowing the task stack.  The result is an
    accurate call trace instead of a trace consisting purely of '?' entries.
    
    There are a few other bugs that are triggered if the unwinder encounters a
    stack overflow after the first step, but they are outside the scope of this
    fix.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150604.991389777@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21ddc15fa82b7a2a7b6209437c4d137672370c86
Author: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Date:   Mon Dec 4 15:07:07 2017 +0100

    x86/entry/64/paravirt: Use paravirt-safe macro to access eflags
    
    commit e17f8234538d1ff708673f287a42457c4dee720d upstream.
    
    Commit 1d3e53e8624a ("x86/entry/64: Refactor IRQ stacks and make them
    NMI-safe") added DEBUG_ENTRY_ASSERT_IRQS_OFF macro that acceses eflags
    using 'pushfq' instruction when testing for IF bit. On PV Xen guests
    looking at IF flag directly will always see it set, resulting in 'ud2'.
    
    Introduce SAVE_FLAGS() macro that will use appropriate save_fl pv op when
    running paravirt.
    
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: xen-devel@lists.xenproject.org
    Link: https://lkml.kernel.org/r/20171204150604.899457242@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d455b71e7393975c5c50c26bd2199f19c6eed80f
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Wed Nov 15 17:36:35 2017 -0800

    x86/mm/kasan: Don't use vmemmap_populate() to initialize shadow
    
    commit 2aeb07365bcd489620f71390a7d2031cd4dfb83e upstream.
    
    [ Note, this is a Git cherry-pick of the following commit:
    
        d17a1d97dc20: ("x86/mm/kasan: don't use vmemmap_populate() to initialize shadow")
    
      ... for easier x86 PTI code testing and back-porting. ]
    
    The KASAN shadow is currently mapped using vmemmap_populate() since that
    provides a semi-convenient way to map pages into init_top_pgt.  However,
    since that no longer zeroes the mapped pages, it is not suitable for
    KASAN, which requires zeroed shadow memory.
    
    Add kasan_populate_shadow() interface and use it instead of
    vmemmap_populate().  Besides, this allows us to take advantage of
    gigantic pages and use them to populate the shadow, which should save us
    some memory wasted on page tables and reduce TLB pressure.
    
    Link: http://lkml.kernel.org/r/20171103185147.2688-2-pasha.tatashin@oracle.com
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Steven Sistare <steven.sistare@oracle.com>
    Cc: Daniel Jordan <daniel.m.jordan@oracle.com>
    Cc: Bob Picco <bob.picco@oracle.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5383f45db38c0459f8d3d3f90f7f0a132ad104f3
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Oct 24 11:22:48 2017 +0100

    locking/barriers: Convert users of lockless_dereference() to READ_ONCE()
    
    commit 3382290ed2d5e275429cef510ab21889d3ccd164 upstream.
    
    [ Note, this is a Git cherry-pick of the following commit:
    
        506458efaf15 ("locking/barriers: Convert users of lockless_dereference() to READ_ONCE()")
    
      ... for easier x86 PTI code testing and back-porting. ]
    
    READ_ONCE() now has an implicit smp_read_barrier_depends() call, so it
    can be used instead of lockless_dereference() without any change in
    semantics.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1508840570-22169-4-git-send-email-will.deacon@arm.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1aedecaf12a67de999eaf233cdb64839170ca035
Author: Will Deacon <will.deacon@arm.com>
Date:   Tue Oct 24 11:22:47 2017 +0100

    locking/barriers: Add implicit smp_read_barrier_depends() to READ_ONCE()
    
    commit c2bc66082e1048c7573d72e62f597bdc5ce13fea upstream.
    
    [ Note, this is a Git cherry-pick of the following commit:
    
        76ebbe78f739 ("locking/barriers: Add implicit smp_read_barrier_depends() to READ_ONCE()")
    
      ... for easier x86 PTI code testing and back-porting. ]
    
    In preparation for the removal of lockless_dereference(), which is the
    same as READ_ONCE() on all architectures other than Alpha, add an
    implicit smp_read_barrier_depends() to READ_ONCE() so that it can be
    used to head dependency chains on all architectures.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1508840570-22169-3-git-send-email-will.deacon@arm.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 065060cdd3de1f7a1f08284999081c4c38601ef7
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Tue Dec 12 02:25:31 2017 +0100

    bpf: fix build issues on um due to mising bpf_perf_event.h
    
    commit ab95477e7cb35557ecfc837687007b646bab9a9f upstream.
    
    [ Note, this is a Git cherry-pick of the following commit:
    
        a23f06f06dbe ("bpf: fix build issues on um due to mising bpf_perf_event.h")
    
      ... for easier x86 PTI code testing and back-porting. ]
    
    Since c895f6f703ad ("bpf: correct broken uapi for
    BPF_PROG_TYPE_PERF_EVENT program type") um (uml) won't build
    on i386 or x86_64:
    
      [...]
        CC      init/main.o
      In file included from ../include/linux/perf_event.h:18:0,
                       from ../include/linux/trace_events.h:10,
                       from ../include/trace/syscall.h:7,
                       from ../include/linux/syscalls.h:82,
                       from ../init/main.c:20:
      ../include/uapi/linux/bpf_perf_event.h:11:32: fatal error:
      asm/bpf_perf_event.h: No such file or directory #include
      <asm/bpf_perf_event.h>
      [...]
    
    Lets add missing bpf_perf_event.h also to um arch. This seems
    to be the only one still missing.
    
    Fixes: c895f6f703ad ("bpf: correct broken uapi for BPF_PROG_TYPE_PERF_EVENT program type")
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Suggested-by: Richard Weinberger <richard@sigma-star.at>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Tested-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Richard Weinberger <richard@sigma-star.at>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d8c24ed9310b89921bd0459d8df1258134015d4
Author: Andi Kleen <ak@linux.intel.com>
Date:   Thu Aug 31 14:46:30 2017 -0700

    perf/x86: Enable free running PEBS for REGS_USER/INTR
    
    commit 2fe1bc1f501d55e5925b4035bcd85781adc76c63 upstream.
    
    [ Note, this is a Git cherry-pick of the following commit:
    
        a47ba4d77e12 ("perf/x86: Enable free running PEBS for REGS_USER/INTR")
    
      ... for easier x86 PTI code testing and back-porting. ]
    
    Currently free running PEBS is disabled when user or interrupt
    registers are requested. Most of the registers are actually
    available in the PEBS record and can be supported.
    
    So we just need to check for the supported registers and then
    allow it: it is all except for the segment register.
    
    For user registers this only works when the counter is limited
    to ring 3 only, so this also needs to be checked.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20170831214630.21892-1-andi@firstfloor.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e918424231eef4f6652c2221ba2f1d6b44e04233
Author: Rudolf Marek <r.marek@assembler.cz>
Date:   Tue Nov 28 22:01:06 2017 +0100

    x86: Make X86_BUG_FXSAVE_LEAK detectable in CPUID on AMD
    
    commit f2dbad36c55e5d3a91dccbde6e8cae345fe5632f upstream.
    
    [ Note, this is a Git cherry-pick of the following commit:
    
        2b67799bdf25 ("x86: Make X86_BUG_FXSAVE_LEAK detectable in CPUID on AMD")
    
      ... for easier x86 PTI code testing and back-porting. ]
    
    The latest AMD AMD64 Architecture Programmer's Manual
    adds a CPUID feature XSaveErPtr (CPUID_Fn80000008_EBX[2]).
    
    If this feature is set, the FXSAVE, XSAVE, FXSAVEOPT, XSAVEC, XSAVES
    / FXRSTOR, XRSTOR, XRSTORS always save/restore error pointers,
    thus making the X86_BUG_FXSAVE_LEAK workaround obsolete on such CPUs.
    
    Signed-Off-By: Rudolf Marek <r.marek@assembler.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Tested-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Link: https://lkml.kernel.org/r/bdcebe90-62c5-1f05-083c-eba7f08b2540@assembler.cz
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6e38628af6d6e06d6b6038c00ed140323e3ba97
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Sun Nov 5 18:27:51 2017 -0800

    x86/cpufeature: Add User-Mode Instruction Prevention definitions
    
    commit a8b4db562e7283a1520f9e9730297ecaab7622ea upstream.
    
    [ Note, this is a Git cherry-pick of the following commit: (limited to the cpufeatures.h file)
    
        3522c2a6a4f3 ("x86/cpufeature: Add User-Mode Instruction Prevention definitions")
    
      ... for easier x86 PTI code testing and back-porting. ]
    
    User-Mode Instruction Prevention is a security feature present in new
    Intel processors that, when set, prevents the execution of a subset of
    instructions if such instructions are executed in user mode (CPL > 0).
    Attempting to execute such instructions causes a general protection
    exception.
    
    The subset of instructions comprises:
    
     * SGDT - Store Global Descriptor Table
     * SIDT - Store Interrupt Descriptor Table
     * SLDT - Store Local Descriptor Table
     * SMSW - Store Machine Status Word
     * STR  - Store Task Register
    
    This feature is also added to the list of disabled-features to allow
    a cleaner handling of build-time configuration.
    
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Chen Yucong <slaoub@gmail.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Huang Rui <ray.huang@amd.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi V. Shankar <ravi.v.shankar@intel.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: ricardo.neri@intel.com
    Link: http://lkml.kernel.org/r/1509935277-22138-7-git-send-email-ricardo.neri-calderon@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 330a4f53bbb4add9c998344af15c27afc9b1e825
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Dec 5 14:14:47 2017 +0100

    drivers/misc/intel/pti: Rename the header file to free up the namespace
    
    commit 1784f9144b143a1e8b19fe94083b040aa559182b upstream.
    
    We'd like to use the 'PTI' acronym for 'Page Table Isolation' - free up the
    namespace by renaming the <linux/pti.h> driver header to <linux/intel-pti.h>.
    
    (Also standardize the header guard name while at it.)
    
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: J Freyensee <james_p_freyensee@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 399bbc9bb611e10dc5fd232b96b0bea18fca3482
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Nov 9 14:27:36 2017 +0100

    x86/virt: Add enum for hypervisors to replace x86_hyper
    
    commit 03b2a320b19f1424e9ac9c21696be9c60b6d0d93 upstream.
    
    The x86_hyper pointer is only used for checking whether a virtual
    device is supporting the hypervisor the system is running on.
    
    Use an enum for that purpose instead and drop the x86_hyper pointer.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Xavier Deguillard <xdeguillard@vmware.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: akataria@vmware.com
    Cc: arnd@arndb.de
    Cc: boris.ostrovsky@oracle.com
    Cc: devel@linuxdriverproject.org
    Cc: dmitry.torokhov@gmail.com
    Cc: gregkh@linuxfoundation.org
    Cc: haiyangz@microsoft.com
    Cc: kvm@vger.kernel.org
    Cc: kys@microsoft.com
    Cc: linux-graphics-maintainer@vmware.com
    Cc: linux-input@vger.kernel.org
    Cc: moltmann@vmware.com
    Cc: pbonzini@redhat.com
    Cc: pv-drivers@vmware.com
    Cc: rkrcmar@redhat.com
    Cc: sthemmin@microsoft.com
    Cc: virtualization@lists.linux-foundation.org
    Cc: xen-devel@lists.xenproject.org
    Link: http://lkml.kernel.org/r/20171109132739.23465-3-jgross@suse.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04d26709b13e72b02d5e435c6a3bebb63167ac71
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Nov 9 14:27:35 2017 +0100

    x86/virt, x86/platform: Merge 'struct x86_hyper' into 'struct x86_platform' and 'struct x86_init'
    
    commit f72e38e8ec8869ac0ba5a75d7d2f897d98a1454e upstream.
    
    Instead of x86_hyper being either NULL on bare metal or a pointer to a
    struct hypervisor_x86 in case of the kernel running as a guest merge
    the struct into x86_platform and x86_init.
    
    This will remove the need for wrappers making it hard to find out what
    is being called. With dummy functions added for all callbacks testing
    for a NULL function pointer can be removed, too.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: akataria@vmware.com
    Cc: boris.ostrovsky@oracle.com
    Cc: devel@linuxdriverproject.org
    Cc: haiyangz@microsoft.com
    Cc: kvm@vger.kernel.org
    Cc: kys@microsoft.com
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Cc: rusty@rustcorp.com.au
    Cc: sthemmin@microsoft.com
    Cc: virtualization@lists.linux-foundation.org
    Cc: xen-devel@lists.xenproject.org
    Link: http://lkml.kernel.org/r/20171109132739.23465-2-jgross@suse.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99aee22dca890fb835570fa3a2a72ea43cca93ae
Author: James Morse <james.morse@arm.com>
Date:   Mon Nov 6 18:44:24 2017 +0000

    ACPI / APEI: Replace ioremap_page_range() with fixmap
    
    commit 4f89fa286f6729312e227e7c2d764e8e7b9d340e upstream.
    
    Replace ghes_io{re,un}map_pfn_{nmi,irq}()s use of ioremap_page_range()
    with __set_fixmap() as ioremap_page_range() may sleep to allocate a new
    level of page-table, even if its passed an existing final-address to
    use in the mapping.
    
    The GHES driver can only be enabled for architectures that select
    HAVE_ACPI_APEI: Add fixmap entries to both x86 and arm64.
    
    clear_fixmap() does the TLB invalidation in __set_fixmap() for arm64
    and __set_pte_vaddr() for x86. In each case its the same as the
    respective arch_apei_flush_tlb_one().
    
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: James Morse <james.morse@arm.com>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Tested-by: Tyler Baicar <tbaicar@codeaurora.org>
    Tested-by: Toshi Kani <toshi.kani@hpe.com>
    [ For the arm64 bits: ]
    Acked-by: Will Deacon <will.deacon@arm.com>
    [ For the x86 bits: ]
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a464a66db6d574dd622b5218ca617da41461149
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sat Nov 4 04:19:51 2017 -0700

    selftests/x86/ldt_gdt: Run most existing LDT test cases against the GDT as well
    
    commit adedf2893c192dd09b1cc2f2dcfdd7cad99ec49d upstream.
    
    Now that the main test infrastructure supports the GDT, run tests
    that will pass the kernel's GDT permission tests against the GDT.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/686a1eda63414da38fcecc2412db8dba1ae40581.1509794321.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46e6a15b40c99402aedde940f157614e0c927c7e
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sat Nov 4 04:19:50 2017 -0700

    selftests/x86/ldt_gdt: Add infrastructure to test set_thread_area()
    
    commit d744dcad39094c9187075e274d1cdef79c57c8b5 upstream.
    
    Much of the test design could apply to set_thread_area() (i.e. GDT),
    not just modify_ldt().  Add set_thread_area() to the
    install_valid_mode() helper.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/02c23f8fba5547007f741dc24c3926e5284ede02.1509794321.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9eb267780ff856580885df063c5f4a6630e345f
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Oct 31 13:17:23 2017 +0100

    x86/cpufeatures: Fix various details in the feature definitions
    
    commit f3a624e901c633593156f7b00ca743a6204a29bc upstream.
    
    Kept this commit separate from the re-tabulation changes, to make
    the changes easier to review:
    
     - add better explanation for entries with no explanation
     - fix/enhance the text of some of the entries
     - fix the vertical alignment of some of the feature number definitions
     - fix inconsistent capitalization
     - ... and lots of other small details
    
    i.e. make it all more of a coherent unit, instead of a patchwork of years of additions.
    
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171031121723.28524-4-mingo@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47af9e68f3f2e85b043e2c67e90d5aa90220a1d4
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Oct 31 13:17:22 2017 +0100

    x86/cpufeatures: Re-tabulate the X86_FEATURE definitions
    
    commit acbc845ffefd9fb70466182cd8555a26189462b2 upstream.
    
    Over the years asm/cpufeatures.h has become somewhat of a mess: the original
    tabulation style was too narrow, while x86 feature names also kept growing
    in length, creating frequent field width overflows.
    
    Re-tabulate it to make it wider and easier to read/modify. Also harmonize
    the tabulation of the other defines in this file to match it.
    
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171031121723.28524-3-mingo@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64766453be2ee380ba7f3620bfeadcee2787145f
Author: Borislav Petkov <bp@suse.de>
Date:   Fri Nov 3 11:20:28 2017 +0100

    x86/mm: Define _PAGE_TABLE using _KERNPG_TABLE
    
    commit c7da092a1f243bfd1bfb4124f538e69e941882da upstream.
    
    ... so that the difference is obvious.
    
    No functionality change.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171103102028.20284-1-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1ffb6aefbc5aa6472e172d9c24c0e7a414a1e1f
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Nov 2 13:30:03 2017 +0100

    bitops: Revert cbe96375025e ("bitops: Add clear/set_bit32() to linux/bitops.h")
    
    commit 1943dc07b45e347c52c1bfdd4a37e04a86e399aa upstream.
    
    These ops are not endian safe and may break on architectures which have
    aligment requirements.
    
    Reverts: cbe96375025e ("bitops: Add clear/set_bit32() to linux/bitops.h")
    Reported-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3243ae92926c4ad3a7f9596952542c6803e69050
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Nov 2 13:22:35 2017 +0100

    x86/cpuid: Replace set/clear_bit32()
    
    commit 06dd688ddda5819025e014b79aea9af6ab475fa2 upstream.
    
    Peter pointed out that the set/clear_bit32() variants are broken in various
    aspects.
    
    Replace them with open coded set/clear_bit() and type cast
    cpu_info::x86_capability as it's done in all other places throughout x86.
    
    Fixes: 0b00de857a64 ("x86/cpuid: Add generic table for CPUID dependencies")
    Reported-by: Peter Ziljstra <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b36c2c3ab339f50fb60f095ee508fc3376bdb1d6
Author: Borislav Petkov <bp@suse.de>
Date:   Thu Nov 2 13:09:26 2017 +0100

    x86/entry/64: Shorten TEST instructions
    
    commit 1e4c4f610f774df6088d7c065b2dd4d22adba698 upstream.
    
    Convert TESTL to TESTB and save 3 bytes per callsite.
    
    No functionality change.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171102120926.4srwerqrr7g72e2k@pd.tnic
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35c1d57e63914254d463a2361b6348a2b823c70d
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:17 2017 -0700

    x86/traps: Use a new on_thread_stack() helper to clean up an assertion
    
    commit 3383642c2f9d4f5b4fa37436db4a109a1a10018c upstream.
    
    Let's keep the stack-related logic together rather than open-coding
    a comparison in an assertion in the traps code.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/856b15bee1f55017b8f79d3758b0d51c48a08cf8.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6f563cd1393521c3bd74730cb972f4ec373694a
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:16 2017 -0700

    x86/entry/64: Remove thread_struct::sp0
    
    commit d375cf1530595e33961a8844192cddab913650e3 upstream.
    
    On x86_64, we can easily calculate sp0 when needed instead of
    storing it in thread_struct.
    
    On x86_32, a similar cleanup would be possible, but it would require
    cleaning up the vm86 code first, and that can wait for a later
    cleanup series.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/719cd9c66c548c4350d98a90f050aee8b17f8919.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 266a0b19177e9ad7767aed90e14033dd46a8f000
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:15 2017 -0700

    x86/entry/32: Fix cpu_current_top_of_stack initialization at boot
    
    commit cd493a6deb8b78eca280d05f7fa73fd69403ae29 upstream.
    
    cpu_current_top_of_stack's initialization forgot about
    TOP_OF_KERNEL_STACK_PADDING.  This bug didn't matter because the
    idle threads never enter user mode.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/e5e370a7e6e4fddd1c4e4cf619765d96bb874b21.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c30eb760e3ecc7aebf37e557baecefb244733caa
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:14 2017 -0700

    x86/entry/64: Remove all remaining direct thread_struct::sp0 reads
    
    commit 46f5a10a721ce8dce8cc8fe55279b49e1c6b3288 upstream.
    
    The only remaining readers in context switch code or vm86(), and
    they all just want to update TSS.sp0 to match the current task.
    Replace them all with a new helper update_sp0().
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/2d231687f4ff288c9d9e98d7861b7df374246ac3.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71d7244efb0c9af0443f7376c844f3785a33497d
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:13 2017 -0700

    x86/entry/64: Stop initializing TSS.sp0 at boot
    
    commit 20bb83443ea79087b5e5f8dab4e9d80bb9bf7acb upstream.
    
    In my quest to get rid of thread_struct::sp0, I want to clean up or
    remove all of its readers.  Two of them are in cpu_init() (32-bit and
    64-bit), and they aren't needed.  This is because we never enter
    userspace at all on the threads that CPUs are initialized in.
    
    Poison the initial TSS.sp0 and stop initializing it on CPU init.
    
    The comment text mostly comes from Dave Hansen.  Thanks!
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/ee4a00540ad28c6cff475fbcc7769a4460acc861.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0917dd6e7a73c39d5bb1036e2e1fc73d5d56cb8c
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:12 2017 -0700

    x86/xen/64, x86/entry/64: Clean up SP code in cpu_initialize_context()
    
    commit f16b3da1dc936c0f8121741d0a1731bf242f2f56 upstream.
    
    I'm removing thread_struct::sp0, and Xen's usage of it is slightly
    dubious and unnecessary.  Use appropriate helpers instead.
    
    While we're at at, reorder the code slightly to make it more obvious
    what's going on.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/d5b9a3da2b47c68325bd2bbe8f82d9554dee0d0f.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f576136bc88175014ef3f57378d0d982a5c4e786
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:11 2017 -0700

    x86/entry: Add task_top_of_stack() to find the top of a task's stack
    
    commit 3500130b84a3cdc5b6796eba1daf178944935efe upstream.
    
    This will let us get rid of a few places that hardcode accesses to
    thread.sp0.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/b49b3f95a8ff858c40c9b0f5b32be0355324327d.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e37558449abadb91ac13b85737d963f230118bdf
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:10 2017 -0700

    x86/entry/64: Pass SP0 directly to load_sp0()
    
    commit da51da189a24bb9b7e2d5a123be096e51a4695a5 upstream.
    
    load_sp0() had an odd signature:
    
      void load_sp0(struct tss_struct *tss, struct thread_struct *thread);
    
    Simplify it to:
    
      void load_sp0(unsigned long sp0);
    
    Also simplify a few get_cpu()/put_cpu() sequences to
    preempt_disable()/preempt_enable().
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/2655d8b42ed940aa384fe18ee1129bbbcf730a08.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebef3548d5777e842acb0ab1bba599643525536c
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:09 2017 -0700

    x86/entry/32: Pull the MSR_IA32_SYSENTER_CS update code out of native_load_sp0()
    
    commit bd7dc5a6afac719d8ce4092391eef2c7e83c2a75 upstream.
    
    This causes the MSR_IA32_SYSENTER_CS write to move out of the
    paravirt callback.  This shouldn't affect Xen PV: Xen already ignores
    MSR_IA32_SYSENTER_ESP writes.  In any event, Xen doesn't support
    vm86() in a useful way.
    
    Note to any potential backporters: This patch won't break lguest, as
    lguest didn't have any SYSENTER support at all.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/75cf09fe03ae778532d0ca6c65aa58e66bc2f90c.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ff096cf2bf86824579bdcce3743143f993fbe5c
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:08 2017 -0700

    x86/entry/64: De-Xen-ify our NMI code
    
    commit 929bacec21478a72c78e4f29f98fb799bd00105a upstream.
    
    Xen PV is fundamentally incompatible with our fancy NMI code: it
    doesn't use IST at all, and Xen entries clobber two stack slots
    below the hardware frame.
    
    Drop Xen PV support from our NMI code entirely.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Acked-by: Juergen Gross <jgross@suse.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/bfbe711b5ae03f672f8848999a8eb2711efc7f98.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f53f7a3f0156a39eccea5bfd8a746121627c9c27
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Nov 2 00:59:07 2017 -0700

    xen, x86/entry/64: Add xen NMI trap entry
    
    commit 43e4111086a70c78bedb6ad990bee97f17b27a6e upstream.
    
    Instead of trying to execute any NMI via the bare metal's NMI trap
    handler use a Xen specific one for PV domains, like we do for e.g.
    debug traps. As in a PV domain the NMI is handled via the normal
    kernel stack this is the correct thing to do.
    
    This will enable us to get rid of the very fragile and questionable
    dependencies between the bare metal NMI handler and Xen assumptions
    believed to be broken anyway.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/5baf5c0528d58402441550c5770b98e7961e7680.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d50dee92fb29c953a7101af63b0aea667c13296
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:06 2017 -0700

    x86/entry/64: Remove the RESTORE_..._REGS infrastructure
    
    commit c39858de696f0cc160a544455e8403d663d577e9 upstream.
    
    All users of RESTORE_EXTRA_REGS, RESTORE_C_REGS and such, and
    REMOVE_PT_GPREGS_FROM_STACK are gone.  Delete the macros.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/c32672f6e47c561893316d48e06c7656b1039a36.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2550871499e4521792db6f282964d994d25aa459
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:05 2017 -0700

    x86/entry/64: Use POP instead of MOV to restore regs on NMI return
    
    commit 471ee4832209e986029b9fabdaad57b1eecb856b upstream.
    
    This gets rid of the last user of the old RESTORE_..._REGS infrastructure.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/652a260f17a160789bc6a41d997f98249b73e2ab.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7273aae139703223ef2128c88188a6a3182e855
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:04 2017 -0700

    x86/entry/64: Merge the fast and slow SYSRET paths
    
    commit a512210643da8082cb44181dba8b18e752bd68f0 upstream.
    
    They did almost the same thing.  Remove a bunch of pointless
    instructions (mostly hidden in macros) and reduce cognitive load by
    merging them.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1204e20233fcab9130a1ba80b3b1879b5db3fc1f.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 673b1522c6585548798b281419f4ef67b8d17045
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:03 2017 -0700

    x86/entry/64: Use pop instead of movq in syscall_return_via_sysret
    
    commit 4fbb39108f972437c44e5ffa781b56635d496826 upstream.
    
    Saves 64 bytes.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/6609b7f74ab31c36604ad746e019ea8495aec76c.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b774233bcdd4753267c7238a4b7754b9cc2b45ed
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:02 2017 -0700

    x86/entry/64: Shrink paranoid_exit_restore and make labels local
    
    commit e53178328c9b96fbdbc719e78c93b5687ee007c3 upstream.
    
    paranoid_exit_restore was a copy of restore_regs_and_return_to_kernel.
    Merge them and make the paranoid_exit internal labels local.
    
    Keeping .Lparanoid_exit makes the code a bit shorter because it
    allows a 2-byte jnz instead of a 5-byte jnz.
    
    Saves 96 bytes of text.
    
    ( This is still a bit suboptimal in a non-CONFIG_TRACE_IRQFLAGS
      kernel, but fixing that would make the code rather messy. )
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/510d66a1895cda9473c84b1086f0bb974f22de6a.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37bae8ecdb518a676c5e12520f393d0069e57dfe
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:01 2017 -0700

    x86/entry/64: Simplify reg restore code in the standard IRET paths
    
    commit e872045bfd9c465a8555bab4b8567d56a4d2d3bb upstream.
    
    The old code restored all the registers with movq instead of pop.
    
    In theory, this was done because some CPUs have higher movq
    throughput, but any gain there would be tiny and is almost certainly
    outweighed by the higher text size.
    
    This saves 96 bytes of text.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/ad82520a207ccd851b04ba613f4f752b33ac05f7.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d4bb32bc6fded10ff2874ae1d6d655b5511829c
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:59:00 2017 -0700

    x86/entry/64: Move SWAPGS into the common IRET-to-usermode path
    
    commit 8a055d7f411d41755ce30db5bb65b154777c4b78 upstream.
    
    All of the code paths that ended up doing IRET to usermode did
    SWAPGS immediately beforehand.  Move the SWAPGS into the common
    code.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/27fd6f45b7cd640de38fb9066fd0349bcd11f8e1.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65236abc42b068506720f4a5168e5e63636138dd
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:58:59 2017 -0700

    x86/entry/64: Split the IRET-to-user and IRET-to-kernel paths
    
    commit 26c4ef9c49d8a0341f6d97ce2cfdd55d1236ed29 upstream.
    
    These code paths will diverge soon.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/dccf8c7b3750199b4b30383c812d4e2931811509.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7ee7fcca8a525c9bc636fab23779f18d3de9e80
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Nov 2 00:58:58 2017 -0700

    x86/entry/64: Remove the restore_c_regs_and_iret label
    
    commit 9da78ba6b47b46428cfdfc0851511ab29c869798 upstream.
    
    The only user was the 64-bit opportunistic SYSRET failure path, and
    that path didn't really need it.  This change makes the
    opportunistic SYSRET code a bit more straightforward and gets rid of
    the label.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/be3006a7ad3326e3458cf1cc55d416252cbe1986.1509609304.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab3e5dfff36f4af4df09d86384376ebd188d7ae9
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Fri Oct 27 13:25:30 2017 -0700

    ptrace,x86: Make user_64bit_mode() available to 32-bit builds
    
    commit e27c310af5c05cf876d9cad006928076c27f54d4 upstream.
    
    In its current form, user_64bit_mode() can only be used when CONFIG_X86_64
    is selected. This implies that code built with CONFIG_X86_64=n cannot use
    it. If a piece of code needs to be built for both CONFIG_X86_64=y and
    CONFIG_X86_64=n and wants to use this function, it needs to wrap it in
    an #ifdef/#endif; potentially, in multiple places.
    
    This can be easily avoided with a single #ifdef/#endif pair within
    user_64bit_mode() itself.
    
    Suggested-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: ricardo.neri@intel.com
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Huang Rui <ray.huang@amd.com>
    Cc: Qiaowei Ren <qiaowei.ren@intel.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Colin Ian King <colin.king@canonical.com>
    Cc: Chen Yucong <slaoub@gmail.com>
    Cc: Adam Buchbinder <adam.buchbinder@gmail.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Lorenzo Stoakes <lstoakes@gmail.com>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Thomas Garnier <thgarnie@google.com>
    Link: https://lkml.kernel.org/r/1509135945-13762-4-git-send-email-ricardo.neri-calderon@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 985cba48423594b8e8792770a65543d7ee689eba
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Fri Oct 27 13:25:29 2017 -0700

    x86/boot: Relocate definition of the initial state of CR0
    
    commit b0ce5b8c95c83a7b98c679b117e3d6ae6f97154b upstream.
    
    Both head_32.S and head_64.S utilize the same value to initialize the
    control register CR0. Also, other parts of the kernel might want to access
    this initial definition (e.g., emulation code for User-Mode Instruction
    Prevention uses this state to provide a sane dummy value for CR0 when
    emulating the smsw instruction). Thus, relocate this definition to a
    header file from which it can be conveniently accessed.
    
    Suggested-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: ricardo.neri@intel.com
    Cc: linux-mm@kvack.org
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Huang Rui <ray.huang@amd.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: linux-arch@vger.kernel.org
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Chen Yucong <slaoub@gmail.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Link: https://lkml.kernel.org/r/1509135945-13762-3-git-send-email-ricardo.neri-calderon@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ed772a7dee902953066869264934c36c7689097
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Fri Oct 27 13:25:28 2017 -0700

    x86/mm: Relocate page fault error codes to traps.h
    
    commit 1067f030994c69ca1fba8c607437c8895dcf8509 upstream.
    
    Up to this point, only fault.c used the definitions of the page fault error
    codes. Thus, it made sense to keep them within such file. Other portions of
    code might be interested in those definitions too. For instance, the User-
    Mode Instruction Prevention emulation code will use such definitions to
    emulate a page fault when it is unable to successfully copy the results
    of the emulated instructions to user space.
    
    While relocating the error code enumeration, the prefix X86_ is used to
    make it consistent with the rest of the definitions in traps.h. Of course,
    code using the enumeration had to be updated as well. No functional changes
    were performed.
    
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: ricardo.neri@intel.com
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Huang Rui <ray.huang@amd.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: "Ravi V. Shankar" <ravi.v.shankar@intel.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Chen Yucong <slaoub@gmail.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Link: https://lkml.kernel.org/r/1509135945-13762-2-git-send-email-ricardo.neri-calderon@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12dc3fa30178a4635e435ed2b4e543f76c10dc93
Author: Gayatri Kammela <gayatri.kammela@intel.com>
Date:   Mon Oct 30 18:20:29 2017 -0700

    x86/cpufeatures: Enable new SSE/AVX/AVX512 CPU features
    
    commit c128dbfa0f879f8ce7b79054037889b0b2240728 upstream.
    
    Add a few new SSE/AVX/AVX512 instruction groups/features for enumeration
    in /proc/cpuinfo: AVX512_VBMI2, GFNI, VAES, VPCLMULQDQ, AVX512_VNNI,
    AVX512_BITALG.
    
     CPUID.(EAX=7,ECX=0):ECX[bit 6]  AVX512_VBMI2
     CPUID.(EAX=7,ECX=0):ECX[bit 8]  GFNI
     CPUID.(EAX=7,ECX=0):ECX[bit 9]  VAES
     CPUID.(EAX=7,ECX=0):ECX[bit 10] VPCLMULQDQ
     CPUID.(EAX=7,ECX=0):ECX[bit 11] AVX512_VNNI
     CPUID.(EAX=7,ECX=0):ECX[bit 12] AVX512_BITALG
    
    Detailed information of CPUID bits for these features can be found
    in the Intel Architecture Instruction Set Extensions and Future Features
    Programming Interface document (refer to Table 1-1. and Table 1-2.).
    A copy of this document is available at
    https://bugzilla.kernel.org/show_bug.cgi?id=197239
    
    Signed-off-by: Gayatri Kammela <gayatri.kammela@intel.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <andi.kleen@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi Shankar <ravi.v.shankar@intel.com>
    Cc: Ricardo Neri <ricardo.neri@intel.com>
    Cc: Yang Zhong <yang.zhong@intel.com>
    Cc: bp@alien8.de
    Link: http://lkml.kernel.org/r/1509412829-23380-1-git-send-email-gayatri.kammela@intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c60238f5712ba5a7d8391914f8290ae1bf5c08c0
Author: Baoquan He <bhe@redhat.com>
Date:   Sat Oct 28 09:30:38 2017 +0800

    x86/mm/64: Rename the register_page_bootmem_memmap() 'size' parameter to 'nr_pages'
    
    commit 15670bfe19905b1dcbb63137f40d718b59d84479 upstream.
    
    register_page_bootmem_memmap()'s 3rd 'size' parameter is named
    in a somewhat misleading fashion - rename it to 'nr_pages' which
    makes the units of it much clearer.
    
    Meanwhile rename the existing local variable 'nr_pages' to
    'nr_pmd_pages', a more expressive name, to avoid conflict with
    new function parameter 'nr_pages'.
    
    (Also clean up the unnecessary parentheses in which get_order() is called.)
    
    Signed-off-by: Baoquan He <bhe@redhat.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: akpm@linux-foundation.org
    Link: http://lkml.kernel.org/r/1509154238-23250-1-git-send-email-bhe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3df257ddc5f48214e229b26f3e3d5f42e0f45380
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Oct 27 13:11:10 2017 +0900

    x86/build: Beautify build log of syscall headers
    
    commit af8e947079a7dab0480b5d6db6b093fd04b86fc9 upstream.
    
    This makes the build log look nicer.
    
    Before:
      SYSTBL  arch/x86/entry/syscalls/../../include/generated/asm/syscalls_32.h
      SYSHDR  arch/x86/entry/syscalls/../../include/generated/asm/unistd_32_ia32.h
      SYSHDR  arch/x86/entry/syscalls/../../include/generated/asm/unistd_64_x32.h
      SYSTBL  arch/x86/entry/syscalls/../../include/generated/asm/syscalls_64.h
      SYSHDR  arch/x86/entry/syscalls/../../include/generated/uapi/asm/unistd_32.h
      SYSHDR  arch/x86/entry/syscalls/../../include/generated/uapi/asm/unistd_64.h
      SYSHDR  arch/x86/entry/syscalls/../../include/generated/uapi/asm/unistd_x32.h
    
    After:
      SYSTBL  arch/x86/include/generated/asm/syscalls_32.h
      SYSHDR  arch/x86/include/generated/asm/unistd_32_ia32.h
      SYSHDR  arch/x86/include/generated/asm/unistd_64_x32.h
      SYSTBL  arch/x86/include/generated/asm/syscalls_64.h
      SYSHDR  arch/x86/include/generated/uapi/asm/unistd_32.h
      SYSHDR  arch/x86/include/generated/uapi/asm/unistd_64.h
      SYSHDR  arch/x86/include/generated/uapi/asm/unistd_x32.h
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: linux-kbuild@vger.kernel.org
    Link: http://lkml.kernel.org/r/1509077470-2735-1-git-send-email-yamada.masahiro@socionext.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20e9bfd7b8a3463c5ecc1d22b60be30a32607dc4
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Fri Oct 20 11:21:35 2017 -0500

    x86/asm: Don't use the confusing '.ifeq' directive
    
    commit 82c62fa0c49aa305104013cee4468772799bb391 upstream.
    
    I find the '.ifeq <expression>' directive to be confusing.  Reading it
    quickly seems to suggest its opposite meaning, or that it's missing an
    argument.
    
    Improve readability by replacing all of its x86 uses with
    '.if <expression> == 0'.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andrei Vagin <avagin@virtuozzo.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/757da028e802c7e98d23fbab8d234b1063e161cf.1508516398.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09807080a97cedc160bc42efd3e8c3a3b72a29c7
Author: Dongjiu Geng <gengdongjiu@huawei.com>
Date:   Tue Oct 17 16:02:20 2017 +0800

    ACPI / APEI: remove the unused dead-code for SEA/NMI notification type
    
    commit c49870e89f4d2c21c76ebe90568246bb0f3572b7 upstream.
    
    For the SEA notification, the two functions ghes_sea_add() and
    ghes_sea_remove() are only called when CONFIG_ACPI_APEI_SEA
    is defined. If not, it will return errors in the ghes_probe()
    and not continue. If the probe is failed, the ghes_sea_remove()
    also has no chance to be called. Hence, remove the unnecessary
    handling when CONFIG_ACPI_APEI_SEA is not defined.
    
    For the NMI notification, it has the same issue as SEA notification,
    so also remove the unused dead-code for it.
    
    Signed-off-by: Dongjiu Geng <gengdongjiu@huawei.com>
    Tested-by: Tyler Baicar <tbaicar@codeaurora.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af02cd973d86cf3f6bd6eea928ccc9e70a4132d0
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri Sep 29 17:08:20 2017 +0300

    x86/xen: Drop 5-level paging support code from the XEN_PV code
    
    commit 773dd2fca581b0a80e5a33332cc8ee67e5a79cba upstream.
    
    It was decided 5-level paging is not going to be supported in XEN_PV.
    
    Let's drop the dead code from the XEN_PV code.
    
    Tested-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20170929140821.37654-6-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13bda9cfea5116f15a69725c15bc2614a6c803dc
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri Sep 29 17:08:19 2017 +0300

    x86/xen: Provide pre-built page tables only for CONFIG_XEN_PV=y and CONFIG_XEN_PVH=y
    
    commit 4375c29985f155d7eb2346615d84e62d1b673682 upstream.
    
    Looks like we only need pre-built page tables in the CONFIG_XEN_PV=y and
    CONFIG_XEN_PVH=y cases.
    
    Let's not provide them for other configurations.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20170929140821.37654-5-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 873f59b8bd88c897fc1545efdf5742fc63f7a252
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Fri Sep 29 17:08:18 2017 +0300

    x86/kasan: Use the same shadow offset for 4- and 5-level paging
    
    commit 12a8cc7fcf54a8575f094be1e99032ec38aa045c upstream.
    
    We are going to support boot-time switching between 4- and 5-level
    paging. For KASAN it means we cannot have different KASAN_SHADOW_OFFSET
    for different paging modes: the constant is passed to gcc to generate
    code and cannot be changed at runtime.
    
    This patch changes KASAN code to use 0xdffffc0000000000 as shadow offset
    for both 4- and 5-level paging.
    
    For 5-level paging it means that shadow memory region is not aligned to
    PGD boundary anymore and we have to handle unaligned parts of the region
    properly.
    
    In addition, we have to exclude paravirt code from KASAN instrumentation
    as we now use set_pgd() before KASAN is fully ready.
    
    [kirill.shutemov@linux.intel.com: clenaup, changelog message]
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20170929140821.37654-4-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4afaf6ea65acb07e151470580d89e6a2c0268610
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri Sep 29 17:08:16 2017 +0300

    mm/sparsemem: Allocate mem_section at runtime for CONFIG_SPARSEMEM_EXTREME=y
    
    commit 83e3c48729d9ebb7af5a31a504f3fd6aff0348c4 upstream.
    
    Size of the mem_section[] array depends on the size of the physical address space.
    
    In preparation for boot-time switching between paging modes on x86-64
    we need to make the allocation of mem_section[] dynamic, because otherwise
    we waste a lot of RAM: with CONFIG_NODE_SHIFT=10, mem_section[] size is 32kB
    for 4-level paging and 2MB for 5-level paging mode.
    
    The patch allocates the array on the first call to sparse_memory_present_with_active_regions().
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20170929140821.37654-2-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36295155d8d4c3f9fb425faac9120559c051b861
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Oct 18 19:39:35 2017 +0200

    x86/cpuid: Prevent out of bound access in do_clear_cpu_cap()
    
    commit 57b8b1a1856adaa849d02d547411a553a531022b upstream.
    
    do_clear_cpu_cap() allocates a bitmap to keep track of disabled feature
    dependencies. That bitmap is sized NCAPINTS * BITS_PER_INIT. The possible
    'features' which can be handed in are larger than this, because after the
    capabilities the bug 'feature' bits occupy another 32bit. Not really
    obvious...
    
    So clearing any of the misfeature bits, as 32bit does for the F00F bug,
    accesses that bitmap out of bounds thereby corrupting the stack.
    
    Size the bitmap proper and add a sanity check to catch accidental out of
    bound access.
    
    Fixes: 0b00de857a64 ("x86/cpuid: Add generic table for CPUID dependencies")
    Reported-by: kernel test robot <xiaolong.ye@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Link: https://lkml.kernel.org/r/20171018022023.GA12058@yexl-desktop
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61d1ad3631150386f3c142daff97913c1770e0fa
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Sat Oct 14 20:17:54 2017 +0530

    objtool: Print top level commands on incorrect usage
    
    commit 6a93bb7e4a7d6670677d5b0eb980936eb9cc5d2e upstream.
    
    Print top-level objtool commands, along with the error on incorrect
    command line usage. Objtool command line parser exit's with code 129,
    for incorrect usage. Convert the cmd_usage() exit code also, to maintain
    consistency across objtool.
    
    After the patch:
    
      $ ./objtool -j
    
      Unknown option: -j
    
      usage: objtool COMMAND [ARGS]
    
      Commands:
         check   Perform stack metadata validation on an object file
         orc     Generate in-place ORC unwind tables for an object file
    
      $ echo $?
      129
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1507992474-16142-1-git-send-email-kamalesh@linux.vnet.ibm.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b57d66c8e53390b0035c578063db22c73ebce1a
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Oct 16 16:22:31 2017 -0700

    x86/platform/UV: Convert timers to use timer_setup()
    
    commit 376f3bcebdc999cc737d9052109cc33b573b3a8b upstream.
    
    In preparation for unconditionally passing the struct timer_list pointer to
    all timer callbacks, switch to using the new timer_setup() and from_timer()
    to pass the timer pointer explicitly.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dimitri Sivanich <sivanich@hpe.com>
    Cc: Russ Anderson <rja@hpe.com>
    Cc: Mike Travis <mike.travis@hpe.com>
    Link: https://lkml.kernel.org/r/20171016232231.GA100493@beast
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 110ad51cc874a943792e16258e52ff3360cb4f96
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Oct 13 14:56:45 2017 -0700

    x86/fpu: Remove the explicit clearing of XSAVE dependent features
    
    commit 73e3a7d2a7c3be29a5a22b85026f6cfa5664267f upstream.
    
    Clearing a CPU feature with setup_clear_cpu_cap() clears all features
    which depend on it. Expressing feature dependencies in one place is
    easier to maintain than keeping functions like
    fpu__xstate_clear_all_cpu_caps() up to date.
    
    The features which depend on XSAVE have their dependency expressed in the
    dependency table, so its sufficient to clear X86_FEATURE_XSAVE.
    
    Remove the explicit clearing of XSAVE dependent features.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20171013215645.23166-6-andi@firstfloor.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e7127aa76e05b51f767dbec74b236a1fa5eab06
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Oct 13 14:56:44 2017 -0700

    x86/fpu: Make XSAVE check the base CPUID features before enabling
    
    commit ccb18db2ab9d923df07e7495123fe5fb02329713 upstream.
    
    Before enabling XSAVE, not only check the XSAVE specific CPUID bits,
    but also the base CPUID features of the respective XSAVE feature.
    This allows to disable individual XSAVE states using the existing
    clearcpuid= option, which can be useful for performance testing
    and debugging, and also in general avoids inconsistencies.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20171013215645.23166-5-andi@firstfloor.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f01d7efac7929e3630e25a84e101228ea907bbea
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Oct 13 14:56:43 2017 -0700

    x86/fpu: Parse clearcpuid= as early XSAVE argument
    
    commit 0c2a3913d6f50503f7c59d83a6219e39508cc898 upstream.
    
    With a followon patch we want to make clearcpuid affect the XSAVE
    configuration. But xsave is currently initialized before arguments
    are parsed. Move the clearcpuid= parsing into the special
    early xsave argument parsing code.
    
    Since clearcpuid= contains a = we need to keep the old __setup
    around as a dummy, otherwise it would end up as a environment
    variable in init's environment.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20171013215645.23166-4-andi@firstfloor.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d602a3465c77190ef75be052c76ccbdb6c72ed6e
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Oct 13 14:56:42 2017 -0700

    x86/cpuid: Add generic table for CPUID dependencies
    
    commit 0b00de857a648dafe7020878c7a27cf776f5edf4 upstream.
    
    Some CPUID features depend on other features. Currently it's
    possible to to clear dependent features, but not clear the base features,
    which can cause various interesting problems.
    
    This patch implements a generic table to describe dependencies
    between CPUID features, to be used by all code that clears
    CPUID.
    
    Some subsystems (like XSAVE) had an own implementation of this,
    but it's better to do it all in a single place for everyone.
    
    Then clear_cpu_cap and setup_clear_cpu_cap always look up
    this table and clear all dependencies too.
    
    This is intended to be a practical table: only for features
    that make sense to clear. If someone for example clears FPU,
    or other features that are essentially part of the required
    base feature set, not much is going to work. Handling
    that is right now out of scope. We're only handling
    features which can be usefully cleared.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jonathan McDowell <noodles@earth.li>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20171013215645.23166-3-andi@firstfloor.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb3addb22727034dd733fcc07a3b4248fe523b72
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Oct 13 14:56:41 2017 -0700

    bitops: Add clear/set_bit32() to linux/bitops.h
    
    commit cbe96375025e14fc76f9ed42ee5225120d7210f8 upstream.
    
    Add two simple wrappers around set_bit/clear_bit() that accept
    the common case of an u32 array. This avoids writing
    casts in all callers.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20171013215645.23166-2-andi@firstfloor.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b40a923903d0a535676b8d7b22bfe17260c3d35a
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Fri Oct 13 15:02:01 2017 -0500

    x86/unwind: Make CONFIG_UNWINDER_ORC=y the default in kconfig for 64-bit
    
    commit fc72ae40e30327aa24eb88a24b9c7058f938bd36 upstream.
    
    The ORC unwinder has been stable in testing so far.  Give it much wider
    testing by making it the default in kconfig for x86_64.  It's not yet
    supported for 32-bit, so leave frame pointers as the default there.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/9b1237bbe7244ed9cdf8db2dcb1253e37e1c341e.1507924831.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8af220c9e240a47660686161e6d04043ad09c563
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Fri Oct 13 15:02:00 2017 -0500

    x86/unwind: Rename unwinder config options to 'CONFIG_UNWINDER_*'
    
    commit 11af847446ed0d131cf24d16a7ef3d5ea7a49554 upstream.
    
    Rename the unwinder config options from:
    
      CONFIG_ORC_UNWINDER
      CONFIG_FRAME_POINTER_UNWINDER
      CONFIG_GUESS_UNWINDER
    
    to:
    
      CONFIG_UNWINDER_ORC
      CONFIG_UNWINDER_FRAME_POINTER
      CONFIG_UNWINDER_GUESS
    
    ... in order to give them a more logical config namespace.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/73972fc7e2762e91912c6b9584582703d6f1b8cc.1507924831.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a11adc6a2e0b429adab534c44f68c057d12ecd4d
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Thu Oct 12 18:06:19 2017 -0400

    x86/fpu/debug: Remove unused 'x86_fpu_state' and 'x86_fpu_deactivate_state' tracepoints
    
    commit 127a1bea40f7f2a36bc7207ea4d51bb6b4e936fa upstream.
    
    Commit:
    
      d1898b733619 ("x86/fpu: Add tracepoints to dump FPU state at key points")
    
    ... added the 'x86_fpu_state' and 'x86_fpu_deactivate_state' trace points,
    but never used them. Today they are still not used. As they take up
    and waste memory, remove them.
    
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171012180619.670b68b6@gandalf.local.home
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab7fc55ef231511ae40adf4c51cec89035dad4db
Author: Ingo Molnar <mingo@kernel.org>
Date:   Thu Oct 12 09:24:30 2017 +0200

    x86/unwinder: Make CONFIG_UNWINDER_ORC=y the default in the 64-bit defconfig
    
    commit 1e4078f0bba46ad61b69548abe6a6faf63b89380 upstream.
    
    Increase testing coverage by turning on the primary x86 unwinder for
    the 64-bit defconfig.
    
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cb7165b4dcf80b03d7cc86fedd1a65a455823b3
Author: Jan Beulich <JBeulich@suse.com>
Date:   Mon Sep 25 02:06:19 2017 -0600

    ACPI / APEI: adjust a local variable type in ghes_ioremap_pfn_irq()
    
    commit 095f613c6b386a1704b73a549e9ba66c1d5381ae upstream.
    
    Match up with what 7edda0886b ("acpi: apei: handle SEA notification
    type for ARMv8") did for ghes_ioremap_pfn_nmi().
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d5e60c80fd8613b8a76876b3ffd357f7a0bf7e7
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Sep 18 21:43:37 2017 -0500

    x86/head: Add unwind hint annotations
    
    commit 2704fbb672d0d9a19414907fda7949283dcef6a1 upstream.
    
    Jiri Slaby reported an ORC issue when unwinding from an idle task.  The
    stack was:
    
        ffffffff811083c2 do_idle+0x142/0x1e0
        ffffffff8110861d cpu_startup_entry+0x5d/0x60
        ffffffff82715f58 start_kernel+0x3ff/0x407
        ffffffff827153e8 x86_64_start_kernel+0x14e/0x15d
        ffffffff810001bf secondary_startup_64+0x9f/0xa0
    
    The ORC unwinder errored out at secondary_startup_64 because the head
    code isn't annotated yet so there wasn't a corresponding ORC entry.
    
    Fix that and any other head-related unwinding issues by adding unwind
    hints to the head code.
    
    Reported-by: Jiri Slaby <jslaby@suse.cz>
    Tested-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/78ef000a2f68f545d6eef44ee912edceaad82ccf.1505764066.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d074a1075f6a123e3f9c5fdbac7eea4c1006e03b
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Sep 18 21:43:36 2017 -0500

    x86/xen: Add unwind hint annotations
    
    commit abbe1cac6214d81d2f4e149aba64a8760703144e upstream.
    
    Add unwind hint annotations to the xen head code so the ORC unwinder can
    read head_64.o.
    
    hypercall_page needs empty annotations at 32-byte intervals to match the
    'xen_hypercall_*' ELF functions at those locations.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/70ed2eb516fe9266be766d953f93c2571bca88cc.1505764066.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c9863c1687b2e1398d943351ede4ad45ab77cbe
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Sep 18 21:43:35 2017 -0500

    x86/xen: Fix xen head ELF annotations
    
    commit 2582d3df95c76d3b686453baf90b64d57e87d1e8 upstream.
    
    Mark the ends of the startup_xen and hypercall_page code sections.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/3a80a394d30af43d9cefa1a29628c45ed8420c97.1505764066.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aad9d83f9dcbc896a034f2676d3d2b661b0ca5cf
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Sep 18 21:43:34 2017 -0500

    x86/boot: Annotate verify_cpu() as a callable function
    
    commit e93db75a0054b23a874a12c63376753544f3fe9e upstream.
    
    verify_cpu() is a callable function.  Annotate it as such.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/293024b8a080832075312f38c07ccc970fc70292.1505764066.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8233afff9b45feca9020b2fc52f7967da5a13907
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Sep 18 21:43:33 2017 -0500

    x86/head: Fix head ELF function annotations
    
    commit 015a2ea5478680fc5216d56b7ff306f2a74efaf9 upstream.
    
    These functions aren't callable C-type functions, so don't annotate them
    as such.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/36eb182738c28514f8bf95e403d89b6413a88883.1505764066.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98ce8eee6021e32ba8f606ed7de2a9c0f3807dcf
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Sep 18 21:43:32 2017 -0500

    x86/head: Remove unused 'bad_address' code
    
    commit a8b88e84d124bc92c4808e72b8b8c0e0bb538630 upstream.
    
    It's no longer possible for this code to be executed, so remove it.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/32a46fe92d2083700599b36872b26e7dfd7b7965.1505764066.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cf5a88b165e203d8c7d5284640ea6aa61baf78a
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Sep 18 21:43:31 2017 -0500

    x86/head: Remove confusing comment
    
    commit 17270717e80de33a884ad328fea5f407d87f6d6a upstream.
    
    This comment is actively wrong and confusing.  It refers to the
    registers' stack offsets after the pt_regs has been constructed on the
    stack, but this code is *before* that.
    
    At this point the stack just has the standard iret frame, for which no
    comment should be needed.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/a3c267b770fc56c9b86df9c11c552848248aace2.1505764066.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42314edefac8a80efb3d00a9f83bf1b1871bd473
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Sep 18 21:43:30 2017 -0500

    objtool: Don't report end of section error after an empty unwind hint
    
    commit 00d96180dc38ef872ac471c2d3e14b067cbd895d upstream.
    
    If asm code specifies an UNWIND_HINT_EMPTY hint, don't warn if the
    section ends unexpectedly.  This can happen with the xen-head.S code
    because the hypercall_page is "text" but it's all zeros.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/ddafe199dd8797e40e3c2777373347eba1d65572.1505764066.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c09061aec2e5245f547ea6eecf321e172e42b7fb
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Sep 6 17:18:08 2017 +0200

    x86/asm: Remove unnecessary \n\t in front of CC_SET() from asm templates
    
    commit 3c52b5c64326d9dcfee4e10611c53ec1b1b20675 upstream.
    
    There is no need for \n\t in front of CC_SET(), as the macro already includes these two.
    
    Signed-off-by: Uros Bizjak <ubizjak@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20170906151808.5634-1-ubizjak@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b3775017f4e6b87dfd2c7f63d1eaf057948f31d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 20 10:10:38 2017 +0100

    Linux 4.14.8

commit bed6119aa21b28f096880342f9e2445f9ad47b25
Author: Bin Liu <b-liu@ti.com>
Date:   Tue Dec 5 08:45:30 2017 -0600

    usb: musb: da8xx: fix babble condition handling
    
    commit bd3486ded7a0c313a6575343e6c2b21d14476645 upstream.
    
    When babble condition happens, the musb controller might automatically
    turns off VBUS. On DA8xx platform, the controller generates drvvbus
    interrupt for turning off VBUS along with the babble interrupt.
    
    In this case, we should handle the babble interrupt first and recover
    from the babble condition.
    
    This change ignores the drvvbus interrupt if babble interrupt is also
    generated at the same time, so the babble recovery routine works
    properly.
    
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d094690cbed906ca96752cb94abed50fbf1cfaa3
Author: Brian Norris <briannorris@chromium.org>
Date:   Thu Oct 19 11:45:19 2017 -0700

    ath10k: fix build errors with !CONFIG_PM
    
    
    [ Upstream commit 20665a9076d48e9abd9a2db13d307f58f7ef6647 ]
    
    Build errors have been reported with CONFIG_PM=n:
    
    drivers/net/wireless/ath/ath10k/pci.c:3416:8: error: implicit
    declaration of function 'ath10k_pci_suspend'
    [-Werror=implicit-function-declaration]
    
    drivers/net/wireless/ath/ath10k/pci.c:3428:8: error: implicit
    declaration of function 'ath10k_pci_resume'
    [-Werror=implicit-function-declaration]
    
    These are caused by the combination of the following two commits:
    
    6af1de2e4ec4 ("ath10k: mark PM functions as __maybe_unused")
    96378bd2c6cd ("ath10k: fix core PCI suspend when WoWLAN is supported but
    disabled")
    
    Both build fine on their own.
    
    But now that ath10k_pci_pm_{suspend,resume}() is compiled
    unconditionally, we should also compile ath10k_pci_{suspend,resume}()
    unconditionally.
    
    And drop the #ifdef around ath10k_pci_hif_{suspend,resume}() too; they
    are trivial (empty), so we're not saving much space by compiling them
    out. And the alternatives would be to sprinkle more __maybe_unused, or
    spread the #ifdef's further.
    
    Build tested with the following combinations:
    CONFIG_PM=y && CONFIG_PM_SLEEP=y
    CONFIG_PM=y && CONFIG_PM_SLEEP=n
    CONFIG_PM=n
    
    Fixes: 96378bd2c6cd ("ath10k: fix core PCI suspend when WoWLAN is supported but disabled")
    Fixes: 096ad2a15fd8 ("Merge branch 'ath-next'")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c212b59ded7fc9382e1c55c100f82709cf542ca
Author: Brian Norris <briannorris@chromium.org>
Date:   Wed Oct 4 12:22:55 2017 +0300

    ath10k: fix core PCI suspend when WoWLAN is supported but disabled
    
    
    [ Upstream commit 96378bd2c6cda5f04d0f6da2cd35d4670a982c38 ]
    
    For devices where the FW supports WoWLAN but user-space has not
    configured it, we don't do any PCI-specific suspend/resume operations,
    because mac80211 doesn't call drv_suspend() when !wowlan. This has
    particularly bad effects for some platforms, because we don't stop the
    power-save timer, and if this timer goes off after the PCI controller
    has suspended the link, Bad Things will happen.
    
    Commit 32faa3f0ee50 ("ath10k: add the PCI PM core suspend/resume ops")
    got some of this right, in that it understood there was a problem on
    non-WoWLAN firmware. But it forgot the $subject case.
    
    Fix this by moving all the PCI driver suspend/resume logic exclusively
    into the driver PM hooks. This shouldn't affect WoWLAN support much
    (this just gets executed later on).
    
    I would just as well kill the entirety of ath10k_hif_suspend(), as it's
    not even implemented on the USB or SDIO drivers. I expect that we don't
    need the callback, except to return "supported" (i.e., 0) or "not
    supported" (i.e., -EOPNOTSUPP).
    
    Fixes: 32faa3f0ee50 ("ath10k: add the PCI PM core suspend/resume ops")
    Fixes: 77258d409ce4 ("ath10k: enable pci soc powersaving")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Cc: Ryan Hsu <ryanhsu@qti.qualcomm.com>
    Cc: Kalle Valo <kvalo@qca.qualcomm.com>
    Cc: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e37eb54a000c767e7f39b806fb048c4be75ed786
Author: Miaoqing Pan <miaoqing@codeaurora.org>
Date:   Wed Sep 27 09:13:34 2017 +0800

    ath9k: fix tx99 potential info leak
    
    
    [ Upstream commit ee0a47186e2fa9aa1c56cadcea470ca0ba8c8692 ]
    
    When the user sets count to zero the string buffer would remain
    completely uninitialized which causes the kernel to parse its
    own stack data, potentially leading to an info leak. In addition
    to that, the string might be not terminated properly when the
    user data does not contain a 0-terminator.
    
    Signed-off-by: Miaoqing Pan <miaoqing@codeaurora.org>
    Reviewed-by: Christoph Böhmwalder <christoph@boehmwalder.at>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99ab42f783da58540c80c91a2af8e8c764c46ca8
Author: Rakesh Pandit <rakesh@tuxera.com>
Date:   Fri Oct 13 14:45:56 2017 +0200

    lightnvm: pblk: protect line bitmap while submitting meta io
    
    
    [ Upstream commit e57903fd972a398b7140d0bc055714e13a0e58c5 ]
    
    It seems pblk_dealloc_page would race against pblk_alloc_pages for
    line bitmap for sector allocation.The chances are very low but might
    as well protect the bitmap properly.
    
    Signed-off-by: Rakesh Pandit <rakesh@tuxera.com>
    Reviewed-by: Javier González <javier@cnexlabs.com>
    Signed-off-by: Matias Bjørling <m@bjorling.me>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 136e415e7a6a7d3d8666560b2147145c7636a455
Author: Javier González <javier@cnexlabs.com>
Date:   Fri Oct 13 14:46:06 2017 +0200

    lightnvm: pblk: fix min size for page mempool
    
    
    [ Upstream commit bd432417681a224d9fa4a9d43be7d4edc82135b2 ]
    
    pblk uses an internal page mempool for allocating pages on internal
    bios. The main two users of this memory pool are partial reads (reads
    with some sectors in cache and some on media) and padded writes, which
    need to add dummy pages to an existing bio already containing valid
    data (and with a large enough bioset allocated). In both cases, the
    maximum number of pages per bio is defined by the maximum number of
    physical sectors supported by the underlying device.
    
    This patch fixes a bad mempool allocation, where the min_nr of elements
    on the pool was fixed (to 16), which is lower than the maximum number
    of sectors supported by NVMe (as of the time for this patch). Instead,
    use the maximum number of allowed sectors reported by the device.
    
    Reported-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Javier González <javier@cnexlabs.com>
    Signed-off-by: Matias Bjørling <m@bjorling.me>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83ef2175ba013ab5ec9b1ec50944ba60a6af888d
Author: Javier González <javier@cnexlabs.com>
Date:   Fri Oct 13 14:46:01 2017 +0200

    lightnvm: pblk: initialize debug stat counter
    
    
    [ Upstream commit a1121176ff757e3c073490a69608ea0b18a00ec1 ]
    
    Initialize the stat counter for garbage collected reads.
    
    Fixes: a4bd217b43268 ("lightnvm: physical block device (pblk) target")
    Signed-off-by: Javier González <javier@cnexlabs.com>
    Signed-off-by: Matias Bjørling <m@bjorling.me>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8594a9a79c390fc99c8d8af21b3208396c94b231
Author: Javier González <javier@cnexlabs.com>
Date:   Fri Oct 13 14:46:02 2017 +0200

    lightnvm: pblk: use right flag for GC allocation
    
    
    [ Upstream commit 7d327a9ed6c4dca341ebf99012e0a6b80a3050e6 ]
    
    The data buffer for the GC path allocates virtual memory through
    vmalloc. When this change was introduced, a flag signaling kmalloc'ed
    memory was wrongly introduced. Use the right flag when creating a bio
    from this buffer.
    
    Fixes: de54e703a422 ("lightnvm: pblk: use vmalloc for GC data buffer")
    Signed-off-by: Javier González <javier@cnexlabs.com>
    Signed-off-by: Matias Bjørling <m@bjorling.me>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e22f692fbabafe322db0c3821e02a5d6da350bef
Author: Rakesh Pandit <rakesh@tuxera.com>
Date:   Fri Oct 13 14:46:28 2017 +0200

    lightnvm: pblk: fix changing GC group list for a line
    
    
    [ Upstream commit 27b978725d895e704aab44b99242a0514485d798 ]
    
    pblk_line_gc_list seems to had a bug since the introduction of pblk in
    getting GC list for a line. In b20ba1bc7 while redesigning the GC
    algorithm, the naming for the GC thresholds was altered, but the
    values for high_thrs and mid_thrs were not. The result is that when
    moving to the GC lists, the mid threshold is never evaluated.
    
    Fixes: a4bd217b4("lightnvm: physical block device (pblk) target")
    Signed-off-by: Rakesh Pandit <rakesh@tuxera.com>
    Signed-off-by: Matias Bjørling <m@bjorling.me>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b07f7511a773db3a165b0a2eca35df5ba6dd1d3
Author: Hans Holmberg <hans.holmberg@cnexlabs.com>
Date:   Fri Oct 13 14:46:34 2017 +0200

    lightnvm: pblk: prevent gc kicks when gc is not operational
    
    
    [ Upstream commit 3e3a5b8ebd5d3b1d68facc58b0674a2564653222 ]
    
    GC can be kicked after it has been shut down when closing the last
    line during exit, resulting in accesses to freed structures.
    
    Make sure that GC is not triggered while it is not operational.
    Also make sure that GC won't be re-activated during exit when
    running on another processor by using timer_del_sync.
    
    Signed-off-by: Hans Holmberg <hans.holmberg@cnexlabs.com>
    Signed-off-by: Matias Bjørling <m@bjorling.me>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6a9d261e95f5ba5cda38ca9c6b7e580656032c4
Author: Matteo Croce <mcroce@redhat.com>
Date:   Thu Oct 12 16:12:37 2017 +0200

    icmp: don't fail on fragment reassembly time exceeded
    
    
    [ Upstream commit 258bbb1b0e594ad5f5652cb526b3c63e6a7fad3d ]
    
    The ICMP implementation currently replies to an ICMP time exceeded message
    (type 11) with an ICMP host unreachable message (type 3, code 1).
    
    However, time exceeded messages can either represent "time to live exceeded
    in transit" (code 0) or "fragment reassembly time exceeded" (code 1).
    
    Unconditionally replying to "fragment reassembly time exceeded" with
    host unreachable messages might cause unjustified connection resets
    which are now easily triggered as UFO has been removed, because, in turn,
    sending large buffers triggers IP fragmentation.
    
    The issue can be easily reproduced by running a lot of UDP streams
    which is likely to trigger IP fragmentation:
    
      # start netserver in the test namespace
      ip netns add test
      ip netns exec test netserver
    
      # create a VETH pair
      ip link add name veth0 type veth peer name veth0 netns test
      ip link set veth0 up
      ip -n test link set veth0 up
    
      for i in $(seq 20 29); do
          # assign addresses to both ends
          ip addr add dev veth0 192.168.$i.1/24
          ip -n test addr add dev veth0 192.168.$i.2/24
    
          # start the traffic
          netperf -L 192.168.$i.1 -H 192.168.$i.2 -t UDP_STREAM -l 0 &
      done
    
      # wait
      send_data: data send error: No route to host (errno 113)
      netperf: send_omni: send_data failed: No route to host
    
    We need to differentiate instead: if fragment reassembly time exceeded
    is reported, we need to silently drop the packet,
    if time to live exceeded is reported, maintain the current behaviour.
    In both cases increment the related error count "icmpInTimeExcds".
    
    While at it, fix a typo in a comment, and convert the if statement
    into a switch to mate it more readable.
    
    Signed-off-by: Matteo Croce <mcroce@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 023bff1b335860493dce3769c942b0172ea0fb5a
Author: Alex Vesker <valex@mellanox.com>
Date:   Tue Oct 10 10:36:41 2017 +0300

    IB/ipoib: Grab rtnl lock on heavy flush when calling ndo_open/stop
    
    
    [ Upstream commit b4b678b06f6eef18bff44a338c01870234db0bc9 ]
    
    When ndo_open and ndo_stop are called RTNL lock should be held.
    In this specific case ipoib_ib_dev_open calls the offloaded ndo_open
    which re-sets the number of TX queue assuming RTNL lock is held.
    Since RTNL lock is not held, RTNL assert will fail.
    
    Signed-off-by: Alex Vesker <valex@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02ef1dd301c2f1ca0ffe58f75bf2f0f4bd291270
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Wed Oct 11 10:48:45 2017 -0700

    RDMA/cma: Avoid triggering undefined behavior
    
    
    [ Upstream commit c0b64f58e8d49570aa9ee55d880f92c20ff0166b ]
    
    According to the C standard the behavior of computations with
    integer operands is as follows:
    * A computation involving unsigned operands can never overflow,
      because a result that cannot be represented by the resulting
      unsigned integer type is reduced modulo the number that is one
      greater than the largest value that can be represented by the
      resulting type.
    * The behavior for signed integer underflow and overflow is
      undefined.
    
    Hence only use unsigned integers when checking for integer
    overflow.
    
    This patch is what I came up with after having analyzed the
    following smatch warnings:
    
    drivers/infiniband/core/cma.c:3448: cma_resolve_ib_udp() warn: signed overflow undefined. 'offset + conn_param->private_data_len < conn_param->private_data_len'
    drivers/infiniband/core/cma.c:3505: cma_connect_ib() warn: signed overflow undefined. 'offset + conn_param->private_data_len < conn_param->private_data_len'
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Acked-by: Sean Hefty <sean.hefty@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fc290e529b4948b2b18fa943d8bd5c3a5d5b6e1
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Wed Oct 11 10:48:43 2017 -0700

    IB/core: Fix endianness annotation in rdma_is_multicast_addr()
    
    
    [ Upstream commit 1c3aea2bc8f0b2e5b57375ead40457ff75a3a2ec ]
    
    Since ipv4_addr is a big endian 32-bit number, annotate it as such.
    
    Fixes: commit be1d325a3358 ("IB/core: Set RoCEv2 MGID according to spec")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7af60377ec05e2452a73c349b4fa2a4196480c8
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Fri Oct 13 13:40:24 2017 -0700

    macvlan: Only deliver one copy of the frame to the macvlan interface
    
    
    [ Upstream commit dd6b9c2c332b40f142740d1b11fb77c653ff98ea ]
    
    This patch intoduces a slight adjustment for macvlan to address the fact
    that in source mode I was seeing two copies of any packet addressed to the
    macvlan interface being delivered where there should have been only one.
    
    The issue appears to be that one copy was delivered based on the source MAC
    address and then the second copy was being delivered based on the
    destination MAC address. To fix it I am just treating a unicast address
    match as though it is not a match since source based macvlan isn't supposed
    to be matching based on the destination MAC anyway.
    
    Fixes: 79cf79abce71 ("macvlan: add source mode")
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9490e7ca55bafac97fa65a3d34244386469eb50
Author: Jan Kara <jack@suse.cz>
Date:   Mon Oct 16 11:38:11 2017 +0200

    udf: Avoid overflow when session starts at large offset
    
    
    [ Upstream commit abdc0eb06964fe1d2fea6dd1391b734d0590365d ]
    
    When session starts beyond offset 2^31 the arithmetics in
    udf_check_vsd() would overflow. Make sure the computation is done in
    large enough type.
    
    Reported-by: Cezary Sliwa <sliwa@ifpan.edu.pl>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42364042b7dd4ba7fed36c1db0a157c7c48282ca
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Mon Oct 9 12:03:26 2017 -0400

    xprtrdma: Don't defer fencing an async RPC's chunks
    
    
    [ Upstream commit 8f66b1a529047a972cb9602a919c53a95f3d7a2b ]
    
    In current kernels, waiting in xprt_release appears to be safe to
    do. I had erroneously believed that for ASYNC RPCs, waiting of any
    kind in xprt_release->xprt_rdma_free would result in deadlock. I've
    done injection testing and consulted with Trond to confirm that
    waiting in the RPC release path is safe.
    
    For the very few times where RPC resources haven't yet been released
    earlier by the reply handler, it is safe to wait synchronously in
    xprt_rdma_free for invalidation rather than defering it to MR
    recovery.
    
    Note: When the QP is error state, posting a LocalInvalidate should
    flush and mark the MR as bad. There is no way the remote HCA can
    access that MR via a QP in error state, so it is effectively already
    inaccessible and thus safe for the Upper Layer to access. The next
    time the MR is used it should be recognized and cleaned up properly
    by frwr_op_map.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46788d19e137fc48d93f0a29eade2e02e05317f6
Author: Guoqing Jiang <gqjiang@suse.com>
Date:   Fri Sep 29 09:16:43 2017 +0800

    md-cluster: fix wrong condition check in raid1_write_request
    
    
    [ Upstream commit 385f4d7f946b08f36f68b0a28e95a319925b6b62 ]
    
    The check used here is to avoid conflict between write and
    resync, however we used the wrong logic, it should be the
    inverse of the checking inside "if".
    
    Fixes: 589a1c4 ("Suspend writes in RAID1 if within range")
    Signed-off-by: Guoqing Jiang <gqjiang@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 339aba679813ff1fabde362147919d3f6e536568
Author: Artur Paszkiewicz <artur.paszkiewicz@intel.com>
Date:   Fri Sep 29 22:54:19 2017 +0200

    raid5-ppl: check recovery_offset when performing ppl recovery
    
    
    [ Upstream commit 07719ff767dcd8cc42050f185d332052f3816546 ]
    
    If starting an array that is undergoing rebuild, make ppl recovery honor
    the recovery_offset of a member disk and don't read data that is not yet
    in-sync.
    
    Signed-off-by: Artur Paszkiewicz <artur.paszkiewicz@intel.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b197f67ccfeb86d180a152796b5e3b7de1f611ef
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 4 10:50:37 2017 +0300

    scsi: bfa: integer overflow in debugfs
    
    
    [ Upstream commit 3e351275655d3c84dc28abf170def9786db5176d ]
    
    We could allocate less memory than intended because we do:
    
            bfad->regdata = kzalloc(len << 2, GFP_KERNEL);
    
    The shift can overflow leading to a crash.  This is debugfs code so the
    impact is very small.  I fixed the network version of this in March with
    commit 13e2d5187f6b ("bna: integer overflow bug in debugfs").
    
    Fixes: ab2a9ba189e8 ("[SCSI] bfa: add debugfs support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd2581c675e4311abc68826c25ec2563bccb3337
Author: weiping zhang <zhangweiping@didichuxing.com>
Date:   Thu Oct 12 14:56:44 2017 +0800

    scsi: sd: change allow_restart to bool in sysfs interface
    
    
    [ Upstream commit 658e9a6dc1126f21fa417cd213e1cdbff8be0ba2 ]
    
    /sys/class/scsi_disk/0:2:0:0/allow_restart can be changed to 0
    unexpectedly by writing an invalid string such as the following:
    
    echo asdf > /sys/class/scsi_disk/0:2:0:0/allow_restart
    
    Signed-off-by: weiping zhang <zhangweiping@didichuxing.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47b5dbdd983e0319cd5d135bbfe7e564f4bbaabc
Author: weiping zhang <zhangweiping@didichuxing.com>
Date:   Thu Oct 12 14:57:06 2017 +0800

    scsi: sd: change manage_start_stop to bool in sysfs interface
    
    
    [ Upstream commit 623401ee33e42cee64d333877892be8db02951eb ]
    
    /sys/class/scsi_disk/0:2:0:0/manage_start_stop can be changed to 0
    unexpectly by writing an invalid string.
    
    Signed-off-by: weiping zhang <zhangweiping@didichuxing.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc8f4ca137d9525b6f7db4b1d3e8f07a087518ec
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Tue Oct 17 12:11:46 2017 +0000

    nullb: fix error return code in null_init()
    
    
    [ Upstream commit 30c516d750396c5f3ec9cb04c9e025c25e91495e ]
    
    Fix to return error code -ENOMEM from the null_alloc_dev() error
    handling case instead of 0, as done elsewhere in this function.
    
    Fixes: 2984c8684f96 ("nullb: factor disk parameters")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c97e41076a298dbc4e910c33048e553658388eed
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Oct 17 16:54:52 2017 +0100

    ipmi_si: fix memory leak on new_smi
    
    
    [ Upstream commit c0a32fe13cd323ca9420500b16fd69589c9ba91e ]
    
    The error exit path omits kfree'ing the allocated new_smi, causing a memory
    leak.  Fix this by kfree'ing new_smi.
    
    Detected by CoverityScan, CID#14582571 ("Resource Leak")
    
    Fixes: 7e030d6dff71 ("ipmi: Prefer ACPI system interfaces over SMBIOS ones")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2d81d0f030afc7a873bb3454eaf59f384543baf
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Sun Oct 8 19:54:07 2017 +0800

    rtl8188eu: Fix a possible sleep-in-atomic bug in rtw_disassoc_cmd
    
    
    [ Upstream commit 08880f8e08cbd814e870e9d3ab9530abc1bce226 ]
    
    The driver may sleep under a spinlock, and the function call path is:
    rtw_set_802_11_bssid(acquire the spinlock)
      rtw_disassoc_cmd
        kzalloc(GFP_KERNEL) --> may sleep
    
    To fix it, GFP_KERNEL is replaced with GFP_ATOMIC.
    This bug is found by my static analysis tool and my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f898f36664a5d64a55c1257e55dfacaae6a86bb7
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Sun Oct 8 19:54:45 2017 +0800

    rtl8188eu: Fix a possible sleep-in-atomic bug in rtw_createbss_cmd
    
    
    [ Upstream commit 2bf9806d4228f7a6195f8e03eda0479d2a93b411 ]
    
    The driver may sleep under a spinlock, and the function call path is:
    rtw_surveydone_event_callback(acquire the spinlock)
      rtw_createbss_cmd
        kzalloc(GFP_KERNEL) --> may sleep
    
    To fix it, GFP_KERNEL is replaced with GFP_ATOMIC.
    This bug is found by my static analysis tool and my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f18b2039d904f344dae779451592814e2c646686
Author: Don Hiatt <don.hiatt@intel.com>
Date:   Mon Oct 9 12:38:12 2017 -0700

    IB/hfi1: Mask out A bit from psn trace
    
    
    [ Upstream commit d0a2f454713a42447ee4007582c0e43c47bcf230 ]
    
    The trace logic prior to the fixes below used to mask the
    A bit from the psn. It now mistakenly displays the A bit,
    which is already displayed separately.
    
    Fix by adding the appropriate mask to the psn tracing.
    
    Fixes: 228d2af1b723 ("IB/hfi1: Separate input/output header tracing")
    Fixes: 863cf89d472f ("IB/hfi1: Add 16B trace support")
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Don Hiatt <don.hiatt@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e2836b43102633dc9bffbc170be43e1d147914c
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Mon Oct 9 16:45:55 2017 +0800

    vt6655: Fix a possible sleep-in-atomic bug in vt6655_suspend
    
    
    [ Upstream commit 42c8eb3f6e15367981b274cb79ee4657e2c6949d ]
    
    The driver may sleep under a spinlock, and the function call path is:
    vt6655_suspend (acquire the spinlock)
      pci_set_power_state
        __pci_start_power_transition (drivers/pci/pci.c)
          msleep --> may sleep
    
    To fix it, pci_set_power_state is called without having a spinlock.
    
    This bug is found by my static analysis tool and my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b57259ca055f7f2c7237dcc0e5aac446b2fa6da9
Author: Parav Pandit <parav@mellanox.com>
Date:   Mon Oct 16 08:45:16 2017 +0300

    IB/core: Fix calculation of maximum RoCE MTU
    
    
    [ Upstream commit 99260132fde7bddc6e0132ce53da94d1c9ccabcb ]
    
    The original code only took into consideration the largest header
    possible after the IB_BTH_BYTES.  This was incorrect, as the largest
    possible header size is the largest possible combination of headers we
    might run into.  The new code accounts for all possible headers in the
    largest possible combination and subtracts that from the MTU to make
    sure that all packets will fit on the wire.
    
    Link: https://www.spinics.net/lists/linux-rdma/msg54558.html
    Fixes: 3c86aa70bf67 ("RDMA/cm: Add RDMA CM support for IBoE devices")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Reported-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cb27c88b080274e5f94ae7a7c4da7275925ab33
Author: Parav Pandit <parav@mellanox.com>
Date:   Mon Oct 16 08:45:15 2017 +0300

    IB/core: Fix use workqueue without WQ_MEM_RECLAIM
    
    
    [ Upstream commit 39baf10310e6669564a485b55267fae70a4e44ae ]
    
    The IB/core provides address resolution service and invokes callback
    handler when address resolve request completes of requester in worker
    thread context.
    
    Such caller might allocate or free memory in callback handler
    depending on the completion status to make further progress or to
    terminate a connection. Most ULPs resolve route which involves
    allocating route entry and path record elements in callback event handler.
    
    It has been noticed that WQ_MEM_RECLAIM flag should not be used for
    workers that tend to allocate memory in this [1] thread discussion.
    
    In order to mitigate this situation, WQ_MEM_RECLAIM flag was dropped for
    other such WQs in this [2] patch.
    
    Similar problem might arise with address resolution path, though its not
    yet noticed. The ib_addr workqueue is not memory reclaim path due to its
    nature of invoking callback that might allocate memory or don't free any
    memory under memory pressure.
    
    [1] https://www.spinics.net/lists/linux-rdma/msg53239.html
    [2] https://www.spinics.net/lists/linux-rdma/msg53416.html
    
    Fixes: f54816261c2b ("IB/addr: Remove deprecated create_singlethread_workqueue")
    Fixes: 5fff41e1f89d ("IB/core: Fix race condition in resolving IP to MAC")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84607a2958762c94741fc96e947e6a134cd5f5c3
Author: Kurt Garloff <garloff@suse.de>
Date:   Tue Oct 17 09:10:45 2017 +0200

    scsi: scsi_devinfo: Add REPORTLUN2 to EMC SYMMETRIX blacklist entry
    
    
    [ Upstream commit 909cf3e16a5274fe2127cf3cea5c8dba77b2c412 ]
    
    All EMC SYMMETRIX support REPORT_LUNS, even if configured to report
    SCSI-2 for whatever reason.
    
    Signed-off-by: Kurt Garloff <garloff@suse.de>
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8151940acc356ba61e0992f464fca38118860c31
Author: NeilBrown <neilb@suse.com>
Date:   Tue Oct 17 16:18:36 2017 +1100

    raid5: Set R5_Expanded on parity devices as well as data.
    
    
    [ Upstream commit 235b6003fb28f0dd8e7ed8fbdb088bb548291766 ]
    
    When reshaping a fully degraded raid5/raid6 to a larger
    nubmer of devices, the new device(s) are not in-sync
    and so that can make the newly grown stripe appear to be
    "failed".
    To avoid this, we set the R5_Expanded flag to say "Even though
    this device is not fully in-sync, this block is safe so
    don't treat the device as failed for this stripe".
    This flag is set for data devices, not not for parity devices.
    
    Consequently, if you have a RAID6 with two devices that are partly
    recovered and a spare, and start a reshape to include the spare,
    then when the reshape gets past the point where the recovery was
    up to, it will think the stripes are failed and will get into
    an infinite loop, failing to make progress.
    
    So when contructing parity on an EXPAND_READY stripe,
    set R5_Expanded.
    
    Reported-by: Curt <lightspd@gmail.com>
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57db94d4b72479c6c1e31d18e83a581d5d6d0ee9
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Oct 11 11:57:15 2017 +0200

    pinctrl: adi2: Fix Kconfig build problem
    
    
    [ Upstream commit 1c363531dd814dc4fe10865722bf6b0f72ce4673 ]
    
    The build robot is complaining on Blackfin:
    
    drivers/pinctrl/pinctrl-adi2.c: In function 'port_setup':
    >> drivers/pinctrl/pinctrl-adi2.c:221:21: error: dereferencing
       pointer to incomplete type 'struct gpio_port_t'
          writew(readw(&regs->port_fer) & ~BIT(offset),
                            ^~
    drivers/pinctrl/pinctrl-adi2.c: In function 'adi_gpio_ack_irq':
    >> drivers/pinctrl/pinctrl-adi2.c:266:18: error: dereferencing
    pointer to incomplete type 'struct bfin_pint_regs'
          if (readl(&regs->invert_set) & pintbit)
                         ^~
    It seems the driver need to include <asm/gpio.h> and <asm/irq.h>
    to compile.
    
    The Blackfin architecture was re-defining the Kconfig
    PINCTRL symbol which is not OK, so replaced this with
    PINCTRL_BLACKFIN_ADI2 which selects PINCTRL and PINCTRL_ADI2
    just like most arches do.
    
    Further, the old GPIO driver symbol GPIO_ADI was possible to
    select at the same time as selecting PINCTRL. This was not
    working because the arch-local <asm/gpio.h> header contains
    an explicit #ifndef PINCTRL clause making compilation break
    if you combine them. The same is true for DEBUG_MMRS.
    
    Make sure the ADI2 pinctrl driver is not selected at the same
    time as the old GPIO implementation. (This should be converted
    to use gpiolib or pincontrol and move to drivers/...) Also make
    sure the old GPIO_ADI driver or DEBUG_MMRS is not selected at
    the same time as the new PINCTRL implementation, and only make
    PINCTRL_ADI2 selectable for the Blackfin families that actually
    have it.
    
    This way it is still possible to add e.g. I2C-based pin
    control expanders on the Blackfin.
    
    Cc: Steven Miao <realmz6@gmail.com>
    Cc: Huanhuan Feng <huanhuan.feng@analog.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4684da79d20edf232e33442775506e600fc4fe6f
Author: Ross Zwisler <ross.zwisler@linux.intel.com>
Date:   Wed Oct 18 12:21:55 2017 -0600

    dev/dax: fix uninitialized variable build warning
    
    
    [ Upstream commit 0a3ff78699d1817e711441715d22665475466036 ]
    
    Fix this build warning:
    
    warning: 'phys' may be used uninitialized in this function
    [-Wuninitialized]
    
    As reported here:
    
    https://lkml.org/lkml/2017/10/16/152
    http://kisskb.ellerman.id.au/kisskb/buildresult/13181373/log/
    
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93fc8284472124140a7946c4e5f555e06808f4a2
Author: nixiaoming <nixiaoming@huawei.com>
Date:   Fri Sep 15 17:45:56 2017 +0800

    tty fix oops when rmmod 8250
    
    
    [ Upstream commit c79dde629d2027ca80329c62854a7635e623d527 ]
    
    After rmmod 8250.ko
    tty_kref_put starts kwork (release_one_tty) to release proc interface
    oops when accessing driver->driver_name in proc_tty_unregister_driver
    
    Use jprobe, found driver->driver_name point to 8250.ko
    static static struct uart_driver serial8250_reg
    .driver_name= serial,
    
    Use name in proc_dir_entry instead of driver->driver_name to fix oops
    
    test on linux 4.1.12:
    
    BUG: unable to handle kernel paging request at ffffffffa01979de
    IP: [<ffffffff81310f40>] strchr+0x0/0x30
    PGD 1a0d067 PUD 1a0e063 PMD 851c1f067 PTE 0
    Oops: 0000 [#1] PREEMPT SMP
    Modules linked in: ... ...  [last unloaded: 8250]
    CPU: 7 PID: 116 Comm: kworker/7:1 Tainted: G           O    4.1.12 #1
    Hardware name: Insyde RiverForest/Type2 - Board Product Name1, BIOS NE5KV904 12/21/2015
    Workqueue: events release_one_tty
    task: ffff88085b684960 ti: ffff880852884000 task.ti: ffff880852884000
    RIP: 0010:[<ffffffff81310f40>]  [<ffffffff81310f40>] strchr+0x0/0x30
    RSP: 0018:ffff880852887c90  EFLAGS: 00010282
    RAX: ffffffff81a5eca0 RBX: ffffffffa01979de RCX: 0000000000000004
    RDX: ffff880852887d10 RSI: 000000000000002f RDI: ffffffffa01979de
    RBP: ffff880852887cd8 R08: 0000000000000000 R09: ffff88085f5d94d0
    R10: 0000000000000195 R11: 0000000000000000 R12: ffffffffa01979de
    R13: ffff880852887d00 R14: ffffffffa01979de R15: ffff88085f02e840
    FS:  0000000000000000(0000) GS:ffff88085f5c0000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffffffffa01979de CR3: 0000000001a0c000 CR4: 00000000001406e0
    Stack:
     ffffffff812349b1 ffff880852887cb8 ffff880852887d10 ffff88085f5cd6c2
     ffff880852800a80 ffffffffa01979de ffff880852800a84 0000000000000010
     ffff88085bb28bd8 ffff880852887d38 ffffffff812354f0 ffff880852887d08
    Call Trace:
     [<ffffffff812349b1>] ? __xlate_proc_name+0x71/0xd0
     [<ffffffff812354f0>] remove_proc_entry+0x40/0x180
     [<ffffffff815f6811>] ? _raw_spin_lock_irqsave+0x41/0x60
     [<ffffffff813be520>] ? destruct_tty_driver+0x60/0xe0
     [<ffffffff81237c68>] proc_tty_unregister_driver+0x28/0x40
     [<ffffffff813be548>] destruct_tty_driver+0x88/0xe0
     [<ffffffff813be5bd>] tty_driver_kref_put+0x1d/0x20
     [<ffffffff813becca>] release_one_tty+0x5a/0xd0
     [<ffffffff81074159>] process_one_work+0x139/0x420
     [<ffffffff810745a1>] worker_thread+0x121/0x450
     [<ffffffff81074480>] ? process_scheduled_works+0x40/0x40
     [<ffffffff8107a16c>] kthread+0xec/0x110
     [<ffffffff81080000>] ? tg_rt_schedulable+0x210/0x220
     [<ffffffff8107a080>] ? kthread_freezable_should_stop+0x80/0x80
     [<ffffffff815f7292>] ret_from_fork+0x42/0x70
     [<ffffffff8107a080>] ? kthread_freezable_should_stop+0x80/0x80
    
    Signed-off-by: nixiaoming <nixiaoming@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b53af57679492180417d584be410b1134de15cd2
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Thu Oct 19 07:00:34 2017 +0800

    KVM: nVMX: Fix EPT switching advertising
    
    
    [ Upstream commit 575b3a2cb439b03fd603ea77c73c76f3ed237596 ]
    
    I can use vmxcap tool to observe "EPTP Switching   yes" even if EPT is not
    exposed to L1.
    
    EPT switching is advertised unconditionally since it is emulated, however,
    it can be treated as an extended feature for EPT and it should not be
    advertised if EPT itself is not exposed. This patch fixes it.
    
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Jim Mattson <jmattson@google.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdfcb06c5944afb78007cfc25e527ff689b2a344
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 18 17:02:03 2017 -0700

    ipv4: ipv4_default_advmss() should use route mtu
    
    
    [ Upstream commit 164a5e7ad531e181334a3d3f03d0d5ad20d6faea ]
    
    ipv4_default_advmss() incorrectly uses the device MTU instead
    of the route provided one. IPv6 has the proper behavior,
    lets harmonize the two protocols.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48185ffb6dc3eb64846039117d76148d3e3d7022
Author: Matthias Brugger <matthias.bgg@gmail.com>
Date:   Sat Oct 21 10:17:47 2017 +0200

    soc: mediatek: pwrap: fix compiler errors
    
    
    [ Upstream commit fb2c1934f30577756e55e24e8870b45c78da3bc2 ]
    
    When compiling using sparse, we got the following error:
    drivers/soc/mediatek/mtk-pmic-wrap.c:686:25: error: dubious one-bit signed bitfield
    
    Changing the data type to unsigned fixes this.
    
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cd01922985ce5c00cf050f12daef304cc452761
Author: Breno Leitao <leitao@debian.org>
Date:   Tue Oct 17 16:20:18 2017 -0200

    powerpc/xmon: Check before calling xive functions
    
    
    [ Upstream commit 402e172a2ce76210f2fe921cf419d12103851344 ]
    
    Currently xmon could call XIVE functions from OPAL even if the XIVE is
    disabled or does not exist in the system, as in POWER8 machines. This
    causes the following exception:
    
     1:mon> dx
     cpu 0x1: Vector: 700 (Program Check) at [c000000423c93450]
         pc: c00000000009cfa4: opal_xive_dump+0x50/0x68
         lr: c0000000000997b8: opal_return+0x0/0x50
    
    This patch simply checks if XIVE is enabled before calling XIVE
    functions.
    
    Fixes: 243e25112d06 ("powerpc/xive: Native exploitation of the XIVE interrupt controller")
    Suggested-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ee1eada4f1a6671517dc51f6bc11174faebea02
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Oct 9 21:52:44 2017 +1100

    powerpc/perf/hv-24x7: Fix incorrect comparison in memord
    
    
    [ Upstream commit 05c14c03138532a3cb2aa29c2960445c8753343b ]
    
    In the hv-24x7 code there is a function memord() which tries to
    implement a sort function return -1, 0, 1. However one of the
    conditions is incorrect, such that it can never be true, because we
    will have already returned.
    
    I don't believe there is a bug in practice though, because the
    comparisons are an optimisation prior to calling memcmp().
    
    Fix it by swapping the second comparision, so it can be true.
    
    Reported-by: David Binderman <dcb314@hotmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b59dc14b0b102d42d6bd54ae77848ddc00a4596c
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 16 15:06:19 2017 +0200

    serdev: ttyport: enforce tty-driver open() requirement
    
    
    [ Upstream commit dee7d0f3b200c67c6ee96bd37c6e8fa52690ab56 ]
    
    The tty-driver open routine is mandatory, but the serdev
    tty-port-controller implementation did not treat it as such and would
    instead fall back to calling tty_port_open() directly.
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 669ff2a9aa71edea93a0b74c1273080cad68dfb7
Author: Lipeng <lipeng321@huawei.com>
Date:   Mon Oct 23 19:51:01 2017 +0800

    net: hns3: fix a bug when alloc new buffer
    
    
    [ Upstream commit b9077428ec5569aacb2952d8a2ffb51c8988d3c2 ]
    
    When alloce new buffer to HW, should unmap the old buffer first.
    This old code map the old buffer but not unmap the old buffer,
    this patch fixes it.
    
    Fixes: 76ad4f0 (net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC)
    
    Signed-off-by: Lipeng <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 122e18d27d77031b909a06f110f6da225502d033
Author: Lipeng <lipeng321@huawei.com>
Date:   Mon Oct 23 19:51:02 2017 +0800

    net: hns3: fix the bug when map buffer fail
    
    
    [ Upstream commit 564883bb4dc1a4f3cba6344e77743175694b0761 ]
    
    If one buffer had been recieved to stack, driver will alloc a new buffer,
    map the buffer to device and replace the old buffer. When map fail, should
    only free the new alloced buffer, but not free all buffers in the ring.
    
    Fixes: 76ad4f0 (net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC)
    
    Signed-off-by: Lipeng <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9409e1c775f35b2571be427cde272ce80cdc19e7
Author: Lipeng <lipeng321@huawei.com>
Date:   Mon Oct 23 19:51:05 2017 +0800

    net: hns3: fix the TX/RX ring.queue_index in hns3_ring_get_cfg
    
    
    [ Upstream commit 66b447301ac710ee237dba8b653244018fbb6168 ]
    
    The interface hns3_ring_get_cfg only update TX ring queue_index,
    but do not update RX ring queue_index. This patch fixes it.
    
    Fixes: 76ad4f0 (net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC)
    
    Signed-off-by: Lipeng <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aeb01451f9e2d3e9b2ac2ad30426c68957c307ed
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Oct 14 01:06:56 2017 +0300

    mfd: mxs-lradc: Fix error handling in mxs_lradc_probe()
    
    
    [ Upstream commit 362741a21a5c4b9ee31e75ce28d63c6d238a745c ]
    
    There is the only path, where mxs_lradc_probe() leaves clk undisabled,
    since it does return instead of goto err_clk.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8268e93b2b879912ae84952acef17e4c78f3b66d
Author: Martin Wilck <mwilck@suse.de>
Date:   Fri Oct 20 16:51:08 2017 -0500

    scsi: hpsa: destroy sas transport properties before scsi_host
    
    
    [ Upstream commit dfb2e6f46b3074eb85203d8f0888b71ec1c2e37a ]
    
    This patch cleans up a lot of warnings when unloading the driver.
    
    A current example of the stack trace starts with:
        [  142.570715] sysfs group 'power' not found for kobject 'port-5:0'
    There can be hundreds of these messages during a driver unload.
    
    I am resubmitting this patch on behalf of Martin Wilck with his
    permission.
    
    His original patch can be found here:
    https://www.spinics.net/lists/linux-scsi/msg102085.html
    
    This patch did not help until Hannes's
    commit 9441284fbc39 ("scsi-fixup-kernel-warning-during-rmmod")
    was applied to the kernel.
    
    ---------------------------
    Original patch description:
    ---------------------------
    
    Unloading the hpsa driver causes warnings
    
    [ 1063.793652] WARNING: CPU: 1 PID: 4850 at ../fs/sysfs/group.c:237 device_del+0x54/0x240()
    [ 1063.793659] sysfs group ffffffff81cf21a0 not found for kobject 'port-2:0'
    
    with two different stacks:
    1)
    [ 1063.793774]  [<ffffffff81448af4>] device_del+0x54/0x240
    [ 1063.793780]  [<ffffffff8145178a>] transport_remove_classdev+0x4a/0x60
    [ 1063.793784]  [<ffffffff81451216>] attribute_container_device_trigger+0xa6/0xb0
    [ 1063.793802]  [<ffffffffa0105d46>] sas_port_delete+0x126/0x160 [scsi_transport_sas]
    [ 1063.793819]  [<ffffffffa036ebcc>] hpsa_free_sas_port+0x3c/0x70 [hpsa]
    
    2)
    [ 1063.797103]  [<ffffffff81448af4>] device_del+0x54/0x240
    [ 1063.797118]  [<ffffffffa0105d4e>] sas_port_delete+0x12e/0x160 [scsi_transport_sas]
    [ 1063.797134]  [<ffffffffa036ebcc>] hpsa_free_sas_port+0x3c/0x70 [hpsa]
    
    This is caused by the fact that host device hostX is deleted before the
    SAS transport devices hostX/port-a:b.
    
    This patch fixes this by reverting the order of device deletions.
    
    Tested-by: Don Brace <don.brace@microsemi.com>
    Reviewed-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin Wilck <mwilck@suse.de>
    Signed-off-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a7797199d9b96989ab5f30eadad077a8dc7c970
Author: Martin Wilck <mwilck@suse.de>
Date:   Fri Oct 20 16:51:14 2017 -0500

    scsi: hpsa: cleanup sas_phy structures in sysfs when unloading
    
    
    [ Upstream commit 55ca38b4255bb336c2d35990bdb2b368e19b435a ]
    
    I am resubmitting this patch on behalf of Martin Wilck with his
    permission.
    
    The original patch can be found here:
    https://www.spinics.net/lists/linux-scsi/msg102083.html
    
    This patch did not help until Hannes's
    commit 9441284fbc39 ("scsi-fixup-kernel-warning-during-rmmod")
    was applied to the kernel.
    
    --------------------------------------
    Original patch description from Martin:
    --------------------------------------
    
    When the hpsa module is unloaded using rmmod, dangling
    symlinks remain under /sys/class/sas_phy. Fix this by
    calling sas_phy_delete() rather than sas_phy_free (which,
    according to comments, should not be called for PHYs that
    have been set up successfully, anyway).
    
    Tested-by: Don Brace <don.brace@microsemi.com>
    Reviewed-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin Wilck <mwilck@suse.de>
    Signed-off-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b61aba91eb72efc5117d24d3f4455dcaf67f1e63
Author: Xiaofei Tan <tanxiaofei@huawei.com>
Date:   Tue Oct 24 23:51:38 2017 +0800

    scsi: hisi_sas: fix the risk of freeing slot twice
    
    
    [ Upstream commit 6ba0fbc35aa9f3bc8c12be3b4047055c9ce2ac92 ]
    
    The function hisi_sas_slot_task_free() is used to free the slot and do
    tidy-up of LLDD resources. The LLDD generally should know the state of
    a slot and decide when to free it, and it should only be done once.
    
    For some scenarios, we really don't know the state, like when TMF
    timeout. In this case, we check task->lldd_task before calling
    hisi_sas_slot_task_free().
    
    However, we may miss some scenarios when we should also check
    task->lldd_task, and it is not SMP safe to check task->lldd_task as we
    don't protect it within spin lock.
    
    This patch is to fix this risk of freeing slot twice, as follows:
    
      1. Check task->lldd_task in the hisi_sas_slot_task_free(), and give
         up freeing of this time if task->lldd_task is NULL.
    
      2. Set slot->buf to NULL after it is freed.
    
    Signed-off-by: Xiaofei Tan <tanxiaofei@huawei.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96ed7ca7323be977d617d077146b322e844bdcb9
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Wed Oct 11 15:35:56 2017 -0600

    PCI: Detach driver before procfs & sysfs teardown on device remove
    
    
    [ Upstream commit 16b6c8bb687cc3bec914de09061fcb8411951fda ]
    
    When removing a device, for example a VF being removed due to SR-IOV
    teardown, a "soft" hot-unplug via 'echo 1 > remove' in sysfs, or an actual
    hot-unplug, we first remove the procfs and sysfs attributes for the device
    before attempting to release the device from any driver bound to it.
    Unbinding the driver from the device can take time.  The device might need
    to write out data or it might be actively in use.  If it's in use by
    userspace through a vfio driver, the unbind might block until the user
    releases the device.  This leads to a potentially non-trivial amount of
    time where the device exists, but we've torn down the interfaces that
    userspace uses to examine devices, for instance lspci might generate this
    sort of error:
    
      pcilib: Cannot open /sys/bus/pci/devices/0000:01:0a.3/config
      lspci: Unable to read the standard configuration space header of device 0000:01:0a.3
    
    We don't seem to have any dependence on this teardown ordering in the
    kernel, so let's unbind the driver first, which is also more symmetric with
    the instantiation of the device in pci_bus_add_device().
    
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18c8d94eac0fd6c859033b2eb05941f19c3f7b4a
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Oct 25 07:41:11 2017 +0300

    RDMA/cxgb4: Declare stag as __be32
    
    
    [ Upstream commit 35fb2a88ed4b77356fa679a8525c869a3594e287 ]
    
    The scqe.stag is actually __b32, fix it.
    
      drivers/infiniband/hw/cxgb4/cq.c:754:52: warning: cast to restricted __be32
    
    Cc: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Reviewed-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d48d002a2f68e35bea2872a5533436848f30a60
Author: Lipeng <lipeng321@huawei.com>
Date:   Tue Oct 24 21:02:09 2017 +0800

    net: hns3: fix the bug of hns3_set_txbd_baseinfo
    
    
    [ Upstream commit 7036d26f328f12a323069eb16d965055b4cb3795 ]
    
    The SC bits of TX BD mean switch control. For this area, value 0
    indicates no switch control, the packet is routed according to the
    forwarding table. Value 1 indicates that the packet is transmitted
    to the network bypassing the forwarding table.
    
    As HNS3 driver need support VF later, VF conmunicate with its own
    PF need forwarding table. This patch sets SC bits of TX BD 0 and use
    forwarding table.
    
    Fixes: 76ad4f0 (net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC)
    
    Signed-off-by: Lipeng <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d9205558e50b7af5fe5b054bf26f93c9255786e
Author: Lipeng <lipeng321@huawei.com>
Date:   Tue Oct 24 21:02:10 2017 +0800

    net: hns3: add nic_client check when initialize roce base information
    
    
    [ Upstream commit 3a46f34d20d453f09defb76b11a567647939c0aa ]
    
    Roce driver works base on HNS3 driver.If insmod Roce driver before
    NIC driver there is a error because do not check nic_client. This patch
    adds nic_client check when initialize roce base information.
    
    Fixes: 46a3df9 (net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support)
    
    Signed-off-by: Lipeng <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0949f8afa8f1b9d6ebce48606e41dfcdafbaca4a
Author: Lipeng <lipeng321@huawei.com>
Date:   Tue Oct 24 21:02:11 2017 +0800

    net: hns3: fix a bug in hclge_uninit_client_instance
    
    
    [ Upstream commit a17dcf3f0124698d1120da71574bf4c339e5a368 ]
    
    HNS3 driver initialize hdev->roce_client and vport->roce.client in
    hclge_init_client_instance, and need set hdev->roce_client and
    vport->roce.client NULL.
    
    If do not set them NULL when uninit, it will fail in the scene:
    insmod hns3.ko, hns-roce.ko, hns-roce-hw-v3.ko successfully, but
    rmmod hns3.ko after rmmod hns-roce-hw-v2.ko and hns-roce.ko.
    This patch fixes the issue.
    
    Fixes: 46a3df9 (net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support)
    
    Signed-off-by: Lipeng <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68a6765b70d90debde63bd26599c3422116751ef
Author: Egil Hjelmeland <privat@egil-hjelmeland.no>
Date:   Tue Oct 24 17:14:10 2017 +0200

    net: dsa: lan9303: Do not disable switch fabric port 0 at .probe
    
    
    [ Upstream commit 3c91b0c1de8d013490bbc41ce9ee8810ea5baddd ]
    
    Make the LAN9303 work when lan9303_probe() is called twice.
    
    For some unknown reason the LAN9303 switch fail to forward data when switch
    fabric port 0 TX is disabled during probe. (Write of LAN9303_MAC_TX_CFG_0
    in lan9303_disable_processing_port().)
    
    In that situation the switch fabric seem to receive frames, because the ALR
    is learning addresses. But no frames are transmitted on any of the ports.
    
    In our system lan9303_probe() is called twice, first time
    dsa_register_switch() return -EPROBE_DEFER. As an experiment, modified the
    code to skip writing LAN9303_MAC_TX_CFG_0, port 0 during the first probe.
    Then the switch works as expected.
    
    Resolve the problem by not calling lan9303_disable_processing_port() on
    port 0 during probe. Ports 1 and 2 are still disabled.
    
    Although unsatisfying that the exact failure mechanism is not known,
    the patch should not cause any harm.
    
    Signed-off-by: Egil Hjelmeland <privat@egil-hjelmeland.no>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4be2d1ad59d0d9251bd1fc618a6d1266b16e3b75
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Oct 17 14:16:19 2017 -0700

    xfs: fix incorrect extent state in xfs_bmap_add_extent_unwritten_real
    
    
    [ Upstream commit 5e422f5e4fd71d18bc6b851eeb3864477b3d842e ]
    
    There was one spot in xfs_bmap_add_extent_unwritten_real that didn't use the
    passed in new extent state but always converted to normal, leading to wrong
    behavior when converting from normal to unwritten.
    
    Only found by code inspection, it seems like this code path to move partial
    extent from written to unwritten while merging it with the next extent is
    rarely exercised.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61bc71d34a00801657591e142f374794b6dc3548
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Tue Oct 17 21:37:32 2017 -0700

    xfs: return a distinct error code value for IGET_INCORE cache misses
    
    
    [ Upstream commit ed438b476b611c67089760037139f93ea8ed41d5 ]
    
    For an XFS_IGET_INCORE iget operation, if the inode isn't in the cache,
    return ENODATA so that we don't confuse it with the pre-existing ENOENT
    cases (inode is in cache, but freed).
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 742b570da6e6447e4a98acceb27e8a7d5b436d7c
Author: Brian Foster <bfoster@redhat.com>
Date:   Thu Oct 26 09:31:16 2017 -0700

    xfs: fix log block underflow during recovery cycle verification
    
    
    [ Upstream commit 9f2a4505800607e537e9dd9dea4f55c4b0c30c7a ]
    
    It is possible for mkfs to format very small filesystems with too
    small of an internal log with respect to the various minimum size
    and block count requirements. If this occurs when the log happens to
    be smaller than the scan window used for cycle verification and the
    scan wraps the end of the log, the start_blk calculation in
    xlog_find_head() underflows and leads to an attempt to scan an
    invalid range of log blocks. This results in log recovery failure
    and a failed mount.
    
    Since there may be filesystems out in the wild with this kind of
    geometry, we cannot simply refuse to mount. Instead, cap the scan
    window for cycle verification to the size of the physical log. This
    ensures that the cycle verification proceeds as expected when the
    scan wraps the end of the log.
    
    Reported-by: Zorro Lang <zlang@redhat.com>
    Signed-off-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff62605e0d79c870f679bcd8571bf9cb5f7e1c93
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Wed Oct 25 15:57:55 2017 +0200

    l2tp: cleanup l2tp_tunnel_delete calls
    
    
    [ Upstream commit 4dc12ffeaeac939097a3f55c881d3dc3523dff0c ]
    
    l2tp_tunnel_delete does not return anything since commit 62b982eeb458
    ("l2tp: fix race condition in l2tp_tunnel_delete").  But call sites of
    l2tp_tunnel_delete still do casts to void to avoid unused return value
    warnings.
    
    Kill these now useless casts.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Sabrina Dubroca <sd@queasysnail.net>
    Cc: Guillaume Nault <g.nault@alphalink.fr>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: netdev@vger.kernel.org
    Acked-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4edcbfc5651276a28a1501e03198f6f16974617c
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Oct 18 13:20:01 2017 +0200

    nvme: use kref_get_unless_zero in nvme_find_get_ns
    
    
    [ Upstream commit 2dd4122854f697afc777582d18548dded03ce5dd ]
    
    For kref_get_unless_zero to protect against lookup vs free races we need
    to use it in all places where we aren't guaranteed to already hold a
    reference.  There is no such guarantee in nvme_find_get_ns, so switch to
    kref_get_unless_zero in this function.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21cd9fe750941100b7b4643ffd765215b6daff64
Author: Osama Khan <osama.khan@ericsson.com>
Date:   Sat Oct 21 10:42:21 2017 +0000

    platform/x86: hp_accel: Add quirk for HP ProBook 440 G4
    
    
    [ Upstream commit 163ca80013aafb6dc9cb295de3db7aeab9ab43f8 ]
    
    Added support for HP ProBook 440 G4 laptops by including the accelerometer
    orientation quirk for that device. Testing was performed based on the
    axis orientation guidelines here:
    https://www.kernel.org/doc/Documentation/misc-devices/lis3lv02d
    which states "If the left side is elevated, X increases (becomes positive)".
    
    When tested, on lifting the left edge, x values became increasingly negative
    thus indicating an inverted x-axis on the installed lis3lv02d chip.
    This was compensated by adding an entry for this device in hp_accel.c
    specifying the quirk as x_inverted. The patch was tested on a
    ProBook 440 G4 device and x-axis as well as y and z-axis values are now
    generated as per spec.
    
    Signed-off-by: Osama Khan <osama.khan@ericsson.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bd7a9bc48ac642cb3ded1e40fcfee44c8a0aa1a
Author: Felix Manlunas <felix.manlunas@cavium.com>
Date:   Thu Oct 26 16:46:36 2017 -0700

    liquidio: fix kernel panic in VF driver
    
    
    [ Upstream commit aa28667cfbe4ff6f14454dda210b1f2e485f99b5 ]
    
    Doing ifconfig down on VF driver in the middle of receiving line rate
    traffic causes a kernel panic:
    
        LiquidIO_VF 0000:02:00.3: should not come here should not get rx when poll mode = 0 for vf
        BUG: unable to handle kernel NULL pointer dereference at           (null)
        .
        .
        .
        Call Trace:
         <IRQ>
         ? tasklet_action+0x102/0x120
         __do_softirq+0x91/0x292
         irq_exit+0xb6/0xc0
         do_IRQ+0x4f/0xd0
         common_interrupt+0x93/0x93
         </IRQ>
        RIP: 0010:cpuidle_enter_state+0x142/0x2f0
        RSP: 0018:ffffffffa6403e20 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff59
        RAX: 0000000000000000 RBX: 0000000000000003 RCX: 000000000000001f
        RDX: 0000000000000000 RSI: 000000002ab7519f RDI: 0000000000000000
        RBP: ffffffffa6403e58 R08: 0000000000000084 R09: 0000000000000018
        R10: ffffffffa6403df0 R11: 00000000000003c7 R12: 0000000000000003
        R13: ffffd27ebd806800 R14: ffffffffa64d40d8 R15: 0000007be072823f
         cpuidle_enter+0x17/0x20
         call_cpuidle+0x23/0x40
         do_idle+0x18c/0x1f0
         cpu_startup_entry+0x64/0x70
         rest_init+0xa5/0xb0
         start_kernel+0x45e/0x46b
         x86_64_start_reservations+0x24/0x26
         x86_64_start_kernel+0x6f/0x72
         secondary_startup_64+0xa5/0xa5
        Code:  Bad RIP value.
        RIP:           (null) RSP: ffff9246ed003f28
        CR2: 0000000000000000
        ---[ end trace 92731e80f31b7d7d ]---
        Kernel panic - not syncing: Fatal exception in interrupt
        Kernel Offset: 0x24000000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
        ---[ end Kernel panic - not syncing: Fatal exception in interrupt
    
    Reason is:  in the function assigned to net_device_ops->ndo_stop, the steps
    for bringing down the interface are done in the wrong order.  The step that
    notifies the NIC firmware to stop forwarding packets to host is done too
    late.  Fix it by moving that step to the beginning.
    
    Signed-off-by: Felix Manlunas <felix.manlunas@cavium.com>
    Signed-off-by: Raghu Vatsavayi <raghu.vatsavayi@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06f430379273700696eef22159117789853a38e3
Author: Tushar Dave <tushar.n.dave@oracle.com>
Date:   Fri Oct 27 16:12:30 2017 -0700

    samples/bpf: adjust rlimit RLIMIT_MEMLOCK for xdp1
    
    
    [ Upstream commit 6dfca831c03ef654b1f7bff1b8d487d330e9f76b ]
    
    Default rlimit RLIMIT_MEMLOCK is 64KB, causes bpf map failure.
    e.g.
    [root@lab bpf]#./xdp1 -N $(</sys/class/net/eth2/ifindex)
    failed to create a map: 1 Operation not permitted
    
    Fix it.
    
    Signed-off-by: Tushar Dave <tushar.n.dave@oracle.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0f98c0dbced1c1b48fd4427075f8a5295b402fb
Author: Bartosz Chronowski <ext.bartosz.chronowski@tieto.com>
Date:   Thu Oct 26 10:22:43 2017 +0200

    Bluetooth: btusb: Add new NFA344A entry.
    
    
    [ Upstream commit 858ff38af77fc660092e82474ecc6ac135ed29fe ]
    
    This change allows proper low power mode entry in suspend.
    
    /sys/kernel/debug/usb/devices entry:
    T:  Bus=01 Lev=01 Prnt=01 Port=05 Cnt=03 Dev#=  3 Spd=12   MxCh= 0
    D:  Ver= 2.01 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=0489 ProdID=e09f Rev= 0.01
    C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    
    Signed-off-by: Bartosz Chronowski <ext.bartosz.chronowski@tieto.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a54d17dba2ba4a1eaab65fd282f4b4c9bf80418b
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Thu Oct 19 12:31:09 2017 +0200

    ARM64: dts: meson-gxbb-odroidc2: fix usb1 power supply
    
    
    [ Upstream commit e841ec956e539f4002f5e9fe9f9e904dcca12d5d ]
    
    Looking at the schematics, the USB Power Supply is shared between the
    two USB interfaces,
    If the usb0 fails to initialize, the second one won't have power.
    
    Fixes: 5a0803bd5ae2 ("ARM64: dts: meson-gxbb-odroidc2: Enable USB Nodes")
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 000a335b2d3828382bb4612ceee176a5cbd05752
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu Oct 26 17:12:33 2017 +0200

    mtd: spi-nor: stm32-quadspi: Fix uninitialized error return code
    
    
    [ Upstream commit 05521bd3d117704a1458eb4d0c3ae821858658f2 ]
    
    With gcc 4.1.2:
    
        drivers/mtd/spi-nor/stm32-quadspi.c: In function ‘stm32_qspi_tx_poll’:
        drivers/mtd/spi-nor/stm32-quadspi.c:230: warning: ‘ret’ may be used uninitialized in this function
    
    Indeed, if stm32_qspi_cmd.len is zero, ret will be uninitialized.
    This length is passed from outside the driver using the
    spi_nor.{read,write}{,_reg}() callbacks.
    
    Several functions in drivers/mtd/spi-nor/spi-nor.c (e.g. write_enable(),
    write_disable(), and erase_chip()) call spi_nor.write_reg() with a zero
    length.
    
    Fix this by returning an explicit zero on success.
    
    Fixes: 0d43d7ab277a048c ("mtd: spi-nor: add driver for STM32 quad spi flash controller")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Acked-by: Ludovic Barre <ludovic.barre@st.com>
    Signed-off-by: Cyrille Pitchen <cyrille.pitchen@wedev4u.fr>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bca4d7e1a19cfdde2a4a340339e46248a691b196
Author: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
Date:   Mon Oct 30 13:13:46 2017 +0300

    qtnfmac: modify full Tx queue error reporting
    
    
    [ Upstream commit e9931f984dd1e80adb3b5e095ef175fe383bc92d ]
    
    Under heavy load it is normal that h/w Tx queue is almost full all the time
    and reclaim should be done before transmitting next packet. Warning still
    should be reported as well as s/w Tx queues should be stopped in the
    case when reclaim failed.
    
    Signed-off-by: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c97df8e004de63e50384706d00adb590adcef054
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Sep 10 13:19:38 2017 +0200

    btrfs: tests: Fix a memory leak in error handling path in 'run_test()'
    
    
    [ Upstream commit 9ca2e97fa3c3216200afe35a3b111ec51cc796d2 ]
    
    If 'btrfs_alloc_path()' fails, we must free the resources already
    allocated, as done in the other error handling paths in this function.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Qu Wenruo <quwenruo.btrfs@gmx.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 864a5fb1c6066ade93a640a279bcd191952e4181
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Sep 11 16:15:28 2017 +0100

    btrfs: avoid null pointer dereference on fs_info when calling btrfs_crit
    
    
    [ Upstream commit 3993b112dac968612b0b213ed59cb30f50b0015b ]
    
    There are checks on fs_info in __btrfs_panic to avoid dereferencing a
    null fs_info, however, there is a call to btrfs_crit that may also
    dereference a null fs_info. Fix this by adding a check to see if fs_info
    is null and only print the s_id if fs_info is non-null.
    
    Detected by CoverityScan CID#401973 ("Dereference after null check")
    
    Fixes: efe120a067c8 ("Btrfs: convert printk to btrfs_ and fix BTRFS prefix")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da76a65a011490a0b0bd9f50d872f26e629d1eed
Author: Anand Jain <anand.jain@oracle.com>
Date:   Thu Sep 28 14:51:09 2017 +0800

    btrfs: undo writable superblocke when sprouting fails
    
    
    [ Upstream commit 0af2c4bf5a012a40a2f9230458087d7f068339d0 ]
    
    When new device is being added to seed FS, seed FS is marked writable,
    but when we fail to bring in the new device, we missed to undo the
    writable part. This patch fixes it.
    
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e87c49d62f4c5b9ae4a56b8f62865c4712c8d4d
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Thu Sep 28 10:53:17 2017 +0300

    btrfs: Explicitly handle btrfs_update_root failure
    
    
    [ Upstream commit 9417ebc8a676487c6ec8825f92fb28f7dbeb5f4b ]
    
    btrfs_udpate_root can fail and it aborts the transaction, the correct
    way to handle an aborted transaction is to explicitly end with
    btrfs_end_transaction.  Even now the code is correct since
    btrfs_commit_transaction would handle an aborted transaction but this is
    more of an implementation detail. So let's be explicit in handling
    failure in btrfs_update_root.
    
    Furthermore btrfs_commit_transaction can also fail and by ignoring it's
    return value we could have left the in-memory copy of the root item in
    an inconsistent state. So capture the error value which allows us to
    correctly revert the RO/RW flags in case of commit failure.
    
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bcbfac98d517eae6d12257aed923347be16930c
Author: Anand Jain <anand.jain@oracle.com>
Date:   Sat Oct 14 08:34:02 2017 +0800

    btrfs: fix false EIO for missing device
    
    
    [ Upstream commit 102ed2c5ff932439bbbe74c7bd63e6d5baa9f732 ]
    
    When one of the device is missing, bbio_error() takes care of setting
    the error status. And if its only IO that is pending in that stripe, it
    fails to check the status of the other IO at %bbio_error before setting
    the error %bi_status for the %orig_bio. Fix this by checking if
    %bbio->error has exceeded the %bbio->max_errors.
    
    Reproducer as below fdatasync error is seen intermittently.
    
     mount -o degraded /dev/sdc /btrfs
     dd status=none if=/dev/zero of=$(mktemp /btrfs/XXX) bs=4096 count=1 conv=fdatasync
    
     dd: fdatasync failed for ‘/btrfs/LSe’: Input/output error
    
     The reason for the intermittences of the problem is because
     the following conditions have to be met, which depends on timing:
     In btrfs_map_bio()
      - the RAID1 the missing device has to be at %dev_nr = 1
     In bbio_error()
      . before bbio_error() is called the bio of the not-missing
        device at %dev_nr = 0 must be completed so that the below
        condition is true
         if (atomic_dec_and_test(&bbio->stripes_pending)) {
    
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bd6bf08dd5b30dbe0696a7387dedc65a5f9a3e6
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Fri Oct 27 09:33:41 2017 -0700

    arm64: prevent regressions in compressed kernel image size when upgrading to binutils 2.27
    
    
    [ Upstream commit fd9dde6abcb9bfe6c6bee48834e157999f113971 ]
    
    Upon upgrading to binutils 2.27, we found that our lz4 and gzip
    compressed kernel images were significantly larger, resulting is 10ms
    boot time regressions.
    
    As noted by Rahul:
    "aarch64 binaries uses RELA relocations, where each relocation entry
    includes an addend value. This is similar to x86_64.  On x86_64, the
    addend values are also stored at the relocation offset for relative
    relocations. This is an optimization: in the case where code does not
    need to be relocated, the loader can simply skip processing relative
    relocations.  In binutils-2.25, both bfd and gold linkers did this for
    x86_64, but only the gold linker did this for aarch64.  The kernel build
    here is using the bfd linker, which stored zeroes at the relocation
    offsets for relative relocations.  Since a set of zeroes compresses
    better than a set of non-zero addend values, this behavior was resulting
    in much better lz4 compression.
    
    The bfd linker in binutils-2.27 is now storing the actual addend values
    at the relocation offsets. The behavior is now consistent with what it
    does for x86_64 and what gold linker does for both architectures.  The
    change happened in this upstream commit:
    https://sourceware.org/git/?p=binutils-gdb.git;a=commit;h=1f56df9d0d5ad89806c24e71f296576d82344613
    Since a bunch of zeroes got replaced by non-zero addend values, we see
    the side effect of lz4 compressed image being a bit bigger.
    
    To get the old behavior from the bfd linker, "--no-apply-dynamic-relocs"
    flag can be used:
    $ LDFLAGS="--no-apply-dynamic-relocs" make
    With this flag, the compressed image size is back to what it was with
    binutils-2.25.
    
    If the kernel is using ASLR, there aren't additional runtime costs to
    --no-apply-dynamic-relocs, as the relocations will need to be applied
    again anyway after the kernel is relocated to a random address.
    
    If the kernel is not using ASLR, then presumably the current default
    behavior of the linker is better. Since the static linker performed the
    dynamic relocs, and the kernel is not moved to a different address at
    load time, it can skip applying the relocations all over again."
    
    Some measurements:
    
    $ ld -v
    GNU ld (binutils-2.25-f3d35cf6) 2.25.51.20141117
                        ^
    $ ls -l vmlinux
    -rwxr-x--- 1 ndesaulniers eng 300652760 Oct 26 11:57 vmlinux
    $ ls -l Image.lz4-dtb
    -rw-r----- 1 ndesaulniers eng 16932627 Oct 26 11:57 Image.lz4-dtb
    
    $ ld -v
    GNU ld (binutils-2.27-53dd00a1) 2.27.0.20170315
                        ^
    pre patch:
    $ ls -l vmlinux
    -rwxr-x--- 1 ndesaulniers eng 300376208 Oct 26 11:43 vmlinux
    $ ls -l Image.lz4-dtb
    -rw-r----- 1 ndesaulniers eng 18159474 Oct 26 11:43 Image.lz4-dtb
    
    post patch:
    $ ls -l vmlinux
    -rwxr-x--- 1 ndesaulniers eng 300376208 Oct 26 12:06 vmlinux
    $ ls -l Image.lz4-dtb
    -rw-r----- 1 ndesaulniers eng 16932466 Oct 26 12:06 Image.lz4-dtb
    
    By Siqi's measurement w/ gzip:
    binutils 2.27 with this patch (with --no-apply-dynamic-relocs):
    Image 41535488
    Image.gz 13404067
    
    binutils 2.27 without this patch (without --no-apply-dynamic-relocs):
    Image 41535488
    Image.gz 14125516
    
    Any compression scheme should be able to get better results from the
    longer runs of zeros, not just GZIP and LZ4.
    
    10ms boot time savings isn't anything to get excited about, but users of
    arm64+compression+bfd-2.27 should not have to pay a penalty for no
    runtime improvement.
    
    Reported-by: Gopinath Elanchezhian <gelanchezhian@google.com>
    Reported-by: Sindhuri Pentyala <spentyala@google.com>
    Reported-by: Wei Wang <wvw@google.com>
    Suggested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Suggested-by: Rahul Chaudhry <rahulchaudhry@google.com>
    Suggested-by: Siqi Lin <siqilin@google.com>
    Suggested-by: Stephen Hines <srhines@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    [will: added comment to Makefile]
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e508e6026b198b9879e0d1850fdef8ef1d4d0805
Author: Ronald Tschalär <ronald@innovation.ch>
Date:   Wed Oct 25 22:15:19 2017 -0700

    Bluetooth: hci_ldisc: Fix another race when closing the tty.
    
    
    [ Upstream commit 0338b1b393ec7910898e8f7b25b3bf31a7282e16 ]
    
    The following race condition still existed:
    
             P1                                P2
      cancel_work_sync()
                                         hci_uart_tx_wakeup()
                                         hci_uart_write_work()
                                         hci_uart_dequeue()
      clear_bit(HCI_UART_PROTO_READY)
      hci_unregister_dev(hdev)
      hci_free_dev(hdev)
      hu->proto->close(hu)
      kfree(hu)
                                         access to hdev and hu
    
    Cancelling the work after clearing the HCI_UART_PROTO_READY bit avoids
    this as any hci_uart_tx_wakeup() issued after the flag is cleared will
    detect that and not schedule further work.
    
    Signed-off-by: Ronald Tschalär <ronald@innovation.ch>
    Reviewed-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d1beb462e18b55fa5d0990d0f60fbf4edfda61b
Author: Patel Jay P <jay.p.patel@intel.com>
Date:   Mon Oct 23 06:05:53 2017 -0700

    Ib/hfi1: Return actual operational VLs in port info query
    
    
    [ Upstream commit 00f9203119dd2774564407c7a67b17d81916298b ]
    
    __subn_get_opa_portinfo stores value returned by hfi1_get_ib_cfg() as
    operational vls. hfi1_get_ib_cfg() returns vls_operational field in
    hfi1_pportdata. The problem with this is that the value is always equal
    to vls_supported field in hfi1_pportdata.
    
    The logic to calculate operational_vls is to set value passed by FM
    (in  __subn_set_opa_portinfo routine). If no value is passed then
    default value is stored in operational_vls.
    
    Field actual_vls_operational is calculated on the basis of buffer
    control table. Hence, modifying hfi1_get_ib_cfg() to return
    actual_operational_vls when used with HFI1_IB_CFG_OP_VLS parameter
    
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Patel Jay P <jay.p.patel@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5860344c243308c0d5e9751553d52d957b29e5b
Author: tang.junhui <tang.junhui@zte.com.cn>
Date:   Mon Oct 30 14:46:34 2017 -0700

    bcache: fix wrong cache_misses statistics
    
    
    [ Upstream commit c157313791a999646901b3e3c6888514ebc36d62 ]
    
    Currently, Cache missed IOs are identified by s->cache_miss, but actually,
    there are many situations that missed IOs are not assigned a value for
    s->cache_miss in cached_dev_cache_miss(), for example, a bypassed IO
    (s->iop.bypass = 1), or the cache_bio allocate failed. In these situations,
    it will go to out_put or out_submit, and s->cache_miss is null, which leads
    bch_mark_cache_accounting() to treat this IO as a hit IO.
    
    [ML: applied by 3-way merge]
    
    Signed-off-by: tang.junhui <tang.junhui@zte.com.cn>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9973b3d35267028edf8b9a4df6310161bd0ef37
Author: Liang Chen <liangchen.linux@gmail.com>
Date:   Mon Oct 30 14:46:35 2017 -0700

    bcache: explicitly destroy mutex while exiting
    
    
    [ Upstream commit 330a4db89d39a6b43f36da16824eaa7a7509d34d ]
    
    mutex_destroy does nothing most of time, but it's better to call
    it to make the code future proof and it also has some meaning
    for like mutex debug.
    
    As Coly pointed out in a previous review, bcache_exit() may not be
    able to handle all the references properly if userspace registers
    cache and backing devices right before bch_debug_init runs and
    bch_debug_init failes later. So not exposing userspace interface
    until everything is ready to avoid that issue.
    
    Signed-off-by: Liang Chen <liangchen.linux@gmail.com>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Coly Li <colyli@suse.de>
    Reviewed-by: Eric Wheeler <bcache@linux.ewheeler.net>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81309f8b9b69913233733ed61c4c87dab5436902
Author: Arun Kumar Neelakantam <aneela@codeaurora.org>
Date:   Mon Oct 30 11:11:24 2017 +0530

    rpmsg: glink: Initialize the "intent_req_comp" completion variable
    
    
    [ Upstream commit 2394facb17bcace4b3c19b50202177a5d8903b64 ]
    
    The "intent_req_comp" variable is used without initialization which
    results in NULL pointer dereference in qcom_glink_request_intent().
    
    we need to initialize the completion variable before using it.
    
    Fixes: 27b9c5b66b23 ("rpmsg: glink: Request for intents when unavailable")
    Signed-off-by: Arun Kumar Neelakantam <aneela@codeaurora.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7291d99ebc67be887e5c915489706e6fe720992a
Author: Adam Sampson <ats@offog.org>
Date:   Tue Oct 24 16:14:46 2017 -0400

    media: usbtv: fix brightness and contrast controls
    
    
    [ Upstream commit b3168c87c0492661badc3e908f977d79e7738a41 ]
    
    Because the brightness and contrast controls share a register,
    usbtv_s_ctrl needs to read the existing values for both controls before
    inserting the new value. However, the code accidentally wrote to the
    registers (from an uninitialised stack array), rather than reading them.
    
    The user-visible effect of this was that adjusting the brightness would
    also set the contrast to a random value, and vice versa -- so it wasn't
    possible to correctly adjust the brightness of usbtv's video output.
    
    Tested with an "EasyDAY" UTV007 device.
    
    Fixes: c53a846c48f2 ("usbtv: add video controls")
    
    Signed-off-by: Adam Sampson <ats@offog.org>
    Reviewed-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1678bb970113e62469ca510bff20eb95bbdeaec2
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Wed Sep 20 08:30:04 2017 -0500

    GFS2: Take inode off order_write list when setting jdata flag
    
    
    [ Upstream commit cc555b09d8c3817aeebda43a14ab67049a5653f7 ]
    
    This patch fixes a deadlock caused when the jdata flag is set for
    inodes that are already on the ordered write list. Since it is
    on the ordered write list, log_flush calls gfs2_ordered_write which
    calls filemap_fdatawrite. But since the inode had the jdata flag
    set, that calls gfs2_jdata_writepages, which tries to start a new
    transaction. A new transaction cannot be started because it tries
    to acquire the log_flush rwsem which is already locked by the log
    flush operation.
    
    The bottom line is: We cannot switch an inode from ordered to jdata
    until we eliminate any ordered data pages (via log flush) or any
    log_flush operation afterward will create the circular dependency
    above. So we need to flush the log before setting the diskflags to
    switch the file mode, then we need to remove the inode from the
    ordered writes list.
    
    Before this patch, the log flush was done for jdata->ordered, but
    that's wrong. If we're going from jdata to ordered, we don't need
    to call gfs2_log_flush because the call to filemap_fdatawrite will
    do it for us:
    
       filemap_fdatawrite() -> __filemap_fdatawrite_range()
          __filemap_fdatawrite_range() -> do_writepages()
             do_writepages() -> gfs2_jdata_writepages()
                gfs2_jdata_writepages() -> gfs2_log_flush()
    
    This patch modifies function do_gfs2_set_flags so that if a file
    has its jdata flag set, and it's already on the ordered write list,
    the log will be flushed and it will be removed from the list
    before setting the flag.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Acked-by: Abhijith Das <adas@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa902be00448f3bc69fd54b1a0a8f5b4b6a47c5b
Author: Douglas Gilbert <dgilbert@interlog.com>
Date:   Sun Oct 29 10:47:19 2017 -0400

    scsi: scsi_debug: write_same: fix error report
    
    
    [ Upstream commit e33d7c56450b0a5c7290cbf9e1581fab5174f552 ]
    
    The scsi_debug driver incorrectly suggests there is an error with the
    SCSI WRITE SAME command when the number_of_logical_blocks is greater
    than 1. It will also suggest there is an error when NDOB
    (no data-out buffer) is set and the number_of_logical_blocks is
    greater than 0. Both are valid, fix.
    
    Signed-off-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95e8d653ea987adfe108173bd5969201a363bf19
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat Sep 30 11:16:51 2017 +0300

    misc: pci_endpoint_test: Avoid triggering a BUG()
    
    
    [ Upstream commit 846df244ebefbc9f7b91e9ae7a5e5a2e69fb4772 ]
    
    If you call ida_simple_remove(&pci_endpoint_test_ida, id) with a
    negative "id" then it triggers an immediate BUG_ON().  Let's not allow
    that.
    
    Fixes: 2c156ac71c6b ("misc: Add host side PCI driver for PCI test function device")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85d63b76bdd1b570b9c16e60f83eb3185e22b30d
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Wed Oct 11 14:14:36 2017 +0530

    misc: pci_endpoint_test: Fix failure path return values in probe
    
    
    [ Upstream commit 80068c93688f6143100859c4856f895801c1a1d9 ]
    
    Return value of pci_endpoint_test_probe is not set properly in a couple of
    failure cases. Fix it here.
    
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5642562d0b4f616cac2b4d7f81de0a58f2247b59
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu Oct 19 19:05:58 2017 +0200

    thermal/drivers/step_wise: Fix temperature regulation misbehavior
    
    
    [ Upstream commit 07209fcf33542c1ff1e29df2dbdf8f29cdaacb10 ]
    
    There is a particular situation when the cooling device is cpufreq and the heat
    dissipation is not efficient enough where the temperature increases little by
    little until reaching the critical threshold and leading to a SoC reset.
    
    The behavior is reproducible on a hikey6220 with bad heat dissipation (eg.
    stacked with other boards).
    
    Running a simple C program doing while(1); for each CPU of the SoC makes the
    temperature to reach the passive regulation trip point and ends up to the
    maximum allowed temperature followed by a reset.
    
    This issue has been also reported by running the libhugetlbfs test suite.
    
    What is observed is a ping pong between two cpu frequencies, 1.2GHz and 900MHz
    while the temperature continues to grow.
    
    It appears the step wise governor calls get_target_state() the first time with
    the throttle set to true and the trend to 'raising'. The code selects logically
    the next state, so the cpu frequency decreases from 1.2GHz to 900MHz, so far so
    good. The temperature decreases immediately but still stays greater than the
    trip point, then get_target_state() is called again, this time with the
    throttle set to true *and* the trend to 'dropping'. From there the algorithm
    assumes we have to step down the state and the cpu frequency jumps back to
    1.2GHz. But the temperature is still higher than the trip point, so
    get_target_state() is called with throttle=1 and trend='raising' again, we jump
    to 900MHz, then get_target_state() is called with throttle=1 and
    trend='dropping', we jump to 1.2GHz, etc ... but the temperature does not
    stabilizes and continues to increase.
    
    [  237.922654] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=1,throttle=1
    [  237.922678] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=1,throttle=1
    [  237.922690] thermal cooling_device0: cur_state=0
    [  237.922701] thermal cooling_device0: old_target=0, target=1
    [  238.026656] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=2,throttle=1
    [  238.026680] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=2,throttle=1
    [  238.026694] thermal cooling_device0: cur_state=1
    [  238.026707] thermal cooling_device0: old_target=1, target=0
    [  238.134647] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=1,throttle=1
    [  238.134667] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=1,throttle=1
    [  238.134679] thermal cooling_device0: cur_state=0
    [  238.134690] thermal cooling_device0: old_target=0, target=1
    
    In this situation the temperature continues to increase while the trend is
    oscillating between 'dropping' and 'raising'. We need to keep the current state
    untouched if the throttle is set, so the temperature can decrease or a higher
    state could be selected, thus preventing this oscillation.
    
    Keeping the next_target untouched when 'throttle' is true at 'dropping' time
    fixes the issue.
    
    The following traces show the governor does not change the next state if
    trend==2 (dropping) and throttle==1.
    
    [ 2306.127987] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=1,throttle=1
    [ 2306.128009] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=1,throttle=1
    [ 2306.128021] thermal cooling_device0: cur_state=0
    [ 2306.128031] thermal cooling_device0: old_target=0, target=1
    [ 2306.231991] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=2,throttle=1
    [ 2306.232016] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=2,throttle=1
    [ 2306.232030] thermal cooling_device0: cur_state=1
    [ 2306.232042] thermal cooling_device0: old_target=1, target=1
    [ 2306.335982] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=0,throttle=1
    [ 2306.336006] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=0,throttle=1
    [ 2306.336021] thermal cooling_device0: cur_state=1
    [ 2306.336034] thermal cooling_device0: old_target=1, target=1
    [ 2306.439984] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=2,throttle=1
    [ 2306.440008] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=2,throttle=0
    [ 2306.440022] thermal cooling_device0: cur_state=1
    [ 2306.440034] thermal cooling_device0: old_target=1, target=0
    
    [ ... ]
    
    After a while, if the temperature continues to increase, the next state becomes
    2 which is 720MHz on the hikey. That results in the temperature stabilizing
    around the trip point.
    
    [ 2455.831982] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=1,throttle=1
    [ 2455.832006] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=1,throttle=0
    [ 2455.832019] thermal cooling_device0: cur_state=1
    [ 2455.832032] thermal cooling_device0: old_target=1, target=1
    [ 2455.935985] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=0,throttle=1
    [ 2455.936013] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=0,throttle=0
    [ 2455.936027] thermal cooling_device0: cur_state=1
    [ 2455.936040] thermal cooling_device0: old_target=1, target=1
    [ 2456.043984] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=0,throttle=1
    [ 2456.044009] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=0,throttle=0
    [ 2456.044023] thermal cooling_device0: cur_state=1
    [ 2456.044036] thermal cooling_device0: old_target=1, target=1
    [ 2456.148001] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=1,throttle=1
    [ 2456.148028] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=1,throttle=1
    [ 2456.148042] thermal cooling_device0: cur_state=1
    [ 2456.148055] thermal cooling_device0: old_target=1, target=2
    [ 2456.252009] thermal thermal_zone0: Trip0[type=1,temp=65000]:trend=2,throttle=1
    [ 2456.252041] thermal thermal_zone0: Trip1[type=1,temp=75000]:trend=2,throttle=0
    [ 2456.252058] thermal cooling_device0: cur_state=2
    [ 2456.252075] thermal cooling_device0: old_target=2, target=1
    
    IOW, this change is needed to keep the state for a cooling device if the
    temperature trend is oscillating while the temperature increases slightly.
    
    Without this change, the situation above leads to a catastrophic crash by a
    hardware reset on hikey. This issue has been reported to happen on an OMAP
    dra7xx also.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Cc: Keerthy <j-keerthy@ti.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Leo Yan <leo.yan@linaro.org>
    Tested-by: Keerthy <j-keerthy@ti.com>
    Reviewed-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 556787a174e6f77c7aec167af846f1297e3860f8
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Nov 1 07:16:58 2017 +0000

    ASoC: rsnd: rsnd_ssi_run_mods() needs to care ssi_parent_mod
    
    
    [ Upstream commit 21781e87881f9c420871b1d1f3f29d4cd7bffb10 ]
    
    SSI parent mod might be NULL. ssi_parent_mod() needs to care
    about it. Otherwise, it uses negative shift.
    This patch fixes it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7ee900a4f2c76902ce368e93d34b7580cc7ff04
Author: Gao Feng <gfree.wind@vip.163.com>
Date:   Tue Oct 31 18:25:37 2017 +0800

    ppp: Destroy the mutex when cleanup
    
    
    [ Upstream commit f02b2320b27c16b644691267ee3b5c110846f49e ]
    
    The mutex_destroy only makes sense when enable DEBUG_MUTEX. For the
    good readbility, it's better to invoke it in exit func when the init
    func invokes mutex_init.
    
    Signed-off-by: Gao Feng <gfree.wind@vip.163.com>
    Acked-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d213c4c0a9b0d8fb0958d4a461868525ee6d864
Author: Michał Mirosław <mirq-linux@rere.qmqm.pl>
Date:   Tue Sep 19 04:48:10 2017 +0200

    clk: tegra: Fix cclk_lp divisor register
    
    
    [ Upstream commit 54eff2264d3e9fd7e3987de1d7eba1d3581c631e ]
    
    According to comments in code and common sense, cclk_lp uses its
    own divisor, not cclk_g's.
    
    Fixes: b08e8c0ecc42 ("clk: tegra: add clock support for Tegra30")
    Signed-off-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>
    Acked-By: Peter De Schrijver <pdeschrijver@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a23c8c70b5ece8d18c49927a0bace4471d8563cb
Author: Nicolin Chen <nicoleotsuka@gmail.com>
Date:   Fri Sep 15 12:10:13 2017 -0700

    clk: tegra: Use readl_relaxed_poll_timeout_atomic() in tegra210_clock_init()
    
    
    [ Upstream commit 22ef01a203d27fee8b7694020b7e722db7efd2a7 ]
    
    Below is the call trace of tegra210_init_pllu() function:
      start_kernel()
      -> time_init()
      --> of_clk_init()
      ---> tegra210_clock_init()
      ----> tegra210_pll_init()
      -----> tegra210_init_pllu()
    
    Because the preemption is disabled in the start_kernel before calling
    time_init, tegra210_init_pllu is actually in an atomic context while
    it includes a readl_relaxed_poll_timeout that might sleep.
    
    So this patch just changes this readl_relaxed_poll_timeout() to its
    atomic version.
    
    Signed-off-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Acked-By: Peter De Schrijver <pdeschrijver@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85dcb3c850a79751b2239f434a4b6b36a75a865e
Author: Ming Lei <ming.lei@redhat.com>
Date:   Sat Oct 14 17:22:25 2017 +0800

    blk-mq-sched: dispatch from scheduler IFF progress is made in ->dispatch
    
    
    [ Upstream commit 5e3d02bbafad38975099b5848f5ebadedcf7bb7e ]
    
    When the hw queue is busy, we shouldn't take requests from the scheduler
    queue any more, otherwise it is difficult to do IO merge.
    
    This patch fixes the awful IO performance on some SCSI devices(lpfc,
    qla2xxx, ...) when mq-deadline/kyber is used by not taking requests if
    hw queue is busy.
    
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6facfe25e62e702304591bd114bcf7d6067c86e4
Author: Leo Yan <leo.yan@linaro.org>
Date:   Fri Sep 1 08:47:14 2017 +0800

    clk: hi6220: mark clock cs_atb_syspll as critical
    
    
    [ Upstream commit d2a3671ebe6479483a12f94fcca63c058d95ad64 ]
    
    Clock cs_atb_syspll is pll used for coresight trace bus; when clock
    cs_atb_syspll is disabled and operates its child clock node cs_atb
    results in system hang. So mark clock cs_atb_syspll as critical to
    keep it enabled.
    
    Cc: Guodong Xu <guodong.xu@linaro.org>
    Cc: Zhangfei Gao <zhangfei.gao@linaro.org>
    Cc: Haojian Zhuang <haojian.zhuang@linaro.org>
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Michael Turquette <mturquette@baylibre.com>
    Link: lkml.kernel.org/r/1504226835-2115-2-git-send-email-leo.yan@linaro.org
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9e497c9424896581b18f0807652364180401c7b
Author: Mauro Carvalho Chehab <mchehab@s-opensource.com>
Date:   Wed Nov 1 08:09:59 2017 -0400

    media: camss-vfe: always initialize reg at vfe_set_xbar_cfg()
    
    
    [ Upstream commit 9917fbcfa20ab987d6381fd0365665e5c1402d75 ]
    
    if output->wm_num is bigger than 2, the value for reg is
    not initialized, as warned by smatch:
            drivers/media/platform/qcom/camss-8x16/camss-vfe.c:633 vfe_set_xbar_cfg() error: uninitialized symbol 'reg'.
            drivers/media/platform/qcom/camss-8x16/camss-vfe.c:637 vfe_set_xbar_cfg() error: uninitialized symbol 'reg'.
    
    That shouldn't happen in practice, so add a logic that will
    break the loop if i > 1, fixing the warnings.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Acked-by: Todor Tomov <todor.tomov@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de0bbe07a49ce9bf5bc4fc1846bd453151e7a334
Author: Sébastien Szymanski <sebastien.szymanski@armadeus.com>
Date:   Tue Aug 1 12:40:07 2017 +0200

    clk: imx6: refine hdmi_isfr's parent to make HDMI work on i.MX6 SoCs w/o VPU
    
    
    [ Upstream commit c68ee58d9ee7b856ac722f18f4f26579c8fbd2b4 ]
    
    On i.MX6 SoCs without VPU (in my case MCIMX6D4AVT10AC), the hdmi driver
    fails to probe:
    
    [    2.540030] dwhdmi-imx 120000.hdmi: Unsupported HDMI controller
    (0000:00:00)
    [    2.548199] imx-drm display-subsystem: failed to bind 120000.hdmi
    (ops dw_hdmi_imx_ops): -19
    [    2.557403] imx-drm display-subsystem: master bind failed: -19
    
    That's because hdmi_isfr's parent, video_27m, is not correctly ungated.
    As explained in commit 5ccc248cc537 ("ARM: imx6q: clk: Add support for
    mipi_core_cfg clock as a shared clock gate"), video_27m is gated by
    CCM_CCGR3[CG8].
    
    On i.MX6 SoCs with VPU, the hdmi is working thanks to the
    CCM_CMEOR[mod_en_ov_vpu] bit which makes the video_27m ungated whatever
    is in CCM_CCGR3[CG8]. The issue can be reproduced by setting
    CCMEOR[mod_en_ov_vpu] to 0.
    
    Make the HDMI work in every case by setting hdmi_isfr's parent to
    mipi_core_cfg.
    
    Signed-off-by: Sébastien Szymanski <sebastien.szymanski@armadeus.com>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27731e18a571b07c4042d83679184c78957bac1a
Author: Adriana Reus <adriana.reus@nxp.com>
Date:   Mon Oct 2 13:32:10 2017 +0300

    clk: imx: imx7d: Fix parent clock for OCRAM_CLK
    
    
    [ Upstream commit edc5a8e754aba9c6eaeddd18cb1e72462f99b16c ]
    
    The parent of OCRAM_CLK should be axi_main_root_clk
    and not axi_post_div.
    
    before:
    
        axi_src                     1       1       332307692       0 0
          axi_cg                    1       1       332307692       0 0
            axi_pre_div             1       1       332307692       0 0
              axi_post_div          1       1       332307692       0 0
                ocram_clk           0       0       332307692       0 0
                main_axi_root_clk   1       1       332307692       0 0
    
    after:
    
        axi_src                     1       1       332307692       0 0
          axi_cg                    1       1       332307692       0 0
            axi_pre_div             1       1       332307692       0 0
              axi_post_div          1       1       332307692       0 0
                main_axi_root_clk   1       1       332307692       0 0
                  ocram_clk         0       0       332307692       0 0
    
    Reference Doc: i.MX 7D Reference Manual - Chap 5, p 516
    (https://www.nxp.com/docs/en/reference-manual/IMX7DRM.pdf)
    
    Fixes: 8f6d8094b215 ("ARM: imx: add imx7d clk tree support")
    Signed-off-by: Adriana Reus <adriana.reus@nxp.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c38ce8767c6203bf3d479a570ece2a38502ac6b
Author: Chen Zhong <chen.zhong@mediatek.com>
Date:   Thu Oct 5 11:50:23 2017 +0800

    clk: mediatek: add the option for determining PLL source clock
    
    
    [ Upstream commit c955bf3998efa3355790a4d8c82874582f1bc727 ]
    
    Since the previous setup always sets the PLL using crystal 26MHz, this
    doesn't always happen in every MediaTek platform. So the patch added
    flexibility for assigning extra member for determining the PLL source
    clock.
    
    Signed-off-by: Chen Zhong <chen.zhong@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c5fed838b473e565e44ada69ff51e07317e2c8a
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Nov 2 10:30:11 2017 +0100

    staging: rtl8188eu: Revert part of "staging: rtl8188eu: fix comments with lines over 80 characters"
    
    
    [ Upstream commit 4004a9870bbefdb6644c3d2033f5315920a3b669 ]
    
    Commit 74e1e498e84e ("staging: rtl8188eu: fix comments with lines over 80
    characters") not only changed comments but also changed an if check:
    
    -if (pmlmepriv->cur_network.join_res != true) {
    +if (!(pmlmepriv->cur_network.join_res)) {
    
    This is not equivalent as join_res is an int and can have values such
    as -2 and -3.
    
    Note for the next time, please only make one type of changes in a single
    clean-up commit.
    
    Fixes: 74e1e498e84e ("staging: rtl8188eu: fix comments with lines over 80 ...")
    Cc: Juliana Rodrigues <juliana.orod@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7018a57cf7018dca6469d73b485d4a35cea97649
Author: qumingguang <qumingguang@huawei.com>
Date:   Thu Nov 2 20:45:22 2017 +0800

    net: hns3: Fix a misuse to devm_free_irq
    
    
    [ Upstream commit ae064e6123f89f90af7e4ea190cc0c612643ca93 ]
    
    we should use free_irq to free the nic irq during the unloading time.
    because we use request_irq to apply it when nic up. It will crash if
    up net device after reset the port. This patch fixes the issue.
    
    Signed-off-by: qumingguang <qumingguang@huawei.com>
    Signed-off-by: Lipeng <lipeng321@huawei.com>
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62785073959347a14eecb395e810a97e745996f2
Author: Fuyun Liang <liangfuyun1@huawei.com>
Date:   Fri Nov 3 12:18:26 2017 +0800

    net: hns3: fix for getting advertised_caps in hns3_get_link_ksettings
    
    
    [ Upstream commit 2b39cabb2a283cea0c3d96d9370575371726164f ]
    
    This patch fixes a bug for ethtool's get_link_ksettings().
    The advertising for autoneg is always added to advertised_caps
    whether autoneg is enable or disable. This patch fixes it.
    
    Fixes: 496d03e (net: hns3: Add Ethtool support to HNS3 driver)
    Signed-off-by: Fuyun Liang <liangfuyun1@huawei.com>
    Signed-off-by: Lipeng <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f58a90e027d8ff3f24e20429500f0923663afbd4
Author: Jan Kara <jack@suse.cz>
Date:   Fri Nov 3 12:21:21 2017 +0100

    mm: Handle 0 flags in _calc_vm_trans() macro
    
    
    [ Upstream commit 592e254502041f953e84d091eae2c68cba04c10b ]
    
    _calc_vm_trans() does not handle the situation when some of the passed
    flags are 0 (which can happen if these VM flags do not make sense for
    the architecture). Improve the _calc_vm_trans() macro to return 0 in
    such situation. Since all passed flags are constant, this does not add
    any runtime overhead.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6479a108b35857674ca2a74e049e3089d12ee444
Author: Robert Baronescu <robert.baronescu@nxp.com>
Date:   Tue Oct 10 13:22:00 2017 +0300

    crypto: tcrypt - fix buffer lengths in test_aead_speed()
    
    
    [ Upstream commit 7aacbfcb331ceff3ac43096d563a1f93ed46e35e ]
    
    Fix the way the length of the buffers used for
    encryption / decryption are computed.
    For e.g. in case of encryption, input buffer does not contain
    an authentication tag.
    
    Signed-off-by: Robert Baronescu <robert.baronescu@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ade07fa32f5ab083d558199e906d612b5d535553
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Fri Nov 3 11:45:18 2017 +0000

    arm-ccn: perf: Prevent module unload while PMU is in use
    
    
    [ Upstream commit c7f5828bf77dcbd61d51f4736c1d5aa35663fbb4 ]
    
    When the PMU driver is built as a module, the perf expects the
    pmu->module to be valid, so that the driver is prevented from
    being unloaded while it is in use. Fix the CCN pmu driver to
    fill in this field.
    
    Fixes: a33b0daab73a0 ("bus: ARM CCN PMU driver")
    Cc: Pawel Moll <pawel.moll@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79f41e0f8ae0e3298bfcfd8c085b5242add83e9b
Author: Eryu Guan <eguan@redhat.com>
Date:   Wed Nov 1 21:43:50 2017 -0700

    xfs: truncate pagecache before writeback in xfs_setattr_size()
    
    
    [ Upstream commit 350976ae21873b0d36584ea005076356431b8f79 ]
    
    On truncate down, if new size is not block size aligned, we zero the
    rest of block to avoid exposing stale data to user, and
    iomap_truncate_page() skips zeroing if the range is already in
    unwritten state or a hole. Then we writeback from on-disk i_size to
    the new size if this range hasn't been written to disk yet, and
    truncate page cache beyond new EOF and set in-core i_size.
    
    The problem is that we could write data between di_size and newsize
    before removing the page cache beyond newsize, as the extents may
    still be in unwritten state right after a buffer write. As such, the
    page of data that newsize lies in has not been zeroed by page cache
    invalidation before it is written, and xfs_do_writepage() hasn't
    triggered it's "zero data beyond EOF" case because we haven't
    updated in-core i_size yet. Then a subsequent mmap read could see
    non-zeros past EOF.
    
    I occasionally see this in fsx runs in fstests generic/112, a
    simplified fsx operation sequence is like (assuming 4k block size
    xfs):
    
      fallocate 0x0 0x1000 0x0 keep_size
      write 0x0 0x1000 0x0
      truncate 0x0 0x800 0x1000
      punch_hole 0x0 0x800 0x800
      mapread 0x0 0x800 0x800
    
    where fallocate allocates unwritten extent but doesn't update
    i_size, buffer write populates the page cache and extent is still
    unwritten, truncate skips zeroing page past new EOF and writes the
    page to disk, punch_hole invalidates the page cache, at last mapread
    reads the block back and sees non-zero beyond EOF.
    
    Fix it by moving truncate_setsize() to before writeback so the page
    cache invalidation zeros the partial page at the new EOF. This also
    triggers "zero data beyond EOF" in xfs_do_writepage() at writeback
    time, because newsize has been set and page straddles the newsize.
    
    Also fixed the wrong 'end' param of filemap_write_and_wait_range()
    call while we're at it, the 'end' is inclusive and should be
    'newsize - 1'.
    
    Suggested-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Eryu Guan <eguan@redhat.com>
    Acked-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07a93b48a0f73e0cb74355a7dd80c6ad55bed674
Author: Gary R Hook <gary.hook@amd.com>
Date:   Fri Nov 3 10:50:34 2017 -0600

    iommu/amd: Limit the IOVA page range to the specified addresses
    
    
    [ Upstream commit b92b4fb5c14257c0e7eae291ecc1f7b1962e1699 ]
    
    The extent of pages specified when applying a reserved region should
    include up to the last page of the range, but not the page following
    the range.
    
    Signed-off-by: Gary R Hook <gary.hook@amd.com>
    Fixes: 8d54d6c8b8f3 ('iommu/amd: Implement apply_dm_region call-back')
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddf2588a05c820b305bc6db2fe6e498a3bc6fde9
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Fri Nov 3 11:24:44 2017 -0600

    badblocks: fix wrong return value in badblocks_set if badblocks are disabled
    
    
    [ Upstream commit 39b4954c0a1556f8f7f1fdcf59a227117fcd8a0b ]
    
    MD's rdev_set_badblocks() expects that badblocks_set() returns 1 if
    badblocks are disabled, otherwise, rdev_set_badblocks() will record
    superblock changes and return success in that case and md will fail to
    report an IO error which it should.
    
    This bug has existed since badblocks were introduced in commit
    9e0e252a048b ("badblocks: Add core badblock management code").
    
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Acked-by: Guoqing Jiang <gqjiang@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6a341e87c656f1e2e9959cfdd2d02561724558f
Author: Jiang Yi <jiangyilism@gmail.com>
Date:   Fri Aug 11 11:29:44 2017 +0800

    target/file: Do not return error for UNMAP if length is zero
    
    
    [ Upstream commit 594e25e73440863981032d76c9b1e33409ceff6e ]
    
    The function fd_execute_unmap() in target_core_file.c calles
    
    ret = file->f_op->fallocate(file, mode, pos, len);
    
    Some filesystems implement fallocate() to return error if
    length is zero (e.g. btrfs) but according to SCSI Block
    Commands spec UNMAP should return success for zero length.
    
    Signed-off-by: Jiang Yi <jiangyilism@gmail.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23d3f106f88ca21fd2911ae2f3a4f8aa7b56fddc
Author: tangwenji <tang.wenji@zte.com.cn>
Date:   Thu Aug 24 19:59:37 2017 +0800

    target:fix condition return in core_pr_dump_initiator_port()
    
    
    [ Upstream commit 24528f089d0a444070aa4f715ace537e8d6bf168 ]
    
    When is pr_reg->isid_present_at_reg is false,this function should return.
    
    This fixes a regression originally introduced by:
    
      commit d2843c173ee53cf4c12e7dfedc069a5bc76f0ac5
      Author: Andy Grover <agrover@redhat.com>
      Date:   Thu May 16 10:40:55 2013 -0700
    
          target: Alter core_pr_dump_initiator_port for ease of use
    
    Signed-off-by: tangwenji <tang.wenji@zte.com.cn>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e389507ad355226019147985c29a5b4282aa1e4d
Author: tangwenji <tang.wenji@zte.com.cn>
Date:   Fri Sep 15 16:03:13 2017 +0800

    iscsi-target: fix memory leak in lio_target_tiqn_addtpg()
    
    
    [ Upstream commit 12d5a43b2dffb6cd28062b4e19024f7982393288 ]
    
    tpg must free when call core_tpg_register() return fail
    
    Signed-off-by: tangwenji <tang.wenji@zte.com.cn>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68d702c6689d83000060118f940e0adce88e42aa
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Tue Oct 31 11:03:17 2017 -0700

    target/iscsi: Fix a race condition in iscsit_add_reject_from_cmd()
    
    
    [ Upstream commit cfe2b621bb18d86e93271febf8c6e37622da2d14 ]
    
    Avoid that cmd->se_cmd.se_tfo is read after a command has already been
    freed.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Mike Christie <mchristi@redhat.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96d275b841efc6decf61afafc1703f0e9b92253d
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Tue Oct 31 11:03:18 2017 -0700

    target/iscsi: Detect conn_cmd_list corruption early
    
    
    [ Upstream commit 6eaf69e4ec075f5af236c0c89f75639a195db904 ]
    
    Certain behavior of the initiator can cause the target driver to
    send both a reject and a SCSI response. If that happens two
    target_put_sess_cmd() calls will occur without the command having
    been removed from conn_cmd_list. In other words, conn_cmd_list
    will get corrupted once the freed memory is reused. Although the
    Linux kernel can detect list corruption if list debugging is
    enabled, in this case the context in which list corruption is
    detected is not related to the context that caused list corruption.
    Hence add WARN_ON() statements that report the context that is
    causing list corruption.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Mike Christie <mchristi@redhat.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c90db58f5bb6d5ba203815e28cb5e7eb20b86b27
Author: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
Date:   Sun Oct 29 02:49:54 2017 -0700

    platform/x86: intel_punit_ipc: Fix resource ioremap warning
    
    
    [ Upstream commit 6cc8cbbc8868033f279b63e98b26b75eaa0006ab ]
    
    For PUNIT device, ISPDRIVER_IPC and GTDDRIVER_IPC resources are not
    mandatory. So when PMC IPC driver creates a PUNIT device, if these
    resources are not available then it creates dummy resource entries for
    these missing resources. But during PUNIT device probe, doing ioremap on
    these dummy resources generates following warning messages.
    
    intel_punit_ipc: can't request region for resource [mem 0x00000000]
    intel_punit_ipc: can't request region for resource [mem 0x00000000]
    intel_punit_ipc: can't request region for resource [mem 0x00000000]
    intel_punit_ipc: can't request region for resource [mem 0x00000000]
    
    This patch fixes this issue by adding extra check for resource size
    before performing ioremap operation.
    
    Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8b31d88a698909f0bcc4142e4637e2baee5c320
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Thu Sep 28 20:19:20 2017 -0400

    powerpc/pseries/vio: Dispose of virq mapping on vdevice unregister
    
    
    [ Upstream commit b8f89fea599d91e674497aad572613eb63181f31 ]
    
    When a vdevice is DLPAR removed from the system the vio subsystem
    doesn't bother unmapping the virq from the irq_domain. As a result we
    have a virq mapped to a hardware irq that is no longer valid for the
    irq_domain. A side effect is that we are left with /proc/irq/<irq#>
    affinity entries, and attempts to modify the smp_affinity of the irq
    will fail.
    
    In the following observed example the kernel log is spammed by
    ics_rtas_set_affinity errors after the removal of a VSCSI adapter.
    This is a result of irqbalance trying to adjust the affinity every 10
    seconds.
    
      rpadlpar_io: slot U8408.E8E.10A7ACV-V5-C25 removed
      ics_rtas_set_affinity: ibm,set-xive irq=655385 returns -3
      ics_rtas_set_affinity: ibm,set-xive irq=655385 returns -3
    
    This patch fixes the issue by calling irq_dispose_mapping() on the
    virq of the viodev on unregister.
    
    Fixes: f2ab6219969f ("powerpc/pseries: Add PFO support to the VIO bus")
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fe5286e49d4e1fe7eba347302b3d3dee217eade
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Wed Oct 18 11:16:47 2017 +0200

    powerpc/ipic: Fix status get and status clear
    
    
    [ Upstream commit 6b148a7ce72a7f87c81cbcde48af014abc0516a9 ]
    
    IPIC Status is provided by register IPIC_SERSR and not by IPIC_SERMR
    which is the mask register.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2637cb1e3d8086cd31a96e60c3e7e0aa74c043f4
Author: William A. Kennington III <wak@google.com>
Date:   Fri Sep 22 16:58:00 2017 -0700

    powerpc/opal: Fix EBUSY bug in acquiring tokens
    
    
    [ Upstream commit 71e24d7731a2903b1ae2bba2b2971c654d9c2aa6 ]
    
    The current code checks the completion map to look for the first token
    that is complete. In some cases, a completion can come in but the
    token can still be on lease to the caller processing the completion.
    If this completed but unreleased token is the first token found in the
    bitmap by another tasks trying to acquire a token, then the
    __test_and_set_bit call will fail since the token will still be on
    lease. The acquisition will then fail with an EBUSY.
    
    This patch reorganizes the acquisition code to look at the
    opal_async_token_map for an unleased token. If the token has no lease
    it must have no outstanding completions so we should never see an
    EBUSY, unless we have leased out too many tokens. Since
    opal_async_get_token_inrerruptible is protected by a semaphore, we
    will practically never see EBUSY anymore.
    
    Fixes: 8d7248232208 ("powerpc/powernv: Infrastructure to support OPAL async completion")
    Signed-off-by: William A. Kennington III <wak@google.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d815f4efbb2a04e57632fc4daa6ebaf5fca52123
Author: KUWAZAWA Takuya <albatross0@gmail.com>
Date:   Sun Oct 15 20:54:10 2017 +0900

    netfilter: ipvs: Fix inappropriate output of procfs
    
    
    [ Upstream commit c5504f724c86ee925e7ffb80aa342cfd57959b13 ]
    
    Information about ipvs in different network namespace can be seen via procfs.
    
    How to reproduce:
    
      # ip netns add ns01
      # ip netns add ns02
      # ip netns exec ns01 ip a add dev lo 127.0.0.1/8
      # ip netns exec ns02 ip a add dev lo 127.0.0.1/8
      # ip netns exec ns01 ipvsadm -A -t 10.1.1.1:80
      # ip netns exec ns02 ipvsadm -A -t 10.1.1.2:80
    
    The ipvsadm displays information about its own network namespace only.
    
      # ip netns exec ns01 ipvsadm -Ln
      IP Virtual Server version 1.2.1 (size=4096)
      Prot LocalAddress:Port Scheduler Flags
        -> RemoteAddress:Port           Forward Weight ActiveConn InActConn
      TCP  10.1.1.1:80 wlc
    
      # ip netns exec ns02 ipvsadm -Ln
      IP Virtual Server version 1.2.1 (size=4096)
      Prot LocalAddress:Port Scheduler Flags
        -> RemoteAddress:Port           Forward Weight ActiveConn InActConn
      TCP  10.1.1.2:80 wlc
    
    But I can see information about other network namespace via procfs.
    
      # ip netns exec ns01 cat /proc/net/ip_vs
      IP Virtual Server version 1.2.1 (size=4096)
      Prot LocalAddress:Port Scheduler Flags
        -> RemoteAddress:Port Forward Weight ActiveConn InActConn
      TCP  0A010101:0050 wlc
      TCP  0A010102:0050 wlc
    
      # ip netns exec ns02 cat /proc/net/ip_vs
      IP Virtual Server version 1.2.1 (size=4096)
      Prot LocalAddress:Port Scheduler Flags
        -> RemoteAddress:Port Forward Weight ActiveConn InActConn
      TCP  0A010102:0050 wlc
    
    Signed-off-by: KUWAZAWA Takuya <albatross0@gmail.com>
    Acked-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4e7af283374329a6eca97dfa782d710417f3e19
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Sat Nov 4 23:52:54 2017 -0500

    thunderbolt: tb: fix use after free in tb_activate_pcie_devices
    
    
    [ Upstream commit a2e373438f72391493a4425efc1b82030b6b4fd5 ]
    
    Add a ̣̣continue statement in order to avoid using a previously
    free'd pointer tunnel in list_add.
    
    Addresses-Coverity-ID: 1415336
    Fixes: 9d3cce0b6136 ("thunderbolt: Introduce thunderbolt bus and connection manager")
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 837da470dc16168a4ea75989b0f902efe795dda4
Author: Matthias Brugger <matthias.bgg@gmail.com>
Date:   Mon Oct 30 12:37:55 2017 +0100

    iommu/mediatek: Fix driver name
    
    
    [ Upstream commit 395df08d2e1de238a9c8c33fdcd0e2160efd63a9 ]
    
    There exist two Mediatek iommu drivers for the two different
    generations of the device. But both drivers have the same name
    "mtk-iommu". This breaks the registration of the second driver:
    
    Error: Driver 'mtk-iommu' is already registered, aborting...
    
    Fix this by changing the name for first generation to
    "mtk-iommu-v1".
    
    Fixes: b17336c55d89 ("iommu/mediatek: add support for mtk iommu generation one HW")
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe1c1819b4340f53ac2da07991c810fceaf06bba
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Fri Oct 13 21:35:43 2017 +0300

    PCI: Do not allocate more buses than available in parent
    
    
    [ Upstream commit a20c7f36bd3d20d245616ae223bb9d05dfb6f050 ]
    
    One can ask more buses to be reserved for hotplug bridges by passing
    pci=hpbussize=N in the kernel command line.  If the parent bus does not
    have enough bus space available we incorrectly create child bus with the
    requested number of subordinate buses.
    
    In the example below hpbussize is set to one more than we have available
    buses in the root port:
    
      pci 0000:07:00.0: [8086:1578] type 01 class 0x060400
      pci 0000:07:00.0: scanning [bus 00-00] behind bridge, pass 0
      pci 0000:07:00.0: bridge configuration invalid ([bus 00-00]), reconfiguring
      pci 0000:07:00.0: scanning [bus 00-00] behind bridge, pass 1
      pci_bus 0000:08: busn_res: can not insert [bus 08-ff] under [bus 07-3f] (conflicts with (null) [bus 07-3f])
      pci_bus 0000:08: scanning bus
      ...
      pci_bus 0000:0a: bus scan returning with max=40
      pci_bus 0000:0a: busn_res: [bus 0a-ff] end is updated to 40
      pci_bus 0000:0a: [bus 0a-40] partially hidden behind bridge 0000:07 [bus 07-3f]
      pci_bus 0000:08: bus scan returning with max=40
      pci_bus 0000:08: busn_res: [bus 08-ff] end is updated to 40
    
    Instead of allowing this, limit the subordinate number to be less than or
    equal the maximum subordinate number allocated for the parent bus (if it
    has any).
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    [bhelgaas: remove irrelevant dmesg messages]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9565e1e078329da7c92dd6812685bf8a2dd9b8e
Author: Shriya <shriyak@linux.vnet.ibm.com>
Date:   Fri Oct 13 10:06:41 2017 +0530

    powerpc/powernv/cpufreq: Fix the frequency read by /proc/cpuinfo
    
    
    [ Upstream commit cd77b5ce208c153260ed7882d8910f2395bfaabd ]
    
    The call to /proc/cpuinfo in turn calls cpufreq_quick_get() which
    returns the last frequency requested by the kernel, but may not
    reflect the actual frequency the processor is running at. This patch
    makes a call to cpufreq_get() instead which returns the current
    frequency reported by the hardware.
    
    Fixes: fb5153d05a7d ("powerpc: powernv: Implement ppc_md.get_proc_freq()")
    Signed-off-by: Shriya <shriyak@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27a12c783e700be095c39abe2749a20c3ab8ea11
Author: Qiang <zhengqiang10@huawei.com>
Date:   Thu Sep 28 11:54:34 2017 +0800

    PCI/PME: Handle invalid data when reading Root Status
    
    
    [ Upstream commit 3ad3f8ce50914288731a3018b27ee44ab803e170 ]
    
    PCIe PME and native hotplug share the same interrupt number, so hotplug
    interrupts are also processed by PME.  In some cases, e.g., a Link Down
    interrupt, a device may be present but unreachable, so when we try to
    read its Root Status register, the read fails and we get all ones data
    (0xffffffff).
    
    Previously, we interpreted that data as PCI_EXP_RTSTA_PME being set, i.e.,
    "some device has asserted PME," so we scheduled pcie_pme_work_fn().  This
    caused an infinite loop because pcie_pme_work_fn() tried to handle PME
    requests until PCI_EXP_RTSTA_PME is cleared, but with the link down,
    PCI_EXP_RTSTA_PME can't be cleared.
    
    Check for the invalid 0xffffffff data everywhere we read the Root Status
    register.
    
    1469d17dd341 ("PCI: pciehp: Handle invalid data when reading from
    non-existent devices") added similar checks in the hotplug driver.
    
    Signed-off-by: Qiang Zheng <zhengqiang10@huawei.com>
    [bhelgaas: changelog, also check in pcie_pme_work_fn(), use "~0" to follow
    other similar checks]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 540236e28f32749f5d1711020fbcab5be3afbf7f
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Mon Nov 6 11:11:28 2017 +0000

    mlxsw: spectrum: Fix error return code in mlxsw_sp_port_create()
    
    
    [ Upstream commit d86fd113ebbb37726ef7c7cc6fd6d5ce377455d6 ]
    
    Fix to return a negative error code from the VID  create error handling
    case instead of 0, as done elsewhere in this function.
    
    Fixes: c57529e1d5d8 ("mlxsw: spectrum: Replace vPorts with Port-VLAN")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac6864737c0240499f1cd0689cd61b2bad6e04c8
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Nov 8 12:02:25 2017 +0200

    dmaengine: ti-dma-crossbar: Correct am335x/am43xx mux value type
    
    
    [ Upstream commit 288e7560e4d3e259aa28f8f58a8dfe63627a1bf6 ]
    
    The used 0x1f mask is only valid for am335x family of SoC, different family
    using this type of crossbar might have different number of electable
    events. In case of am43xx family 0x3f mask should have been used for
    example.
    Instead of trying to handle each family's mask, just use u8 type to store
    the mux value since the event offsets are aligned to byte offset.
    
    Fixes: 42dbdcc6bf965 ("dmaengine: ti-dma-crossbar: Add support for crossbar on AM33xx/AM43xx")
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1d0ddc83e3cb2b9e5641ee52f235fcf463fd1d8
Author: Pankaj Bharadiya <pankaj.laxminarayan.bharadiya@intel.com>
Date:   Tue Nov 7 16:16:19 2017 +0530

    ASoC: Intel: Skylake: Fix uuid_module memory leak in failure case
    
    
    [ Upstream commit f8e066521192c7debe59127d90abbe2773577e25 ]
    
    In the loop that adds the uuid_module to the uuid_list list, allocated
    memory is not properly freed in the error path free uuid_list whenever
    any of the memory allocation in the loop fails to avoid memory leak.
    
    Signed-off-by: Pankaj Bharadiya <pankaj.laxminarayan.bharadiya@intel.com>
    Signed-off-by: Guneshwor Singh <guneshwor.o.singh@intel.com>
    Acked-By: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32f733a8f470bf37b77da08d60868aace87f78f7
Author: Rajat Jain <rajatja@google.com>
Date:   Tue Oct 31 14:44:24 2017 -0700

    PM / s2idle: Clear the events_check_enabled flag
    
    
    [ Upstream commit 95b982b45122c57da2ee0b46cce70775e1d987af ]
    
    Problem: This flag does not get cleared currently in the suspend or
    resume path in the following cases:
    
     * In case some driver's suspend routine returns an error.
     * Successful s2idle case
     * etc?
    
    Why is this a problem: What happens is that the next suspend attempt
    could fail even though the user did not enable the flag by writing to
    /sys/power/wakeup_count. This is 1 use case how the issue can be seen
    (but similar use case with driver suspend failure can be thought of):
    
     1. Read /sys/power/wakeup_count
     2. echo count > /sys/power/wakeup_count
     3. echo freeze > /sys/power/wakeup_count
     4. Let the system suspend, and wakeup the system using some wake source
        that calls pm_wakeup_event() e.g. power button or something.
     5. Note that the combined wakeup count would be incremented due
        to the pm_wakeup_event() in the resume path.
     6. After resuming the events_check_enabled flag is still set.
    
    At this point if the user attempts to freeze again (without writing to
    /sys/power/wakeup_count), the suspend would fail even though there has
    been no wake event since the past resume.
    
    Address that by clearing the flag just before a resume is completed,
    so that it is always cleared for the corner cases mentioned above.
    
    Signed-off-by: Rajat Jain <rajatja@google.com>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4760b9c8d06f541d37784afb3bbeaf895346b9b
Author: Pixel Ding <Pixel.Ding@amd.com>
Date:   Wed Nov 8 10:20:01 2017 +0800

    drm/amdgpu: bypass lru touch for KIQ ring submission
    
    
    [ Upstream commit dce1e131dd4dc68099ff1b70aa03cd2d0acf8639 ]
    
    KIQ ring submission is used for register accessing on SRIOV
    VF that could happen both in irq enabled and irq disabled cases.
    Inversion lock could happen on adev->ring_lru_list_lock, while
    this operation is useless and just adds overhead in this use
    case.
    
    Signed-off-by: Pixel Ding <Pixel.Ding@amd.com>
    Reviewed-by: Monk Liu <Monk.Liu@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73e31f2af17843c640fd7e0c8d73f13773dd1777
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Nov 7 11:46:05 2017 +0100

    scsi: aacraid: use timespec64 instead of timeval
    
    
    [ Upstream commit 820f188659122602ab217dd80cfa32b3ac0c55c0 ]
    
    aacraid passes the current time to the firmware in one of two ways,
    either as year/month/day/... or as 32-bit unsigned seconds.
    
    The first one is broken on 32-bit architectures as it cannot go past
    year 2038. Using timespec64 here makes it behave properly on both 32-bit
    and 64-bit architectures, and avoids relying on signed integer overflow
    to pass times into the second interface.
    
    The interface used in aac_send_hosttime() however is still problematic
    in year 2106 when 32-bit seconds overflow. Hopefully we don't have to
    worry about aacraid by that time.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Dave Carroll <david.carroll@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28461320cc952e8a971ec415743ae97120937fbd
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Tue Nov 7 13:12:17 2017 +0100

    rtc: pcf8563: fix output clock rate
    
    
    [ Upstream commit a3350f9c57ffad569c40f7320b89da1f3061c5bb ]
    
    The pcf8563_clkout_recalc_rate function erroneously ignores the
    frequency index read from the CLKO register and always returns
    32768 Hz.
    
    Fixes: a39a6405d5f9 ("rtc: pcf8563: add CLKOUT to common clock framework")
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6f59ef5b840c5815430d63bb08e8dcbd9e2a132
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Nov 9 18:09:28 2017 +0100

    video: fbdev: au1200fb: Return an error code if a memory allocation fails
    
    
    [ Upstream commit 8cae353e6b01ac3f18097f631cdbceb5ff28c7f3 ]
    
    'ret' is known to be 0 at this point.
    In case of memory allocation error in 'framebuffer_alloc()', return
    -ENOMEM instead.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Cc: Tejun Heo <tj@kernel.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df235d2ee36e70a43b122c0eb34064794ef4464c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Nov 9 18:09:28 2017 +0100

    video: fbdev: au1200fb: Release some resources if a memory allocation fails
    
    
    [ Upstream commit 451f130602619a17c8883dd0b71b11624faffd51 ]
    
    We should go through the error handling code instead of returning -ENOMEM
    directly.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Cc: Tejun Heo <tj@kernel.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 456279d0e3ad7cb3b6b90aeb07c189c7f8590ab0
Author: Ladislav Michl <ladis@linux-mips.org>
Date:   Thu Nov 9 18:09:30 2017 +0100

    video: udlfb: Fix read EDID timeout
    
    
    [ Upstream commit c98769475575c8a585f5b3952f4b5f90266f699b ]
    
    While usb_control_msg function expects timeout in miliseconds, a value
    of HZ is used. Replace it with USB_CTRL_GET_TIMEOUT and also fix error
    message which looks like:
    udlfb: Read EDID byte 78 failed err ffffff92
    as error is either negative errno or number of bytes transferred use %d
    format specifier.
    
    Returned EDID is in second byte, so return error when less than two bytes
    are received.
    
    Fixes: 18dffdf8913a ("staging: udlfb: enhance EDID and mode handling support")
    Signed-off-by: Ladislav Michl <ladis@linux-mips.org>
    Cc: Bernie Thompson <bernie@plugable.com>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9a40df232448539f6586f9a0c72ca89fd694fbe
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu Nov 9 18:09:33 2017 +0100

    fbdev: controlfb: Add missing modes to fix out of bounds access
    
    
    [ Upstream commit ac831a379d34109451b3c41a44a20ee10ecb615f ]
    
    Dan's static analysis says:
    
        drivers/video/fbdev/controlfb.c:560 control_setup()
        error: buffer overflow 'control_mac_modes' 20 <= 21
    
    Indeed, control_mac_modes[] has only 20 elements, while VMODE_MAX is 22,
    which may lead to an out of bounds read when parsing vmode commandline
    options.
    
    The bug was introduced in v2.4.5.6, when 2 new modes were added to
    macmodes.h, but control_mac_modes[] wasn't updated:
    
    https://kernel.opensuse.org/cgit/kernel/diff/include/video/macmodes.h?h=v2.5.2&id=29f279c764808560eaceb88fef36cbc35c529aad
    
    Augment control_mac_modes[] with the two new video modes to fix this.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71307dd192e7ac012894dfebd9c47cb5afc0611b
Author: Robert Stonehouse <rstonehouse@solarflare.com>
Date:   Tue Nov 7 17:30:30 2017 +0000

    sfc: don't warn on successful change of MAC
    
    
    [ Upstream commit cbad52e92ad7f01f0be4ca58bde59462dc1afe3a ]
    
    Fixes: 535a61777f44e ("sfc: suppress handled MCDI failures when changing the MAC address")
    Signed-off-by: Bert Kenward <bkenward@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dba1ca0e9a6fc57703eaa3c8d7293b8efc72c2af
Author: Sébastien Szymanski <sebastien.szymanski@armadeus.com>
Date:   Fri Nov 10 10:01:43 2017 +0100

    HID: cp2112: fix broken gpio_direction_input callback
    
    
    [ Upstream commit 7da85fbf1c87d4f73621e0e7666a3387497075a9 ]
    
    When everything goes smoothly, ret is set to 0 which makes the function
    to return EIO error.
    
    Fixes: 8e9faa15469e ("HID: cp2112: fix gpio-callback error handling")
    Signed-off-by: Sébastien Szymanski <sebastien.szymanski@armadeus.com>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3e3728ed55b9ddd7b1600ebad11f16aa665dfcb
Author: Guy Levi <guyle@mellanox.com>
Date:   Wed Oct 25 22:39:35 2017 +0300

    IB/mlx4: Fix RSS's QPC attributes assignments
    
    
    [ Upstream commit 108809a0571cd1e1b317c5c083a371e163e1f8f9 ]
    
    In the modify QP handler the base_qpn_udp field in the RSS QPC is
    overwrite later by irrelevant value assignment. Hence, ingress packets
    which gets to the RSS QP will be steered then to a garbage QPN.
    
    The patch fixes this by skipping the above assignment when a RSS QP is
    modified, also, the RSS context's attributes assignments are relocated
    just before the context is posted to avoid future issues like this.
    
    Additionally, this patch takes the opportunity to change the code to be
    disciplined to the device's manual and assigns the RSS QP context just at
    RESET to INIT transition.
    
    Fixes:3078f5f1bd8b ("IB/mlx4: Add support for RSS QP")
    Signed-off-by: Guy Levi <guyle@mellanox.com>
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38620054ea18edb165451bf24367f212960ff344
Author: Chandan Rajendra <chandan@linux.vnet.ibm.com>
Date:   Mon Dec 11 15:00:57 2017 -0500

    ext4: fix crash when a directory's i_size is too small
    
    commit 9d5afec6b8bd46d6ed821aa1579634437f58ef1f upstream.
    
    On a ppc64 machine, when mounting a fuzzed ext2 image (generated by
    fsfuzzer) the following call trace is seen,
    
    VFS: brelse: Trying to free free buffer
    WARNING: CPU: 1 PID: 6913 at /root/repos/linux/fs/buffer.c:1165 .__brelse.part.6+0x24/0x40
    .__brelse.part.6+0x20/0x40 (unreliable)
    .ext4_find_entry+0x384/0x4f0
    .ext4_lookup+0x84/0x250
    .lookup_slow+0xdc/0x230
    .walk_component+0x268/0x400
    .path_lookupat+0xec/0x2d0
    .filename_lookup+0x9c/0x1d0
    .vfs_statx+0x98/0x140
    .SyS_newfstatat+0x48/0x80
    system_call+0x58/0x6c
    
    This happens because the directory that ext4_find_entry() looks up has
    inode->i_size that is less than the block size of the filesystem. This
    causes 'nblocks' to have a value of zero. ext4_bread_batch() ends up not
    reading any of the directory file's blocks. This renders the entries in
    bh_use[] array to continue to have garbage data. buffer_uptodate() on
    bh_use[0] can then return a zero value upon which brelse() function is
    invoked.
    
    This commit fixes the bug by returning -ENOENT when the directory file
    has no associated blocks.
    
    Reported-by: Abdul Haleem <abdhalee@linux.vnet.ibm.com>
    Signed-off-by: Chandan Rajendra <chandan@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0228af23dd6962c16682d85fdf1bab6bbf77a007
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sun Dec 10 23:44:11 2017 -0500

    ext4: add missing error check in __ext4_new_inode()
    
    commit 996fc4477a0ea28226b30d175f053fb6f9a4fa36 upstream.
    
    It's possible for ext4_get_acl() to return an ERR_PTR.  So we need to
    add a check for this case in __ext4_new_inode().  Otherwise on an
    error we can end up oops the kernel.
    
    This was getting triggered by xfstests generic/388, which is a test
    which exercises the shutdown code path.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ff7da066d64e5083ef886203ba3a0623343c632
Author: Eryu Guan <eguan@redhat.com>
Date:   Sun Dec 3 22:52:51 2017 -0500

    ext4: fix fdatasync(2) after fallocate(2) operation
    
    commit c894aa97577e47d3066b27b32499ecf899bfa8b0 upstream.
    
    Currently, fallocate(2) with KEEP_SIZE followed by a fdatasync(2)
    then crash, we'll see wrong allocated block number (stat -c %b), the
    blocks allocated beyond EOF are all lost. fstests generic/468
    exposes this bug.
    
    Commit 67a7d5f561f4 ("ext4: fix fdatasync(2) after extent
    manipulation operations") fixed all the other extent manipulation
    operation paths such as hole punch, zero range, collapse range etc.,
    but forgot the fallocate case.
    
    So similarly, fix it by recording the correct journal tid in ext4
    inode in fallocate(2) path, so that ext4_sync_file() will wait for
    the right tid to be committed on fdatasync(2).
    
    This addresses the test failure in xfstests test generic/468.
    
    Signed-off-by: Eryu Guan <eguan@redhat.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae0bba6b38110e8b57b92aa820df8f78d3965fe6
Author: Andi Kleen <ak@linux.intel.com>
Date:   Sun Dec 3 20:38:01 2017 -0500

    ext4: support fast symlinks from ext3 file systems
    
    commit fc82228a5e3860502dbf3bfa4a9570cb7093cf7f upstream.
    
    407cd7fb83c0 (ext4: change fast symlink test to not rely on i_blocks)
    broke ~10 years old ext3 file systems created by 2.6.17. Any ELF
    executable fails because the /lib/ld-linux.so.2 fast symlink
    cannot be read anymore.
    
    The patch assumed fast symlinks were created in a specific way,
    but that's not true on these really old file systems.
    
    The new behavior is apparently needed only with the large EA inode
    feature.
    
    Revert to the old behavior if the large EA inode feature is not set.
    
    This makes my old VM boot again.
    
    Fixes: 407cd7fb83c0 (ext4: change fast symlink test to not rely on i_blocks)
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dea756b487547788c1f28439fbc3df270e6bf30
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Dec 12 11:28:38 2017 -0800

    Revert "exec: avoid RLIMIT_STACK races with prlimit()"
    
    commit 779f4e1c6c7c661db40dfebd6dd6bda7b5f88aa3 upstream.
    
    This reverts commit 04e35f4495dd560db30c25efca4eecae8ec8c375.
    
    SELinux runs with secureexec for all non-"noatsecure" domain transitions,
    which means lots of processes end up hitting the stack hard-limit change
    that was introduced in order to fix a race with prlimit(). That race fix
    will need to be redesigned.
    
    Reported-by: Laura Abbott <labbott@redhat.com>
    Reported-by: Tomáš Trnka <trnka@scm.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aa5d007ba673bc35378422b0c2b2b797da69424
Author: Adam Wallis <awallis@codeaurora.org>
Date:   Mon Nov 27 10:45:01 2017 -0500

    dmaengine: dmatest: move callback wait queue to thread context
    
    commit 6f6a23a213be51728502b88741ba6a10cda2441d upstream.
    
    Commit adfa543e7314 ("dmatest: don't use set_freezable_with_signal()")
    introduced a bug (that is in fact documented by the patch commit text)
    that leaves behind a dangling pointer. Since the done_wait structure is
    allocated on the stack, future invocations to the DMATEST can produce
    undesirable results (e.g., corrupted spinlocks).
    
    Commit a9df21e34b42 ("dmaengine: dmatest: warn user when dma test times
    out") attempted to WARN the user that the stack was likely corrupted but
    did not fix the actual issue.
    
    This patch fixes the issue by pushing the wait queue and callback
    structs into the the thread structure. If a failure occurs due to time,
    dmaengine_terminate_all will force the callback to safely call
    wake_up_all() without possibility of using a freed pointer.
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=197605
    Fixes: adfa543e7314 ("dmatest: don't use set_freezable_with_signal()")
    Reviewed-by: Sinan Kaya <okaya@codeaurora.org>
    Suggested-by: Shunyong Yang <shunyong.yang@hxt-semitech.com>
    Signed-off-by: Adam Wallis <awallis@codeaurora.org>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3df23f7ce7255d1ef2a616071cac359a245fb6de
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Dec 15 10:32:03 2017 +0100

    posix-timer: Properly check sigevent->sigev_notify
    
    commit cef31d9af908243421258f1df35a4a644604efbe upstream.
    
    timer_create() specifies via sigevent->sigev_notify the signal delivery for
    the new timer. The valid modes are SIGEV_NONE, SIGEV_SIGNAL, SIGEV_THREAD
    and (SIGEV_SIGNAL | SIGEV_THREAD_ID).
    
    The sanity check in good_sigevent() is only checking the valid combination
    for the SIGEV_THREAD_ID bit, i.e. SIGEV_SIGNAL, but if SIGEV_THREAD_ID is
    not set it accepts any random value.
    
    This has no real effects on the posix timer and signal delivery code, but
    it affects show_timer() which handles the output of /proc/$PID/timers. That
    function uses a string array to pretty print sigev_notify. The access to
    that array has no bound checks, so random sigev_notify cause access beyond
    the array bounds.
    
    Add proper checks for the valid notify modes and remove the SIGEV_THREAD_ID
    masking from various code pathes as SIGEV_NONE can never be set in
    combination with SIGEV_THREAD_ID.
    
    Reported-by: Eric Biggers <ebiggers3@gmail.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e46e964e2978f64f30b89be2423093b43e77466
Author: David Lechner <david@lechnology.com>
Date:   Sun Dec 3 19:54:41 2017 -0600

    eeprom: at24: change nvmem stride to 1
    
    commit 7f6d2ecd3d7acaf205ea7b3e96f9ffc55b92298b upstream.
    
    Trying to read the MAC address from an eeprom that has an offset that
    is not a multiple of 4 causes an error currently.
    
    Fix it by changing the nvmem stride to 1.
    
    Signed-off-by: David Lechner <david@lechnology.com>
    [Bartosz: tweaked the commit message]
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e48a17d115f84048294ae366ff6e9dd7c8c6cca4
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Mon Dec 4 15:40:56 2017 +0300

    x86/boot/compressed/64: Print error if 5-level paging is not supported
    
    commit 6d7e0ba2d2be9e50cccba213baf07e0e183c1b24 upstream.
    
    If the machine does not support the paging mode for which the kernel was
    compiled, the boot process cannot continue.
    
    It's not possible to let the kernel detect the mismatch as it does not even
    reach the point where cpu features can be evaluted due to a triple fault in
    the KASLR setup.
    
    Instead of instantaneous silent reboot, emit an error message which gives
    the user the information why the boot fails.
    
    Fixes: 77ef56e4f0fb ("x86: Enable 5-level paging support via CONFIG_X86_5LEVEL=y")
    Reported-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Borislav Petkov <bp@suse.de>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: linux-mm@kvack.org
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Link: https://lkml.kernel.org/r/20171204124059.63515-3-kirill.shutemov@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bd2b3061273f1bd7d691e3ea5c15e1f57f8ab6d
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Mon Dec 4 15:40:55 2017 +0300

    x86/boot/compressed/64: Detect and handle 5-level paging at boot-time
    
    commit 08529078d8d9adf689bf39cc38d53979a0869970 upstream.
    
    Prerequisite for fixing the current problem of instantaneous reboots when a
    5-level paging kernel is booted on 4-level paging hardware.
    
    At the same time this change prepares the decompression code to boot-time
    switching between 4- and 5-level paging.
    
    [ tglx: Folded the GCC < 5 fix. ]
    
    Fixes: 77ef56e4f0fb ("x86: Enable 5-level paging support via CONFIG_X86_5LEVEL=y")
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: linux-mm@kvack.org
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Link: https://lkml.kernel.org/r/20171204124059.63515-2-kirill.shutemov@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d8262155ab3d20219ca5815f65573592d717c3a
Author: Steve Wise <swise@opengridcomputing.com>
Date:   Mon Nov 27 13:16:32 2017 -0800

    iw_cxgb4: only insert drain cqes if wq is flushed
    
    commit c058ecf6e455fac7346d46197a02398ead90851f upstream.
    
    Only insert our special drain CQEs to support ib_drain_sq/rq() after
    the wq is flushed. Otherwise, existing but not yet polled CQEs can be
    returned out of order to the user application.  This can happen when the
    QP has exited RTS but not yet flushed the QP, which can happen during
    a normal close (vs abortive close).
    
    In addition never count the drain CQEs when determining how many CQEs
    need to be synthesized during the flush operation.  This latter issue
    should never happen if the QP is properly flushed before inserting the
    drain CQE, but I wanted to avoid corrupting the CQ state.  So we handle
    it and log a warning once.
    
    Fixes: 4fe7c2962e11 ("iw_cxgb4: refactor sq/rq drain logic")
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dd1362247ebfe06ab1f58d7fee739c5f773a0ac
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Thu Dec 14 21:24:08 2017 -0500

    SUNRPC: Fix a race in the receive code path
    
    commit 90d91b0cd371193d9dbfa9beacab8ab9a4cb75e0 upstream.
    
    We must ensure that the call to rpc_sleep_on() in xprt_transmit() cannot
    race with the call to xprt_complete_rqst().
    
    Reported-by: Chuck Lever <chuck.lever@oracle.com>
    Link: https://bugzilla.linux-nfs.org/show_bug.cgi?id=317
    Fixes: ce7c252a8c74 ("SUNRPC: Add a separate spinlock to protect..")
    Reviewed-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbce429b410cc443ec3fa3293a0e4e5804ae4f2d
Author: monty_pavel@sina.com <monty_pavel@sina.com>
Date:   Sat Nov 25 01:43:50 2017 +0800

    dm: fix various targets to dm_register_target after module __init resources created
    
    commit 7e6358d244e4706fe612a77b9c36519a33600ac0 upstream.
    
    A NULL pointer is seen if two concurrent "vgchange -ay -K <vg name>"
    processes race to load the dm-thin-pool module:
    
     PID: 25992 TASK: ffff883cd7d23500 CPU: 4 COMMAND: "vgchange"
      #0 [ffff883cd743d600] machine_kexec at ffffffff81038fa9
      0000001 [ffff883cd743d660] crash_kexec at ffffffff810c5992
      0000002 [ffff883cd743d730] oops_end at ffffffff81515c90
      0000003 [ffff883cd743d760] no_context at ffffffff81049f1b
      0000004 [ffff883cd743d7b0] __bad_area_nosemaphore at ffffffff8104a1a5
      0000005 [ffff883cd743d800] bad_area at ffffffff8104a2ce
      0000006 [ffff883cd743d830] __do_page_fault at ffffffff8104aa6f
      0000007 [ffff883cd743d950] do_page_fault at ffffffff81517bae
      0000008 [ffff883cd743d980] page_fault at ffffffff81514f95
         [exception RIP: kmem_cache_alloc+108]
         RIP: ffffffff8116ef3c RSP: ffff883cd743da38 RFLAGS: 00010046
         RAX: 0000000000000004 RBX: ffffffff81121b90 RCX: ffff881bf1e78cc0
         RDX: 0000000000000000 RSI: 00000000000000d0 RDI: 0000000000000000
         RBP: ffff883cd743da68 R8: ffff881bf1a4eb00 R9: 0000000080042000
         R10: 0000000000002000 R11: 0000000000000000 R12: 00000000000000d0
         R13: 0000000000000000 R14: 00000000000000d0 R15: 0000000000000246
         ORIG_RAX: ffffffffffffffff CS: 0010 SS: 0018
      0000009 [ffff883cd743da70] mempool_alloc_slab at ffffffff81121ba5
     0000010 [ffff883cd743da80] mempool_create_node at ffffffff81122083
     0000011 [ffff883cd743dad0] mempool_create at ffffffff811220f4
     0000012 [ffff883cd743dae0] pool_ctr at ffffffffa08de049 [dm_thin_pool]
     0000013 [ffff883cd743dbd0] dm_table_add_target at ffffffffa0005f2f [dm_mod]
     0000014 [ffff883cd743dc30] table_load at ffffffffa0008ba9 [dm_mod]
     0000015 [ffff883cd743dc90] ctl_ioctl at ffffffffa0009dc4 [dm_mod]
    
    The race results in a NULL pointer because:
    
    Process A (vgchange -ay -K):
            a. send DM_LIST_VERSIONS_CMD ioctl;
            b. pool_target not registered;
            c. modprobe dm_thin_pool and wait until end.
    
    Process B (vgchange -ay -K):
            a. send DM_LIST_VERSIONS_CMD ioctl;
            b. pool_target registered;
            c. table_load->dm_table_add_target->pool_ctr;
            d. _new_mapping_cache is NULL and panic.
    Note:
            1. process A and process B are two concurrent processes.
            2. pool_target can be detected by process B but
            _new_mapping_cache initialization has not ended.
    
    To fix dm-thin-pool, and other targets (cache, multipath, and snapshot)
    with the same problem, simply dm_register_target() after all resources
    created during module init (as labelled with __init) are finished.
    
    Signed-off-by: monty <monty_pavel@sina.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 282e4b259d4f9429f7813efc8076dd601ed59f45
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Sat Dec 2 13:04:54 2017 -0500

    sched/rt: Do not pull from current CPU if only one CPU to pull
    
    commit f73c52a5bcd1710994e53fbccc378c42b97a06b6 upstream.
    
    Daniel Wagner reported a crash on the BeagleBone Black SoC.
    
    This is a single CPU architecture, and does not have a functional
    arch_send_call_function_single_ipi() implementation which can crash
    the kernel if that is called.
    
    As it only has one CPU, it shouldn't be called, but if the kernel is
    compiled for SMP, the push/pull RT scheduling logic now calls it for
    irq_work if the one CPU is overloaded, it can use that function to call
    itself and crash the kernel.
    
    Ideally, we should disable the SCHED_FEAT(RT_PUSH_IPI) if the system
    only has a single CPU. But SCHED_FEAT is a constant if sched debugging
    is turned off. Another fix can also be used, and this should also help
    with normal SMP machines. That is, do not initiate the pull code if
    there's only one RT overloaded CPU, and that CPU happens to be the
    current CPU that is scheduling in a lower priority task.
    
    Even on a system with many CPUs, if there's many RT tasks waiting to
    run on a single CPU, and that CPU schedules in another RT task of lower
    priority, it will initiate the PULL logic in case there's a higher
    priority RT task on another CPU that is waiting to run. But if there is
    no other CPU with waiting RT tasks, it will initiate the RT pull logic
    on itself (as it still has RT tasks waiting to run). This is a wasted
    effort.
    
    Not only does this help with SMP code where the current CPU is the only
    one with RT overloaded tasks, it should also solve the issue that
    Daniel encountered, because it will prevent the PULL logic from
    executing, as there's only one CPU on the system, and the check added
    here will cause it to exit the RT pull code.
    
    Reported-by: Daniel Wagner <wagi@monom.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-rt-users <linux-rt-users@vger.kernel.org>
    Fixes: 4bdced5c9 ("sched/rt: Simplify the IPI based RT balancing logic")
    Link: http://lkml.kernel.org/r/20171202130454.4cbbfe8d@vmware.local.home
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2f79ce3fe441486b3ab3dfce0f7bf49bd07dc3c
Author: Jason Yan <yanaijie@huawei.com>
Date:   Mon Dec 11 15:03:33 2017 +0800

    scsi: libsas: fix length error in sas_smp_handler()
    
    commit 621f6401fdeefe96dfe9eab4b167c7c39f552bb0 upstream.
    
    The return value of smp_execute_task_sg() is the untransferred residual,
    but bsg_job_done() requires the length of payload received. This makes
    SMP passthrough commands from userland by sg ioctl to libsas get a wrong
    response. The userland tools such as smp_utils failed because of these
    wrong responses:
    
    ~#smp_discover /dev/bsg/expander-2\:13
    response too short, len=0
    ~#smp_discover /dev/bsg/expander-2\:134
    response too short, len=0
    
    Fix this by passing the actual received length to bsg_job_done(). And if
    smp_execute_task_sg() returns 0, this means received length is exactly
    the buffer length.
    
    [mkp: typo]
    
    Fixes: 651a01364994 ("scsi: scsi_transport_sas: switch to bsg-lib for SMP passthrough")
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    Reported-by: chenqilin <chenqilin2@huawei.com>
    Tested-by: chenqilin <chenqilin2@huawei.com>
    CC: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39c4330c9779d0acc213a0ace72b88a7b7a06012
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Tue Dec 5 16:57:51 2017 -0800

    scsi: core: Fix a scsi_show_rq() NULL pointer dereference
    
    commit 14e3062fb18532175af4d1c4073597999f7a2248 upstream.
    
    Avoid that scsi_show_rq() triggers a NULL pointer dereference if called
    after sd_uninit_command(). Swap the NULL pointer assignment and the
    mempool_free() call in sd_uninit_command() to make it less likely that
    scsi_show_rq() triggers a use-after-free. Note: even with these changes
    scsi_show_rq() can trigger a use-after-free but that's a lesser evil
    than e.g. suppressing debug information for T10 PI Type 2 commands
    completely. This patch fixes the following oops:
    
    BUG: unable to handle kernel NULL pointer dereference at (null)
    IP: scsi_format_opcode_name+0x1a/0x1c0
    CPU: 1 PID: 1881 Comm: cat Not tainted 4.14.0-rc2.blk_mq_io_hang+ #516
    Call Trace:
     __scsi_format_command+0x27/0xc0
     scsi_show_rq+0x5c/0xc0
     __blk_mq_debugfs_rq_show+0x116/0x130
     blk_mq_debugfs_rq_show+0xe/0x10
     seq_read+0xfe/0x3b0
     full_proxy_read+0x54/0x90
     __vfs_read+0x37/0x160
     vfs_read+0x96/0x130
     SyS_read+0x55/0xc0
     entry_SYSCALL_64_fastpath+0x1a/0xa5
    
    [mkp: added Type 2]
    
    Fixes: 0eebd005dd07 ("scsi: Implement blk_mq_ops.show_rq()")
    Reported-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: James E.J. Bottomley <jejb@linux.vnet.ibm.com>
    Cc: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Ming Lei <ming.lei@redhat.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9854611cf5e604773fecfa75bfafc03621df508c
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Wed Dec 13 11:45:42 2017 +0000

    arm64: fix CONFIG_DEBUG_WX address reporting
    
    commit 1d08a044cf12aee37dfd54837558e3295287b343 upstream.
    
    In ptdump_check_wx(), we pass walk_pgd() a start address of 0 (rather
    than VA_START) for the init_mm. This means that any reported W&X
    addresses are offset by VA_START, which is clearly wrong and can make
    them appear like userspace addresses.
    
    Fix this by telling the ptdump code that we're walking init_mm starting
    at VA_START. We don't need to update the addr_markers, since these are
    still valid bounds regardless.
    
    Fixes: 1404d6f13e47 ("arm64: dump: Add checking for writable and exectuable pages")
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Laura Abbott <labbott@redhat.com>
    Reported-by: Timur Tabi <timur@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdcfd13a66eb53fd96dc480de79c423aa0de9d39
Author: Steve Capper <steve.capper@arm.com>
Date:   Mon Dec 4 14:13:05 2017 +0000

    arm64: Initialise high_memory global variable earlier
    
    commit f24e5834a2c3f6c5f814a417f858226f0a010ade upstream.
    
    The high_memory global variable is used by
    cma_declare_contiguous(.) before it is defined.
    
    We don't notice this as we compute __pa(high_memory - 1), and it looks
    like we're processing a VA from the direct linear map.
    
    This problem becomes apparent when we flip the kernel virtual address
    space and the linear map is moved to the bottom of the kernel VA space.
    
    This patch moves the initialisation of high_memory before it used.
    
    Fixes: f7426b983a6a ("mm: cma: adjust address limit to avoid hitting low/high memory boundary")
    Signed-off-by: Steve Capper <steve.capper@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db9d4784eb5ba8c69ea6b1a7b7c7c7af0b6bdf4d
Author: Steve Capper <steve.capper@arm.com>
Date:   Fri Dec 1 17:22:14 2017 +0000

    arm64: mm: Fix pte_mkclean, pte_mkdirty semantics
    
    commit 8781bcbc5e69d7da69e84c7044ca0284848d5d01 upstream.
    
    On systems with hardware dirty bit management, the ltp madvise09 unit
    test fails due to dirty bit information being lost and pages being
    incorrectly freed.
    
    This was bisected to:
            arm64: Ignore hardware dirty bit updates in ptep_set_wrprotect()
    
    Reverting this commit leads to a separate problem, that the unit test
    retains pages that should have been dropped due to the function
    madvise_free_pte_range(.) not cleaning pte's properly.
    
    Currently pte_mkclean only clears the software dirty bit, thus the
    following code sequence can appear:
    
            pte = pte_mkclean(pte);
            if (pte_dirty(pte))
                    // this condition can return true with HW DBM!
    
    This patch also adjusts pte_mkclean to set PTE_RDONLY thus effectively
    clearing both the SW and HW dirty information.
    
    In order for this to function on systems without HW DBM, we need to
    also adjust pte_mkdirty to remove the read only bit from writable pte's
    to avoid infinite fault loops.
    
    Fixes: 64c26841b349 ("arm64: Ignore hardware dirty bit updates in ptep_set_wrprotect()")
    Reported-by: Bhupinder Thakur <bhupinder.thakur@linaro.org>
    Tested-by: Bhupinder Thakur <bhupinder.thakur@linaro.org>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Steve Capper <steve.capper@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 268b2cc325061c60fa2dccfa4d61495e9306c4fa
Author: Scott Mayhew <smayhew@redhat.com>
Date:   Fri Dec 8 16:00:12 2017 -0500

    nfs: don't wait on commit in nfs_commit_inode() if there were no commit requests
    
    commit dc4fd9ab01ab379ae5af522b3efd4187a7c30a31 upstream.
    
    If there were no commit requests, then nfs_commit_inode() should not
    wait on the commit or mark the inode dirty, otherwise the following
    BUG_ON can be triggered:
    
    [ 1917.130762] kernel BUG at fs/inode.c:578!
    [ 1917.130766] Oops: Exception in kernel mode, sig: 5 [#1]
    [ 1917.130768] SMP NR_CPUS=2048 NUMA pSeries
    [ 1917.130772] Modules linked in: iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi blocklayoutdriver rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver nfs lockd grace fscache sunrpc sg nx_crypto pseries_rng ip_tables xfs libcrc32c sd_mod crc_t10dif crct10dif_generic crct10dif_common ibmvscsi scsi_transport_srp ibmveth scsi_tgt dm_mirror dm_region_hash dm_log dm_mod
    [ 1917.130805] CPU: 2 PID: 14923 Comm: umount.nfs4 Tainted: G               ------------ T 3.10.0-768.el7.ppc64 #1
    [ 1917.130810] task: c0000005ecd88040 ti: c00000004cea0000 task.ti: c00000004cea0000
    [ 1917.130813] NIP: c000000000354178 LR: c000000000354160 CTR: c00000000012db80
    [ 1917.130816] REGS: c00000004cea3720 TRAP: 0700   Tainted: G               ------------ T  (3.10.0-768.el7.ppc64)
    [ 1917.130820] MSR: 8000000100029032 <SF,EE,ME,IR,DR,RI>  CR: 22002822  XER: 20000000
    [ 1917.130828] CFAR: c00000000011f594 SOFTE: 1
    GPR00: c000000000354160 c00000004cea39a0 c0000000014c4700 c0000000018cc750
    GPR04: 000000000000c750 80c0000000000000 0600000000000000 04eeb76bea749a03
    GPR08: 0000000000000034 c0000000018cc758 0000000000000001 d000000005e619e8
    GPR12: c00000000012db80 c000000007b31200 0000000000000000 0000000000000000
    GPR16: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
    GPR20: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
    GPR24: 0000000000000000 c000000000dfc3ec 0000000000000000 c0000005eefc02c0
    GPR28: d0000000079dbd50 c0000005b94a02c0 c0000005b94a0250 c0000005b94a01c8
    [ 1917.130867] NIP [c000000000354178] .evict+0x1c8/0x350
    [ 1917.130871] LR [c000000000354160] .evict+0x1b0/0x350
    [ 1917.130873] Call Trace:
    [ 1917.130876] [c00000004cea39a0] [c000000000354160] .evict+0x1b0/0x350 (unreliable)
    [ 1917.130880] [c00000004cea3a30] [c0000000003558cc] .evict_inodes+0x13c/0x270
    [ 1917.130884] [c00000004cea3af0] [c000000000327d20] .kill_anon_super+0x70/0x1e0
    [ 1917.130896] [c00000004cea3b80] [d000000005e43e30] .nfs_kill_super+0x20/0x60 [nfs]
    [ 1917.130900] [c00000004cea3c00] [c000000000328a20] .deactivate_locked_super+0xa0/0x1b0
    [ 1917.130903] [c00000004cea3c80] [c00000000035ba54] .cleanup_mnt+0xd4/0x180
    [ 1917.130907] [c00000004cea3d10] [c000000000119034] .task_work_run+0x114/0x150
    [ 1917.130912] [c00000004cea3db0] [c00000000001ba6c] .do_notify_resume+0xcc/0x100
    [ 1917.130916] [c00000004cea3e30] [c00000000000a7b0] .ret_from_except_lite+0x5c/0x60
    [ 1917.130919] Instruction dump:
    [ 1917.130921] 7fc3f378 486734b5 60000000 387f00a0 38800003 4bdcb365 60000000 e95f00a0
    [ 1917.130927] 694a0060 7d4a0074 794ad182 694a0001 <0b0a0000> 892d02a4 2f890000 40de0134
    
    Signed-off-by: Scott Mayhew <smayhew@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74b6274f8c5e81d7243ca2dea4f80c8585b3d0e0
Author: Daniel Jurgens <danielj@mellanox.com>
Date:   Tue Dec 5 22:30:02 2017 +0200

    IB/core: Don't enforce PKey security on SMI MADs
    
    commit 0fbe8f575b15585eec3326e43708fbbc024e8486 upstream.
    
    Per the infiniband spec an SMI MAD can have any PKey. Checking the pkey
    on SMI MADs is not necessary, and it seems that some older adapters
    using the mthca driver don't follow the convention of using the default
    PKey, resulting in false denials, or errors querying the PKey cache.
    
    SMI MAD security is still enforced, only agents allowed to manage the
    subnet are able to receive or send SMI MADs.
    
    Reported-by: Chris Blake <chrisrblake93@gmail.com>
    Fixes: 47a2b338fe63 ("IB/core: Enforce security on management datagrams")
    Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4995bfa99096410af00aa0b1b374005494c709f3
Author: Daniel Jurgens <danielj@mellanox.com>
Date:   Tue Dec 5 22:30:01 2017 +0200

    IB/core: Bound check alternate path port number
    
    commit 4cae8ff136782d77b108cb3a5ba53e60597ba3a6 upstream.
    
    The alternate port number is used as an array index in the IB
    security implementation, invalid values can result in a kernel panic.
    
    Fixes: d291f1a65232 ("IB/core: Enforce PKey security on QPs")
    Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b3ff282dff3a42a081bef0f8249a99f64d7669f
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Dec 8 18:10:05 2017 +0200

    xhci: Don't add a virt_dev to the devs array before it's fully allocated
    
    commit 5d9b70f7d52eb14bb37861c663bae44de9521c35 upstream.
    
    Avoid null pointer dereference if some function is walking through the
    devs array accessing members of a new virt_dev that is mid allocation.
    
    Add the virt_dev to xhci->devs[i] _after_ the virt_device and all its
    members are properly allocated.
    
    issue found by KASAN: null-ptr-deref in xhci_find_slot_id_by_port
    
    "Quick analysis suggests that xhci_alloc_virt_device() is not mutex
    protected. If so, there is a time frame where xhci->devs[slot_id] is set
    but not fully initialized. Specifically, xhci->devs[i]->udev can be NULL."
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 912fe79116f2456a00cf4a9b2ad3ef207ba3e162
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Fri Dec 8 18:10:06 2017 +0200

    usb: xhci: fix TDS for MTK xHCI1.1
    
    commit 72b663a99c074a8d073e7ecdae446cfb024ef551 upstream.
    
    For MTK's xHCI 1.0 or latter, TD size is the number of max
    packet sized packets remaining in the TD, not including
    this TRB (following spec).
    
    For MTK's xHCI 0.96 and older, TD size is the number of max
    packet sized packets remaining in the TD, including this TRB
    (not following spec).
    
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eae219a2fc5554d86b9ac4d31bef73c273e926c0
Author: Yan, Zheng <zyan@redhat.com>
Date:   Thu Nov 30 11:59:22 2017 +0800

    ceph: drop negative child dentries before try pruning inode's alias
    
    commit 040d786032bf59002d374b86d75b04d97624005c upstream.
    
    Negative child dentry holds reference on inode's alias, it makes
    d_prune_aliases() do nothing.
    
    Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 318cea7d8d801cfa70f5b3a3a991425cd502b574
Author: Christoph Fritz <chf.fritz@googlemail.com>
Date:   Sat Dec 9 23:47:55 2017 +0100

    mmc: core: apply NO_CMD23 quirk to some specific cards
    
    commit 91516a2a4734614d62ee3ed921f8f88acc67c000 upstream.
    
    To get an usdhc Apacer and some ATP SD cards work reliable, CMD23 needs
    to be disabled.  This has been tested on i.MX6 (sdhci-esdhc) and rk3288
    (dw_mmc-rockchip).
    
    Without this patch on i.MX6 (sdhci-esdhc):
    
     $ dd if=/dev/urandom of=/mnt/test bs=1M count=10 conv=fsync
    
        | <mmc0: starting CMD23 arg 00000400 flags 00000015>
        | mmc0: starting CMD25 arg 00a71f00 flags 000000b5
        | mmc0:     blksz 512 blocks 1024 flags 00000100 tsac 3000 ms nsac 0
        | mmc0:     CMD12 arg 00000000 flags 0000049d
        | sdhci [sdhci_irq()]: *** mmc0 got interrupt: 0x00000001
        | mmc0: Timeout waiting for hardware interrupt.
    
    Without this patch on rk3288 (dw_mmc-rockchip):
    
        | mmc1: Card stuck in programming state! mmcblk1 card_busy_detect
        | dwmmc_rockchip ff0c0000.dwmmc: Busy; trying anyway
        | mmc_host mmc1: Bus speed (slot 0) = 400000Hz (slot req 400000Hz,
        | actual 400000HZ div = 0)
        | mmc1: card never left busy state
        | mmc1: tried to reset card, got error -110
        | blk_update_request: I/O error, dev mmcblk1, sector 139778
        | Buffer I/O error on dev mmcblk1p1, logical block 131586, lost async
        | page write
    
    Signed-off-by: Christoph Fritz <chf.fritz@googlemail.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d78a5506cf0ea112124c1ffa5c0aae09b579d96d
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Thu Dec 7 14:16:50 2017 -0700

    usbip: fix stub_send_ret_submit() vulnerability to null transfer_buffer
    
    commit be6123df1ea8f01ee2f896a16c2b7be3e4557a5a upstream.
    
    stub_send_ret_submit() handles urb with a potential null transfer_buffer,
    when it replays a packet with potential malicious data that could contain
    a null buffer. Add a check for the condition when actual_length > 0 and
    transfer_buffer is null.
    
    Reported-by: Secunia Research <vuln@secunia.com>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6a2ad646c13bb9d1231bce5599cb3176ff33ca4
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Thu Dec 7 14:16:49 2017 -0700

    usbip: prevent vhci_hcd driver from leaking a socket pointer address
    
    commit 2f2d0088eb93db5c649d2a5e34a3800a8a935fc5 upstream.
    
    When a client has a USB device attached over IP, the vhci_hcd driver is
    locally leaking a socket pointer address via the
    
    /sys/devices/platform/vhci_hcd/status file (world-readable) and in debug
    output when "usbip --debug port" is run.
    
    Fix it to not leak. The socket pointer address is not used at the moment
    and it was made visible as a convenient way to find IP address from socket
    pointer address by looking up /proc/net/{tcp,tcp6}.
    
    As this opens a security hole, the fix replaces socket pointer address with
    sockfd.
    
    Reported-by: Secunia Research <vuln@secunia.com>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1621db059603e781f61a9bf33cba639b42faf0bc
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Thu Dec 7 14:16:48 2017 -0700

    usbip: fix stub_rx: harden CMD_SUBMIT path to handle malicious input
    
    commit c6688ef9f29762e65bce325ef4acd6c675806366 upstream.
    
    Harden CMD_SUBMIT path to handle malicious input that could trigger
    large memory allocations. Add checks to validate transfer_buffer_length
    and number_of_packets to protect against bad input requesting for
    unbounded memory allocations. Validate early in get_pipe() and return
    failure.
    
    Reported-by: Secunia Research <vuln@secunia.com>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7120d742ad8d0f1fe37e4b73827e166fc1e01eea
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Thu Dec 7 14:16:47 2017 -0700

    usbip: fix stub_rx: get_pipe() to validate endpoint number
    
    commit 635f545a7e8be7596b9b2b6a43cab6bbd5a88e43 upstream.
    
    get_pipe() routine doesn't validate the input endpoint number
    and uses to reference ep_in and ep_out arrays. Invalid endpoint
    number can trigger BUG(). Range check the epnum and returning
    error instead of calling BUG().
    
    Change caller stub_recv_cmd_submit() to handle the get_pipe()
    error return.
    
    Reported-by: Secunia Research <vuln@secunia.com>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb6ee0f3c19980328529d5ed7a1650e41164ca49
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Wed Nov 29 07:35:21 2017 +0200

    ovl: update ctx->pos on impure dir iteration
    
    commit b02a16e6413a2f782e542ef60bad9ff6bf212f8a upstream.
    
    This fixes a regression with readdir of impure dir in overlayfs
    that is shared to VM via 9p fs.
    
    Reported-by: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
    Fixes: 4edb83bb1041 ("ovl: constant d_ino for non-merge dirs")
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Tested-by: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 066f40dc495d5ab2ec9a871cb8703d9591d636c5
Author: Vivek Goyal <vgoyal@redhat.com>
Date:   Mon Nov 27 10:12:44 2017 -0500

    ovl: Pass ovl_get_nlink() parameters in right order
    
    commit 08d8f8a5b094b66b29936e8751b4a818b8db1207 upstream.
    
    Right now we seem to be passing index as "lowerdentry" and origin.dentry
    as "upperdentry". IIUC, we should pass these parameters in reversed order
    and this looks like a bug.
    
    Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
    Acked-by: Amir Goldstein <amir73il@gmail.com>
    Fixes: caf70cb2ba5d ("ovl: cleanup orphan index entries")
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c5ae6a301a5415d1334f6c655bebf91d475bd89
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue Dec 12 14:25:13 2017 -0500

    USB: core: prevent malicious bNumInterfaces overflow
    
    commit 48a4ff1c7bb5a32d2e396b03132d20d552c0eca7 upstream.
    
    A malicious USB device with crafted descriptors can cause the kernel
    to access unallocated memory by setting the bNumInterfaces value too
    high in a configuration descriptor.  Although the value is adjusted
    during parsing, this adjustment is skipped in one of the error return
    paths.
    
    This patch prevents the problem by setting bNumInterfaces to 0
    initially.  The existing code already sets it to the proper value
    after parsing is complete.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6391294874d505a5e8681c41439a74e7019b267f
Author: David Kozub <zub@linux.fjfi.cvut.cz>
Date:   Tue Dec 5 22:40:04 2017 +0100

    USB: uas and storage: Add US_FL_BROKEN_FUA for another JMicron JMS567 ID
    
    commit 62354454625741f0569c2cbe45b2d192f8fd258e upstream.
    
    There is another JMS567-based USB3 UAS enclosure (152d:0578) that fails
    with the following error:
    
    [sda] tag#0 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
    [sda] tag#0 Sense Key : Illegal Request [current]
    [sda] tag#0 Add. Sense: Invalid field in cdb
    
    The issue occurs both with UAS (occasionally) and mass storage
    (immediately after mounting a FS on a disk in the enclosure).
    
    Enabling US_FL_BROKEN_FUA quirk solves this issue.
    
    This patch adds an UNUSUAL_DEV with US_FL_BROKEN_FUA for the enclosure
    for both UAS and mass storage.
    
    Signed-off-by: David Kozub <zub@linux.fjfi.cvut.cz>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8582c0f792fc1603a8998de60a156359f15dfd4
Author: Changbin Du <changbin.du@intel.com>
Date:   Thu Nov 30 11:39:43 2017 +0800

    tracing: Allocate mask_str buffer dynamically
    
    commit 90e406f96f630c07d631a021fd4af10aac913e77 upstream.
    
    The default NR_CPUS can be very large, but actual possible nr_cpu_ids
    usually is very small. For my x86 distribution, the NR_CPUS is 8192 and
    nr_cpu_ids is 4. About 2 pages are wasted.
    
    Most machines don't have so many CPUs, so define a array with NR_CPUS
    just wastes memory. So let's allocate the buffer dynamically when need.
    
    With this change, the mutext tracing_cpumask_update_lock also can be
    removed now, which was used to protect mask_str.
    
    Link: http://lkml.kernel.org/r/1512013183-19107-1-git-send-email-changbin.du@intel.com
    
    Fixes: 36dfe9252bd4c ("ftrace: make use of tracing_cpumask")
    Signed-off-by: Changbin Du <changbin.du@intel.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55fe4698d80ecb553d015b5df96ccf9584cbc06b
Author: Michal Hocko <mhocko@suse.com>
Date:   Thu Dec 14 15:33:15 2017 -0800

    mm, oom_reaper: fix memory corruption
    
    commit 4837fe37adff1d159904f0c013471b1ecbcb455e upstream.
    
    David Rientjes has reported the following memory corruption while the
    oom reaper tries to unmap the victims address space
    
      BUG: Bad page map in process oom_reaper  pte:6353826300000000 pmd:00000000
      addr:00007f50cab1d000 vm_flags:08100073 anon_vma:ffff9eea335603f0 mapping:          (null) index:7f50cab1d
      file:          (null) fault:          (null) mmap:          (null) readpage:          (null)
      CPU: 2 PID: 1001 Comm: oom_reaper
      Call Trace:
         unmap_page_range+0x1068/0x1130
         __oom_reap_task_mm+0xd5/0x16b
         oom_reaper+0xff/0x14c
         kthread+0xc1/0xe0
    
    Tetsuo Handa has noticed that the synchronization inside exit_mmap is
    insufficient.  We only synchronize with the oom reaper if
    tsk_is_oom_victim which is not true if the final __mmput is called from
    a different context than the oom victim exit path.  This can trivially
    happen from context of any task which has grabbed mm reference (e.g.  to
    read /proc/<pid>/ file which requires mm etc.).
    
    The race would look like this
    
      oom_reaper            oom_victim              task
                                                    mmget_not_zero
                            do_exit
                              mmput
      __oom_reap_task_mm                            mmput
                                                      __mmput
                                                        exit_mmap
                                                          remove_vma
        unmap_page_range
    
    Fix this issue by providing a new mm_is_oom_victim() helper which
    operates on the mm struct rather than a task.  Any context which
    operates on a remote mm struct should use this helper in place of
    tsk_is_oom_victim.  The flag is set in mark_oom_victim and never cleared
    so it is stable in the exit_mmap path.
    
    Debugged by Tetsuo Handa.
    
    Link: http://lkml.kernel.org/r/20171210095130.17110-1-mhocko@kernel.org
    Fixes: 212925802454 ("mm: oom: let oom_reap_task and exit_mmap run concurrently")
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reported-by: David Rientjes <rientjes@google.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Andrea Argangeli <andrea@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5d9b78d530a45f0c226317764a7865f7911ab46
Author: Thiago Rafael Becker <thiago.becker@gmail.com>
Date:   Thu Dec 14 15:33:12 2017 -0800

    kernel: make groups_sort calling a responsibility group_info allocators
    
    commit bdcf0a423ea1c40bbb40e7ee483b50fc8aa3d758 upstream.
    
    In testing, we found that nfsd threads may call set_groups in parallel
    for the same entry cached in auth.unix.gid, racing in the call of
    groups_sort, corrupting the groups for that entry and leading to
    permission denials for the client.
    
    This patch:
     - Make groups_sort globally visible.
     - Move the call to groups_sort to the modifiers of group_info
     - Remove the call to groups_sort from set_groups
    
    Link: http://lkml.kernel.org/r/20171211151420.18655-1-thiago.becker@gmail.com
    Signed-off-by: Thiago Rafael Becker <thiago.becker@gmail.com>
    Reviewed-by: Matthew Wilcox <mawilcox@microsoft.com>
    Reviewed-by: NeilBrown <neilb@suse.com>
    Acked-by: "J. Bruce Fields" <bfields@fieldses.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3d2f01a6eaf6022167c94afba34b6d6722392c9
Author: NeilBrown <neilb@suse.com>
Date:   Thu Dec 14 15:32:38 2017 -0800

    autofs: fix careless error in recent commit
    
    commit 302ec300ef8a545a7fc7f667e5fd743b091c2eeb upstream.
    
    Commit ecc0c469f277 ("autofs: don't fail mount for transient error") was
    meant to replace an 'if' with a 'switch', but instead added the 'switch'
    leaving the case in place.
    
    Link: http://lkml.kernel.org/r/87zi6wstmw.fsf@notabene.neil.brown.name
    Fixes: ecc0c469f277 ("autofs: don't fail mount for transient error")
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: NeilBrown <neilb@suse.com>
    Cc: Ian Kent <raven@themaw.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8def7a4185b8b1ec2b843af346977f00259414e
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 14 15:32:34 2017 -0800

    string.h: workaround for increased stack usage
    
    commit 146734b091430c80d80bb96b1139a96fb4bc830e upstream.
    
    The hardened strlen() function causes rather large stack usage in at
    least one file in the kernel, in particular when CONFIG_KASAN is
    enabled:
    
      drivers/media/usb/em28xx/em28xx-dvb.c: In function 'em28xx_dvb_init':
      drivers/media/usb/em28xx/em28xx-dvb.c:2062:1: error: the frame size of 3256 bytes is larger than 204 bytes [-Werror=frame-larger-than=]
    
    Analyzing this problem led to the discovery that gcc fails to merge the
    stack slots for the i2c_board_info[] structures after we strlcpy() into
    them, due to the 'noreturn' attribute on the source string length check.
    
    I reported this as a gcc bug, but it is unlikely to get fixed for gcc-8,
    since it is relatively easy to work around, and it gets triggered
    rarely.  An earlier workaround I did added an empty inline assembly
    statement before the call to fortify_panic(), which works surprisingly
    well, but is really ugly and unintuitive.
    
    This is a new approach to the same problem, this time addressing it by
    not calling the 'extern __real_strnlen()' function for string constants
    where __builtin_strlen() is a compile-time constant and therefore known
    to be safe.
    
    We do this by checking if the last character in the string is a
    compile-time constant '\0'.  If it is, we can assume that strlen() of
    the string is also constant.
    
    As a side-effect, this should also improve the object code output for
    any other call of strlen() on a string constant.
    
    [akpm@linux-foundation.org: add comment]
    Link: http://lkml.kernel.org/r/20171205215143.3085755-1-arnd@arndb.de
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=82365
    Link: https://patchwork.kernel.org/patch/9980413/
    Link: https://patchwork.kernel.org/patch/9974047/
    Fixes: 6974f0c4555 ("include/linux/string.h: add the option of fortified string.h functions")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Daniel Micay <danielmicay@gmail.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Martin Wilck <mwilck@suse.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f3fc5f95975e101b198ecf223ad6f9f8994b191
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Tue Nov 21 09:36:33 2017 +1100

    cifs: fix NULL deref in SMB2_read
    
    commit a821df3f1af72aa6a0d573eea94a7dd2613e9f4e upstream.
    
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf1048e46d4f301261d946e73add464fb95fd5a4
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Nov 28 00:46:24 2017 -0800

    crypto: af_alg - fix NULL pointer dereference in
    
    commit 887207ed9e5812ed9239b6d07185a2d35dda91db upstream.
    
     af_alg_free_areq_sgls()
    
    If allocating the ->tsgl member of 'struct af_alg_async_req' failed,
    during cleanup we dereferenced the NULL ->tsgl pointer in
    af_alg_free_areq_sgls(), because ->tsgl_entries was nonzero.
    
    Fix it by only freeing the ->tsgl list if it is non-NULL.
    
    This affected both algif_skcipher and algif_aead.
    
    Fixes: e870456d8e7c ("crypto: algif_skcipher - overhaul memory management")
    Fixes: d887c52d6ae4 ("crypto: algif_aead - overhaul memory management")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c68b31521d5fb7216cb1113130399afe65437c6c
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Nov 28 20:56:59 2017 -0800

    crypto: salsa20 - fix blkcipher_walk API usage
    
    commit ecaaab5649781c5a0effdaf298a925063020500e upstream.
    
    When asked to encrypt or decrypt 0 bytes, both the generic and x86
    implementations of Salsa20 crash in blkcipher_walk_done(), either when
    doing 'kfree(walk->buffer)' or 'free_page((unsigned long)walk->page)',
    because walk->buffer and walk->page have not been initialized.
    
    The bug is that Salsa20 is calling blkcipher_walk_done() even when
    nothing is in 'walk.nbytes'.  But blkcipher_walk_done() is only meant to
    be called when a nonzero number of bytes have been provided.
    
    The broken code is part of an optimization that tries to make only one
    call to salsa20_encrypt_bytes() to process inputs that are not evenly
    divisible by 64 bytes.  To fix the bug, just remove this "optimization"
    and use the blkcipher_walk API the same way all the other users do.
    
    Reproducer:
    
        #include <linux/if_alg.h>
        #include <sys/socket.h>
        #include <unistd.h>
    
        int main()
        {
                int algfd, reqfd;
                struct sockaddr_alg addr = {
                        .salg_type = "skcipher",
                        .salg_name = "salsa20",
                };
                char key[16] = { 0 };
    
                algfd = socket(AF_ALG, SOCK_SEQPACKET, 0);
                bind(algfd, (void *)&addr, sizeof(addr));
                reqfd = accept(algfd, 0, 0);
                setsockopt(algfd, SOL_ALG, ALG_SET_KEY, key, sizeof(key));
                read(reqfd, key, sizeof(key));
        }
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Fixes: eb6f13eb9f81 ("[CRYPTO] salsa20_generic: Fix multi-page processing")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 902ae89f841de0c8d2857919296923f6332e174f
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Nov 28 18:01:38 2017 -0800

    crypto: hmac - require that the underlying hash algorithm is unkeyed
    
    commit af3ff8045bbf3e32f1a448542e73abb4c8ceb6f1 upstream.
    
    Because the HMAC template didn't check that its underlying hash
    algorithm is unkeyed, trying to use "hmac(hmac(sha3-512-generic))"
    through AF_ALG or through KEYCTL_DH_COMPUTE resulted in the inner HMAC
    being used without having been keyed, resulting in sha3_update() being
    called without sha3_init(), causing a stack buffer overflow.
    
    This is a very old bug, but it seems to have only started causing real
    problems when SHA-3 support was added (requires CONFIG_CRYPTO_SHA3)
    because the innermost hash's state is ->import()ed from a zeroed buffer,
    and it just so happens that other hash algorithms are fine with that,
    but SHA-3 is not.  However, there could be arch or hardware-dependent
    hash algorithms also affected; I couldn't test everything.
    
    Fix the bug by introducing a function crypto_shash_alg_has_setkey()
    which tests whether a shash algorithm is keyed.  Then update the HMAC
    template to require that its underlying hash algorithm is unkeyed.
    
    Here is a reproducer:
    
        #include <linux/if_alg.h>
        #include <sys/socket.h>
    
        int main()
        {
            int algfd;
            struct sockaddr_alg addr = {
                .salg_type = "hash",
                .salg_name = "hmac(hmac(sha3-512-generic))",
            };
            char key[4096] = { 0 };
    
            algfd = socket(AF_ALG, SOCK_SEQPACKET, 0);
            bind(algfd, (const struct sockaddr *)&addr, sizeof(addr));
            setsockopt(algfd, SOL_ALG, ALG_SET_KEY, key, sizeof(key));
        }
    
    Here was the KASAN report from syzbot:
    
        BUG: KASAN: stack-out-of-bounds in memcpy include/linux/string.h:341  [inline]
        BUG: KASAN: stack-out-of-bounds in sha3_update+0xdf/0x2e0  crypto/sha3_generic.c:161
        Write of size 4096 at addr ffff8801cca07c40 by task syzkaller076574/3044
    
        CPU: 1 PID: 3044 Comm: syzkaller076574 Not tainted 4.14.0-mm1+ #25
        Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS  Google 01/01/2011
        Call Trace:
          __dump_stack lib/dump_stack.c:17 [inline]
          dump_stack+0x194/0x257 lib/dump_stack.c:53
          print_address_description+0x73/0x250 mm/kasan/report.c:252
          kasan_report_error mm/kasan/report.c:351 [inline]
          kasan_report+0x25b/0x340 mm/kasan/report.c:409
          check_memory_region_inline mm/kasan/kasan.c:260 [inline]
          check_memory_region+0x137/0x190 mm/kasan/kasan.c:267
          memcpy+0x37/0x50 mm/kasan/kasan.c:303
          memcpy include/linux/string.h:341 [inline]
          sha3_update+0xdf/0x2e0 crypto/sha3_generic.c:161
          crypto_shash_update+0xcb/0x220 crypto/shash.c:109
          shash_finup_unaligned+0x2a/0x60 crypto/shash.c:151
          crypto_shash_finup+0xc4/0x120 crypto/shash.c:165
          hmac_finup+0x182/0x330 crypto/hmac.c:152
          crypto_shash_finup+0xc4/0x120 crypto/shash.c:165
          shash_digest_unaligned+0x9e/0xd0 crypto/shash.c:172
          crypto_shash_digest+0xc4/0x120 crypto/shash.c:186
          hmac_setkey+0x36a/0x690 crypto/hmac.c:66
          crypto_shash_setkey+0xad/0x190 crypto/shash.c:64
          shash_async_setkey+0x47/0x60 crypto/shash.c:207
          crypto_ahash_setkey+0xaf/0x180 crypto/ahash.c:200
          hash_setkey+0x40/0x90 crypto/algif_hash.c:446
          alg_setkey crypto/af_alg.c:221 [inline]
          alg_setsockopt+0x2a1/0x350 crypto/af_alg.c:254
          SYSC_setsockopt net/socket.c:1851 [inline]
          SyS_setsockopt+0x189/0x360 net/socket.c:1830
          entry_SYSCALL_64_fastpath+0x1f/0x96
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80dbdc5ae74d6167edf081f8865df06fb6615578
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Nov 26 23:16:49 2017 -0800

    crypto: rsa - fix buffer overread when stripping leading zeroes
    
    commit d2890c3778b164fde587bc16583f3a1c87233ec5 upstream.
    
    In rsa_get_n(), if the buffer contained all 0's and "FIPS mode" is
    enabled, we would read one byte past the end of the buffer while
    scanning the leading zeroes.  Fix it by checking 'n_sz' before '!*ptr'.
    
    This bug was reachable by adding a specially crafted key of type
    "asymmetric" (requires CONFIG_RSA and CONFIG_X509_CERTIFICATE_PARSER).
    
    KASAN report:
    
        BUG: KASAN: slab-out-of-bounds in rsa_get_n+0x19e/0x1d0 crypto/rsa_helper.c:33
        Read of size 1 at addr ffff88003501a708 by task keyctl/196
    
        CPU: 1 PID: 196 Comm: keyctl Not tainted 4.14.0-09238-g1d3b78bbc6e9 #26
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
        Call Trace:
         rsa_get_n+0x19e/0x1d0 crypto/rsa_helper.c:33
         asn1_ber_decoder+0x82a/0x1fd0 lib/asn1_decoder.c:328
         rsa_set_pub_key+0xd3/0x320 crypto/rsa.c:278
         crypto_akcipher_set_pub_key ./include/crypto/akcipher.h:364 [inline]
         pkcs1pad_set_pub_key+0xae/0x200 crypto/rsa-pkcs1pad.c:117
         crypto_akcipher_set_pub_key ./include/crypto/akcipher.h:364 [inline]
         public_key_verify_signature+0x270/0x9d0 crypto/asymmetric_keys/public_key.c:106
         x509_check_for_self_signed+0x2ea/0x480 crypto/asymmetric_keys/x509_public_key.c:141
         x509_cert_parse+0x46a/0x620 crypto/asymmetric_keys/x509_cert_parser.c:129
         x509_key_preparse+0x61/0x750 crypto/asymmetric_keys/x509_public_key.c:174
         asymmetric_key_preparse+0xa4/0x150 crypto/asymmetric_keys/asymmetric_type.c:388
         key_create_or_update+0x4d4/0x10a0 security/keys/key.c:850
         SYSC_add_key security/keys/keyctl.c:122 [inline]
         SyS_add_key+0xe8/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
        Allocated by task 196:
         __do_kmalloc mm/slab.c:3711 [inline]
         __kmalloc_track_caller+0x118/0x2e0 mm/slab.c:3726
         kmemdup+0x17/0x40 mm/util.c:118
         kmemdup ./include/linux/string.h:414 [inline]
         x509_cert_parse+0x2cb/0x620 crypto/asymmetric_keys/x509_cert_parser.c:106
         x509_key_preparse+0x61/0x750 crypto/asymmetric_keys/x509_public_key.c:174
         asymmetric_key_preparse+0xa4/0x150 crypto/asymmetric_keys/asymmetric_type.c:388
         key_create_or_update+0x4d4/0x10a0 security/keys/key.c:850
         SYSC_add_key security/keys/keyctl.c:122 [inline]
         SyS_add_key+0xe8/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
    Fixes: 5a7de97309f5 ("crypto: rsa - return raw integers for the ASN.1 parser")
    Cc: Tudor Ambarus <tudor-dan.ambarus@nxp.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: James Morris <james.l.morris@oracle.com>
    Reviewed-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96c2dfaebe1a8eba95d43732a1413c777469128c
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Nov 27 23:23:05 2017 -0800

    crypto: algif_aead - fix reference counting of null skcipher
    
    commit b32a7dc8aef1882fbf983eb354837488cc9d54dc upstream.
    
    In the AEAD interface for AF_ALG, the reference to the "null skcipher"
    held by each tfm was being dropped in the wrong place -- when each
    af_alg_ctx was freed instead of when the aead_tfm was freed.  As
    discovered by syzkaller, a specially crafted program could use this to
    cause the null skcipher to be freed while it is still in use.
    
    Fix it by dropping the reference in the right place.
    
    Fixes: 72548b093ee3 ("crypto: algif_aead - copy AAD from src to dst")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d27b022022a88e189c0e9d63c4ac01af354735f
Author: Martin Kaiser <martin@kaiser.cx>
Date:   Tue Oct 17 22:53:08 2017 +0200

    mfd: fsl-imx25: Clean up irq settings during removal
    
    commit 18f77393796848e68909e65d692c1d1436f06e06 upstream.
    
    When fsl-imx25-tsadc is compiled as a module, loading, unloading and
    reloading the module will lead to a crash.
    
    Unable to handle kernel paging request at virtual address bf005430
    [<c004df6c>] (irq_find_matching_fwspec)
       from [<c028d5ec>] (of_irq_get+0x58/0x74)
    [<c028d594>] (of_irq_get)
       from [<c01ff970>] (platform_get_irq+0x48/0xc8)
    [<c01ff928>] (platform_get_irq)
       from [<bf00e33c>] (mx25_tsadc_probe+0x220/0x2f4 [fsl_imx25_tsadc])
    
    irq_find_matching_fwspec() loops over all registered irq domains. The
    irq domain is still registered from last time the module was loaded but
    the pointer to its operations is invalid after the module was unloaded.
    
    Add a removal function which clears the irq handler and removes the irq
    domain. With this cleanup in place, it's possible to unload and reload
    the module.
    
    Signed-off-by: Martin Kaiser <martin@kaiser.cx>
    Reviewed-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3afae8437c3cbc22966762e80e81818f5a90eb06
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Dec 17 15:08:14 2017 +0100

    Linux 4.14.7

commit 7bc8eb30f1e02b4dd6fd2869720c64d9bf39d765
Author: Mauro Carvalho Chehab <mchehab@s-opensource.com>
Date:   Tue Nov 7 08:39:39 2017 -0500

    dvb_frontend: don't use-after-free the frontend struct
    
    commit b1cb7372fa822af6c06c8045963571d13ad6348b upstream.
    
    dvb_frontend_invoke_release() may free the frontend struct.
    So, the free logic can't update it anymore after calling it.
    
    That's OK, as __dvb_frontend_free() is called only when the
    krefs are zeroed, so nobody is using it anymore.
    
    That should fix the following KASAN error:
    
    The KASAN report looks like this (running on kernel 3e0cc09a3a2c40ec1ffb6b4e12da86e98feccb11 (4.14-rc5+)):
    ==================================================================
    BUG: KASAN: use-after-free in __dvb_frontend_free+0x113/0x120
    Write of size 8 at addr ffff880067d45a00 by task kworker/0:1/24
    
    CPU: 0 PID: 24 Comm: kworker/0:1 Not tainted 4.14.0-rc5-43687-g06ab8a23e0e6 #545
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Workqueue: usb_hub_wq hub_event
    Call Trace:
     __dump_stack lib/dump_stack.c:16
     dump_stack+0x292/0x395 lib/dump_stack.c:52
     print_address_description+0x78/0x280 mm/kasan/report.c:252
     kasan_report_error mm/kasan/report.c:351
     kasan_report+0x23d/0x350 mm/kasan/report.c:409
     __asan_report_store8_noabort+0x1c/0x20 mm/kasan/report.c:435
     __dvb_frontend_free+0x113/0x120 drivers/media/dvb-core/dvb_frontend.c:156
     dvb_frontend_put+0x59/0x70 drivers/media/dvb-core/dvb_frontend.c:176
     dvb_frontend_detach+0x120/0x150 drivers/media/dvb-core/dvb_frontend.c:2803
     dvb_usb_adapter_frontend_exit+0xd6/0x160 drivers/media/usb/dvb-usb/dvb-usb-dvb.c:340
     dvb_usb_adapter_exit drivers/media/usb/dvb-usb/dvb-usb-init.c:116
     dvb_usb_exit+0x9b/0x200 drivers/media/usb/dvb-usb/dvb-usb-init.c:132
     dvb_usb_device_exit+0xa5/0xf0 drivers/media/usb/dvb-usb/dvb-usb-init.c:295
     usb_unbind_interface+0x21c/0xa90 drivers/usb/core/driver.c:423
     __device_release_driver drivers/base/dd.c:861
     device_release_driver_internal+0x4f1/0x5c0 drivers/base/dd.c:893
     device_release_driver+0x1e/0x30 drivers/base/dd.c:918
     bus_remove_device+0x2f4/0x4b0 drivers/base/bus.c:565
     device_del+0x5c4/0xab0 drivers/base/core.c:1985
     usb_disable_device+0x1e9/0x680 drivers/usb/core/message.c:1170
     usb_disconnect+0x260/0x7a0 drivers/usb/core/hub.c:2124
     hub_port_connect drivers/usb/core/hub.c:4754
     hub_port_connect_change drivers/usb/core/hub.c:5009
     port_event drivers/usb/core/hub.c:5115
     hub_event+0x1318/0x3740 drivers/usb/core/hub.c:5195
     process_one_work+0xc73/0x1d90 kernel/workqueue.c:2119
     worker_thread+0x221/0x1850 kernel/workqueue.c:2253
     kthread+0x363/0x440 kernel/kthread.c:231
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431
    
    Allocated by task 24:
     save_stack_trace+0x1b/0x20 arch/x86/kernel/stacktrace.c:59
     save_stack+0x43/0xd0 mm/kasan/kasan.c:447
     set_track mm/kasan/kasan.c:459
     kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:551
     kmem_cache_alloc_trace+0x11e/0x2d0 mm/slub.c:2772
     kmalloc ./include/linux/slab.h:493
     kzalloc ./include/linux/slab.h:666
     dtt200u_fe_attach+0x4c/0x110 drivers/media/usb/dvb-usb/dtt200u-fe.c:212
     dtt200u_frontend_attach+0x35/0x80 drivers/media/usb/dvb-usb/dtt200u.c:136
     dvb_usb_adapter_frontend_init+0x32b/0x660 drivers/media/usb/dvb-usb/dvb-usb-dvb.c:286
     dvb_usb_adapter_init drivers/media/usb/dvb-usb/dvb-usb-init.c:86
     dvb_usb_init drivers/media/usb/dvb-usb/dvb-usb-init.c:162
     dvb_usb_device_init+0xf73/0x17f0 drivers/media/usb/dvb-usb/dvb-usb-init.c:277
     dtt200u_usb_probe+0xa1/0xe0 drivers/media/usb/dvb-usb/dtt200u.c:155
     usb_probe_interface+0x35d/0x8e0 drivers/usb/core/driver.c:361
     really_probe drivers/base/dd.c:413
     driver_probe_device+0x610/0xa00 drivers/base/dd.c:557
     __device_attach_driver+0x230/0x290 drivers/base/dd.c:653
     bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463
     __device_attach+0x26b/0x3c0 drivers/base/dd.c:710
     device_initial_probe+0x1f/0x30 drivers/base/dd.c:757
     bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523
     device_add+0xd0b/0x1660 drivers/base/core.c:1835
     usb_set_configuration+0x104e/0x1870 drivers/usb/core/message.c:1932
     generic_probe+0x73/0xe0 drivers/usb/core/generic.c:174
     usb_probe_device+0xaf/0xe0 drivers/usb/core/driver.c:266
     really_probe drivers/base/dd.c:413
     driver_probe_device+0x610/0xa00 drivers/base/dd.c:557
     __device_attach_driver+0x230/0x290 drivers/base/dd.c:653
     bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463
     __device_attach+0x26b/0x3c0 drivers/base/dd.c:710
     device_initial_probe+0x1f/0x30 drivers/base/dd.c:757
     bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523
     device_add+0xd0b/0x1660 drivers/base/core.c:1835
     usb_new_device+0x7b8/0x1020 drivers/usb/core/hub.c:2457
     hub_port_connect drivers/usb/core/hub.c:4903
     hub_port_connect_change drivers/usb/core/hub.c:5009
     port_event drivers/usb/core/hub.c:5115
     hub_event+0x194d/0x3740 drivers/usb/core/hub.c:5195
     process_one_work+0xc73/0x1d90 kernel/workqueue.c:2119
     worker_thread+0x221/0x1850 kernel/workqueue.c:2253
     kthread+0x363/0x440 kernel/kthread.c:231
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431
    
    Freed by task 24:
     save_stack_trace+0x1b/0x20 arch/x86/kernel/stacktrace.c:59
     save_stack+0x43/0xd0 mm/kasan/kasan.c:447
     set_track mm/kasan/kasan.c:459
     kasan_slab_free+0x72/0xc0 mm/kasan/kasan.c:524
     slab_free_hook mm/slub.c:1390
     slab_free_freelist_hook mm/slub.c:1412
     slab_free mm/slub.c:2988
     kfree+0xf6/0x2f0 mm/slub.c:3919
     dtt200u_fe_release+0x3c/0x50 drivers/media/usb/dvb-usb/dtt200u-fe.c:202
     dvb_frontend_invoke_release.part.13+0x1c/0x30 drivers/media/dvb-core/dvb_frontend.c:2790
     dvb_frontend_invoke_release drivers/media/dvb-core/dvb_frontend.c:2789
     __dvb_frontend_free+0xad/0x120 drivers/media/dvb-core/dvb_frontend.c:153
     dvb_frontend_put+0x59/0x70 drivers/media/dvb-core/dvb_frontend.c:176
     dvb_frontend_detach+0x120/0x150 drivers/media/dvb-core/dvb_frontend.c:2803
     dvb_usb_adapter_frontend_exit+0xd6/0x160 drivers/media/usb/dvb-usb/dvb-usb-dvb.c:340
     dvb_usb_adapter_exit drivers/media/usb/dvb-usb/dvb-usb-init.c:116
     dvb_usb_exit+0x9b/0x200 drivers/media/usb/dvb-usb/dvb-usb-init.c:132
     dvb_usb_device_exit+0xa5/0xf0 drivers/media/usb/dvb-usb/dvb-usb-init.c:295
     usb_unbind_interface+0x21c/0xa90 drivers/usb/core/driver.c:423
     __device_release_driver drivers/base/dd.c:861
     device_release_driver_internal+0x4f1/0x5c0 drivers/base/dd.c:893
     device_release_driver+0x1e/0x30 drivers/base/dd.c:918
     bus_remove_device+0x2f4/0x4b0 drivers/base/bus.c:565
     device_del+0x5c4/0xab0 drivers/base/core.c:1985
     usb_disable_device+0x1e9/0x680 drivers/usb/core/message.c:1170
     usb_disconnect+0x260/0x7a0 drivers/usb/core/hub.c:2124
     hub_port_connect drivers/usb/core/hub.c:4754
     hub_port_connect_change drivers/usb/core/hub.c:5009
     port_event drivers/usb/core/hub.c:5115
     hub_event+0x1318/0x3740 drivers/usb/core/hub.c:5195
     process_one_work+0xc73/0x1d90 kernel/workqueue.c:2119
     worker_thread+0x221/0x1850 kernel/workqueue.c:2253
     kthread+0x363/0x440 kernel/kthread.c:231
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431
    
    The buggy address belongs to the object at ffff880067d45500
     which belongs to the cache kmalloc-2048 of size 2048
    The buggy address is located 1280 bytes inside of
     2048-byte region [ffff880067d45500, ffff880067d45d00)
    The buggy address belongs to the page:
    page:ffffea00019f5000 count:1 mapcount:0 mapping:          (null)
    index:0x0 compound_mapcount: 0
    flags: 0x100000000008100(slab|head)
    raw: 0100000000008100 0000000000000000 0000000000000000 00000001000f000f
    raw: dead000000000100 dead000000000200 ffff88006c002d80 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff880067d45900: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff880067d45980: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff880067d45a00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                       ^
     ffff880067d45a80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff880067d45b00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    Fixes: ead666000a5f ("media: dvb_frontend: only use kref after initialized")
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Suggested-by: Matthias Schwarzott <zzam@gentoo.org>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce344631dc13717314184ebd47f5e8b0ff3cfcab
Author: Daniel Scheller <d.scheller@gmx.net>
Date:   Sun Oct 29 11:43:22 2017 -0400

    media: dvb-core: always call invoke_release() in fe_free()
    
    commit 62229de19ff2b7f3e0ebf4d48ad99061127d0281 upstream.
    
    Follow-up to: ead666000a5f ("media: dvb_frontend: only use kref after initialized")
    
    The aforementioned commit fixed refcount OOPSes when demod driver attaching
    succeeded but tuner driver didn't. However, the use count of the attached
    demod drivers don't go back to zero and thus couldn't be cleanly unloaded.
    Improve on this by calling dvb_frontend_invoke_release() in
    __dvb_frontend_free() regardless of fepriv being NULL, instead of returning
    when fepriv is NULL. This is safe to do since _invoke_release() will check
    for passed pointers being valid before calling the .release() function.
    
    [mchehab@s-opensource.com: changed the logic a little bit to reduce
     conflicts with another bug fix patch under review]
    Fixes: ead666000a5f ("media: dvb_frontend: only use kref after initialized")
    Signed-off-by: Daniel Scheller <d.scheller@gmx.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93e2d845f265f8ff006f6ac5134f038ad382614e
Author: Reinette Chatre <reinette.chatre@intel.com>
Date:   Fri Oct 20 02:16:58 2017 -0700

    x86/intel_rdt: Fix potential deadlock during resctrl unmount
    
    
    [ Upstream commit 36b6f9fcb8928c06b6638a4cf91bc9d69bb49aa2 ]
    
    Lockdep warns about a potential deadlock:
    
    [   66.782842] ======================================================
    [   66.782888] WARNING: possible circular locking dependency detected
    [   66.782937] 4.14.0-rc2-test-test+ #48 Not tainted
    [   66.782983] ------------------------------------------------------
    [   66.783052] umount/336 is trying to acquire lock:
    [   66.783117]  (cpu_hotplug_lock.rw_sem){++++}, at: [<ffffffff81032395>] rdt_kill_sb+0x215/0x390
    [   66.783193]
                   but task is already holding lock:
    [   66.783244]  (rdtgroup_mutex){+.+.}, at: [<ffffffff810321b6>] rdt_kill_sb+0x36/0x390
    [   66.783305]
                   which lock already depends on the new lock.
    
    [   66.783364]
                   the existing dependency chain (in reverse order) is:
    [   66.783419]
                   -> #3 (rdtgroup_mutex){+.+.}:
    [   66.783467]        __lock_acquire+0x1293/0x13f0
    [   66.783509]        lock_acquire+0xaf/0x220
    [   66.783543]        __mutex_lock+0x71/0x9b0
    [   66.783575]        mutex_lock_nested+0x1b/0x20
    [   66.783610]        intel_rdt_online_cpu+0x3b/0x430
    [   66.783649]        cpuhp_invoke_callback+0xab/0x8e0
    [   66.783687]        cpuhp_thread_fun+0x7a/0x150
    [   66.783722]        smpboot_thread_fn+0x1cc/0x270
    [   66.783764]        kthread+0x16e/0x190
    [   66.783794]        ret_from_fork+0x27/0x40
    [   66.783825]
                   -> #2 (cpuhp_state){+.+.}:
    [   66.783870]        __lock_acquire+0x1293/0x13f0
    [   66.783906]        lock_acquire+0xaf/0x220
    [   66.783938]        cpuhp_issue_call+0x102/0x170
    [   66.783974]        __cpuhp_setup_state_cpuslocked+0x154/0x2a0
    [   66.784023]        __cpuhp_setup_state+0xc7/0x170
    [   66.784061]        page_writeback_init+0x43/0x67
    [   66.784097]        pagecache_init+0x43/0x4a
    [   66.784131]        start_kernel+0x3ad/0x3f7
    [   66.784165]        x86_64_start_reservations+0x2a/0x2c
    [   66.784204]        x86_64_start_kernel+0x72/0x75
    [   66.784241]        verify_cpu+0x0/0xfb
    [   66.784270]
                   -> #1 (cpuhp_state_mutex){+.+.}:
    [   66.784319]        __lock_acquire+0x1293/0x13f0
    [   66.784355]        lock_acquire+0xaf/0x220
    [   66.784387]        __mutex_lock+0x71/0x9b0
    [   66.784419]        mutex_lock_nested+0x1b/0x20
    [   66.784454]        __cpuhp_setup_state_cpuslocked+0x52/0x2a0
    [   66.784497]        __cpuhp_setup_state+0xc7/0x170
    [   66.784535]        page_alloc_init+0x28/0x30
    [   66.784569]        start_kernel+0x148/0x3f7
    [   66.784602]        x86_64_start_reservations+0x2a/0x2c
    [   66.784642]        x86_64_start_kernel+0x72/0x75
    [   66.784678]        verify_cpu+0x0/0xfb
    [   66.784707]
                   -> #0 (cpu_hotplug_lock.rw_sem){++++}:
    [   66.784759]        check_prev_add+0x32f/0x6e0
    [   66.784794]        __lock_acquire+0x1293/0x13f0
    [   66.784830]        lock_acquire+0xaf/0x220
    [   66.784863]        cpus_read_lock+0x3d/0xb0
    [   66.784896]        rdt_kill_sb+0x215/0x390
    [   66.784930]        deactivate_locked_super+0x3e/0x70
    [   66.784968]        deactivate_super+0x40/0x60
    [   66.785003]        cleanup_mnt+0x3f/0x80
    [   66.785034]        __cleanup_mnt+0x12/0x20
    [   66.785070]        task_work_run+0x8b/0xc0
    [   66.785103]        exit_to_usermode_loop+0x94/0xa0
    [   66.786804]        syscall_return_slowpath+0xe8/0x150
    [   66.788502]        entry_SYSCALL_64_fastpath+0xab/0xad
    [   66.790194]
                   other info that might help us debug this:
    
    [   66.795139] Chain exists of:
                     cpu_hotplug_lock.rw_sem --> cpuhp_state --> rdtgroup_mutex
    
    [   66.800035]  Possible unsafe locking scenario:
    
    [   66.803267]        CPU0                    CPU1
    [   66.804867]        ----                    ----
    [   66.806443]   lock(rdtgroup_mutex);
    [   66.808002]                                lock(cpuhp_state);
    [   66.809565]                                lock(rdtgroup_mutex);
    [   66.811110]   lock(cpu_hotplug_lock.rw_sem);
    [   66.812608]
                    *** DEADLOCK ***
    
    [   66.816983] 2 locks held by umount/336:
    [   66.818418]  #0:  (&type->s_umount_key#35){+.+.}, at: [<ffffffff81229738>] deactivate_super+0x38/0x60
    [   66.819922]  #1:  (rdtgroup_mutex){+.+.}, at: [<ffffffff810321b6>] rdt_kill_sb+0x36/0x390
    
    When the resctrl filesystem is unmounted the locks should be obtain in the
    locks in the same order as was done when the cpus came online:
    
          cpu_hotplug_lock before rdtgroup_mutex.
    
    This also requires to switch the static_branch_disable() calls to the
    _cpulocked variant because now cpu hotplug lock is held already.
    
    [ tglx: Switched to cpus_read_[un]lock ]
    
    Signed-off-by: Reinette Chatre <reinette.chatre@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Acked-by: Vikas Shivappa <vikas.shivappa@linux.intel.com>
    Acked-by: Fenghua Yu <fenghua.yu@intel.com>
    Acked-by: Tony Luck <tony.luck@intel.com>
    Link: https://lkml.kernel.org/r/cc292e76be073f7260604651711c47b09fd0dc81.1508490116.git.reinette.chatre@intel.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0a7d7b4298ce318fe07266af899a9b7c4227ad6
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Oct 25 23:10:19 2017 +0300

    RDMA/cxgb4: Annotate r2 and stag as __be32
    
    
    [ Upstream commit 7d7d065a5eec7e218174d5c64a9f53f99ffdb119 ]
    
    Chelsio cxgb4 HW is big-endian, hence there is need to properly
    annotate r2 and stag fields as __be32 and not __u32 to fix the
    following sparse warnings.
    
      drivers/infiniband/hw/cxgb4/qp.c:614:16:
        warning: incorrect type in assignment (different base types)
          expected unsigned int [unsigned] [usertype] r2
          got restricted __be32 [usertype] <noident>
      drivers/infiniband/hw/cxgb4/qp.c:615:18:
        warning: incorrect type in assignment (different base types)
          expected unsigned int [unsigned] [usertype] stag
          got restricted __be32 [usertype] <noident>
    
    Cc: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Reviewed-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89a459e0d519b289c15e4da8f52ff5528c7b8a3c
Author: Zdenek Kabelac <zkabelac@redhat.com>
Date:   Wed Nov 8 13:44:56 2017 +0100

    md: free unused memory after bitmap resize
    
    
    [ Upstream commit 0868b99c214a3d55486c700de7c3f770b7243e7c ]
    
    When bitmap is resized, the old kalloced chunks just are not released
    once the resized bitmap starts to use new space.
    
    This fixes in particular kmemleak reports like this one:
    
    unreferenced object 0xffff8f4311e9c000 (size 4096):
      comm "lvm", pid 19333, jiffies 4295263268 (age 528.265s)
      hex dump (first 32 bytes):
        02 80 02 80 02 80 02 80 02 80 02 80 02 80 02 80  ................
        02 80 02 80 02 80 02 80 02 80 02 80 02 80 02 80  ................
      backtrace:
        [<ffffffffa69471ca>] kmemleak_alloc+0x4a/0xa0
        [<ffffffffa628c10e>] kmem_cache_alloc_trace+0x14e/0x2e0
        [<ffffffffa676cfec>] bitmap_checkpage+0x7c/0x110
        [<ffffffffa676d0c5>] bitmap_get_counter+0x45/0xd0
        [<ffffffffa676d6b3>] bitmap_set_memory_bits+0x43/0xe0
        [<ffffffffa676e41c>] bitmap_init_from_disk+0x23c/0x530
        [<ffffffffa676f1ae>] bitmap_load+0xbe/0x160
        [<ffffffffc04c47d3>] raid_preresume+0x203/0x2f0 [dm_raid]
        [<ffffffffa677762f>] dm_table_resume_targets+0x4f/0xe0
        [<ffffffffa6774b52>] dm_resume+0x122/0x140
        [<ffffffffa6779b9f>] dev_suspend+0x18f/0x290
        [<ffffffffa677a3a7>] ctl_ioctl+0x287/0x560
        [<ffffffffa677a693>] dm_ctl_ioctl+0x13/0x20
        [<ffffffffa62d6b46>] do_vfs_ioctl+0xa6/0x750
        [<ffffffffa62d7269>] SyS_ioctl+0x79/0x90
        [<ffffffffa6956d41>] entry_SYSCALL_64_fastpath+0x1f/0xc2
    
    Signed-off-by: Zdenek Kabelac <zkabelac@redhat.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c727856d07198ca0c0d054480e608f0f759f6c5
Author: Heinz Mauelshagen <heinzm@redhat.com>
Date:   Thu Nov 2 19:58:28 2017 +0100

    dm raid: fix panic when attempting to force a raid to sync
    
    
    [ Upstream commit 233978449074ca7e45d9c959f9ec612d1b852893 ]
    
    Requesting a sync on an active raid device via a table reload
    (see 'sync' parameter in Documentation/device-mapper/dm-raid.txt)
    skips the super_load() call that defines the superblock size
    (rdev->sb_size) -- resulting in an oops if/when super_sync()->memset()
    is called.
    
    Fix by moving the initialization of the superblock start and size
    out of super_load() to the caller (analyse_superblocks).
    
    Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ad0bb60166d8e4fbacaaaaaeb10a24de5e99aff
Author: Paul Moore <paul@paul-moore.com>
Date:   Fri Sep 1 09:44:34 2017 -0400

    audit: ensure that 'audit=1' actually enables audit for PID 1
    
    
    [ Upstream commit 173743dd99a49c956b124a74c8aacb0384739a4c ]
    
    Prior to this patch we enabled audit in audit_init(), which is too
    late for PID 1 as the standard initcalls are run after the PID 1 task
    is forked.  This means that we never allocate an audit_context (see
    audit_alloc()) for PID 1 and therefore miss a lot of audit events
    generated by PID 1.
    
    This patch enables audit as early as possible to help ensure that when
    PID 1 is forked it can allocate an audit_context if required.
    
    Reviewed-by: Richard Guy Briggs <rgb@redhat.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4086f7cf0c3e2fe275a2a18dc25749df348c0cdb
Author: Steve Grubb <sgrubb@redhat.com>
Date:   Tue Oct 17 18:29:22 2017 -0400

    audit: Allow auditd to set pid to 0 to end auditing
    
    
    [ Upstream commit 33e8a907804428109ce1d12301c3365d619cc4df ]
    
    The API to end auditing has historically been for auditd to set the
    pid to 0. This patch restores that functionality.
    
    See: https://github.com/linux-audit/audit-kernel/issues/69
    
    Reviewed-by: Richard Guy Briggs <rgb@redhat.com>
    Signed-off-by: Steve Grubb <sgrubb@redhat.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7536280f9c949a97e06381a6137412c06838c3e7
Author: Israel Rukshin <israelr@mellanox.com>
Date:   Sun Nov 5 08:43:01 2017 +0000

    nvmet-rdma: update queue list during ib_device removal
    
    
    [ Upstream commit 43b92fd27aaef0f529c9321cfebbaec1d7b8f503 ]
    
    A NULL deref happens when nvmet_rdma_remove_one() is called more than once
    (e.g. while connected via 2 ports).
    The first call frees the queues related to the first ib_device but
    doesn't remove them from the queue list.
    While calling nvmet_rdma_remove_one() for the second ib_device it goes over
    the full queue list again and we get the NULL deref.
    
    Fixes: f1d4ef7d ("nvmet-rdma: register ib_client to not deadlock in device removal")
    Signed-off-by: Israel Rukshin <israelr@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Sagi Grimberg <sagi@grmberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4000d951e3723d5aff6dd4ce069c5908365dc24
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Wed Nov 8 10:23:45 2017 -0800

    blk-mq: Avoid that request queue removal can trigger list corruption
    
    
    [ Upstream commit aba7afc5671c23beade64d10caf86e24a9105dab ]
    
    Avoid that removal of a request queue sporadically triggers the
    following warning:
    
    list_del corruption. next->prev should be ffff8807d649b970, but was 6b6b6b6b6b6b6b6b
    WARNING: CPU: 3 PID: 342 at lib/list_debug.c:56 __list_del_entry_valid+0x92/0xa0
    Call Trace:
     process_one_work+0x11b/0x660
     worker_thread+0x3d/0x3b0
     kthread+0x129/0x140
     ret_from_fork+0x27/0x40
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd099ef951dd15883c010e044b3c9de4276dd5ae
Author: Hongxu Jia <hongxu.jia@windriver.com>
Date:   Fri Nov 10 15:59:17 2017 +0800

    ide: ide-atapi: fix compile error with defining macro DEBUG
    
    
    [ Upstream commit 8dc7a31fbce5e2dbbacd83d910da37105181b054 ]
    
    Compile ide-atapi failed with defining macro "DEBUG"
    ...
    |drivers/ide/ide-atapi.c:285:52: error: 'struct request' has
    no member named 'cmd'; did you mean 'csd'?
    |  debug_log("%s: rq->cmd[0]: 0x%x\n", __func__, rq->cmd[0]);
    ...
    
    Since we split the scsi_request out of struct request, it missed
    do the same thing on debug_log
    
    Fixes: 82ed4db499b8 ("block: split scsi_request out of struct request")
    
    Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7015ca81bc8041c17f2d45943703c5b887207d5d
Author: Keefe Liu <liuqifa@huawei.com>
Date:   Thu Nov 9 20:09:31 2017 +0800

    ipvlan: fix ipv6 outbound device
    
    
    [ Upstream commit ca29fd7cce5a6444d57fb86517589a1a31c759e1 ]
    
    When process the outbound packet of ipv6, we should assign the master
    device to output device other than input device.
    
    Signed-off-by: Keefe Liu <liuqifa@huawei.com>
    Acked-by: Mahesh Bandewar <maheshb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 854b27edf7b0672e5181e75274dc734863c89f2e
Author: Vaidyanathan Srinivasan <svaidy@linux.vnet.ibm.com>
Date:   Thu Aug 24 00:28:41 2017 +0530

    powerpc/powernv/idle: Round up latency and residency values
    
    
    [ Upstream commit 8d4e10e9ed9450e18fbbf6a8872be0eac9fd4999 ]
    
    On PowerNV platforms, firmware provides exit latency and
    target residency for each of the idle states in nano
    seconds.  Cpuidle framework expects the values in micro
    seconds.  Round up to nearest micro seconds to avoid errors
    in cases where the values are defined as fractional micro
    seconds.
    
    Default idle state of 'snooze' has exit latency of zero.  If
    other states have fractional micro second exit latency, they
    would get rounded down to zero micro second and make cpuidle
    framework choose deeper idle state when snooze loop is the
    right choice.
    
    Reported-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Vaidyanathan Srinivasan <svaidy@linux.vnet.ibm.com>
    Reviewed-by: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0c08c89ea1c0f47423d1da0bcdcd182611823c6
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Oct 12 18:22:25 2017 +0900

    kbuild: do not call cc-option before KBUILD_CFLAGS initialization
    
    
    [ Upstream commit 433dc2ebe7d17dd21cba7ad5c362d37323592236 ]
    
    Some $(call cc-option,...) are invoked very early, even before
    KBUILD_CFLAGS, etc. are initialized.
    
    The returned string from $(call cc-option,...) depends on
    KBUILD_CPPFLAGS, KBUILD_CFLAGS, and GCC_PLUGINS_CFLAGS.
    
    Since they are exported, they are not empty when the top Makefile
    is recursively invoked.
    
    The recursion occurs in several places.  For example, the top
    Makefile invokes itself for silentoldconfig.  "make tinyconfig",
    "make rpm-pkg" are the cases, too.
    
    In those cases, the second call of cc-option from the same line
    runs a different shell command due to non-pristine KBUILD_CFLAGS.
    
    To get the same result all the time, KBUILD_* and GCC_PLUGINS_CFLAGS
    must be initialized before any call of cc-option.  This avoids
    garbage data in the .cache.mk file.
    
    Move all calls of cc-option below the config targets because target
    compiler flags are unnecessary for Kconfig.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7a71904e6027136bea9a24cb30e75777d8d9256
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Thu Nov 16 17:58:17 2017 +0000

    KVM: arm/arm64: vgic-its: Preserve the revious read from the pending table
    
    commit 64afe6e9eb4841f35317da4393de21a047a883b3 upstream.
    
    The current pending table parsing code assumes that we keep the
    previous read of the pending bits, but keep that variable in
    the current block, making sure it is discarded on each loop.
    
    We end-up using whatever is on the stack. Who knows, it might
    just be the right thing...
    
    Fixes: 33d3bc9556a7d ("KVM: arm64: vgic-its: Read initial LPI pending table")
    Reported-by: AKASHI Takahiro <takahiro.akashi@linaro.org>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e587b76e655441b7f3239dfb999c444c8573820c
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Tue Dec 5 23:27:57 2017 +0000

    fix kcm_clone()
    
    commit a5739435b5a3b8c449f8844ecd71a3b1e89f0a33 upstream.
    
    1) it's fput() or sock_release(), not both
    2) don't do fd_install() until the last failure exit.
    3) not a bug per se, but... don't attach socket to struct file
       until it's set up.
    
    Take reserving descriptor into the caller, move fd_install() to the
    caller, sanitize failure exits and calling conventions.
    
    Acked-by: Tom Herbert <tom@herbertland.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc2f802193ccecf710ab608712b5b102dd9efc75
Author: Jeff Layton <jlayton@redhat.com>
Date:   Tue Nov 14 14:42:57 2017 -0500

    fcntl: don't cap l_start and l_end values for F_GETLK64 in compat syscall
    
    commit 4d2dc2cc766c3b51929658cacbc6e34fc8e242fb upstream.
    
    Currently, we're capping the values too low in the F_GETLK64 case. The
    fields in that structure are 64-bit values, so we shouldn't need to do
    any sort of fixup there.
    
    Make sure we check that assumption at build time in the future however
    by ensuring that the sizes we're copying will fit.
    
    With this, we no longer need COMPAT_LOFF_T_MAX either, so remove it.
    
    Fixes: 94073ad77fff2 (fs/locks: don't mess with the address limit in compat_fcntl64)
    Reported-by: Vitaly Lipatov <lav@etersoft.ru>
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Reviewed-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b57542126669a5ad8bede61c8e9e07a5fc4a39b
Author: Vincent Pelletier <plr.vincent@gmail.com>
Date:   Sun Nov 26 06:52:53 2017 +0000

    usb: gadget: ffs: Forbid usb_ep_alloc_request from sleeping
    
    commit 30bf90ccdec1da9c8198b161ecbff39ce4e5a9ba upstream.
    
    Found using DEBUG_ATOMIC_SLEEP while submitting an AIO read operation:
    
    [  100.853642] BUG: sleeping function called from invalid context at mm/slab.h:421
    [  100.861148] in_atomic(): 1, irqs_disabled(): 1, pid: 1880, name: python
    [  100.867954] 2 locks held by python/1880:
    [  100.867961]  #0:  (&epfile->mutex){....}, at: [<f8188627>] ffs_mutex_lock+0x27/0x30 [usb_f_fs]
    [  100.868020]  #1:  (&(&ffs->eps_lock)->rlock){....}, at: [<f818ad4b>] ffs_epfile_io.isra.17+0x24b/0x590 [usb_f_fs]
    [  100.868076] CPU: 1 PID: 1880 Comm: python Not tainted 4.14.0-edison+ #118
    [  100.868085] Hardware name: Intel Corporation Merrifield/BODEGA BAY, BIOS 542 2015.01.21:18.19.48
    [  100.868093] Call Trace:
    [  100.868122]  dump_stack+0x47/0x62
    [  100.868156]  ___might_sleep+0xfd/0x110
    [  100.868182]  __might_sleep+0x68/0x70
    [  100.868217]  kmem_cache_alloc_trace+0x4b/0x200
    [  100.868248]  ? dwc3_gadget_ep_alloc_request+0x24/0xe0 [dwc3]
    [  100.868302]  dwc3_gadget_ep_alloc_request+0x24/0xe0 [dwc3]
    [  100.868343]  usb_ep_alloc_request+0x16/0xc0 [udc_core]
    [  100.868386]  ffs_epfile_io.isra.17+0x444/0x590 [usb_f_fs]
    [  100.868424]  ? _raw_spin_unlock_irqrestore+0x27/0x40
    [  100.868457]  ? kiocb_set_cancel_fn+0x57/0x60
    [  100.868477]  ? ffs_ep0_poll+0xc0/0xc0 [usb_f_fs]
    [  100.868512]  ffs_epfile_read_iter+0xfe/0x157 [usb_f_fs]
    [  100.868551]  ? security_file_permission+0x9c/0xd0
    [  100.868587]  ? rw_verify_area+0xac/0x120
    [  100.868633]  aio_read+0x9d/0x100
    [  100.868692]  ? __fget+0xa2/0xd0
    [  100.868727]  ? __might_sleep+0x68/0x70
    [  100.868763]  SyS_io_submit+0x471/0x680
    [  100.868878]  do_int80_syscall_32+0x4e/0xd0
    [  100.868921]  entry_INT80_32+0x2a/0x2a
    [  100.868932] EIP: 0xb7fbb676
    [  100.868941] EFLAGS: 00000292 CPU: 1
    [  100.868951] EAX: ffffffda EBX: b7aa2000 ECX: 00000002 EDX: b7af8368
    [  100.868961] ESI: b7fbb660 EDI: b7aab000 EBP: bfb6c658 ESP: bfb6c638
    [  100.868973]  DS: 007b ES: 007b FS: 0000 GS: 0033 SS: 007b
    
    Signed-off-by: Vincent Pelletier <plr.vincent@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a33cd0ef9dda4692cb15fb37eb2e5ab0ef19609
Author: Masamitsu Yamazaki <m-yamazaki@ah.jp.nec.com>
Date:   Wed Nov 15 07:33:14 2017 +0000

    ipmi: Stop timers before cleaning up the module
    
    commit 4f7f5551a760eb0124267be65763008169db7087 upstream.
    
    System may crash after unloading ipmi_si.ko module
    because a timer may remain and fire after the module cleaned up resources.
    
    cleanup_one_si() contains the following processing.
    
            /*
             * Make sure that interrupts, the timer and the thread are
             * stopped and will not run again.
             */
            if (to_clean->irq_cleanup)
                    to_clean->irq_cleanup(to_clean);
            wait_for_timer_and_thread(to_clean);
    
            /*
             * Timeouts are stopped, now make sure the interrupts are off
             * in the BMC.  Note that timers and CPU interrupts are off,
             * so no need for locks.
             */
            while (to_clean->curr_msg || (to_clean->si_state != SI_NORMAL)) {
                    poll(to_clean);
                    schedule_timeout_uninterruptible(1);
            }
    
    si_state changes as following in the while loop calling poll(to_clean).
    
      SI_GETTING_MESSAGES
        => SI_CHECKING_ENABLES
         => SI_SETTING_ENABLES
          => SI_GETTING_EVENTS
           => SI_NORMAL
    
    As written in the code comments above,
    timers are expected to stop before the polling loop and not to run again.
    But the timer is set again in the following process
    when si_state becomes SI_SETTING_ENABLES.
    
      => poll
         => smi_event_handler
           => handle_transaction_done
              // smi_info->si_state == SI_SETTING_ENABLES
             => start_getting_events
               => start_new_msg
                => smi_mod_timer
                  => mod_timer
    
    As a result, before the timer set in start_new_msg() expires,
    the polling loop may see si_state becoming SI_NORMAL
    and the module clean-up finishes.
    
    For example, hard LOCKUP and panic occurred as following.
    smi_timeout was called after smi_event_handler,
    kcs_event and hangs at port_inb()
    trying to access I/O port after release.
    
        [exception RIP: port_inb+19]
        RIP: ffffffffc0473053  RSP: ffff88069fdc3d80  RFLAGS: 00000006
        RAX: ffff8806800f8e00  RBX: ffff880682bd9400  RCX: 0000000000000000
        RDX: 0000000000000ca3  RSI: 0000000000000ca3  RDI: ffff8806800f8e40
        RBP: ffff88069fdc3d80   R8: ffffffff81d86dfc   R9: ffffffff81e36426
        R10: 00000000000509f0  R11: 0000000000100000  R12: 0000000000]:000000
        R13: 0000000000000000  R14: 0000000000000246  R15: ffff8806800f8e00
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0000
     --- <NMI exception stack> ---
    
    To fix the problem I defined a flag, timer_can_start,
    as member of struct smi_info.
    The flag is enabled immediately after initializing the timer
    and disabled immediately before waiting for timer deletion.
    
    Fixes: 0cfec916e86d ("ipmi: Start the timer and thread on internal msgs")
    Signed-off-by: Yamazaki Masamitsu <m-yamazaki@ah.jp.nec.com>
    [Some fairly major changes went into the IPMI driver in 4.15, so this
     required a backport as the code had changed and moved to a different
     file.]
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c882334e2b778c95858d38f2180819d887fa5c3
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sun Nov 26 20:56:07 2017 +0800

    sctp: use right member as the param of list_for_each_entry
    
    
    [ Upstream commit a8dd397903a6e57157f6265911f7d35681364427 ]
    
    Commit d04adf1b3551 ("sctp: reset owner sk for data chunks on out queues
    when migrating a sock") made a mistake that using 'list' as the param of
    list_for_each_entry to traverse the retransmit, sacked and abandoned
    queues, while chunks are using 'transmitted_list' to link into these
    queues.
    
    It could cause NULL dereference panic if there are chunks in any of these
    queues when peeling off one asoc.
    
    So use the chunk member 'transmitted_list' instead in this patch.
    
    Fixes: d04adf1b3551 ("sctp: reset owner sk for data chunks on out queues when migrating a sock")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 627a5956119fd58bd4b94a26437d449830fc4736
Author: Jakub Kicinski <jakub.kicinski@netronome.com>
Date:   Mon Nov 27 11:11:41 2017 -0800

    cls_bpf: don't decrement net's refcount when offload fails
    
    
    [ Upstream commit 25415cec502a1232b19fffc85465882b19a90415 ]
    
    When cls_bpf offload was added it seemed like a good idea to
    call cls_bpf_delete_prog() instead of extending the error
    handling path, since the software state is fully initialized
    at that point.  This handling of errors without jumping to
    the end of the function is error prone, as proven by later
    commit missing that extra call to __cls_bpf_delete_prog().
    
    __cls_bpf_delete_prog() is now expected to be invoked with
    a reference on exts->net or the field zeroed out.  The call
    on the offload's error patch does not fullfil this requirement,
    leading to each error stealing a reference on net namespace.
    
    Create a function undoing what cls_bpf_set_parms() did and
    use it from __cls_bpf_delete_prog() and the error path.
    
    Fixes: aae2c35ec892 ("cls_bpf: use tcf_exts_get_net() before call_rcu()")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87ff3fb30de11a64d25a4a22f23def1ce77cf840
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Sat Nov 25 13:14:40 2017 -0600

    net: openvswitch: datapath: fix data type in queue_gso_packets
    
    
    [ Upstream commit 2734166e89639c973c6e125ac8bcfc2d9db72b70 ]
    
    gso_type is being used in binary AND operations together with SKB_GSO_UDP.
    The issue is that variable gso_type is of type unsigned short and
    SKB_GSO_UDP expands to more than 16 bits:
    
    SKB_GSO_UDP = 1 << 16
    
    this makes any binary AND operation between gso_type and SKB_GSO_UDP to
    be always zero, hence making some code unreachable and likely causing
    undesired behavior.
    
    Fix this by changing the data type of variable gso_type to unsigned int.
    
    Addresses-Coverity-ID: 1462223
    Fixes: 0c19f846d582 ("net: accept UFO datagrams from tuntap and packet")
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60335608e2f1ad6e55acaa4f13bd0f3bcd156dbd
Author: Willem de Bruijn <willemb@google.com>
Date:   Tue Nov 21 10:22:25 2017 -0500

    net: accept UFO datagrams from tuntap and packet
    
    
    [ Upstream commit 0c19f846d582af919db66a5914a0189f9f92c936 ]
    
    Tuntap and similar devices can inject GSO packets. Accept type
    VIRTIO_NET_HDR_GSO_UDP, even though not generating UFO natively.
    
    Processes are expected to use feature negotiation such as TUNSETOFFLOAD
    to detect supported offload types and refrain from injecting other
    packets. This process breaks down with live migration: guest kernels
    do not renegotiate flags, so destination hosts need to expose all
    features that the source host does.
    
    Partially revert the UFO removal from 182e0b6b5846~1..d9d30adf5677.
    This patch introduces nearly(*) no new code to simplify verification.
    It brings back verbatim tuntap UFO negotiation, VIRTIO_NET_HDR_GSO_UDP
    insertion and software UFO segmentation.
    
    It does not reinstate protocol stack support, hardware offload
    (NETIF_F_UFO), SKB_GSO_UDP tunneling in SKB_GSO_SOFTWARE or reception
    of VIRTIO_NET_HDR_GSO_UDP packets in tuntap.
    
    To support SKB_GSO_UDP reappearing in the stack, also reinstate
    logic in act_csum and openvswitch. Achieve equivalence with v4.13 HEAD
    by squashing in commit 939912216fa8 ("net: skb_needs_check() removes
    CHECKSUM_UNNECESSARY check for tx.") and reverting commit 8d63bee643f1
    ("net: avoid skb_warn_bad_offload false positives on UFO").
    
    (*) To avoid having to bring back skb_shinfo(skb)->ip6_frag_id,
    ipv6_proxy_select_ident is changed to return a __be32 and this is
    assigned directly to the frag_hdr. Also, SKB_GSO_UDP is inserted
    at the end of the enum to minimize code churn.
    
    Tested
      Booted a v4.13 guest kernel with QEMU. On a host kernel before this
      patch `ethtool -k eth0` shows UFO disabled. After the patch, it is
      enabled, same as on a v4.13 host kernel.
    
      A UFO packet sent from the guest appears on the tap device:
        host:
          nc -l -p -u 8000 &
          tcpdump -n -i tap0
    
        guest:
          dd if=/dev/zero of=payload.txt bs=1 count=2000
          nc -u 192.16.1.1 8000 < payload.txt
    
      Direct tap to tap transmission of VIRTIO_NET_HDR_GSO_UDP succeeds,
      packets arriving fragmented:
    
        ./with_tap_pair.sh ./tap_send_ufo tap0 tap1
        (from https://github.com/wdebruij/kerneltools/tree/master/tests)
    
    Changes
      v1 -> v2
        - simplified set_offload change (review comment)
        - documented test procedure
    
    Link: http://lkml.kernel.org/r/<CAF=yD-LuUeDuL9YWPJD9ykOZ0QCjNeznPDr6whqZ9NGMNF12Mw@mail.gmail.com>
    Fixes: fb652fdfe837 ("macvlan/macvtap: Remove NETIF_F_UFO advertisement.")
    Reported-by: Michal Kubecek <mkubecek@suse.cz>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29d631e5941366ee5eb50b3b592ca99186115a63
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sun Nov 19 19:31:04 2017 +0800

    tun: fix rcu_read_lock imbalance in tun_build_skb
    
    
    [ Upstream commit 654d573845f35017dc397840fa03610fef3d08b0 ]
    
    rcu_read_lock in tun_build_skb is used to rcu_dereference tun->xdp_prog
    safely, rcu_read_unlock should be done in every return path.
    
    Now I could see one place missing it, where it returns NULL in switch-case
    XDP_REDIRECT,  another palce using rcu_read_lock wrongly, where it returns
    NULL in if (xdp_xmit) chunk.
    
    So fix both in this patch.
    
    Fixes: 761876c857cb ("tap: XDP support")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7afe2e668ee2b1f465dcccb942da9d8f8d873f20
Author: David Ahern <dsahern@gmail.com>
Date:   Tue Nov 21 07:08:57 2017 -0800

    net: ipv6: Fixup device for anycast routes during copy
    
    
    [ Upstream commit 98d11291d189cb5adf49694d0ad1b971c0212697 ]
    
    Florian reported a breakage with anycast routes due to commit
    4832c30d5458 ("net: ipv6: put host and anycast routes on device with
    address"). Prior to this commit anycast routes were added against the
    loopback device causing repetitive route entries with no insight into
    why they existed. e.g.:
      $ ip -6 ro ls  table local type anycast
      anycast 2001:db8:1:: dev lo proto kernel metric 0 pref medium
      anycast 2001:db8:2:: dev lo proto kernel metric 0 pref medium
      anycast fe80:: dev lo proto kernel metric 0 pref medium
      anycast fe80:: dev lo proto kernel metric 0 pref medium
    
    The point of commit 4832c30d5458 is to add the routes using the device
    with the address which is causing the route to be added. e.g.,:
      $ ip -6 ro ls  table local type anycast
      anycast 2001:db8:1:: dev eth1 proto kernel metric 0 pref medium
      anycast 2001:db8:2:: dev eth2 proto kernel metric 0 pref medium
      anycast fe80:: dev eth2 proto kernel metric 0 pref medium
      anycast fe80:: dev eth1 proto kernel metric 0 pref medium
    
    For traffic to work as it did before, the dst device needs to be switched
    to the loopback when the copy is created similar to local routes.
    
    Fixes: 4832c30d5458 ("net: ipv6: put host and anycast routes on device with address")
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0536add671963d9875dc42f734d1608bef480dc7
Author: Wei Xu <wexu@redhat.com>
Date:   Fri Dec 1 05:10:37 2017 -0500

    tun: free skb in early errors
    
    
    [ Upstream commit c33ee15b3820a03cf8229ba9415084197b827f8c ]
    
    tun_recvmsg() supports accepting skb by msg_control after
    commit ac77cfd4258f ("tun: support receiving skb through msg_control"),
    the skb if presented should be freed no matter how far it can go
    along, otherwise it would be leaked.
    
    This patch fixes several missed cases.
    
    Signed-off-by: Wei Xu <wexu@redhat.com>
    Reported-by: Matthew Rosato <mjrosato@linux.vnet.ibm.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 241eb29c019a0b4e2a3ff5ca4b4449374aeb5f87
Author: Neal Cardwell <ncardwell@google.com>
Date:   Fri Nov 17 21:06:14 2017 -0500

    tcp: when scheduling TLP, time of RTO should account for current ACK
    
    
    [ Upstream commit ed66dfaf236c04d414de1d218441296e57fb2bd2 ]
    
    Fix the TLP scheduling logic so that when scheduling a TLP probe, we
    ensure that the estimated time at which an RTO would fire accounts for
    the fact that ACKs indicating forward progress should push back RTO
    times.
    
    After the following fix:
    
    df92c8394e6e ("tcp: fix xmit timer to only be reset if data ACKed/SACKed")
    
    we had an unintentional behavior change in the following kind of
    scenario: suppose the RTT variance has been very low recently. Then
    suppose we send out a flight of N packets and our RTT is 100ms:
    
    t=0: send a flight of N packets
    t=100ms: receive an ACK for N-1 packets
    
    The response before df92c8394e6e that was:
      -> schedule a TLP for now + RTO_interval
    
    The response after df92c8394e6e is:
      -> schedule a TLP for t=0 + RTO_interval
    
    Since RTO_interval = srtt + RTT_variance, this means that we have
    scheduled a TLP timer at a point in the future that only accounts for
    RTT_variance. If the RTT_variance term is small, this means that the
    timer fires soon.
    
    Before df92c8394e6e this would not happen, because in that code, when
    we receive an ACK for a prefix of flight, we did:
    
        1) Near the top of tcp_ack(), switch from TLP timer to RTO
           at write_queue_head->paket_tx_time + RTO_interval:
                if (icsk->icsk_pending == ICSK_TIME_LOSS_PROBE)
                       tcp_rearm_rto(sk);
    
        2) In tcp_clean_rtx_queue(), update the RTO to now + RTO_interval:
                if (flag & FLAG_ACKED) {
                       tcp_rearm_rto(sk);
    
        3) In tcp_ack() after tcp_fastretrans_alert() switch from RTO
           to TLP at now + RTO_interval:
                if (icsk->icsk_pending == ICSK_TIME_RETRANS)
                       tcp_schedule_loss_probe(sk);
    
    In df92c8394e6e we removed that 3-phase dance, and instead directly
    set the TLP timer once: we set the TLP timer in cases like this to
    write_queue_head->packet_tx_time + RTO_interval. So if the RTT
    variance is small, then this means that this is setting the TLP timer
    to fire quite soon. This means if the ACK for the tail of the flight
    takes longer than an RTT to arrive (often due to delayed ACKs), then
    the TLP timer fires too quickly.
    
    Fixes: df92c8394e6e ("tcp: fix xmit timer to only be reset if data ACKed/SACKed")
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 616bada6fd46b77351a4033392035de7875c48b6
Author: Wei Xu <wexu@redhat.com>
Date:   Fri Dec 1 05:10:38 2017 -0500

    tap: free skb if flags error
    
    
    [ Upstream commit 61d78537843e676e7f56ac6db333db0c0529b892 ]
    
    tap_recvmsg() supports accepting skb by msg_control after
    commit 3b4ba04acca8 ("tap: support receiving skb from msg_control"),
    the skb if presented should be freed within the function, otherwise
    it would be leaked.
    
    Signed-off-by: Wei Xu <wexu@redhat.com>
    Reported-by: Matthew Rosato <mjrosato@linux.vnet.ibm.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8067098c04be5a9058128164e9779e4c2e7c6dc1
Author: Jiri Pirko <jiri@mellanox.com>
Date:   Mon Nov 27 18:37:21 2017 +0100

    net: sched: cbq: create block for q->link.block
    
    
    [ Upstream commit d51aae68b142f48232257e96ce317db25445418d ]
    
    q->link.block is not initialized, that leads to EINVAL when one tries to
    add filter there. So initialize it properly.
    
    This can be reproduced by:
    $ tc qdisc add dev eth0 root handle 1: cbq avpkt 1000 rate 1000Mbit bandwidth 1000Mbit
    $ tc filter add dev eth0 parent 1: protocol ip prio 100 u32 match ip protocol 0 0x00 flowid 1:1
    
    Reported-by: Jaroslav Aster <jaster@redhat.com>
    Reported-by: Ivan Vecera <ivecera@redhat.com>
    Fixes: 6529eaba33f0 ("net: sched: introduce tcf block infractructure")
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Acked-by: Eelco Chaudron <echaudro@redhat.com>
    Reviewed-by: Ivan Vecera <ivecera@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91c5e6553af065f30390a76bf0556672d6cbb6ab
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Dec 6 11:08:19 2017 -0800

    tcp: use current time in tcp_rcv_space_adjust()
    
    
    [ Upstream commit 8632385022f2b05a6ca0b9e0f95575865de0e2ce ]
    
    When I switched rcv_rtt_est to high resolution timestamps, I forgot
    that tp->tcp_mstamp needed to be refreshed in tcp_rcv_space_adjust()
    
    Using an old timestamp leads to autotuning lags.
    
    Fixes: 645f4c6f2ebd ("tcp: switch rcv_rtt_est and rcvq_space to high resolution timestamps")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Wei Wang <weiwan@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de514e0609ea1fcf1f70faf427ec9b693d007f8b
Author: Tommi Rantala <tommi.t.rantala@nokia.com>
Date:   Wed Nov 29 12:48:42 2017 +0200

    tipc: call tipc_rcv() only if bearer is up in tipc_udp_recv()
    
    
    [ Upstream commit c7799c067c2ae33e348508c8afec354f3257ff25 ]
    
    Remove the second tipc_rcv() call in tipc_udp_recv(). We have just
    checked that the bearer is not up, and calling tipc_rcv() with a bearer
    that is not up leads to a TIPC div-by-zero crash in
    tipc_node_calculate_timer(). The crash is rare in practice, but can
    happen like this:
    
      We're enabling a bearer, but it's not yet up and fully initialized.
      At the same time we receive a discovery packet, and in tipc_udp_recv()
      we end up calling tipc_rcv() with the not-yet-initialized bearer,
      causing later the div-by-zero crash in tipc_node_calculate_timer().
    
    Jon Maloy explains the impact of removing the second tipc_rcv() call:
      "link setup in the worst case will be delayed until the next arriving
       discovery messages, 1 sec later, and this is an acceptable delay."
    
    As the tipc_rcv() call is removed, just leave the function via the
    rcu_out label, so that we will kfree_skb().
    
    [   12.590450] Own node address <1.1.1>, network identity 1
    [   12.668088] divide error: 0000 [#1] SMP
    [   12.676952] CPU: 2 PID: 0 Comm: swapper/2 Not tainted 4.14.2-dirty #1
    [   12.679225] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-2.fc27 04/01/2014
    [   12.682095] task: ffff8c2a761edb80 task.stack: ffffa41cc0cac000
    [   12.684087] RIP: 0010:tipc_node_calculate_timer.isra.12+0x45/0x60 [tipc]
    [   12.686486] RSP: 0018:ffff8c2a7fc838a0 EFLAGS: 00010246
    [   12.688451] RAX: 0000000000000000 RBX: ffff8c2a5b382600 RCX: 0000000000000000
    [   12.691197] RDX: 0000000000000000 RSI: ffff8c2a5b382600 RDI: ffff8c2a5b382600
    [   12.693945] RBP: ffff8c2a7fc838b0 R08: 0000000000000001 R09: 0000000000000001
    [   12.696632] R10: 0000000000000000 R11: 0000000000000000 R12: ffff8c2a5d8949d8
    [   12.699491] R13: ffffffff95ede400 R14: 0000000000000000 R15: ffff8c2a5d894800
    [   12.702338] FS:  0000000000000000(0000) GS:ffff8c2a7fc80000(0000) knlGS:0000000000000000
    [   12.705099] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   12.706776] CR2: 0000000001bb9440 CR3: 00000000bd009001 CR4: 00000000003606e0
    [   12.708847] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   12.711016] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   12.712627] Call Trace:
    [   12.713390]  <IRQ>
    [   12.714011]  tipc_node_check_dest+0x2e8/0x350 [tipc]
    [   12.715286]  tipc_disc_rcv+0x14d/0x1d0 [tipc]
    [   12.716370]  tipc_rcv+0x8b0/0xd40 [tipc]
    [   12.717396]  ? minmax_running_min+0x2f/0x60
    [   12.718248]  ? dst_alloc+0x4c/0xa0
    [   12.718964]  ? tcp_ack+0xaf1/0x10b0
    [   12.719658]  ? tipc_udp_is_known_peer+0xa0/0xa0 [tipc]
    [   12.720634]  tipc_udp_recv+0x71/0x1d0 [tipc]
    [   12.721459]  ? dst_alloc+0x4c/0xa0
    [   12.722130]  udp_queue_rcv_skb+0x264/0x490
    [   12.722924]  __udp4_lib_rcv+0x21e/0x990
    [   12.723670]  ? ip_route_input_rcu+0x2dd/0xbf0
    [   12.724442]  ? tcp_v4_rcv+0x958/0xa40
    [   12.725039]  udp_rcv+0x1a/0x20
    [   12.725587]  ip_local_deliver_finish+0x97/0x1d0
    [   12.726323]  ip_local_deliver+0xaf/0xc0
    [   12.726959]  ? ip_route_input_noref+0x19/0x20
    [   12.727689]  ip_rcv_finish+0xdd/0x3b0
    [   12.728307]  ip_rcv+0x2ac/0x360
    [   12.728839]  __netif_receive_skb_core+0x6fb/0xa90
    [   12.729580]  ? udp4_gro_receive+0x1a7/0x2c0
    [   12.730274]  __netif_receive_skb+0x1d/0x60
    [   12.730953]  ? __netif_receive_skb+0x1d/0x60
    [   12.731637]  netif_receive_skb_internal+0x37/0xd0
    [   12.732371]  napi_gro_receive+0xc7/0xf0
    [   12.732920]  receive_buf+0x3c3/0xd40
    [   12.733441]  virtnet_poll+0xb1/0x250
    [   12.733944]  net_rx_action+0x23e/0x370
    [   12.734476]  __do_softirq+0xc5/0x2f8
    [   12.734922]  irq_exit+0xfa/0x100
    [   12.735315]  do_IRQ+0x4f/0xd0
    [   12.735680]  common_interrupt+0xa2/0xa2
    [   12.736126]  </IRQ>
    [   12.736416] RIP: 0010:native_safe_halt+0x6/0x10
    [   12.736925] RSP: 0018:ffffa41cc0cafe90 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff4d
    [   12.737756] RAX: 0000000000000000 RBX: ffff8c2a761edb80 RCX: 0000000000000000
    [   12.738504] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
    [   12.739258] RBP: ffffa41cc0cafe90 R08: 0000014b5b9795e5 R09: ffffa41cc12c7e88
    [   12.740118] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000002
    [   12.740964] R13: ffff8c2a761edb80 R14: 0000000000000000 R15: 0000000000000000
    [   12.741831]  default_idle+0x2a/0x100
    [   12.742323]  arch_cpu_idle+0xf/0x20
    [   12.742796]  default_idle_call+0x28/0x40
    [   12.743312]  do_idle+0x179/0x1f0
    [   12.743761]  cpu_startup_entry+0x1d/0x20
    [   12.744291]  start_secondary+0x112/0x120
    [   12.744816]  secondary_startup_64+0xa5/0xa5
    [   12.745367] Code: b9 f4 01 00 00 48 89 c2 48 c1 ea 02 48 3d d3 07 00
    00 48 0f 47 d1 49 8b 0c 24 48 39 d1 76 07 49 89 14 24 48 89 d1 31 d2 48
    89 df <48> f7 f1 89 c6 e8 81 6e ff ff 5b 41 5c 5d c3 66 90 66 2e 0f 1f
    [   12.747527] RIP: tipc_node_calculate_timer.isra.12+0x45/0x60 [tipc] RSP: ffff8c2a7fc838a0
    [   12.748555] ---[ end trace 1399ab83390650fd ]---
    [   12.749296] Kernel panic - not syncing: Fatal exception in interrupt
    [   12.750123] Kernel Offset: 0x13200000 from 0xffffffff82000000
    (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
    [   12.751215] Rebooting in 60 seconds..
    
    Fixes: c9b64d492b1f ("tipc: add replicast peer discovery")
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Cc: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efb7dc5a9658de725de8d0b2016dbe198406d93e
Author: David Ahern <dsahern@gmail.com>
Date:   Sun Dec 3 09:33:00 2017 -0800

    tcp: use IPCB instead of TCP_SKB_CB in inet_exact_dif_match()
    
    
    [ Usptream commit b4d1605a8ea608fd7dc45b926a05d75d340bde4b ]
    
    After this fix : ("tcp: add tcp_v4_fill_cb()/tcp_v4_restore_cb()"),
    socket lookups happen while skb->cb[] has not been mangled yet by TCP.
    
    Fixes: a04a480d4392 ("net: Require exact match for TCP socket lookups if dif is l3mdev")
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit effea096caa1732d2eff941c1beabc9c496b087e
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Fri Dec 1 10:14:50 2017 +0100

    s390/qeth: fix GSO throughput regression
    
    
    [ Upstream commit 6d69b1f1eb7a2edf8a3547f361c61f2538e054bb ]
    
    Using GSO with small MTUs currently results in a substantial throughput
    regression - which is caused by how qeth needs to map non-linear skbs
    into its IO buffer elements:
    compared to a linear skb, each GSO-segmented skb effectively consumes
    twice as many buffer elements (ie two instead of one) due to the
    additional header-only part. This causes the Output Queue to be
    congested with low-utilized IO buffers.
    
    Fix this as follows:
    If the MSS is low enough so that a non-SG GSO segmentation produces
    order-0 skbs (currently ~3500 byte), opt out from NETIF_F_SG. This is
    where we anticipate the biggest savings, since an SG-enabled
    GSO segmentation produces skbs that always consume at least two
    buffer elements.
    
    Larger MSS values continue to get a SG-enabled GSO segmentation, since
    1) the relative overhead of the additional header-only buffer element
    becomes less noticeable, and
    2) the linearization overhead increases.
    
    With the throughput regression fixed, re-enable NETIF_F_SG by default to
    reap the significant CPU savings of GSO.
    
    Fixes: 5722963a8e83 ("qeth: do not turn on SG per default")
    Reported-by: Nils Hoppmann <niho@de.ibm.com>
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79651202a2228b53973e73da1f6b676579df951e
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Fri Dec 1 10:14:49 2017 +0100

    s390/qeth: fix thinko in IPv4 multicast address tracking
    
    
    [ Upsteam commit bc3ab70584696cb798b9e1e0ac8e6ced5fd4c3b8 ]
    
    Commit 5f78e29ceebf ("qeth: optimize IP handling in rx_mode callback")
    reworked how secondary addresses are managed for qeth devices.
    Instead of dropping & subsequently re-adding all addresses on every
    ndo_set_rx_mode() call, qeth now keeps track of the addresses that are
    currently registered with the HW.
    On a ndo_set_rx_mode(), we thus only need to do (de-)registration
    requests for the addresses that have actually changed.
    
    On L3 devices, the lookup for IPv4 Multicast addresses checks the wrong
    hashtable - and thus never finds a match. As a result, we first delete
    *all* such addresses, and then re-add them again. So each set_rx_mode()
    causes a short period where the IPv4 Multicast addresses are not
    registered, and the card stops forwarding inbound traffic for them.
    
    Fix this by setting the ->is_multicast flag on the lookup object, thus
    enabling qeth_l3_ip_from_hash() to search the correct hashtable and
    find a match there.
    
    Fixes: 5f78e29ceebf ("qeth: optimize IP handling in rx_mode callback")
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfa19a2edf31f8c4d90d6e936a65ba2072d67bb9
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Fri Dec 1 10:14:51 2017 +0100

    s390/qeth: build max size GSO skbs on L2 devices
    
    
    [ Upstream commit 0cbff6d4546613330a1c5f139f5c368e4ce33ca1 ]
    
    The current GSO skb size limit was copy&pasted over from the L3 path,
    where it is needed due to a TSO limitation.
    As L2 devices don't offer TSO support (and thus all GSO skbs are
    segmented before they reach the driver), there's no reason to restrict
    the stack in how large it may build the GSO skbs.
    
    Fixes: d52aec97e5bc ("qeth: enable scatter/gather in layer 2 mode")
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fa411e8555fd3e1f7fc77290b7bd9977203fa52
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Dec 1 10:06:56 2017 -0800

    tcp/dccp: block bh before arming time_wait timer
    
    
    [ Upstream commit cfac7f836a715b91f08c851df915d401a4d52783 ]
    
    Maciej Żenczykowski reported some panics in tcp_twsk_destructor()
    that might be caused by the following bug.
    
    timewait timer is pinned to the cpu, because we want to transition
    timwewait refcount from 0 to 4 in one go, once everything has been
    initialized.
    
    At the time commit ed2e92394589 ("tcp/dccp: fix timewait races in timer
    handling") was merged, TCP was always running from BH habdler.
    
    After commit 5413d1babe8f ("net: do not block BH while processing
    socket backlog") we definitely can run tcp_time_wait() from process
    context.
    
    We need to block BH in the critical section so that the pinned timer
    has still its purpose.
    
    This bug is more likely to happen under stress and when very small RTO
    are used in datacenter flows.
    
    Fixes: 5413d1babe8f ("net: do not block BH while processing socket backlog")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Maciej Żenczykowski <maze@google.com>
    Acked-by: Maciej Żenczykowski <maze@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b01623c73946edf7946945400305dbc5f1c85a6
Author: Lars Persson <lars.persson@axis.com>
Date:   Fri Dec 1 11:12:44 2017 +0100

    stmmac: reset last TSO segment size after device open
    
    
    [ Upstream commit 45ab4b13e46325d00f4acdb365d406e941a15f81 ]
    
    The mss variable tracks the last max segment size sent to the TSO
    engine. We do not update the hardware as long as we receive skb:s with
    the same value in gso_size.
    
    During a network device down/up cycle (mapped to stmmac_release() and
    stmmac_open() callbacks) we issue a reset to the hardware and it
    forgets the setting for mss. However we did not zero out our mss
    variable so the next transmission of a gso packet happens with an
    undefined hardware setting.
    
    This triggers a hang in the TSO engine and eventuelly the netdev
    watchdog will bark.
    
    Fixes: f748be531d70 ("stmmac: support new GMAC4")
    Signed-off-by: Lars Persson <larper@axis.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6878a06356a36d69b18916d2f0c483f21e0885d5
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Dec 5 12:45:56 2017 -0800

    net: remove hlist_nulls_add_tail_rcu()
    
    
    [ Upstream commit d7efc6c11b277d9d80b99b1334a78bfe7d7edf10 ]
    
    Alexander Potapenko reported use of uninitialized memory [1]
    
    This happens when inserting a request socket into TCP ehash,
    in __sk_nulls_add_node_rcu(), since sk_reuseport is not initialized.
    
    Bug was added by commit d894ba18d4e4 ("soreuseport: fix ordering for
    mixed v4/v6 sockets")
    
    Note that d296ba60d8e2 ("soreuseport: Resolve merge conflict for v4/v6
    ordering fix") missed the opportunity to get rid of
    hlist_nulls_add_tail_rcu() :
    
    Both UDP sockets and TCP/DCCP listeners no longer use
    __sk_nulls_add_node_rcu() for their hash insertion.
    
    Since all other sockets have unique 4-tuple, the reuseport status
    has no special meaning, so we can always use hlist_nulls_add_head_rcu()
    for them and save few cycles/instructions.
    
    [1]
    
    ==================================================================
    BUG: KMSAN: use of uninitialized memory in inet_ehash_insert+0xd40/0x1050
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted 4.13.0+ #3288
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:16
     dump_stack+0x185/0x1d0 lib/dump_stack.c:52
     kmsan_report+0x13f/0x1c0 mm/kmsan/kmsan.c:1016
     __msan_warning_32+0x69/0xb0 mm/kmsan/kmsan_instr.c:766
     __sk_nulls_add_node_rcu ./include/net/sock.h:684
     inet_ehash_insert+0xd40/0x1050 net/ipv4/inet_hashtables.c:413
     reqsk_queue_hash_req net/ipv4/inet_connection_sock.c:754
     inet_csk_reqsk_queue_hash_add+0x1cc/0x300 net/ipv4/inet_connection_sock.c:765
     tcp_conn_request+0x31e7/0x36f0 net/ipv4/tcp_input.c:6414
     tcp_v4_conn_request+0x16d/0x220 net/ipv4/tcp_ipv4.c:1314
     tcp_rcv_state_process+0x42a/0x7210 net/ipv4/tcp_input.c:5917
     tcp_v4_do_rcv+0xa6a/0xcd0 net/ipv4/tcp_ipv4.c:1483
     tcp_v4_rcv+0x3de0/0x4ab0 net/ipv4/tcp_ipv4.c:1763
     ip_local_deliver_finish+0x6bb/0xcb0 net/ipv4/ip_input.c:216
     NF_HOOK ./include/linux/netfilter.h:248
     ip_local_deliver+0x3fa/0x480 net/ipv4/ip_input.c:257
     dst_input ./include/net/dst.h:477
     ip_rcv_finish+0x6fb/0x1540 net/ipv4/ip_input.c:397
     NF_HOOK ./include/linux/netfilter.h:248
     ip_rcv+0x10f6/0x15c0 net/ipv4/ip_input.c:488
     __netif_receive_skb_core+0x36f6/0x3f60 net/core/dev.c:4298
     __netif_receive_skb net/core/dev.c:4336
     netif_receive_skb_internal+0x63c/0x19c0 net/core/dev.c:4497
     napi_skb_finish net/core/dev.c:4858
     napi_gro_receive+0x629/0xa50 net/core/dev.c:4889
     e1000_receive_skb drivers/net/ethernet/intel/e1000/e1000_main.c:4018
     e1000_clean_rx_irq+0x1492/0x1d30
    drivers/net/ethernet/intel/e1000/e1000_main.c:4474
     e1000_clean+0x43aa/0x5970 drivers/net/ethernet/intel/e1000/e1000_main.c:3819
     napi_poll net/core/dev.c:5500
     net_rx_action+0x73c/0x1820 net/core/dev.c:5566
     __do_softirq+0x4b4/0x8dd kernel/softirq.c:284
     invoke_softirq kernel/softirq.c:364
     irq_exit+0x203/0x240 kernel/softirq.c:405
     exiting_irq+0xe/0x10 ./arch/x86/include/asm/apic.h:638
     do_IRQ+0x15e/0x1a0 arch/x86/kernel/irq.c:263
     common_interrupt+0x86/0x86
    
    Fixes: d894ba18d4e4 ("soreuseport: fix ordering for mixed v4/v6 sockets")
    Fixes: d296ba60d8e2 ("soreuseport: Resolve merge conflict for v4/v6 ordering fix")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Alexander Potapenko <glider@google.com>
    Acked-by: Craig Gallek <kraig@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bea712a8a5aa9c58e06e3bb894dc25633898c450
Author: Bjørn Mork <bjorn@mork.no>
Date:   Wed Dec 6 20:21:24 2017 +0100

    usbnet: fix alignment for frames with no ethernet header
    
    
    [ Upstream commit a4abd7a80addb4a9547f7dfc7812566b60ec505c ]
    
    The qmi_wwan minidriver support a 'raw-ip' mode where frames are
    received without any ethernet header. This causes alignment issues
    because the skbs allocated by usbnet are "IP aligned".
    
    Fix by allowing minidrivers to disable the additional alignment
    offset. This is implemented using a per-device flag, since the same
    minidriver also supports 'ethernet' mode.
    
    Fixes: 32f7adf633b9 ("net: qmi_wwan: support "raw IP" mode")
    Reported-and-tested-by: Jay Foster <jay@systech.com>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8e5ef4ea8f1037f3f7cfd12291f55baa82e5251
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Nov 29 17:43:57 2017 -0800

    tcp: remove buggy call to tcp_v6_restore_cb()
    
    
    [ Upstream commit 3016dad75b48279e579117ee3ed566ba90a3b023 ]
    
    tcp_v6_send_reset() expects to receive an skb with skb->cb[] layout as
    used in TCP stack.
    MD5 lookup uses tcp_v6_iif() and tcp_v6_sdif() and thus
    TCP_SKB_CB(skb)->header.h6
    
    This patch probably fixes RST packets sent on behalf of a timewait md5
    ipv6 socket.
    
    Before Florian patch, tcp_v6_restore_cb() was needed before jumping to
    no_tcp_socket label.
    
    Fixes: 271c3b9b7bda ("tcp: honour SO_BINDTODEVICE for TW_RST case too")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Florian Westphal <fw@strlen.de>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 589983eb9986ea9c851c8906a81781f317207313
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Nov 28 08:03:30 2017 -0800

    net/packet: fix a race in packet_bind() and packet_notifier()
    
    
    [ Upstream commit 15fe076edea787807a7cdc168df832544b58eba6 ]
    
    syzbot reported crashes [1] and provided a C repro easing bug hunting.
    
    When/if packet_do_bind() calls __unregister_prot_hook() and releases
    po->bind_lock, another thread can run packet_notifier() and process an
    NETDEV_UP event.
    
    This calls register_prot_hook() and hooks again the socket right before
    first thread is able to grab again po->bind_lock.
    
    Fixes this issue by temporarily setting po->num to 0, as suggested by
    David Miller.
    
    [1]
    dev_remove_pack: ffff8801bf16fa80 not found
    ------------[ cut here ]------------
    kernel BUG at net/core/dev.c:7945!  ( BUG_ON(!list_empty(&dev->ptype_all)); )
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    device syz0 entered promiscuous mode
    CPU: 0 PID: 3161 Comm: syzkaller404108 Not tainted 4.14.0+ #190
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    task: ffff8801cc57a500 task.stack: ffff8801cc588000
    RIP: 0010:netdev_run_todo+0x772/0xae0 net/core/dev.c:7945
    RSP: 0018:ffff8801cc58f598 EFLAGS: 00010293
    RAX: ffff8801cc57a500 RBX: dffffc0000000000 RCX: ffffffff841f75b2
    RDX: 0000000000000000 RSI: 1ffff100398b1ede RDI: ffff8801bf1f8810
    device syz0 entered promiscuous mode
    RBP: ffff8801cc58f898 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: ffff8801bf1f8cd8
    R13: ffff8801cc58f870 R14: ffff8801bf1f8780 R15: ffff8801cc58f7f0
    FS:  0000000001716880(0000) GS:ffff8801db400000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000020b13000 CR3: 0000000005e25000 CR4: 00000000001406f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     rtnl_unlock+0xe/0x10 net/core/rtnetlink.c:106
     tun_detach drivers/net/tun.c:670 [inline]
     tun_chr_close+0x49/0x60 drivers/net/tun.c:2845
     __fput+0x333/0x7f0 fs/file_table.c:210
     ____fput+0x15/0x20 fs/file_table.c:244
     task_work_run+0x199/0x270 kernel/task_work.c:113
     exit_task_work include/linux/task_work.h:22 [inline]
     do_exit+0x9bb/0x1ae0 kernel/exit.c:865
     do_group_exit+0x149/0x400 kernel/exit.c:968
     SYSC_exit_group kernel/exit.c:979 [inline]
     SyS_exit_group+0x1d/0x20 kernel/exit.c:977
     entry_SYSCALL_64_fastpath+0x1f/0x96
    RIP: 0033:0x44ad19
    
    Fixes: 30f7ea1c2b5f ("packet: race condition in packet_bind")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Francesco Ruggeri <fruggeri@aristanetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7263f11b567193235a676584dfefd0b46c8b08a1
Author: Mike Maloney <maloney@google.com>
Date:   Tue Nov 28 10:44:29 2017 -0500

    packet: fix crash in fanout_demux_rollover()
    
    
    syzkaller found a race condition fanout_demux_rollover() while removing
    a packet socket from a fanout group.
    
    po->rollover is read and operated on during packet_rcv_fanout(), via
    fanout_demux_rollover(), but the pointer is currently cleared before the
    synchronization in packet_release().   It is safer to delay the cleanup
    until after synchronize_net() has been called, ensuring all calls to
    packet_rcv_fanout() for this socket have finished.
    
    To further simplify synchronization around the rollover structure, set
    po->rollover in fanout_add() only if there are no errors.  This removes
    the need for rcu in the struct and in the call to
    packet_getsockopt(..., PACKET_ROLLOVER_STATS, ...).
    
    Crashing stack trace:
     fanout_demux_rollover+0xb6/0x4d0 net/packet/af_packet.c:1392
     packet_rcv_fanout+0x649/0x7c8 net/packet/af_packet.c:1487
     dev_queue_xmit_nit+0x835/0xc10 net/core/dev.c:1953
     xmit_one net/core/dev.c:2975 [inline]
     dev_hard_start_xmit+0x16b/0xac0 net/core/dev.c:2995
     __dev_queue_xmit+0x17a4/0x2050 net/core/dev.c:3476
     dev_queue_xmit+0x17/0x20 net/core/dev.c:3509
     neigh_connected_output+0x489/0x720 net/core/neighbour.c:1379
     neigh_output include/net/neighbour.h:482 [inline]
     ip6_finish_output2+0xad1/0x22a0 net/ipv6/ip6_output.c:120
     ip6_finish_output+0x2f9/0x920 net/ipv6/ip6_output.c:146
     NF_HOOK_COND include/linux/netfilter.h:239 [inline]
     ip6_output+0x1f4/0x850 net/ipv6/ip6_output.c:163
     dst_output include/net/dst.h:459 [inline]
     NF_HOOK.constprop.35+0xff/0x630 include/linux/netfilter.h:250
     mld_sendpack+0x6a8/0xcc0 net/ipv6/mcast.c:1660
     mld_send_initial_cr.part.24+0x103/0x150 net/ipv6/mcast.c:2072
     mld_send_initial_cr net/ipv6/mcast.c:2056 [inline]
     ipv6_mc_dad_complete+0x99/0x130 net/ipv6/mcast.c:2079
     addrconf_dad_completed+0x595/0x970 net/ipv6/addrconf.c:4039
     addrconf_dad_work+0xac9/0x1160 net/ipv6/addrconf.c:3971
     process_one_work+0xbf0/0x1bc0 kernel/workqueue.c:2113
     worker_thread+0x223/0x1990 kernel/workqueue.c:2247
     kthread+0x35e/0x430 kernel/kthread.c:231
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:432
    
    Fixes: 0648ab70afe6 ("packet: rollover prepare: per-socket state")
    Fixes: 509c7a1ecc860 ("packet: avoid panic in packet_getsockopt()")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Mike Maloney <maloney@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b604eb8deaed5be43c0402008d0a76cedaacf940
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Dec 3 09:32:59 2017 -0800

    tcp: add tcp_v4_fill_cb()/tcp_v4_restore_cb()
    
    
    [ Upstream commit eeea10b83a139451130df1594f26710c8fa390c8 ]
    
    James Morris reported kernel stack corruption bug [1] while
    running the SELinux testsuite, and bisected to a recent
    commit bffa72cf7f9d ("net: sk_buff rbnode reorg")
    
    We believe this commit is fine, but exposes an older bug.
    
    SELinux code runs from tcp_filter() and might send an ICMP,
    expecting IP options to be found in skb->cb[] using regular IPCB placement.
    
    We need to defer TCP mangling of skb->cb[] after tcp_filter() calls.
    
    This patch adds tcp_v4_fill_cb()/tcp_v4_restore_cb() in a very
    similar way we added them for IPv6.
    
    [1]
    [  339.806024] SELinux: failure in selinux_parse_skb(), unable to parse packet
    [  339.822505] Kernel panic - not syncing: stack-protector: Kernel stack is corrupted in: ffffffff81745af5
    [  339.822505]
    [  339.852250] CPU: 4 PID: 3642 Comm: client Not tainted 4.15.0-rc1-test #15
    [  339.868498] Hardware name: LENOVO 10FGS0VA1L/30BC, BIOS FWKT68A   01/19/2017
    [  339.885060] Call Trace:
    [  339.896875]  <IRQ>
    [  339.908103]  dump_stack+0x63/0x87
    [  339.920645]  panic+0xe8/0x248
    [  339.932668]  ? ip_push_pending_frames+0x33/0x40
    [  339.946328]  ? icmp_send+0x525/0x530
    [  339.958861]  ? kfree_skbmem+0x60/0x70
    [  339.971431]  __stack_chk_fail+0x1b/0x20
    [  339.984049]  icmp_send+0x525/0x530
    [  339.996205]  ? netlbl_skbuff_err+0x36/0x40
    [  340.008997]  ? selinux_netlbl_err+0x11/0x20
    [  340.021816]  ? selinux_socket_sock_rcv_skb+0x211/0x230
    [  340.035529]  ? security_sock_rcv_skb+0x3b/0x50
    [  340.048471]  ? sk_filter_trim_cap+0x44/0x1c0
    [  340.061246]  ? tcp_v4_inbound_md5_hash+0x69/0x1b0
    [  340.074562]  ? tcp_filter+0x2c/0x40
    [  340.086400]  ? tcp_v4_rcv+0x820/0xa20
    [  340.098329]  ? ip_local_deliver_finish+0x71/0x1a0
    [  340.111279]  ? ip_local_deliver+0x6f/0xe0
    [  340.123535]  ? ip_rcv_finish+0x3a0/0x3a0
    [  340.135523]  ? ip_rcv_finish+0xdb/0x3a0
    [  340.147442]  ? ip_rcv+0x27c/0x3c0
    [  340.158668]  ? inet_del_offload+0x40/0x40
    [  340.170580]  ? __netif_receive_skb_core+0x4ac/0x900
    [  340.183285]  ? rcu_accelerate_cbs+0x5b/0x80
    [  340.195282]  ? __netif_receive_skb+0x18/0x60
    [  340.207288]  ? process_backlog+0x95/0x140
    [  340.218948]  ? net_rx_action+0x26c/0x3b0
    [  340.230416]  ? __do_softirq+0xc9/0x26a
    [  340.241625]  ? do_softirq_own_stack+0x2a/0x40
    [  340.253368]  </IRQ>
    [  340.262673]  ? do_softirq+0x50/0x60
    [  340.273450]  ? __local_bh_enable_ip+0x57/0x60
    [  340.285045]  ? ip_finish_output2+0x175/0x350
    [  340.296403]  ? ip_finish_output+0x127/0x1d0
    [  340.307665]  ? nf_hook_slow+0x3c/0xb0
    [  340.318230]  ? ip_output+0x72/0xe0
    [  340.328524]  ? ip_fragment.constprop.54+0x80/0x80
    [  340.340070]  ? ip_local_out+0x35/0x40
    [  340.350497]  ? ip_queue_xmit+0x15c/0x3f0
    [  340.361060]  ? __kmalloc_reserve.isra.40+0x31/0x90
    [  340.372484]  ? __skb_clone+0x2e/0x130
    [  340.382633]  ? tcp_transmit_skb+0x558/0xa10
    [  340.393262]  ? tcp_connect+0x938/0xad0
    [  340.403370]  ? ktime_get_with_offset+0x4c/0xb0
    [  340.414206]  ? tcp_v4_connect+0x457/0x4e0
    [  340.424471]  ? __inet_stream_connect+0xb3/0x300
    [  340.435195]  ? inet_stream_connect+0x3b/0x60
    [  340.445607]  ? SYSC_connect+0xd9/0x110
    [  340.455455]  ? __audit_syscall_entry+0xaf/0x100
    [  340.466112]  ? syscall_trace_enter+0x1d0/0x2b0
    [  340.476636]  ? __audit_syscall_exit+0x209/0x290
    [  340.487151]  ? SyS_connect+0xe/0x10
    [  340.496453]  ? do_syscall_64+0x67/0x1b0
    [  340.506078]  ? entry_SYSCALL64_slow_path+0x25/0x25
    
    Fixes: 971f10eca186 ("tcp: better TCP_SKB_CB layout to reduce cache line misses")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: James Morris <james.l.morris@oracle.com>
    Tested-by: James Morris <james.l.morris@oracle.com>
    Tested-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dacf127383fc2dabd2befbead91cbbf22c3dc2ab
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Nov 30 10:41:14 2017 +0800

    sit: update frag_off info
    
    
    [ Upstream commit f859b4af1c52493ec21173ccc73d0b60029b5b88 ]
    
    After parsing the sit netlink change info, we forget to update frag_off in
    ipip6_tunnel_update(). Fix it by assigning frag_off with new value.
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d9a63d74b2b6ed7c30c7d1584d87c16ae8d5862
Author: Håkon Bugge <Haakon.Bugge@oracle.com>
Date:   Wed Dec 6 17:18:28 2017 +0100

    rds: Fix NULL pointer dereference in __rds_rdma_map
    
    
    [ Upstream commit f3069c6d33f6ae63a1668737bc78aaaa51bff7ca ]
    
    This is a fix for syzkaller719569, where memory registration was
    attempted without any underlying transport being loaded.
    
    Analysis of the case reveals that it is the setsockopt() RDS_GET_MR
    (2) and RDS_GET_MR_FOR_DEST (7) that are vulnerable.
    
    Here is an example stack trace when the bug is hit:
    
    BUG: unable to handle kernel NULL pointer dereference at 00000000000000c0
    IP: __rds_rdma_map+0x36/0x440 [rds]
    PGD 2f93d03067 P4D 2f93d03067 PUD 2f93d02067 PMD 0
    Oops: 0000 [#1] SMP
    Modules linked in: bridge stp llc tun rpcsec_gss_krb5 nfsv4
    dns_resolver nfs fscache rds binfmt_misc sb_edac intel_powerclamp
    coretemp kvm_intel kvm irqbypass crct10dif_pclmul c rc32_pclmul
    ghash_clmulni_intel pcbc aesni_intel crypto_simd glue_helper cryptd
    iTCO_wdt mei_me sg iTCO_vendor_support ipmi_si mei ipmi_devintf nfsd
    shpchp pcspkr i2c_i801 ioatd ma ipmi_msghandler wmi lpc_ich mfd_core
    auth_rpcgss nfs_acl lockd grace sunrpc ip_tables ext4 mbcache jbd2
    mgag200 i2c_algo_bit drm_kms_helper ixgbe syscopyarea ahci sysfillrect
    sysimgblt libahci mdio fb_sys_fops ttm ptp libata sd_mod mlx4_core drm
    crc32c_intel pps_core megaraid_sas i2c_core dca dm_mirror
    dm_region_hash dm_log dm_mod
    CPU: 48 PID: 45787 Comm: repro_set2 Not tainted 4.14.2-3.el7uek.x86_64 #2
    Hardware name: Oracle Corporation ORACLE SERVER X5-2L/ASM,MOBO TRAY,2U, BIOS 31110000 03/03/2017
    task: ffff882f9190db00 task.stack: ffffc9002b994000
    RIP: 0010:__rds_rdma_map+0x36/0x440 [rds]
    RSP: 0018:ffffc9002b997df0 EFLAGS: 00010202
    RAX: 0000000000000000 RBX: ffff882fa2182580 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffffc9002b997e40 RDI: ffff882fa2182580
    RBP: ffffc9002b997e30 R08: 0000000000000000 R09: 0000000000000002
    R10: ffff885fb29e3838 R11: 0000000000000000 R12: ffff882fa2182580
    R13: ffff882fa2182580 R14: 0000000000000002 R15: 0000000020000ffc
    FS:  00007fbffa20b700(0000) GS:ffff882fbfb80000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000000000c0 CR3: 0000002f98a66006 CR4: 00000000001606e0
    Call Trace:
     rds_get_mr+0x56/0x80 [rds]
     rds_setsockopt+0x172/0x340 [rds]
     ? __fget_light+0x25/0x60
     ? __fdget+0x13/0x20
     SyS_setsockopt+0x80/0xe0
     do_syscall_64+0x67/0x1b0
     entry_SYSCALL64_slow_path+0x25/0x25
    RIP: 0033:0x7fbff9b117f9
    RSP: 002b:00007fbffa20aed8 EFLAGS: 00000293 ORIG_RAX: 0000000000000036
    RAX: ffffffffffffffda RBX: 00000000000c84a4 RCX: 00007fbff9b117f9
    RDX: 0000000000000002 RSI: 0000400000000114 RDI: 000000000000109b
    RBP: 00007fbffa20af10 R08: 0000000000000020 R09: 00007fbff9dd7860
    R10: 0000000020000ffc R11: 0000000000000293 R12: 0000000000000000
    R13: 00007fbffa20b9c0 R14: 00007fbffa20b700 R15: 0000000000000021
    
    Code: 41 56 41 55 49 89 fd 41 54 53 48 83 ec 18 8b 87 f0 02 00 00 48
    89 55 d0 48 89 4d c8 85 c0 0f 84 2d 03 00 00 48 8b 87 00 03 00 00 <48>
    83 b8 c0 00 00 00 00 0f 84 25 03 00 0 0 48 8b 06 48 8b 56 08
    
    The fix is to check the existence of an underlying transport in
    __rds_rdma_map().
    
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dee5b428c3b71d7201d49afd38a110fccb352922
Author: Wei Xu <wexu@redhat.com>
Date:   Fri Dec 1 05:10:36 2017 -0500

    vhost: fix skb leak in handle_rx()
    
    
    [ Upstream commit 6e474083f3daf3a3546737f5d7d502ad12eb257c ]
    
    Matthew found a roughly 40% tcp throughput regression with commit
    c67df11f(vhost_net: try batch dequing from skb array) as discussed
    in the following thread:
    https://www.mail-archive.com/netdev@vger.kernel.org/msg187936.html
    
    Eventually we figured out that it was a skb leak in handle_rx()
    when sending packets to the VM. This usually happens when a guest
    can not drain out vq as fast as vhost fills in, afterwards it sets
    off the traffic jam and leaks skb(s) which occurs as no headcount
    to send on the vq from vhost side.
    
    This can be avoided by making sure we have got enough headcount
    before actually consuming a skb from the batched rx array while
    transmitting, which is simply done by moving checking the zero
    headcount a bit ahead.
    
    Signed-off-by: Wei Xu <wexu@redhat.com>
    Reported-by: Matthew Rosato <mjrosato@linux.vnet.ibm.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1933fa485194e697b4d90853f338029ab19e4a72
Author: Jon Maloy <jon.maloy@ericsson.com>
Date:   Mon Dec 4 22:00:20 2017 +0100

    tipc: fix memory leak in tipc_accept_from_sock()
    
    
    [ Upstream commit a7d5f107b4978e08eeab599ee7449af34d034053 ]
    
    When the function tipc_accept_from_sock() fails to create an instance of
    struct tipc_subscriber it omits to free the already created instance of
    struct tipc_conn instance before it returns.
    
    We fix that with this commit.
    
    Reported-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6efcd7eada3e76096e574e27d4e56051ffd328ab
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Wed Oct 18 17:40:17 2017 +0200

    s390/qeth: fix early exit from error path
    
    
    [ Upstream commit 83cf79a2fec3cf499eb6cb9eb608656fc2a82776 ]
    
    When the allocation of the addr buffer fails, we need to free
    our refcount on the inetdevice before returning.
    
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7203f55d53f9237bda0c0b6cf02f22f18262a5b
Author: Tobias Jakobi <tjakobi@math.uni-bielefeld.de>
Date:   Tue Nov 21 16:15:57 2017 +0100

    net: realtek: r8169: implement set_link_ksettings()
    
    
    [ Upstream commit 9e77d7a5549dc4d4999a60676373ab3fd1dae4db ]
    
    Commit 6fa1ba61520576cf1346c4ff09a056f2950cb3bf partially
    implemented the new ethtool API, by replacing get_settings()
    with get_link_ksettings(). This breaks ethtool, since the
    userspace tool (according to the new API specs) never tries
    the legacy set() call, when the new get() call succeeds.
    
    All attempts to chance some setting from userspace result in:
    > Cannot set new settings: Operation not supported
    
    Implement the missing set() call.
    
    Signed-off-by: Tobias Jakobi <tjakobi@math.uni-bielefeld.de>
    Tested-by: Holger Hoffstätte <holger@applied-asynchrony.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec9a6722173d3dbbbbcc5eec2f5b0f2c58057bc9
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Dec 6 01:04:50 2017 +0100

    net: thunderx: Fix TCP/UDP checksum offload for IPv4 pkts
    
    
    [ Upstream commit 134059fd2775be79e26c2dff87d25cc2f6ea5626 ]
    
    Offload IP header checksum to NIC.
    
    This fixes a previous patch which disabled checksum offloading
    for both IPv4 and IPv6 packets.  So L3 checksum offload was
    getting disabled for IPv4 pkts.  And HW is dropping these pkts
    for some reason.
    
    Without this patch, IPv4 TSO appears to be broken:
    
    WIthout this patch I get ~16kbyte/s, with patch close to 2mbyte/s
    when copying files via scp from test box to my home workstation.
    
    Looking at tcpdump on sender it looks like hardware drops IPv4 TSO skbs.
    This patch restores performance for me, ipv6 looks good too.
    
    Fixes: fa6d7cb5d76c ("net: thunderx: Fix TCP/UDP checksum offload for IPv6 pkts")
    Cc: Sunil Goutham <sgoutham@cavium.com>
    Cc: Aleksey Makarov <aleksey.makarov@auriga.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb89f5b05ab239ea14f87c02fcac05c957818f90
Author: Sunil Goutham <sgoutham@cavium.com>
Date:   Thu Nov 23 22:34:31 2017 +0300

    net: thunderx: Fix TCP/UDP checksum offload for IPv6 pkts
    
    
    [ Upstream commit fa6d7cb5d76cf0467c61420fc9238045aedfd379 ]
    
    Don't offload IP header checksum to NIC.
    
    This fixes a previous patch which enabled checksum offloading
    for both IPv4 and IPv6 packets.  So L3 checksum offload was
    getting enabled for IPv6 pkts.  And HW is dropping these pkts
    as it assumes the pkt is IPv4 when IP csum offload is set
    in the SQ descriptor.
    
    Fixes:  3a9024f52c2e ("net: thunderx: Enable TSO and checksum offloads for ipv6")
    Signed-off-by: Sunil Goutham <sgoutham@cavium.com>
    Signed-off-by: Aleksey Makarov <aleksey.makarov@auriga.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc038e59f316d2255f6d3c05d0d6b117d4739574
Author: Sebastian Sjoholm <ssjoholm@mac.com>
Date:   Mon Nov 20 19:05:17 2017 +0100

    net: qmi_wwan: add Quectel BG96 2c7c:0296
    
    
    [ Upstream commit f9409e7f086fa6c4623769b4b2f4f17a024d8143 ]
    
    Quectel BG96 is an Qualcomm MDM9206 based IoT modem, supporting both
    CAT-M and NB-IoT. Tested hardware is BG96 mounted on Quectel development
    board (EVB). The USB id is added to qmi_wwan.c to allow QMI
    communication with the BG96.
    
    Signed-off-by: Sebastian Sjoholm <ssjoholm@mac.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fd159e1ee6a87a72626139813034f24f047d0e6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 14 09:53:15 2017 +0100

    Linux 4.14.6

commit 80e642c066f9882007174be870c1465f69df8257
Author: David Howells <dhowells@redhat.com>
Date:   Thu Nov 2 15:27:48 2017 +0000

    afs: Connect up the CB.ProbeUuid
    
    
    [ Upstream commit f4b3526d83c40dd8bf5948b9d7a1b2c340f0dcc8 ]
    
    The handler for the CB.ProbeUuid operation in the cache manager is
    implemented, but isn't listed in the switch-statement of operation
    selection, so won't be used.  Fix this by adding it.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49e186e3278d0d800021b59286dc97d748593fd6
Author: David Howells <dhowells@redhat.com>
Date:   Thu Nov 2 15:27:51 2017 +0000

    afs: Fix total-length calculation for multiple-page send
    
    
    [ Upstream commit 1199db603511d7463d9d3840f96f61967affc766 ]
    
    Fix the total-length calculation in afs_make_call() when the operation
    being dispatched has data from a series of pages attached.
    
    Despite the patched code looking like that it should reduce mathematically
    to the current code, it doesn't because the 32-bit unsigned arithmetic
    being used to calculate the page-offset-difference doesn't correctly extend
    to a 64-bit value when the result is effectively negative.
    
    Without this, some FS.StoreData operations that span multiple pages fail,
    reporting too little or too much data.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d702be100eaf043b97687c050565c154a48d763d
Author: Majd Dibbiny <majd@mellanox.com>
Date:   Mon Oct 30 14:23:13 2017 +0200

    IB/mlx5: Assign send CQ and recv CQ of UMR QP
    
    
    [ Upstream commit 31fde034a8bd964a5c7c1a5663fc87a913158db2 ]
    
    The UMR's QP is created by calling mlx5_ib_create_qp directly, and
    therefore the send CQ and the recv CQ on the ibqp weren't assigned.
    
    Assign them right after calling the mlx5_ib_create_qp to assure
    that any access to those pointers will work as expected and won't
    crash the system as might happen as part of reset flow.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Signed-off-by: Majd Dibbiny <majd@mellanox.com>
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 192c689319429672e15d73969fa0230e7379779a
Author: Mark Bloch <markb@mellanox.com>
Date:   Thu Nov 2 15:22:26 2017 +0200

    IB/mlx4: Increase maximal message size under UD QP
    
    
    [ Upstream commit 5f22a1d87c5315a98981ecf93cd8de226cffe6ca ]
    
    Maximal message should be used as a limit to the max message payload allowed,
    without the headers. The ConnectX-3 check is done against this value includes
    the headers. When the payload is 4K this will cause the NIC to drop packets.
    
    Increase maximal message to 8K as workaround, this shouldn't change current
    behaviour because we continue to set the MTU to 4k.
    
    To reproduce;
    set MTU to 4296 on the corresponding interface, for example:
    ifconfig eth0 mtu 4296 (both server and client)
    
    On server:
    ib_send_bw -c UD -d mlx4_0 -s 4096 -n 1000000 -i1 -m 4096
    
    On client:
    ib_send_bw -d mlx4_0 -c UD <server_ip> -s 4096 -n 1000000 -i 1 -m 4096
    
    Fixes: 6e0d733d9215 ("IB/mlx4: Allow 4K messages for UD QPs")
    Signed-off-by: Mark Bloch <markb@mellanox.com>
    Reviewed-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 971110c72991c9c4662d0abf48bd6275b7e211f7
Author: Sriharsha Basavapatna <sriharsha.basavapatna@broadcom.com>
Date:   Fri Nov 3 02:39:04 2017 +0530

    bnxt_re: changing the ip address shouldn't affect new connections
    
    
    [ Upstream commit 063fb5bd1a01937094f40169a20e4aa5ca030db1 ]
    
    While adding a new gid, the driver currently does not return the context
    back to the stack. A subsequent del_gid() (e.g, when ip address is changed)
    doesn't find the right context in the driver and it ends up dropping that
    request. This results in the HW caching a stale gid entry and traffic fails
    because of that. Fix by returning the proper context in bnxt_re_add_gid().
    
    Signed-off-by: Sriharsha Basavapatna <sriharsha.basavapatna@broadcom.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a76d81af17ceadd8bae46da297d8e24dd8ea0838
Author: Chao Yu <yuchao0@huawei.com>
Date:   Mon Nov 13 17:32:39 2017 +0800

    f2fs: fix to clear FI_NO_PREALLOC
    
    
    [ Upstream commit 28cfafb73853f0494b06649716687a3ea07681d5 ]
    
    We need to clear FI_NO_PREALLOC flag in error path of f2fs_file_write_iter,
    otherwise we will lose the chance to preallocate blocks in latter write()
    at one time.
    
    Fixes: dc91de78e5e1 ("f2fs: do not preallocate blocks which has wrong buffer")
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6610b9cb80ad9a58f71940b9658e3116262663db
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Nov 10 14:14:06 2017 +1100

    xfrm: Copy policy family in clone_policy
    
    
    [ Upstream commit 0e74aa1d79a5bbc663e03a2804399cae418a0321 ]
    
    The syzbot found an ancient bug in the IPsec code.  When we cloned
    a socket policy (for example, for a child TCP socket derived from a
    listening socket), we did not copy the family field.  This results
    in a live policy with a zero family field.  This triggers a BUG_ON
    check in the af_key code when the cloned policy is retrieved.
    
    This patch fixes it by copying the family field over.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0e1cd056e99c1ac7ec59f46ad152c11f1b69570
Author: Ilya Lesokhin <ilyal@mellanox.com>
Date:   Mon Nov 13 10:22:44 2017 +0200

    tls: Use kzalloc for aead_request allocation
    
    
    [ Upstream commit 61ef6da622aa7b66bf92991bd272490eea6c712e ]
    
    Use kzalloc for aead_request allocation as
    we don't set all the bits in the request.
    
    Fixes: 3c4d7559159b ('tls: kernel TLS support')
    Signed-off-by: Ilya Lesokhin <ilyal@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2de359062feea90c1e8baa2fa9771ba98d1fadfa
Author: Jason Baron <jbaron@akamai.com>
Date:   Mon Nov 13 16:48:47 2017 -0500

    jump_label: Invoke jump_label_test() via early_initcall()
    
    
    [ Upstream commit 92ee46efeb505ead3ab06d3c5ce695637ed5f152 ]
    
    Fengguang Wu reported that running the rcuperf test during boot can cause
    the jump_label_test() to hit a WARN_ON(). The issue is that the core jump
    label code relies on kernel_text_address() to detect when it can no longer
    update branches that may be contained in __init sections. The
    kernel_text_address() in turn assumes that if the system_state variable is
    greter than or equal to SYSTEM_RUNNING then __init sections are no longer
    valid (since the assumption is that they have been freed). However, when
    rcuperf is setup to run in early boot it can call kernel_power_off() which
    sets the system_state to SYSTEM_POWER_OFF.
    
    Since rcuperf initialization is invoked via a module_init(), we can make
    the dependency of jump_label_test() needing to complete before rcuperf
    explicit by calling it via early_initcall().
    
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1510609727-2238-1-git-send-email-jbaron@akamai.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbcedaeba78040aaa0f0d6a7f39add578f81f356
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Tue Nov 14 13:42:38 2017 +0530

    atm: horizon: Fix irq release error
    
    
    [ Upstream commit bde533f2ea607cbbbe76ef8738b36243939a7bc2 ]
    
    atm_dev_register() can fail here and passed parameters to free irq
    which is not initialised. Initialization of 'dev->irq' happened after
    the 'goto out_free_irq'. So using 'irq' insted of 'dev->irq' in
    free_irq().
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8928998d1ed8c4bf76d0ce75570665982266825c
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Sat Sep 30 10:10:09 2017 +0900

    kbuild: rpm-pkg: fix jobserver unavailable warning
    
    
    [ Upstream commit 606625be47bc87b6fab0af10cd57aaa675cb9e42 ]
    
    If "make rpm-pkg" or "make binrpm-pkg" is run with -j[jobs] option,
    the following warning message is displayed.
    
      warning: jobserver unavailable: using -j1.  Add '+' to parent make rule.
    
    Follow the suggestion.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5aa0e86f957709fc72d02ed3d5d0d775a2592f6
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Thu Sep 28 11:18:53 2017 +0100

    mailbox: mailbox-test: don't rely on rx_buffer content to signal data ready
    
    
    [ Upstream commit e339c80af95e14de3712d69ddea09a3868fa14cd ]
    
    Currently we rely on the first byte of the Rx buffer to check if there's
    any data available to be read. If the first byte of the received buffer
    is zero (i.e. null character), then we fail to signal that data is
    available even when it's available.
    
    Instead introduce a boolean variable to track the data availability and
    update it in the channel receive callback as ready and clear it when the
    data is read.
    
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8356c5754cb9854a25e0cebac0ee94a352b3debe
Author: Zhong Kaihua <zhongkaihua@huawei.com>
Date:   Mon Aug 7 22:51:56 2017 +0800

    clk: hi3660: fix incorrect uart3 clock freqency
    
    
    [ Upstream commit d33fb1b9f0fcb67f2b9f8b1891465a088a9480f8 ]
    
    UART3 clock rate is doubled in previous commit.
    
    This error is not detected until recently a mezzanine board which makes
    real use of uart3 port (through LS connector of 96boards) was setup
    and tested on hi3660-hikey960 board.
    
    This patch changes clock source rate of clk_factor_uart3 to 100000000.
    
    Signed-off-by: Zhong Kaihua <zhongkaihua@huawei.com>
    Signed-off-by: Guodong Xu <guodong.xu@linaro.org>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a967ab0f7338e84d379b7a764bf446221de21d3e
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Oct 5 11:32:59 2017 +0900

    clk: uniphier: fix DAPLL2 clock rate of Pro5
    
    
    [ Upstream commit 67affb78a4e4feb837953e3434c8402a5c3b272f ]
    
    The parent of DAPLL2 should be DAPLL1.  Fix the clock connection.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd11ce209d73cba69a5776818795446a7991755e
Author: Johan Hovold <johan@kernel.org>
Date:   Sat Nov 11 17:29:28 2017 +0100

    clk: qcom: common: fix legacy board-clock registration
    
    
    [ Upstream commit 43a51019cc8ff1b1cd2ba72e86563beb40d356fc ]
    
    Make sure to search only the child nodes of "/clocks", rather than the
    whole device-tree depth-first starting at "/clocks" when determining
    whether to register a fixed clock in the legacy board-clock registration
    helper.
    
    Fixes: ee15faffef11 ("clk: qcom: common: Add API to register board clocks backwards compatibly")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de1090298880468eb6e29e5b1e046862f2301950
Author: Mylene JOSSERAND <mylene.josserand@free-electrons.com>
Date:   Sun Nov 5 17:51:34 2017 +0100

    clk: sunxi-ng: a83t: Fix i2c buses bits
    
    
    [ Upstream commit cc54c0955d6f8618a38a999eecdc3d95306b90de ]
    
    i2c1 and i2c2 bits for CCU are not bit 0 but bit 1 and bit 2.
    Because of that, the i2c0 (bit 0) was not correctly configured.
    Fixed the correct bits for i2c1 and i2c2.
    
    Fixes: 05359be1176b ("clk: sunxi-ng: Add driver for A83T CCU")
    
    Signed-off-by: Mylène Josserand <mylene.josserand@free-electrons.com>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8474be654b2723426f37ad95a48bff1acdb022f7
Author: Gabriel Fernandez <gabriel.fernandez@st.com>
Date:   Wed Oct 11 08:57:24 2017 +0200

    clk: stm32h7: fix test of clock config
    
    
    [ Upstream commit c1ea839c41d049604a3f64ef72712d1c7c6639d0 ]
    
    fix test of composite clock config (bad copy / past)
    
    Signed-off-by: Gabriel Fernandez <gabriel.fernandez@st.com>
    Fixes: 3e4d618b0722 ("clk: stm32h7: Add stm32h743 clock driver")
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b316280c81337971e5cbf239400186425de7bae9
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Nov 14 17:15:50 2017 -0800

    bpf: fix lockdep splat
    
    
    [ Upstream commit 89ad2fa3f043a1e8daae193bcb5fe34d5f8caf28 ]
    
    pcpu_freelist_pop() needs the same lockdep awareness than
    pcpu_freelist_populate() to avoid a false positive.
    
     [ INFO: SOFTIRQ-safe -> SOFTIRQ-unsafe lock order detected ]
    
     switchto-defaul/12508 [HC0[0]:SC0[6]:HE0:SE0] is trying to acquire:
      (&htab->buckets[i].lock){......}, at: [<ffffffff9dc099cb>] __htab_percpu_map_update_elem+0x1cb/0x300
    
     and this task is already holding:
      (dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2){+.-...}, at: [<ffffffff9e135848>] __dev_queue_xmit+0
    x868/0x1240
     which would create a new lock dependency:
      (dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2){+.-...} -> (&htab->buckets[i].lock){......}
    
     but this new dependency connects a SOFTIRQ-irq-safe lock:
      (dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2){+.-...}
     ... which became SOFTIRQ-irq-safe at:
       [<ffffffff9db5931b>] __lock_acquire+0x42b/0x1f10
       [<ffffffff9db5b32c>] lock_acquire+0xbc/0x1b0
       [<ffffffff9da05e38>] _raw_spin_lock+0x38/0x50
       [<ffffffff9e135848>] __dev_queue_xmit+0x868/0x1240
       [<ffffffff9e136240>] dev_queue_xmit+0x10/0x20
       [<ffffffff9e1965d9>] ip_finish_output2+0x439/0x590
       [<ffffffff9e197410>] ip_finish_output+0x150/0x2f0
       [<ffffffff9e19886d>] ip_output+0x7d/0x260
       [<ffffffff9e19789e>] ip_local_out+0x5e/0xe0
       [<ffffffff9e197b25>] ip_queue_xmit+0x205/0x620
       [<ffffffff9e1b8398>] tcp_transmit_skb+0x5a8/0xcb0
       [<ffffffff9e1ba152>] tcp_write_xmit+0x242/0x1070
       [<ffffffff9e1baffc>] __tcp_push_pending_frames+0x3c/0xf0
       [<ffffffff9e1b3472>] tcp_rcv_established+0x312/0x700
       [<ffffffff9e1c1acc>] tcp_v4_do_rcv+0x11c/0x200
       [<ffffffff9e1c3dc2>] tcp_v4_rcv+0xaa2/0xc30
       [<ffffffff9e191107>] ip_local_deliver_finish+0xa7/0x240
       [<ffffffff9e191a36>] ip_local_deliver+0x66/0x200
       [<ffffffff9e19137d>] ip_rcv_finish+0xdd/0x560
       [<ffffffff9e191e65>] ip_rcv+0x295/0x510
       [<ffffffff9e12ff88>] __netif_receive_skb_core+0x988/0x1020
       [<ffffffff9e130641>] __netif_receive_skb+0x21/0x70
       [<ffffffff9e1306ff>] process_backlog+0x6f/0x230
       [<ffffffff9e132129>] net_rx_action+0x229/0x420
       [<ffffffff9da07ee8>] __do_softirq+0xd8/0x43d
       [<ffffffff9e282bcc>] do_softirq_own_stack+0x1c/0x30
       [<ffffffff9dafc2f5>] do_softirq+0x55/0x60
       [<ffffffff9dafc3a8>] __local_bh_enable_ip+0xa8/0xb0
       [<ffffffff9db4c727>] cpu_startup_entry+0x1c7/0x500
       [<ffffffff9daab333>] start_secondary+0x113/0x140
    
     to a SOFTIRQ-irq-unsafe lock:
      (&head->lock){+.+...}
     ... which became SOFTIRQ-irq-unsafe at:
     ...  [<ffffffff9db5971f>] __lock_acquire+0x82f/0x1f10
       [<ffffffff9db5b32c>] lock_acquire+0xbc/0x1b0
       [<ffffffff9da05e38>] _raw_spin_lock+0x38/0x50
       [<ffffffff9dc0b7fa>] pcpu_freelist_pop+0x7a/0xb0
       [<ffffffff9dc08b2c>] htab_map_alloc+0x50c/0x5f0
       [<ffffffff9dc00dc5>] SyS_bpf+0x265/0x1200
       [<ffffffff9e28195f>] entry_SYSCALL_64_fastpath+0x12/0x17
    
     other info that might help us debug this:
    
     Chain exists of:
       dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2 --> &htab->buckets[i].lock --> &head->lock
    
      Possible interrupt unsafe locking scenario:
    
            CPU0                    CPU1
            ----                    ----
       lock(&head->lock);
                                    local_irq_disable();
                                    lock(dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2);
                                    lock(&htab->buckets[i].lock);
       <Interrupt>
         lock(dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2);
    
      *** DEADLOCK ***
    
    Fixes: e19494edab82 ("bpf: introduce percpu_freelist")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81a1c2d3f9eb5996714d47dc0fcab91cee0678d4
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Wed Nov 15 09:43:09 2017 +0800

    geneve: fix fill_info when link down
    
    
    [ Upstream commit fd7eafd02121d6ef501ef1a4a891e6061366c952 ]
    
    geneve->sock4/6 were added with geneve_open and released with geneve_stop.
    So when geneve link down, we will not able to show remote address and
    checksum info after commit 11387fe4a98 ("geneve: fix fill_info when using
    collect_metadata").
    
    Fix this by avoid passing *_REMOTE{,6} for COLLECT_METADATA since they are
    mutually exclusive, and always show UDP_ZERO_CSUM6_RX info.
    
    Fixes: 11387fe4a98 ("geneve: fix fill_info when using collect_metadata")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e9c2a05c368a0b53d5b6647798e67830f5508e0
Author: Jeff Layton <jlayton@redhat.com>
Date:   Tue Nov 14 14:43:56 2017 -0500

    fcntl: don't leak fd reference when fixup_compat_flock fails
    
    
    [ Upstream commit 9280a601e6080c9ff658468c1c775ff6514099a6 ]
    
    Currently we just return err here, but we need to put the fd reference
    first.
    
    Fixes: 94073ad77fff (fs/locks: don't mess with the address limit in compat_fcntl64)
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c7e787bfc91cb374b60ba5fe7055178c94a7cb7
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Nov 15 16:57:26 2017 +0800

    sctp: use the right sk after waking up from wait_buf sleep
    
    
    [ Upstream commit cea0cc80a6777beb6eb643d4ad53690e1ad1d4ff ]
    
    Commit dfcb9f4f99f1 ("sctp: deny peeloff operation on asocs with threads
    sleeping on it") fixed the race between peeloff and wait sndbuf by
    checking waitqueue_active(&asoc->wait) in sctp_do_peeloff().
    
    But it actually doesn't work, as even if waitqueue_active returns false
    the waiting sndbuf thread may still not yet hold sk lock. After asoc is
    peeled off, sk is not asoc->base.sk any more, then to hold the old sk
    lock couldn't make assoc safe to access.
    
    This patch is to fix this by changing to hold the new sk lock if sk is
    not asoc->base.sk, meanwhile, also set the sk in sctp_sendmsg with the
    new sk.
    
    With this fix, there is no more race between peeloff and waitbuf, the
    check 'waitqueue_active' in sctp_do_peeloff can be removed.
    
    Thanks Marcelo and Neil for making this clear.
    
    v1->v2:
      fix it by changing to lock the new sock instead of adding a flag in asoc.
    
    Suggested-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 191d96120f955f23474176da8272a26fd6d0b9bd
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Nov 15 16:55:54 2017 +0800

    sctp: do not free asoc when it is already dead in sctp_sendmsg
    
    
    [ Upstream commit ca3af4dd28cff4e7216e213ba3b671fbf9f84758 ]
    
    Now in sctp_sendmsg sctp_wait_for_sndbuf could schedule out without
    holding sock sk. It means the current asoc can be freed elsewhere,
    like when receiving an abort packet.
    
    If the asoc is just created in sctp_sendmsg and sctp_wait_for_sndbuf
    returns err, the asoc will be freed again due to new_asoc is not nil.
    An use-after-free issue would be triggered by this.
    
    This patch is to fix it by setting new_asoc with nil if the asoc is
    already dead when cpu schedules back, so that it will not be freed
    again in sctp_sendmsg.
    
    v1->v2:
      set new_asoc as nil in sctp_sendmsg instead of sctp_wait_for_sndbuf.
    
    Suggested-by: Neil Horman <nhorman@tuxdriver.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ca94e03675a961424d47ee8d21c4b84606b742d
Author: Miles Chen <miles.chen@mediatek.com>
Date:   Wed Nov 15 17:32:25 2017 -0800

    slub: fix sysfs duplicate filename creation when slub_debug=O
    
    
    [ Upstream commit 11066386efa692f77171484c32ea30f6e5a0d729 ]
    
    When slub_debug=O is set.  It is possible to clear debug flags for an
    "unmergeable" slab cache in kmem_cache_open().  It makes the "unmergeable"
    cache became "mergeable" in sysfs_slab_add().
    
    These caches will generate their "unique IDs" by create_unique_id(), but
    it is possible to create identical unique IDs.  In my experiment,
    sgpool-128, names_cache, biovec-256 generate the same ID ":Ft-0004096" and
    the kernel reports "sysfs: cannot create duplicate filename
    '/kernel/slab/:Ft-0004096'".
    
    To repeat my experiment, set disable_higher_order_debug=1,
    CONFIG_SLUB_DEBUG_ON=y in kernel-4.14.
    
    Fix this issue by setting unmergeable=1 if slub_debug=O and the the
    default slub_debug contains any no-merge flags.
    
    call path:
    kmem_cache_create()
      __kmem_cache_alias()  -> we set SLAB_NEVER_MERGE flags here
      create_cache()
        __kmem_cache_create()
          kmem_cache_open() -> clear DEBUG_METADATA_FLAGS
          sysfs_slab_add()  -> the slab cache is mergeable now
    
      sysfs: cannot create duplicate filename '/kernel/slab/:Ft-0004096'
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 1 at fs/sysfs/dir.c:31 sysfs_warn_dup+0x60/0x7c
      Modules linked in:
      CPU: 0 PID: 1 Comm: swapper/0 Tainted: G        W       4.14.0-rc7ajb-00131-gd4c2e9f-dirty #123
      Hardware name: linux,dummy-virt (DT)
      task: ffffffc07d4e0080 task.stack: ffffff8008008000
      PC is at sysfs_warn_dup+0x60/0x7c
      LR is at sysfs_warn_dup+0x60/0x7c
      pc :  lr :  pstate: 60000145
      Call trace:
       sysfs_warn_dup+0x60/0x7c
       sysfs_create_dir_ns+0x98/0xa0
       kobject_add_internal+0xa0/0x294
       kobject_init_and_add+0x90/0xb4
       sysfs_slab_add+0x90/0x200
       __kmem_cache_create+0x26c/0x438
       kmem_cache_create+0x164/0x1f4
       sg_pool_init+0x60/0x100
       do_one_initcall+0x38/0x12c
       kernel_init_freeable+0x138/0x1d4
       kernel_init+0x10/0xfc
       ret_from_fork+0x10/0x18
    
    Link: http://lkml.kernel.org/r/1510365805-5155-1-git-send-email-miles.chen@mediatek.com
    Signed-off-by: Miles Chen <miles.chen@mediatek.com>
    Acked-by: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1238334082ea47738c79c2acb4546767593e1a75
Author: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
Date:   Wed Nov 15 17:34:03 2017 -0800

    zsmalloc: calling zs_map_object() from irq is a bug
    
    
    [ Upstream commit 1aedcafbf32b3f232c159b14cd0d423fcfe2b861 ]
    
    Use BUG_ON(in_interrupt()) in zs_map_object().  This is not a new
    BUG_ON(), it's always been there, but was recently changed to
    VM_BUG_ON().  There are several problems there.  First, we use use
    per-CPU mappings both in zsmalloc and in zram, and interrupt may easily
    corrupt those buffers.  Second, and more importantly, we believe it's
    possible to start leaking sensitive information.  Consider the following
    case:
    
    -> process P
            swap out
             zram
              per-cpu mapping CPU1
               compress page A
    -> IRQ
    
            swap out
             zram
              per-cpu mapping CPU1
               compress page B
                write page from per-cpu mapping CPU1 to zsmalloc pool
            iret
    
    -> process P
                write page from per-cpu mapping CPU1 to zsmalloc pool  [*]
            return
    
    * so we store overwritten data that actually belongs to another
      page (task) and potentially contains sensitive data. And when
      process P will page fault it's going to read (swap in) that
      other task's data.
    
    Link: http://lkml.kernel.org/r/20170929045140.4055-1-sergey.senozhatsky@gmail.com
    Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99dac8af6e6fe6100aaaba0a69e44fcb886c2b92
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Wed Nov 15 17:36:18 2017 -0800

    sparc64/mm: set fields in deferred pages
    
    
    [ Upstream commit 2a20aa171071a334d80c4e5d5af719d8374702fc ]
    
    Without deferred struct page feature (CONFIG_DEFERRED_STRUCT_PAGE_INIT),
    flags and other fields in "struct page"es are never changed prior to
    first initializing struct pages by going through __init_single_page().
    
    With deferred struct page feature enabled there is a case where we set
    some fields prior to initializing:
    
    mem_init() {
         register_page_bootmem_info();
         free_all_bootmem();
         ...
    }
    
    When register_page_bootmem_info() is called only non-deferred struct
    pages are initialized.  But, this function goes through some reserved
    pages which might be part of the deferred, and thus are not yet
    initialized.
    
    mem_init
    register_page_bootmem_info
    register_page_bootmem_info_node
     get_page_bootmem
      .. setting fields here ..
      such as: page->freelist = (void *)type;
    
    free_all_bootmem()
    free_low_memory_core_early()
     for_each_reserved_mem_region()
      reserve_bootmem_region()
       init_reserved_page() <- Only if this is deferred reserved page
        __init_single_pfn()
         __init_single_page()
          memset(0) <-- Loose the set fields here
    
    We end up with similar issue as in the previous patch, where currently
    we do not observe problem as memory is zeroed.  But, if flag asserts are
    changed we can start hitting issues.
    
    Also, because in this patch series we will stop zeroing struct page
    memory during allocation, we must make sure that struct pages are
    properly initialized prior to using them.
    
    The deferred-reserved pages are initialized in free_all_bootmem().
    Therefore, the fix is to switch the above calls.
    
    Link: http://lkml.kernel.org/r/20171013173214.27300-4-pasha.tatashin@oracle.com
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Reviewed-by: Steven Sistare <steven.sistare@oracle.com>
    Reviewed-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Reviewed-by: Bob Picco <bob.picco@oracle.com>
    Acked-by: David S. Miller <davem@davemloft.net>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60bed713ab191588edeba77f2cfa8cc13ccb7000
Author: Ming Lei <ming.lei@redhat.com>
Date:   Thu Nov 16 08:08:44 2017 +0800

    block: wake up all tasks blocked in get_request()
    
    
    [ Upstream commit 34d9715ac1edd50285168dd8d80c972739a4f6a4 ]
    
    Once blk_set_queue_dying() is done in blk_cleanup_queue(), we call
    blk_freeze_queue() and wait for q->q_usage_counter becoming zero. But
    if there are tasks blocked in get_request(), q->q_usage_counter can
    never become zero. So we have to wake up all these tasks in
    blk_set_queue_dying() first.
    
    Fixes: 3ef28e83ab157997 ("block: generic request_queue reference counting")
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84e0b87ebfb56041d8130bf220d1494515332b65
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Nov 9 18:07:17 2017 +0100

    dt-bindings: usb: fix reg-property port-number range
    
    
    [ Upstream commit f42ae7b0540937e00fe005812997f126aaac4bc2 ]
    
    The USB hub port-number range for USB 2.0 is 1-255 and not 1-31 which
    reflects an arbitrary limit set by the current Linux implementation.
    
    Note that for USB 3.1 hubs the valid range is 1-15.
    
    Increase the documented valid range in the binding to 255, which is the
    maximum allowed by the specifications.
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4da9e07a6a27939f9e976ade9945c735ad026b9
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Tue Nov 14 16:34:44 2017 -0800

    xfs: fix forgotten rcu read unlock when skipping inode reclaim
    
    
    [ Upstream commit 962cc1ad6caddb5abbb9f0a43e5abe7131a71f18 ]
    
    In commit f2e9ad21 ("xfs: check for race with xfs_reclaim_inode"), we
    skip an inode if we're racing with freeing the inode via
    xfs_reclaim_inode, but we forgot to release the rcu read lock when
    dumping the inode, with the result that we exit to userspace with a lock
    held.  Don't do that; generic/320 with a 1k block size fails this
    very occasionally.
    
    ================================================
    WARNING: lock held when returning to user space!
    4.14.0-rc6-djwong #4 Tainted: G        W
    ------------------------------------------------
    rm/30466 is leaving the kernel with locks still held!
    1 lock held by rm/30466:
     #0:  (rcu_read_lock){....}, at: [<ffffffffa01364d3>] xfs_ifree_cluster.isra.17+0x2c3/0x6f0 [xfs]
    ------------[ cut here ]------------
    WARNING: CPU: 1 PID: 30466 at kernel/rcu/tree_plugin.h:329 rcu_note_context_switch+0x71/0x700
    Modules linked in: deadline_iosched dm_snapshot dm_bufio ext4 mbcache jbd2 dm_flakey xfs libcrc32c dax_pmem device_dax nd_pmem sch_fq_codel af_packet [last unloaded: scsi_debug]
    CPU: 1 PID: 30466 Comm: rm Tainted: G        W       4.14.0-rc6-djwong #4
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.10.2-1ubuntu1djwong0 04/01/2014
    task: ffff880037680000 task.stack: ffffc90001064000
    RIP: 0010:rcu_note_context_switch+0x71/0x700
    RSP: 0000:ffffc90001067e50 EFLAGS: 00010002
    RAX: 0000000000000001 RBX: ffff880037680000 RCX: ffff88003e73d200
    RDX: 0000000000000002 RSI: ffffffff819e53e9 RDI: ffffffff819f4375
    RBP: 0000000000000000 R08: 0000000000000000 R09: ffff880062c900d0
    R10: 0000000000000000 R11: 0000000000000000 R12: ffff880037680000
    R13: 0000000000000000 R14: ffffc90001067eb8 R15: ffff880037680690
    FS:  00007fa3b8ce8700(0000) GS:ffff88003ec00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f69bf77c000 CR3: 000000002450a000 CR4: 00000000000006e0
    Call Trace:
     __schedule+0xb8/0xb10
     schedule+0x40/0x90
     exit_to_usermode_loop+0x6b/0xa0
     prepare_exit_to_usermode+0x7a/0x90
     retint_user+0x8/0x20
    RIP: 0033:0x7fa3b87fda87
    RSP: 002b:00007ffe41206568 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff02
    RAX: 0000000000000000 RBX: 00000000010e88c0 RCX: 00007fa3b87fda87
    RDX: 0000000000000000 RSI: 00000000010e89c8 RDI: 0000000000000005
    RBP: 0000000000000000 R08: 0000000000000003 R09: 0000000000000000
    R10: 000000000000015e R11: 0000000000000246 R12: 00000000010c8060
    R13: 00007ffe41206690 R14: 0000000000000000 R15: 0000000000000000
    ---[ end trace e88f83bf0cfbd07d ]---
    
    Fixes: f2e9ad212def50bcf4c098c6288779dd97fff0f0
    Cc: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cb98be5f989fc2820d7198170098939c38579a3
Author: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
Date:   Thu Nov 16 17:06:39 2017 -0800

    nfp: fix flower offload metadata flag usage
    
    
    [ Upstream commit 6c3ab204f4ca00374a374bc0fc9a275b64d1bcbb ]
    
    Hardware has no notion of new or last mask id, instead it makes use of the
    message type (i.e. add flow or del flow) in combination with a single bit
    in metadata flags to determine when to add or delete a mask id. Previously
    we made use of the new or last flags to indicate that a new mask should be
    allocated or deallocated, respectively. This incorrect behaviour is fixed
    by making use single bit in metadata flags to indicate mask allocation or
    deallocation.
    
    Fixes: 43f84b72c50d ("nfp: add metadata to each flow offload")
    Signed-off-by: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
    Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfcbc4f35a73c95d8843495274cd9fff1d5f4c33
Author: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
Date:   Thu Nov 16 17:06:41 2017 -0800

    nfp: inherit the max_mtu from the PF netdev
    
    
    [ Upstream commit 743ba5b47f7961fb29f2e06bb694fb4f068ac58f ]
    
    The PF netdev is used for data transfer for reprs, so reprs inherit the
    maximum MTU settings of the PF netdev.
    
    Fixes: 5de73ee46704 ("nfp: general representor implementation")
    Signed-off-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
    Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94d6b7fa7226dba65a3ea718db6499a87b7623c3
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Nov 3 13:46:06 2017 -0400

    sunrpc: Fix rpc_task_begin trace point
    
    
    [ Upstream commit b2bfe5915d5fe7577221031a39ac722a0a2a1199 ]
    
    The rpc_task_begin trace point always display a task ID of zero.
    Move the trace point call site so that it picks up the new task ID.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57f94fd10554a2d73e92490ba0eb8e575b8b8fbb
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Nov 6 15:28:04 2017 -0500

    NFS: Fix a typo in nfs_rename()
    
    
    [ Upstream commit d803224c84be067754db7fa58a93f36f61566493 ]
    
    On successful rename, the "old_dentry" is retained and is attached to
    the "new_dir", so we need to call nfs_set_verifier() accordingly.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cb22e0793d41e466bbaa42c01a87afb869c8e9b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Nov 17 15:27:35 2017 -0800

    dynamic-debug-howto: fix optional/omitted ending line number to be LARGE instead of 0
    
    
    [ Upstream commit 1f3c790bd5989fcfec9e53ad8fa09f5b740c958f ]
    
    line-range is supposed to treat "1-" as "1-endoffile", so
    handle the special case by setting last_lineno to UINT_MAX.
    
    Fixes this error:
    
      dynamic_debug:ddebug_parse_query: last-line:0 < 1st-line:1
      dynamic_debug:ddebug_exec_query: query parse failed
    
    Link: http://lkml.kernel.org/r/10a6a101-e2be-209f-1f41-54637824788e@infradead.org
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Acked-by: Jason Baron <jbaron@akamai.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 346008fe47ed099f1793f2ba6721c9bc5b67e3a3
Author: Stephen Bates <sbates@raithlin.com>
Date:   Fri Nov 17 15:28:16 2017 -0800

    lib/genalloc.c: make the avail variable an atomic_long_t
    
    
    [ Upstream commit 36a3d1dd4e16bcd0d2ddfb4a2ec7092f0ae0d931 ]
    
    If the amount of resources allocated to a gen_pool exceeds 2^32 then the
    avail atomic overflows and this causes problems when clients try and
    borrow resources from the pool.  This is only expected to be an issue on
    64 bit systems.
    
    Add the <linux/atomic.h> header to pull in atomic_long* operations.  So
    that 32 bit systems continue to use atomic32_t but 64 bit systems can
    use atomic64_t.
    
    Link: http://lkml.kernel.org/r/1509033843-25667-1-git-send-email-sbates@raithlin.com
    Signed-off-by: Stephen Bates <sbates@raithlin.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Reviewed-by: Daniel Mentz <danielmentz@google.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30c2f774e13547f0dbb68cf779911d4d8920f0bc
Author: Joe Lawrence <joe.lawrence@redhat.com>
Date:   Fri Nov 17 15:29:17 2017 -0800

    pipe: match pipe_max_size data type with procfs
    
    
    [ Upstream commit 98159d977f71c3b3dee898d1c34e56f520b094e7 ]
    
    Patch series "A few round_pipe_size() and pipe-max-size fixups", v3.
    
    While backporting Michael's "pipe: fix limit handling" patchset to a
    distro-kernel, Mikulas noticed that current upstream pipe limit handling
    contains a few problems:
    
      1 - procfs signed wrap: echo'ing a large number into
          /proc/sys/fs/pipe-max-size and then cat'ing it back out shows a
          negative value.
    
      2 - round_pipe_size() nr_pages overflow on 32bit:  this would
          subsequently try roundup_pow_of_two(0), which is undefined.
    
      3 - visible non-rounded pipe-max-size value: there is no mutual
          exclusion or protection between the time pipe_max_size is assigned
          a raw value from proc_dointvec_minmax() and when it is rounded.
    
      4 - unsigned long -> unsigned int conversion makes for potential odd
          return errors from do_proc_douintvec_minmax_conv() and
          do_proc_dopipe_max_size_conv().
    
    This version underwent the same testing as v1:
    https://marc.info/?l=linux-kernel&m=150643571406022&w=2
    
    This patch (of 4):
    
    pipe_max_size is defined as an unsigned int:
    
      unsigned int pipe_max_size = 1048576;
    
    but its procfs/sysctl representation is an integer:
    
      static struct ctl_table fs_table[] = {
              ...
              {
                      .procname       = "pipe-max-size",
                      .data           = &pipe_max_size,
                      .maxlen         = sizeof(int),
                      .mode           = 0644,
                      .proc_handler   = &pipe_proc_fn,
                      .extra1         = &pipe_min_size,
              },
              ...
    
    that is signed:
    
      int pipe_proc_fn(struct ctl_table *table, int write, void __user *buf,
                       size_t *lenp, loff_t *ppos)
      {
              ...
              ret = proc_dointvec_minmax(table, write, buf, lenp, ppos)
    
    This leads to signed results via procfs for large values of pipe_max_size:
    
      % echo 2147483647 >/proc/sys/fs/pipe-max-size
      % cat /proc/sys/fs/pipe-max-size
      -2147483648
    
    Use unsigned operations on this variable to avoid such negative values.
    
    Link: http://lkml.kernel.org/r/1507658689-11669-2-git-send-email-joe.lawrence@redhat.com
    Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65c4767b0e715d9c3310f9d26a7e981caf15c428
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Nov 17 15:37:57 2017 -0800

    drivers/rapidio/devices/rio_mport_cdev.c: fix resource leak in error handling path in 'rio_dma_transfer()'
    
    
    [ Upstream commit b1402dcb5643b7a27d46a05edd7491d49ba0e248 ]
    
    If 'dma_map_sg()', we should branch to the existing error handling path
    to free some resources before returning.
    
    Link: http://lkml.kernel.org/r/61292a4f369229eee03394247385e955027283f8.1505687047.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Cc: Alexandre Bounine <alexandre.bounine@idt.com>
    Cc: Lorenzo Stoakes <lstoakes@gmail.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Christian K_nig <christian.koenig@amd.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f52688ce0d7bb5bd6932be99faec931be59d9c63
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Nov 16 17:39:18 2017 +0000

    rsi: fix memory leak on buf and usb_reg_buf
    
    
    [ Upstream commit d35ef8f846c72d84bfccf239c248c84f79c3a7e8 ]
    
    In the cases where len is too long, the error return path fails to
    kfree allocated buffers buf and usb_reg_buf.  The simplest fix is to
    perform the sanity check on len before the allocations to avoid having
    to do the kfree'ing in the first place.
    
    Detected by CoverityScan, CID#1452258,1452259 ("Resource Leak")
    
    Fixes: 59f73e2ae185 ("rsi: check length before USB read/write register")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad199b18a9c00729bd000cf3565f6a45ebd4e177
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Nov 17 14:27:06 2017 +0800

    route: update fnhe_expires for redirect when the fnhe exists
    
    
    [ Upstream commit e39d5246111399dbc6e11cd39fd8580191b86c47 ]
    
    Now when creating fnhe for redirect, it sets fnhe_expires for this
    new route cache. But when updating the exist one, it doesn't do it.
    It will cause this fnhe never to be expired.
    
    Paolo already noticed it before, in Jianlin's test case, it became
    even worse:
    
    When ip route flush cache, the old fnhe is not to be removed, but
    only clean it's members. When redirect comes again, this fnhe will
    be found and updated, but never be expired due to fnhe_expires not
    being set.
    
    So fix it by simply updating fnhe_expires even it's for redirect.
    
    Fixes: aee06da6726d ("ipv4: use seqlock for nh_exceptions")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 407de7d97a689d478e1c4b4fe2198af9c8cc3fcb
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Nov 17 14:27:18 2017 +0800

    route: also update fnhe_genid when updating a route cache
    
    
    [ Upstream commit cebe84c6190d741045a322f5343f717139993c08 ]
    
    Now when ip route flush cache and it turn out all fnhe_genid != genid.
    If a redirect/pmtu icmp packet comes and the old fnhe is found and all
    it's members but fnhe_genid will be updated.
    
    Then next time when it looks up route and tries to rebind this fnhe to
    the new dst, the fnhe will be flushed due to fnhe_genid != genid. It
    causes this redirect/pmtu icmp packet acutally not to be applied.
    
    This patch is to also reset fnhe_genid when updating a route cache.
    
    Fixes: 5aad1de5ea2c ("ipv4: use separate genid for next hop exceptions")
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffe6293d19dc965916177986aec254d0cb9cd71e
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Fri Nov 17 19:16:17 2017 +0300

    gre6: use log_ecn_error module parameter in ip6_tnl_rcv()
    
    
    [ Upstream commit 981542c526ecd846920bc500e9989da906ee9fb9 ]
    
    After commit 308edfdf1563 ("gre6: Cleanup GREv6 receive path, call
    common GRE functions") it's not used anywhere in the module, but
    previously was used in ip6gre_rcv().
    
    Fixes: 308edfdf1563 ("gre6: Cleanup GREv6 receive path, call common GRE functions")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 266fd76296bea9f392ae205e7a08f5f5726dc7f9
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Fri Nov 10 18:48:50 2017 +0000

    mac80211_hwsim: Fix memory leak in hwsim_new_radio_nl()
    
    
    [ Upstream commit 67bd52386125ce1159c0581cbcd2740addf33cd4 ]
    
    hwsim_new_radio_nl() now copies the name attribute in order to add a
    null-terminator.  mac80211_hwsim_new_radio() (indirectly) copies it
    again into the net_device structure, so the first copy is not used or
    freed later.  Free the first copy before returning.
    
    Fixes: ff4dd73dd2b4 ("mac80211_hwsim: check HWSIM_ATTR_RADIO_NAME length")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad7acca17e31d14ceca8824728440e727150ddd0
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Nov 10 16:12:29 2017 -0800

    x86/mpx/selftests: Fix up weird arrays
    
    
    [ Upstream commit a6400120d042397675fcf694060779d21e9e762d ]
    
    The MPX hardware data structurse are defined in a weird way: they define
    their size in bytes and then union that with the type with which we want
    to access them.
    
    Yes, this is weird, but it does work.  But, new GCC's complain that we
    are accessing the array out of bounds.  Just make it a zero-sized array
    so gcc will stop complaining.  There was not really a bug here.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20171111001229.58A7933D@viggo.jf.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 897088926c3477ef8d3d299473a2777dd9d1c9cb
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Nov 15 15:25:30 2017 -0800

    apparmor: fix leak of null profile name if profile allocation fails
    
    
    [ Upstream commit 4633307e5ed6128975595df43f796a10c41d11c1 ]
    
    Fixes: d07881d2edb0 ("apparmor: move new_null_profile to after profile lookup fns()")
    Reported-by: Seth Arnold <seth.arnold@canonical.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86d1d015fe06267b60d496971d01c859aaa8ce08
Author: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
Date:   Wed Nov 22 10:45:38 2017 +0530

    powerpc/perf: Fix pmu_count to count only nest imc pmus
    
    
    [ Upstream commit de34787f1096cce38e2590be0013b44418d14546 ]
    
    "pmu_count" in opal_imc_counters_probe() is intended to hold
    the number of successful nest imc pmu registerations. But
    current code also counts other imc units like core_imc and
    thread_imc. Patch add a check to count only nest imc pmus.
    
    Signed-off-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 394d0c93b9dd2dee2024a9d922a60b3a3aadb538
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Tue Nov 14 20:38:07 2017 +0900

    coccinelle: fix parallel build with CHECK=scripts/coccicheck
    
    
    [ Upstream commit d7059ca0147adcd495f3c5b41f260e1ac55bb679 ]
    
    The command "make -j8 C=1 CHECK=scripts/coccicheck" produces
    lots of "coccicheck failed" error messages.
    
    Julia Lawall explained the Coccinelle behavior as follows:
    "The problem on the Coccinelle side is that it uses a subdirectory
    with the name of the semantic patch to store standard output and
    standard error for the different threads.  I didn't want to use a
    name with the pid, so that one could easily find this information
    while Coccinelle is running.  Normally the subdirectory is cleaned
    up when Coccinelle completes, so there is only one of them at a time.
    Maybe it is best to just add the pid.  There is the risk that these
    subdirectories will accumulate if Coccinelle crashes in a way such
    that they don't get cleaned up, but Coccinelle could print a warning
    if it detects this case, rather than failing."
    
    When scripts/coccicheck is used as CHECK tool and -j option is given
    to Make, the whole of build process runs in parallel.  So, multiple
    processes try to get access to the same subdirectory.
    
    I notice spatch creates the subdirectory only when it runs in parallel
    (i.e. --jobs <N> is given and <N> is greater than 1).
    
    Setting NPROC=1 is a reasonable solution; spatch does not create the
    subdirectory.  Besides, ONLINE=1 mode takes a single file input for
    each spatch invocation, so there is no reason to parallelize it in
    the first place.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Acked-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54a13eb7f03ac8bb92b3b2c358e42eb08834240b
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Nov 15 18:17:07 2017 +0900

    kbuild: pkg: use --transform option to prefix paths in tar
    
    
    [ Upstream commit 2dbc644ac62bbcb9ee78e84719953f611be0413d ]
    
    For rpm-pkg and deb-pkg, a source tar file is created.  All paths in
    the archive must be prefixed with the base name of the tar so that
    everything is contained in the directory when you extract it.
    
    Currently, scripts/package/Makefile uses a symlink for that, and
    removes it after the tar is created.
    
    If you terminate the build during the tar creation, the symlink is
    left over.  Then, at the next package build, you will see a warning
    like follows:
    
      ln: '.' and 'kernel-4.14.0+/.' are the same file
    
    It is possible to fix it by adding -n (--no-dereference) option to
    the "ln" command, but a cleaner way is to use --transform option
    of "tar" command.  This option is GNU extension, but it should not
    hurt to use it in the Linux build system.
    
    The 'S' flag is needed to exclude symlinks from the path fixup.
    Without it, symlinks in the kernel are broken.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d0d1bc65b5710f45bc5fe10b4fbfc2671b0851d
Author: Ursula Braun <ursula.braun@de.ibm.com>
Date:   Tue Nov 21 13:23:53 2017 +0100

    net/smc: use sk_rcvbuf as start for rmb creation
    
    
    [ Upstream commit 4e1061f4a2bba1669c7297455c73ddafbebf2b12 ]
    
    Commit 3e034725c0d8 ("net/smc: common functions for RMBs and send buffers")
    merged handling of SMC receive and send buffers. It introduced sk_buf_size
    as merged start value for size determination. But since sk_buf_size is not
    used at all, sk_sndbuf is erroneously used as start for rmb creation.
    This patch makes sure, sk_buf_size is really used as intended, and
    sk_rcvbuf is used as start value for rmb creation.
    
    Fixes: 3e034725c0d8 ("net/smc: common functions for RMBs and send buffers")
    Signed-off-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
    Reviewed-by: Hans Wippel <hwippel@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0d564230e08d314aac54cbcb1865a4b8fafe906
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Nov 17 18:35:53 2017 +0000

    irqchip/qcom: Fix u32 comparison with value less than zero
    
    
    [ Upstream commit e9990d70e8a063a7b894c5cbb99f630a0f41200d ]
    
    The comparison of u32 nregs being less than zero is never true since
    nregs is unsigned. Fix this by making nregs a signed integer.
    
    Fixes: f20cc9b00c7b ("irqchip/qcom: Add IRQ combiner driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: kernel-janitors@vger.kernel.org
    Cc: Jason Cooper <jason@lakedaemon.net>
    Link: https://lkml.kernel.org/r/20171117183553.2739-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14f13c9d58d8d738666d58fa7b2f8872286655bf
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Mon Nov 27 11:22:42 2017 +0000

    ARM: avoid faulting on qemu
    
    commit 3aaf33bebda8d4ffcc0fc8ef39e6c1ac68823b11 upstream.
    
    When qemu starts a kernel in a bare environment, the default SCR has
    the AW and FW bits clear, which means that the kernel can't modify
    the PSR A or PSR F bits, and means that FIQs and imprecise aborts are
    always masked.
    
    When running uboot under qemu, the AW and FW SCR bits are set, and the
    kernel functions normally - and this is how real hardware behaves.
    
    Fix this for qemu by ignoring the FIQ bit.
    
    Fixes: 8bafae202c82 ("ARM: BUG if jumping to usermode address in kernel mode")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Cc: Alex Shi <alex.shi@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21e1e6192ba653dfcc42bb0b275a4af7af5e32b0
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Fri Nov 24 23:49:34 2017 +0000

    ARM: BUG if jumping to usermode address in kernel mode
    
    commit 8bafae202c82dc257f649ea3c275a0f35ee15113 upstream.
    
    Detect if we are returning to usermode via the normal kernel exit paths
    but the saved PSR value indicates that we are in kernel mode.  This
    could occur due to corrupted stack state, which has been observed with
    "ftracetest".
    
    This ensures that we catch the problem case before we get to user code.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Cc: Alex Shi <alex.shi@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 077415efefe77f6f3e82ae4868867e32ede01286
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:43 2017 +0200

    crypto: talitos - fix ctr-aes-talitos
    
    commit 70d355ccea899dad47dc22d3a4406998f55143fd upstream.
    
    ctr-aes-talitos test fails as follows on SEC2
    
    [    0.837427] alg: skcipher: Test 1 failed (invalid result) on encryption for ctr-aes-talitos
    [    0.845763] 00000000: 16 36 d5 ee 34 f8 06 25 d7 7f 8e 56 ca 88 43 45
    [    0.852345] 00000010: f9 3f f7 17 2a b2 12 23 30 43 09 15 82 dd e1 97
    [    0.858940] 00000020: a7 f7 32 b5 eb 25 06 13 9a ec f5 29 25 f8 4d 66
    [    0.865366] 00000030: b0 03 5b 8e aa 9a 42 b6 19 33 8a e2 9d 65 96 95
    
    This patch fixes the descriptor type which is special for CTR AES
    
    Fixes: 5e75ae1b3cef6 ("crypto: talitos - add new crypto modes")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2040f8e814055a330aae1ed83c3fe2aba26173f0
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:41 2017 +0200

    crypto: talitos - fix use of sg_link_tbl_len
    
    commit fbb22137c4d9bab536958b152d096fb3f98020ea upstream.
    
    sg_link_tbl_len shall be used instead of cryptlen, otherwise
    SECs which perform HW CICV verification will fail.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2d93ada4fd30feeb3d0c914926f7a9fdea10102
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:39 2017 +0200

    crypto: talitos - fix AEAD for sha224 on non sha224 capable chips
    
    commit 6cda075aff67a1b9b5ba1b2818091dc939643b6c upstream.
    
    sha224 AEAD test fails with:
    
    [    2.803125] talitos ff020000.crypto: DEUISR 0x00000000_00000000
    [    2.808743] talitos ff020000.crypto: MDEUISR 0x80100000_00000000
    [    2.814678] talitos ff020000.crypto: DESCBUF 0x20731f21_00000018
    [    2.820616] talitos ff020000.crypto: DESCBUF 0x0628d64c_00000010
    [    2.826554] talitos ff020000.crypto: DESCBUF 0x0631005c_00000018
    [    2.832492] talitos ff020000.crypto: DESCBUF 0x0628d664_00000008
    [    2.838430] talitos ff020000.crypto: DESCBUF 0x061b13a0_00000080
    [    2.844369] talitos ff020000.crypto: DESCBUF 0x0631006c_00000080
    [    2.850307] talitos ff020000.crypto: DESCBUF 0x0631006c_00000018
    [    2.856245] talitos ff020000.crypto: DESCBUF 0x063100ec_00000000
    [    2.884972] talitos ff020000.crypto: failed to reset channel 0
    [    2.890503] talitos ff020000.crypto: done overflow, internal time out, or rngu error: ISR 0x20000000_00020000
    [    2.900652] alg: aead: encryption failed on test 1 for authenc-hmac-sha224-cbc-3des-talitos: ret=22
    
    This is due to SHA224 not being supported by the HW. Allthough for
    hash we are able to init the hash context by SW, it is not
    possible for AEAD. Therefore SHA224 AEAD has to be deactivated.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62744ebaeb91ff089865f90d0a0a1475a924809f
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:37 2017 +0200

    crypto: talitos - fix setkey to check key weakness
    
    commit f384cdc4faf350fdb6ad93c5f26952b9ba7c7566 upstream.
    
    Crypto manager test report the following failures:
    [    3.061081] alg: skcipher: setkey failed on test 5 for ecb-des-talitos: flags=100
    [    3.069342] alg: skcipher-ddst: setkey failed on test 5 for ecb-des-talitos: flags=100
    [    3.077754] alg: skcipher-ddst: setkey failed on test 5 for ecb-des-talitos: flags=100
    
    This is due to setkey being expected to detect weak keys.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68b426477820e396f204e06c6de4063a82d63422
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:35 2017 +0200

    crypto: talitos - fix memory corruption on SEC2
    
    commit e04a61bebc5da1535b6f194b464295b8d558e2fc upstream.
    
    On SEC2, when using the old descriptors type (hmac snoop no afeu)
    for doing IPsec, the CICV out pointeur points out of the allocated
    memory.
    
    [    2.502554] =============================================================================
    [    2.510740] BUG dma-kmalloc-256 (Not tainted): Redzone overwritten
    [    2.516907] -----------------------------------------------------------------------------
    [    2.516907]
    [    2.526535] Disabling lock debugging due to kernel taint
    [    2.531845] INFO: 0xde858108-0xde85810b. First byte 0xf8 instead of 0xcc
    [    2.538549] INFO: Allocated in 0x806181a9 age=0 cpu=0 pid=58
    [    2.544229]  __kmalloc+0x374/0x564
    [    2.547649]  talitos_edesc_alloc+0x17c/0x48c
    [    2.551929]  aead_edesc_alloc+0x80/0x154
    [    2.555863]  aead_encrypt+0x30/0xe0
    [    2.559368]  __test_aead+0x5a0/0x1f3c
    [    2.563042]  test_aead+0x2c/0x110
    [    2.566371]  alg_test_aead+0x5c/0xf4
    [    2.569958]  alg_test+0x1dc/0x5a0
    [    2.573305]  cryptomgr_test+0x50/0x70
    [    2.576984]  kthread+0xd8/0x134
    [    2.580155]  ret_from_kernel_thread+0x5c/0x64
    [    2.584534] INFO: Freed in ipsec_esp_encrypt_done+0x130/0x240 age=6 cpu=0 pid=0
    [    2.591839]  ipsec_esp_encrypt_done+0x130/0x240
    [    2.596395]  flush_channel+0x1dc/0x488
    [    2.600161]  talitos2_done_4ch+0x30/0x200
    [    2.604185]  tasklet_action+0xa0/0x13c
    [    2.607948]  __do_softirq+0x148/0x6cc
    [    2.611623]  irq_exit+0xc0/0x124
    [    2.614869]  call_do_irq+0x24/0x3c
    [    2.618292]  do_IRQ+0x78/0x108
    [    2.621369]  ret_from_except+0x0/0x14
    [    2.625055]  finish_task_switch+0x58/0x350
    [    2.629165]  schedule+0x80/0x134
    [    2.632409]  schedule_preempt_disabled+0x38/0xc8
    [    2.637042]  cpu_startup_entry+0xe4/0x190
    [    2.641074]  start_kernel+0x3f4/0x408
    [    2.644741]  0x3438
    [    2.646857] INFO: Slab 0xdffbdb00 objects=9 used=1 fp=0xde8581c0 flags=0x0080
    [    2.653978] INFO: Object 0xde858008 @offset=8 fp=0xca4395df
    [    2.653978]
    [    2.661032] Redzone de858000: cc cc cc cc cc cc cc cc                          ........
    [    2.669029] Object de858008: 00 00 00 02 00 00 00 02 00 6b 6b 6b 1e 83 ea 28  .........kkk...(
    [    2.677628] Object de858018: 00 00 00 70 1e 85 80 64 ff 73 1d 21 6b 6b 6b 6b  ...p...d.s.!kkkk
    [    2.686228] Object de858028: 00 20 00 00 1e 84 17 24 00 10 00 00 1e 85 70 00  . .....$......p.
    [    2.694829] Object de858038: 00 18 00 00 1e 84 17 44 00 08 00 00 1e 83 ea 28  .......D.......(
    [    2.703430] Object de858048: 00 80 00 00 1e 84 f0 00 00 80 00 00 1e 85 70 10  ..............p.
    [    2.712030] Object de858058: 00 20 6b 00 1e 85 80 f4 6b 6b 6b 6b 00 80 02 00  . k.....kkkk....
    [    2.720629] Object de858068: 1e 84 f0 00 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  ....kkkkkkkkkkkk
    [    2.729230] Object de858078: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.737830] Object de858088: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.746429] Object de858098: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.755029] Object de8580a8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.763628] Object de8580b8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.772229] Object de8580c8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.780829] Object de8580d8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.789430] Object de8580e8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 73 b0 ea 9f  kkkkkkkkkkkks...
    [    2.798030] Object de8580f8: e8 18 80 d6 56 38 44 c0 db e3 4f 71 f7 ce d1 d3  ....V8D...Oq....
    [    2.806629] Redzone de858108: f8 bd 3e 4f                                      ..>O
    [    2.814279] Padding de8581b0: 5a 5a 5a 5a 5a 5a 5a 5a                          ZZZZZZZZ
    [    2.822283] CPU: 0 PID: 0 Comm: swapper Tainted: G    B           4.9.50-g995be12679 #179
    [    2.831819] Call Trace:
    [    2.834301] [dffefd20] [c01aa9a8] check_bytes_and_report+0x100/0x194 (unreliable)
    [    2.841801] [dffefd50] [c01aac3c] check_object+0x200/0x530
    [    2.847306] [dffefd80] [c01ae584] free_debug_processing+0x290/0x690
    [    2.853585] [dffefde0] [c01aec8c] __slab_free+0x308/0x628
    [    2.859000] [dffefe80] [c05057f4] ipsec_esp_encrypt_done+0x130/0x240
    [    2.865378] [dffefeb0] [c05002c4] flush_channel+0x1dc/0x488
    [    2.870968] [dffeff10] [c05007a8] talitos2_done_4ch+0x30/0x200
    [    2.876814] [dffeff30] [c002fe38] tasklet_action+0xa0/0x13c
    [    2.882399] [dffeff60] [c002f118] __do_softirq+0x148/0x6cc
    [    2.887896] [dffeffd0] [c002f954] irq_exit+0xc0/0x124
    [    2.892968] [dffefff0] [c0013adc] call_do_irq+0x24/0x3c
    [    2.898213] [c0d4be00] [c000757c] do_IRQ+0x78/0x108
    [    2.903113] [c0d4be30] [c0015c08] ret_from_except+0x0/0x14
    [    2.908634] --- interrupt: 501 at finish_task_switch+0x70/0x350
    [    2.908634]     LR = finish_task_switch+0x58/0x350
    [    2.919327] [c0d4bf20] [c085e1d4] schedule+0x80/0x134
    [    2.924398] [c0d4bf50] [c085e2c0] schedule_preempt_disabled+0x38/0xc8
    [    2.930853] [c0d4bf60] [c007f064] cpu_startup_entry+0xe4/0x190
    [    2.936707] [c0d4bfb0] [c096c434] start_kernel+0x3f4/0x408
    [    2.942198] [c0d4bff0] [00003438] 0x3438
    [    2.946137] FIX dma-kmalloc-256: Restoring 0xde858108-0xde85810b=0xcc
    [    2.946137]
    [    2.954158] FIX dma-kmalloc-256: Object at 0xde858008 not freed
    
    This patch reworks the handling of the CICV out in order
    to properly handle all cases.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b9cf144dc0b164761212586dd86ace41fd601f4
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:33 2017 +0200

    crypto: talitos - fix AEAD test failures
    
    commit ec8c7d14acc0a477429d3a6fade5dab72c996c82 upstream.
    
    AEAD tests fail when destination SG list has more than 1 element.
    
    [    2.058752] alg: aead: Test 1 failed on encryption for authenc-hmac-sha1-cbc-aes-talitos
    [    2.066965] 00000000: 53 69 6e 67 6c 65 20 62 6c 6f 63 6b 20 6d 73 67
    00000010: c0 43 ff 74 c0 43 ff e0 de 83 d1 20 de 84 8e 54
    00000020: de 83 d7 c4
    [    2.082138] alg: aead: Test 1 failed on encryption for authenc-hmac-sha1-cbc-aes-talitos
    [    2.090435] 00000000: 53 69 6e 67 6c 65 20 62 6c 6f 63 6b 20 6d 73 67
    00000010: de 84 ea 58 c0 93 1a 24 de 84 e8 59 de 84 f1 20
    00000020: 00 00 00 00
    [    2.105721] alg: aead: Test 1 failed on encryption for authenc-hmac-sha1-cbc-3des-talitos
    [    2.114259] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c
    [    2.166410] alg: aead: Test 1 failed on encryption for authenc-hmac-sha1-cbc-3des-talitos
    [    2.174794] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c
    [    2.226486] alg: No test for authenc(hmac(sha224),cbc(aes)) (authenc-hmac-sha224-cbc-aes-talitos)
    [    2.236459] alg: No test for authenc(hmac(sha224),cbc(aes)) (authenc-hmac-sha224-cbc-aes-talitos)
    [    2.247196] alg: aead: Test 1 failed on encryption for authenc-hmac-sha224-cbc-3des-talitos
    [    2.255555] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c c0 96 e5 b8
    [    2.309004] alg: aead: Test 1 failed on encryption for authenc-hmac-sha224-cbc-3des-talitos
    [    2.317562] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c c0 96 e5 b8
    [    2.370710] alg: aead: Test 1 failed on encryption for authenc-hmac-sha256-cbc-aes-talitos
    [    2.379177] 00000000: 53 69 6e 67 6c 65 20 62 6c 6f 63 6b 20 6d 73 67
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    [    2.397863] alg: aead: Test 1 failed on encryption for authenc-hmac-sha256-cbc-aes-talitos
    [    2.406134] 00000000: 53 69 6e 67 6c 65 20 62 6c 6f 63 6b 20 6d 73 67
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    [    2.424789] alg: aead: Test 1 failed on encryption for authenc-hmac-sha256-cbc-3des-talitos
    [    2.433491] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c c0 96 e5 b8 c0 96 e9 20 c0 00 3d dc
    [    2.488832] alg: aead: Test 1 failed on encryption for authenc-hmac-sha256-cbc-3des-talitos
    [    2.497387] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c c0 96 e5 b8 c0 96 e9 20 c0 00 3d dc
    
    This patch fixes that.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 796c9d1e275e3e35ae13b16021498bc12ab2593e
Author: Daniel Jurgens <danielj@mellanox.com>
Date:   Wed Nov 29 20:10:39 2017 +0200

    IB/core: Only enforce security for InfiniBand
    
    commit 315d160c5a4e034a576a13aa21e7235d5c9ec609 upstream.
    
    For now the only LSM security enforcement mechanism available is
    specific to InfiniBand. Bypass enforcement for non-IB link types.
    
    This fixes a regression where modify_qp fails for iWARP because
    querying the PKEY returns -EINVAL.
    
    Cc: Paul Moore <paul@paul-moore.com>
    Cc: Don Dutile <ddutile@redhat.com>
    Reported-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Fixes: d291f1a65232("IB/core: Enforce PKey security on QPs")
    Fixes: 47a2b338fe63("IB/core: Enforce security on management datagrams")
    Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Tested-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45f846ca6b2119237adfa19a9bbfce43dadb558e
Author: Parav Pandit <parav@mellanox.com>
Date:   Thu Nov 2 15:22:27 2017 +0200

    IB/core: Avoid unnecessary return value check
    
    commit 2e4c85c6edc80fa532b2c7e1eb3597ef4d4bbb8f upstream.
    
    Since there is nothing done with non zero return value, such check is
    avoided.
    
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cef55be2b6bba7f4c262b35db385425ae1bf04e
Author: Kim Phillips <kim.phillips@arm.com>
Date:   Wed Oct 11 22:33:24 2017 +0100

    bus: arm-ccn: fix module unloading Error: Removing state 147 which has instances left.
    
    commit b69f63ebf553504739cc8534cbed31bd530c6f0b upstream.
    
    Unregistering the driver before calling cpuhp_remove_multi_state() removes
    any remaining hotplug cpu instances so __cpuhp_remove_state_cpuslocked()
    doesn't emit this warning:
    
    [  268.748362] Error: Removing state 147 which has instances left.
    [  268.748373] ------------[ cut here ]------------
    [  268.748386] WARNING: CPU: 2 PID: 5476 at kernel/cpu.c:1734 __cpuhp_remove_state_cpuslocked+0x454/0x4f0
    [  268.748389] Modules linked in: arm_ccn(-) [last unloaded: arm_ccn]
    [  268.748403] CPU: 2 PID: 5476 Comm: rmmod Tainted: G        W       4.14.0-rc4+ #3
    [  268.748406] Hardware name: AMD Seattle/Seattle, BIOS 10:18:39 Dec  8 2016
    [  268.748410] task: ffff8001a18ca000 task.stack: ffff80019c120000
    [  268.748416] PC is at __cpuhp_remove_state_cpuslocked+0x454/0x4f0
    [  268.748421] LR is at __cpuhp_remove_state_cpuslocked+0x448/0x4f0
    [  268.748425] pc : [<ffff2000081729ec>] lr : [<ffff2000081729e0>] pstate: 60000145
    [  268.748427] sp : ffff80019c127d30
    [  268.748430] x29: ffff80019c127d30 x28: ffff8001a18ca000
    [  268.748437] x27: ffff20000c2cb000 x26: 1fffe4000042d490
    [  268.748443] x25: ffff20000216a480 x24: 0000000000000000
    [  268.748449] x23: ffff20000b08e000 x22: 0000000000000001
    [  268.748455] x21: 0000000000000093 x20: 00000000000016f8
    [  268.748460] x19: ffff20000c2cbb80 x18: 0000ffffb5fe7c58
    [  268.748466] x17: 00000000004402d0 x16: 1fffe40001864f01
    [  268.748472] x15: ffff20000c4bf8b0 x14: 0000000000000000
    [  268.748477] x13: 0000000000007032 x12: ffff20000829ae48
    [  268.748483] x11: ffff20000c4bf000 x10: 0000000000000004
    [  268.748488] x9 : 0000000000006fbc x8 : ffff20000c318a40
    [  268.748494] x7 : 0000000000000000 x6 : ffff040001864f02
    [  268.748500] x5 : 0000000000000000 x4 : 0000000000000000
    [  268.748505] x3 : 0000000000000007 x2 : dfff200000000000
    [  268.748510] x1 : 000000000000ad3d x0 : 00000000000001f0
    [  268.748516] Call trace:
    [  268.748521] Exception stack(0xffff80019c127bf0 to 0xffff80019c127d30)
    [  268.748526] 7be0:                                   00000000000001f0 000000000000ad3d
    [  268.748531] 7c00: dfff200000000000 0000000000000007 0000000000000000 0000000000000000
    [  268.748535] 7c20: ffff040001864f02 0000000000000000 ffff20000c318a40 0000000000006fbc
    [  268.748539] 7c40: 0000000000000004 ffff20000c4bf000 ffff20000829ae48 0000000000007032
    [  268.748544] 7c60: 0000000000000000 ffff20000c4bf8b0 1fffe40001864f01 00000000004402d0
    [  268.748548] 7c80: 0000ffffb5fe7c58 ffff20000c2cbb80 00000000000016f8 0000000000000093
    [  268.748553] 7ca0: 0000000000000001 ffff20000b08e000 0000000000000000 ffff20000216a480
    [  268.748557] 7cc0: 1fffe4000042d490 ffff20000c2cb000 ffff8001a18ca000 ffff80019c127d30
    [  268.748562] 7ce0: ffff2000081729e0 ffff80019c127d30 ffff2000081729ec 0000000060000145
    [  268.748566] 7d00: 00000000000001f0 0000000000000000 0001000000000000 0000000000000000
    [  268.748569] 7d20: ffff80019c127d30 ffff2000081729ec
    [  268.748575] [<ffff2000081729ec>] __cpuhp_remove_state_cpuslocked+0x454/0x4f0
    [  268.748580] [<ffff200008172adc>] __cpuhp_remove_state+0x54/0x80
    [  268.748597] [<ffff20000215dd84>] arm_ccn_exit+0x2c/0x70 [arm_ccn]
    [  268.748604] [<ffff20000834cfbc>] SyS_delete_module+0x5a4/0x708
    [  268.748607] Exception stack(0xffff80019c127ec0 to 0xffff80019c128000)
    [  268.748612] 7ec0: 0000000019bb7258 0000000000000800 ba64d0fb3d26a800 00000000000000da
    [  268.748616] 7ee0: 0000ffffb6144e28 0000ffffcd95b409 fefefefefefefeff 7f7f7f7f7f7f7f7f
    [  268.748621] 7f00: 000000000000006a 1999999999999999 0000ffffb6179000 0000000000bbcc6d
    [  268.748625] 7f20: 0000ffffb6176b98 0000ffffcd95c2d0 0000ffffb5fe7b58 0000ffffb6163000
    [  268.748630] 7f40: 0000ffffb60ad3e0 00000000004402d0 0000ffffb5fe7c58 0000000019bb71f0
    [  268.748634] 7f60: 0000ffffcd95c740 0000000000000000 0000000019bb71f0 0000000000416700
    [  268.748639] 7f80: 0000000000000000 00000000004402e8 0000000019bb6010 0000ffffcd95c748
    [  268.748643] 7fa0: 0000000000000000 0000ffffcd95c460 00000000004113a8 0000ffffcd95c460
    [  268.748648] 7fc0: 0000ffffb60ad3e8 0000000080000000 0000000019bb7258 000000000000006a
    [  268.748652] 7fe0: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [  268.748657] [<ffff200008084f9c>] __sys_trace_return+0x0/0x4
    [  268.748661] ---[ end trace a996d358dcaa7f9c ]---
    
    Fixes: 8df038725ad5 ("bus/arm-ccn: Use cpu-hp's multi instance support instead custom list")
    Signed-off-by: Kim Phillips <kim.phillips@arm.com>
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Pawel Moll <pawel.moll@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8741b5ab49403be43771adc57e1c0031514910b9
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Oct 3 18:14:12 2017 +0100

    bus: arm-ccn: Fix use of smp_processor_id() in preemptible context
    
    commit b18c2b9487d8e797fc0a757e57ac3645348c5fba upstream.
    
    Booting a DEBUG_PREEMPT enabled kernel on a CCN-based system
    results in the following splat:
    
    [...]
    arm-ccn e8000000.ccn: No access to interrupts, using timer.
    BUG: using smp_processor_id() in preemptible [00000000] code: swapper/0/1
    caller is debug_smp_processor_id+0x1c/0x28
    CPU: 1 PID: 1 Comm: swapper/0 Not tainted 4.13.0 #6111
    Hardware name: AMD Seattle/Seattle, BIOS 17:08:23 Jun 26 2017
    Call trace:
    [<ffff000008089e78>] dump_backtrace+0x0/0x278
    [<ffff00000808a22c>] show_stack+0x24/0x30
    [<ffff000008bc3bc4>] dump_stack+0x8c/0xb0
    [<ffff00000852b534>] check_preemption_disabled+0xfc/0x100
    [<ffff00000852b554>] debug_smp_processor_id+0x1c/0x28
    [<ffff000008551bd8>] arm_ccn_probe+0x358/0x4f0
    [...]
    
    as we use smp_processor_id() in the wrong context.
    
    Turn this into a get_cpu()/put_cpu() that extends over the CPU hotplug
    registration, making sure that we don't race against a CPU down operation.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Pawel Moll <pawel.moll@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a724b569a50d2e94fd2d3ea123e1b5ad32293c61
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 27 11:06:50 2017 +0100

    bus: arm-ccn: Check memory allocation failure
    
    commit 24771179c5c138f0ea3ef88b7972979f62f2d5db upstream.
    
    Check memory allocation failures and return -ENOMEM in such cases
    
    This avoids a potential NULL pointer dereference.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Scott Branden <scott.branden@broadcom.com>
    Signed-off-by: Pawel Moll <pawel.moll@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ced9e2a850c40d3bfd7af4791f985318facff68
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Tue Oct 3 18:14:13 2017 +0100

    bus: arm-cci: Fix use of smp_processor_id() in preemptible context
    
    commit 4608af8aa53e7f3922ddee695d023b7bcd5cb35b upstream.
    
    The ARM CCI driver seem to be using smp_processor_id() in a
    preemptible context, which is likely to make a DEBUG_PREMPT
    kernel scream at boot time.
    
    Turn this into a get_cpu()/put_cpu() that extends over the CPU
    hotplug registration, making sure that we don't race against
    a CPU down operation.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Pawel Moll <pawel.moll@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d6c92408159ccfdc60cd988fe229804447f9c7e
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Wed Nov 15 10:03:53 2017 -0200

    Revert "ARM: dts: imx53: add srtc node"
    
    commit e501506d3ea00eefa64463ebd9e5c13ee70990bd upstream.
    
    This reverts commit 5b725054147deaf966b3919e10a86c6bfe946a18.
    
    The rtc block on i.MX53 is a completely different hardware than the
    one found on i.MX25.
    
    Reported-by: Noel Vellemans <Noel.Vellemans@visionbms.com>
    Suggested-by: Juergen Borleis <jbe@pengutronix.de>
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7ef4e829fe1a7e783a5e8233cde4889f4b65729
Author: Will Deacon <will.deacon@arm.com>
Date:   Wed Dec 6 10:51:12 2017 +0000

    arm64: SW PAN: Update saved ttbr0 value on enter_lazy_tlb
    
    commit d96cc49bff5a7735576cc6f6f111f875d101cec8 upstream.
    
    enter_lazy_tlb is called when a kernel thread rides on the back of
    another mm, due to a context switch or an explicit call to unuse_mm
    where a call to switch_mm is elided.
    
    In these cases, it's important to keep the saved ttbr value up to date
    with the active mm, otherwise we can end up with a stale value which
    points to a potentially freed page table.
    
    This patch implements enter_lazy_tlb for arm64, so that the saved ttbr0
    is kept up-to-date with the active mm for kernel threads.
    
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Vinayak Menon <vinmenon@codeaurora.org>
    Fixes: 39bc88e5e38e9b21 ("arm64: Disable TTBR0_EL1 during normal kernel execution")
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Reported-by: Vinayak Menon <vinmenon@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5347596586db3ab5201ff24be75286dd911f897
Author: Will Deacon <will.deacon@arm.com>
Date:   Wed Dec 6 10:42:10 2017 +0000

    arm64: SW PAN: Point saved ttbr0 at the zero page when switching to init_mm
    
    commit 0adbdfde8cfc9415aeed2a4955d2d17b3bd9bf13 upstream.
    
    update_saved_ttbr0 mandates that mm->pgd is not swapper, since swapper
    contains kernel mappings and should never be installed into ttbr0. However,
    this means that callers must avoid passing the init_mm to update_saved_ttbr0
    which in turn can cause the saved ttbr0 value to be out-of-date in the context
    of the idle thread. For example, EFI runtime services may leave the saved ttbr0
    pointing at the EFI page table, and kernel threads may end up with stale
    references to freed page tables.
    
    This patch changes update_saved_ttbr0 so that the init_mm points the saved
    ttbr0 value to the empty zero page, which always exists and never contains
    valid translations. EFI and switch can then call into update_saved_ttbr0
    unconditionally.
    
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Vinayak Menon <vinmenon@codeaurora.org>
    Fixes: 39bc88e5e38e9b21 ("arm64: Disable TTBR0_EL1 during normal kernel execution")
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Reported-by: Vinayak Menon <vinmenon@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0e9c7727224011c17e37f3415daec8dd7685ca7
Author: Dave Martin <Dave.Martin@arm.com>
Date:   Tue Dec 5 14:56:42 2017 +0000

    arm64: fpsimd: Prevent registers leaking from dead tasks
    
    commit 071b6d4a5d343046f253a5a8835d477d93992002 upstream.
    
    Currently, loading of a task's fpsimd state into the CPU registers
    is skipped if that task's state is already present in the registers
    of that CPU.
    
    However, the code relies on the struct fpsimd_state * (and by
    extension struct task_struct *) to unambiguously identify a task.
    
    There is a particular case in which this doesn't work reliably:
    when a task exits, its task_struct may be recycled to describe a
    new task.
    
    Consider the following scenario:
    
     1) Task P loads its fpsimd state onto cpu C.
            per_cpu(fpsimd_last_state, C) := P;
            P->thread.fpsimd_state.cpu := C;
    
     2) Task X is scheduled onto C and loads its fpsimd state on C.
            per_cpu(fpsimd_last_state, C) := X;
            X->thread.fpsimd_state.cpu := C;
    
     3) X exits, causing X's task_struct to be freed.
    
     4) P forks a new child T, which obtains X's recycled task_struct.
            T == X.
            T->thread.fpsimd_state.cpu == C (inherited from P).
    
     5) T is scheduled on C.
            T's fpsimd state is not loaded, because
            per_cpu(fpsimd_last_state, C) == T (== X) &&
            T->thread.fpsimd_state.cpu == C.
    
            (This is the check performed by fpsimd_thread_switch().)
    
    So, T gets X's registers because the last registers loaded onto C
    were those of X, in (2).
    
    This patch fixes the problem by ensuring that the sched-in check
    fails in (5): fpsimd_flush_task_state(T) is called when T is
    forked, so that T->thread.fpsimd_state.cpu == C cannot be true.
    This relies on the fact that T is not schedulable until after
    copy_thread() completes.
    
    Once T's fpsimd state has been loaded on some CPU C there may still
    be other cpus D for which per_cpu(fpsimd_last_state, D) ==
    &X->thread.fpsimd_state.  But D is necessarily != C in this case,
    and the check in (5) must fail.
    
    An alternative fix would be to do refcounting on task_struct.  This
    would result in each CPU holding a reference to the last task whose
    fpsimd state was loaded there.  It's not clear whether this is
    preferable, and it involves higher overhead than the fix proposed
    in this patch.  It would also move all the task_struct freeing
    work into the context switch critical section, or otherwise some
    deferred cleanup mechanism would need to be introduced, neither of
    which seems obviously justified.
    
    Fixes: 005f78cd8849 ("arm64: defer reloading a task's FPSIMD state to userland resume")
    Signed-off-by: Dave Martin <Dave.Martin@arm.com>
    Reviewed-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    [will: word-smithed the comment so it makes more sense]
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdbc5f3c5ece0a5db265537185d3bb7ff3b52d0d
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Thu Nov 16 17:58:18 2017 +0000

    KVM: arm/arm64: vgic-its: Check result of allocation before use
    
    commit 686f294f2f1ae40705283dd413ca1e4c14f20f93 upstream.
    
    We miss a test against NULL after allocation.
    
    Fixes: 6d03a68f8054 ("KVM: arm64: vgic-its: Turn device_id validation into generic ID validation")
    Reported-by: AKASHI Takahiro <takahiro.akashi@linaro.org>
    Acked-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6c0913bd13f89d1a875cc7d85b3646840bead07
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Thu Nov 16 17:58:16 2017 +0000

    KVM: arm/arm64: vgic: Preserve the revious read from the pending table
    
    commit ddb4b0102cb9cdd2398d98b3e1e024e08a2f4239 upstream.
    
    The current pending table parsing code assumes that we keep the
    previous read of the pending bits, but keep that variable in
    the current block, making sure it is discarded on each loop.
    
    We end-up using whatever is on the stack. Who knows, it might
    just be the right thing...
    
    Fixes: 280771252c1ba ("KVM: arm64: vgic-v3: KVM_DEV_ARM_VGIC_SAVE_PENDING_TABLES")
    Reported-by: AKASHI Takahiro <takahiro.akashi@linaro.org>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af85c1e04ec5737d595a9b4d0af0ef72a3ceb23b
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Thu Nov 16 17:58:15 2017 +0000

    KVM: arm/arm64: vgic-irqfd: Fix MSI entry allocation
    
    commit 150009e2c70cc3c6e97f00e7595055765d32fb85 upstream.
    
    Using the size of the structure we're allocating is a good idea
    and avoids any surprise... In this case, we're happilly confusing
    kvm_kernel_irq_routing_entry and kvm_irq_routing_entry...
    
    Fixes: 95b110ab9a09 ("KVM: arm/arm64: Enable irqchip routing")
    Reported-by: AKASHI Takahiro <takahiro.akashi@linaro.org>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73c4af9627c0914b81832e162deb34f4894760cb
Author: Christoffer Dall <christoffer.dall@linaro.org>
Date:   Sun Dec 3 23:54:41 2017 +0100

    KVM: arm/arm64: Fix broken GICH_ELRSR big endian conversion
    
    commit fc396e066318c0a02208c1d3f0b62950a7714999 upstream.
    
    We are incorrectly rearranging 32-bit words inside a 64-bit typed value
    for big endian systems, which would result in never marking a virtual
    interrupt as inactive on big endian systems (assuming 32 or fewer LRs on
    the hardware).  Fix this by not doing any word order manipulation for
    the typed values.
    
    Acked-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a52c2829cd60492fc75bafc323145cab1af915f5
Author: Andrew Honig <ahonig@google.com>
Date:   Fri Dec 1 10:21:09 2017 -0800

    KVM: VMX: remove I/O port 0x80 bypass on Intel hosts
    
    commit d59d51f088014f25c2562de59b9abff4f42a7468 upstream.
    
    This fixes CVE-2017-1000407.
    
    KVM allows guests to directly access I/O port 0x80 on Intel hosts.  If
    the guest floods this port with writes it generates exceptions and
    instability in the host kernel, leading to a crash.  With this change
    guest writes to port 0x80 on Intel will behave the same as they
    currently behave on AMD systems.
    
    Prevent the flooding by removing the code that sets port 0x80 as a
    passthrough port.  This is essentially the same as upstream patch
    99f85a28a78e96d28907fe036e1671a218fee597, except that patch was
    for AMD chipsets and this patch is for Intel.
    
    Signed-off-by: Andrew Honig <ahonig@google.com>
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Fixes: fdef3ad1b386 ("KVM: VMX: Enable io bitmaps to avoid IO port 0x80 VMEXITs")
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba8cbedca6dfca432db2eb9ed4013a2dcb358a71
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Thu Nov 16 17:58:21 2017 +0000

    arm: KVM: Fix VTTBR_BADDR_MASK BUG_ON off-by-one
    
    commit 5553b142be11e794ebc0805950b2e8313f93d718 upstream.
    
    VTTBR_BADDR_MASK is used to sanity check the size and alignment of the
    VTTBR address. It seems to currently be off by one, thereby only
    allowing up to 39-bit addresses (instead of 40-bit) and also
    insufficiently checking the alignment. This patch fixes it.
    
    This patch is the 32bit pendent of Kristina's arm64 fix, and
    she deserves the actual kudos for pinpointing that one.
    
    Fixes: f7ed45be3ba52 ("KVM: ARM: World-switch implementation")
    Reported-by: Kristina Martsenko <kristina.martsenko@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4e71b6f7fd75ff372e766e01aded59d869d7cec
Author: Kristina Martsenko <kristina.martsenko@arm.com>
Date:   Thu Nov 16 17:58:20 2017 +0000

    arm64: KVM: fix VTTBR_BADDR_MASK BUG_ON off-by-one
    
    commit 26aa7b3b1c0fb3f1a6176a0c1847204ef4355693 upstream.
    
    VTTBR_BADDR_MASK is used to sanity check the size and alignment of the
    VTTBR address. It seems to currently be off by one, thereby only
    allowing up to 47-bit addresses (instead of 48-bit) and also
    insufficiently checking the alignment. This patch fixes it.
    
    As an example, with 4k pages, before this patch we have:
    
      PHYS_MASK_SHIFT = 48
      VTTBR_X = 37 - 24 = 13
      VTTBR_BADDR_SHIFT = 13 - 1 = 12
      VTTBR_BADDR_MASK = ((1 << 35) - 1) << 12 = 0x00007ffffffff000
    
    Which is wrong, because the mask doesn't allow bit 47 of the VTTBR
    address to be set, and only requires the address to be 12-bit (4k)
    aligned, while it actually needs to be 13-bit (8k) aligned because we
    concatenate two 4k tables.
    
    With this patch, the mask becomes 0x0000ffffffffe000, which is what we
    want.
    
    Fixes: 0369f6a34b9f ("arm64: KVM: EL2 register definitions")
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Kristina Martsenko <kristina.martsenko@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f889ad87b2147dbde1d81715175cf44bdee91fab
Author: Sean Young <sean@mess.org>
Date:   Sun Nov 19 16:57:27 2017 -0500

    media: rc: partial revert of "media: rc: per-protocol repeat period"
    
    commit 67f0f15ad5c47490e19f2526f8f9cea97c5ce1a6 upstream.
    
    Since commit d57ea877af38 ("media: rc: per-protocol repeat period"), most
    IR protocols have a lower keyup timeout. This causes problems on the
    ite-cir, which has default IR timeout of 200ms.
    
    Since the IR decoders read the trailing space, with a IR timeout of 200ms,
    the last keydown will have at least a delay of 200ms. This is more than
    the protocol timeout of e.g. rc-6 (which is 164ms). As a result the last
    IR will be interpreted as a new keydown event, and we get two keypresses.
    
    Revert the protocol timeout to 250ms, except for cec which needs a timeout
    of 550ms.
    
    Fixes: d57ea877af38 ("media: rc: per-protocol repeat period")
    
    Reported-by: Matthias Reichl <hias@horus.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Tested-by: Matthias Reichl <hias@horus.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f2241083a773b52e3319103b0ba2d1331b1f6c0
Author: Sean Young <sean@mess.org>
Date:   Wed Nov 8 16:19:45 2017 -0500

    media: rc: sir_ir: detect presence of port
    
    commit 30b4e122d71cbec2944a5f8b558b88936ee42f10 upstream.
    
    Without this test, sir_ir clumsy claims resources for a device which
    does not exist.
    
    The 0-day kernel test robot reports the following errors (in a loop):
            sir_ir sir_ir.0: Trapped in interrupt
            genirq: Flags mismatch irq 4. 00000000 (ttyS0) vs. 00000000 (sir_ir)
    
    When sir_ir is loaded with the default io and irq, the following happens:
     - sir_ir claims irq 4
     - user space opens /dev/ttyS0
     - in serial8250_do_startup(), some setup is done for ttyS0, which causes
       irq 4 to fire (in THRE test)
     - sir_ir does not realise it was not for it, and spins until the "trapped
       in interrupt"
     - now serial driver calls setup_irq() and fails and we get the
       "Flags mismatch" error.
    
    There is no port present at 0x3e8 so simply check for the presence of a
    port, as suggested by Linus.
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Tested-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a11204d2b26324636ff54f8d28095ed5dd17e91
Author: Laurent Caumont <lcaumont2@gmail.com>
Date:   Sat Nov 11 12:44:46 2017 -0500

    media: dvb: i2c transfers over usb cannot be done from stack
    
    commit 6d33377f2abbf9f0e561b116dd468d1c3ff36a6a upstream.
    
    Signed-off-by: Laurent Caumont <lcaumont2@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e547af2582b53354073790df012ba3f852526410
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Nov 29 17:37:30 2017 +0200

    drm/i915: Fix vblank timestamp/frame counter jumps on gen2
    
    commit a87e55f89f0b0dc541d89248a8445635936a3858 upstream.
    
    Previously I was under the impression that the scanline counter
    reads 0 when the pipe is off. Turns out that's not correct, and
    instead the scanline counter simply stops when the pipe stops, and
    it retains it's last value until the pipe starts up again, at which
    point the scanline counter jumps to vblank start.
    
    These jumps can cause the timestamp to jump backwards by one frame.
    Since we use the timestamps to guesstimage also the frame counter
    value on gen2, that would cause the frame counter to also jump
    backwards, which leads to a massice difference from the previous value.
    The end result is that flips/vblank events don't appear to complete as
    they're stuck waiting for the frame counter to catch up to that massive
    difference.
    
    Fix the problem properly by actually making sure the scanline counter
    has started to move before we assume that it's safe to enable vblank
    processing.
    
    v2: Less pointless duplication in the code (Chris)
    
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Fixes: b7792d8b54cc ("drm/i915: Wait for pipe to start before sampling vblank timestamps on gen2")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171129153732.3612-1-ville.syrjala@linux.intel.com
    (cherry picked from commit 8fedd64dabc86d0f31a0d1e152be3aa23c323553)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b929631c110645b46115d67172d590b210fa8c1
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Nov 22 14:14:47 2017 +0100

    drm/exynos: gem: Drop NONCONTIG flag for buffers allocated without IOMMU
    
    commit 120a264f9c2782682027d931d83dcbd22e01da80 upstream.
    
    When no IOMMU is available, all GEM buffers allocated by Exynos DRM driver
    are contiguous, because of the underlying dma_alloc_attrs() function
    provides only such buffers. In such case it makes no sense to keep
    BO_NONCONTIG flag for the allocated GEM buffers. This allows to avoid
    failures for buffer contiguity checks in the subsequent operations on GEM
    objects.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25df8b009734b241ce581ac7505efc587cf0402e
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Nov 21 08:49:36 2017 +0100

    drm/bridge: analogix dp: Fix runtime PM state in get_modes() callback
    
    commit 510353a63796d467b41237ab4f136136f68c297d upstream.
    
    get_modes() callback might be called asynchronously from the DRM core and
    it is not synchronized with bridge_enable(), which sets proper runtime PM
    state of the main DP device. Fix this by calling pm_runtime_get_sync()
    before calling drm_get_edid(), which in turn calls drm_dp_i2c_xfer() and
    analogix_dp_transfer() to ensure that main DP device is runtime active
    when doing any access to its registers.
    
    This fixes the following kernel issue on Samsung Exynos5250 Snow board:
    Unhandled fault: imprecise external abort (0x406) at 0x00000000
    pgd = c0004000
    [00000000] *pgd=00000000
    Internal error: : 406 [#1] PREEMPT SMP ARM
    Modules linked in:
    CPU: 0 PID: 62 Comm: kworker/0:2 Not tainted 4.13.0-rc2-00364-g4a97a3da420b #3357
    Hardware name: SAMSUNG EXYNOS (Flattened Device Tree)
    Workqueue: events output_poll_execute
    task: edc14800 task.stack: edcb2000
    PC is at analogix_dp_transfer+0x15c/0x2fc
    LR is at analogix_dp_transfer+0x134/0x2fc
    pc : [<c0468538>]    lr : [<c0468510>]    psr: 60000013
    sp : edcb3be8  ip : 0000002a  fp : 00000001
    r10: 00000000  r9 : edcb3cd8  r8 : edcb3c40
    r7 : 00000000  r6 : edd3b380  r5 : edd3b010  r4 : 00000064
    r3 : 00000000  r2 : f0ad3000  r1 : edcb3c40  r0 : edd3b010
    Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    Control: 10c5387d  Table: 4000406a  DAC: 00000051
    Process kworker/0:2 (pid: 62, stack limit = 0xedcb2210)
    Stack: (0xedcb3be8 to 0xedcb4000)
    [<c0468538>] (analogix_dp_transfer) from [<c0424ba4>] (drm_dp_i2c_do_msg+0x8c/0x2b4)
    [<c0424ba4>] (drm_dp_i2c_do_msg) from [<c0424e64>] (drm_dp_i2c_xfer+0x98/0x214)
    [<c0424e64>] (drm_dp_i2c_xfer) from [<c057b2d8>] (__i2c_transfer+0x140/0x29c)
    [<c057b2d8>] (__i2c_transfer) from [<c057b4a4>] (i2c_transfer+0x70/0xe4)
    [<c057b4a4>] (i2c_transfer) from [<c0441de4>] (drm_do_probe_ddc_edid+0xb4/0x114)
    [<c0441de4>] (drm_do_probe_ddc_edid) from [<c0441e5c>] (drm_probe_ddc+0x18/0x28)
    [<c0441e5c>] (drm_probe_ddc) from [<c0445728>] (drm_get_edid+0x124/0x2d4)
    [<c0445728>] (drm_get_edid) from [<c0465ea0>] (analogix_dp_get_modes+0x90/0x114)
    [<c0465ea0>] (analogix_dp_get_modes) from [<c0425e8c>] (drm_helper_probe_single_connector_modes+0x198/0x68c)
    [<c0425e8c>] (drm_helper_probe_single_connector_modes) from [<c04325d4>] (drm_setup_crtcs+0x1b4/0xd18)
    [<c04325d4>] (drm_setup_crtcs) from [<c04344a8>] (drm_fb_helper_hotplug_event+0x94/0xd0)
    [<c04344a8>] (drm_fb_helper_hotplug_event) from [<c0425a50>] (drm_kms_helper_hotplug_event+0x24/0x28)
    [<c0425a50>] (drm_kms_helper_hotplug_event) from [<c04263ec>] (output_poll_execute+0x6c/0x174)
    [<c04263ec>] (output_poll_execute) from [<c0136f18>] (process_one_work+0x188/0x3fc)
    [<c0136f18>] (process_one_work) from [<c01371f4>] (worker_thread+0x30/0x4b8)
    [<c01371f4>] (worker_thread) from [<c013daf8>] (kthread+0x128/0x164)
    [<c013daf8>] (kthread) from [<c0108510>] (ret_from_fork+0x14/0x24)
    Code: 0a000002 ea000009 e2544001 0a00004a (e59537c8)
    ---[ end trace cddc7919c79f7878 ]---
    
    Reported-by: Misha Komarovskiy <zombah@gmail.com>
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Signed-off-by: Archit Taneja <architt@codeaurora.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171121074936.22520-1-m.szyprowski@samsung.com

commit 55b26ae24c64ee66188952daacb00aa33bd29407
Author: Song Liu <songliubraving@fb.com>
Date:   Sun Nov 19 22:17:00 2017 -0800

    md/r5cache: move mddev_lock() out of r5c_journal_mode_set()
    
    commit ff35f58e8f8eb520367879a0ccc6f2ec4b62b17b upstream.
    
    r5c_journal_mode_set() is called by r5c_journal_mode_store() and
    raid_ctr() in dm-raid. We don't need mddev_lock() when calling from
    raid_ctr(). This patch fixes this by moves the mddev_lock() to
    r5c_journal_mode_store().
    
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 425704be0968368005eabbf5c68182a4d4b23c8b
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Mon Mar 2 14:13:36 2015 +0000

    kdb: Fix handling of kallsyms_symbol_next() return value
    
    commit c07d35338081d107e57cf37572d8cc931a8e32e2 upstream.
    
    kallsyms_symbol_next() returns a boolean (true on success). Currently
    kdb_read() tests the return value with an inequality that
    unconditionally evaluates to true.
    
    This is fixed in the obvious way and, since the conditional branch is
    supposed to be unreachable, we also add a WARN_ON().
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01b43f2e3cad60c626daa9b174667a202cee6987
Author: Arend Van Spriel <arend.vanspriel@broadcom.com>
Date:   Sat Nov 25 21:39:25 2017 +0100

    brcmfmac: change driver unbind order of the sdio function devices
    
    commit 5c3de777bdaf48bd0cfb43097c0d0fb85056cab7 upstream.
    
    In the function brcmf_sdio_firmware_callback() the driver is
    unbound from the sdio function devices in the error path.
    However, the order in which it is done resulted in a use-after-free
    issue (see brcmf_ops_sdio_remove() in bcmsdh.c). Hence change
    the order and first unbind sdio function #2 device and then
    unbind sdio function #1 device.
    
    Fixes: 7a51461fc2da ("brcmfmac: unbind all devices upon failure in firmware callback")
    Reported-by: Stefan Wahren <stefan.wahren@i2se.com>
    Reviewed-by: Hante Meuleman <hante.meuleman@broadcom.com>
    Reviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com>
    Reviewed-by: Franky Lin <franky.lin@broadcom.com>
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15f36a5ea2278e3ee3fecbdac21895886ee80294
Author: David Spinadel <david.spinadel@intel.com>
Date:   Mon Nov 21 17:01:25 2016 +0200

    iwlwifi: mvm: enable RX offloading with TKIP and WEP
    
    commit 9d0fc5a50a0548f8e5d61243e5e5f26d5c405aef upstream.
    
    Set the flag that indicates that ICV was stripped on if
    this option was enabled in the HW.
    
    [this is needed for the 9000-series HW to work properly]
    Signed-off-by: David Spinadel <david.spinadel@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d46809c6b84cde3d7379f8877bad0528c038460
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Sun Nov 19 10:35:14 2017 +0200

    iwlwifi: mvm: fix packet injection
    
    commit b13f43a48571f0cd0fda271b5046b65f1f268db5 upstream.
    
    We need to have a station and a queue for the monitor
    interface to be able to inject traffic. We used to have
    this traffic routed to the auxiliary queue, but this queue
    isn't scheduled for the station we had linked to the
    monitor vif.
    
    Allocate a new queue, link it to the monitor vif's station
    and make that queue use the BE fifo.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=196715
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26d4d23ae67fc3097e73f50fd55a6cb9fbce2a1e
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Thu Nov 16 09:29:19 2017 +0200

    iwlwifi: add new cards for 9260 and 22000 series
    
    commit 567deca8e72df3ceb6c07c63f8541a4928f64d3b upstream.
    
    add 1 PCI ID for 9260 series and 1 for 22000 series.
    
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60e942644974fe4254b8c6ab6cbbb6e69e88a3f8
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Nov 13 17:26:09 2017 +0100

    iwlwifi: mvm: flush queue before deleting ROC
    
    commit 6c2d49fdc5d947c5fe89935bd52e69f10000f4cb upstream.
    
    Before deleting a time event (remain-on-channel instance), flush
    the queue so that frames cannot get stuck on it. We already flush
    the AUX STA queues, but a separate station is used for the P2P
    Device queue.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e6c41d3ed846e6e5120e9c139778a8788212ff1
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Mon Nov 13 09:50:47 2017 +0200

    iwlwifi: mvm: don't use transmit queue hang detection when it is not possible
    
    commit 0b9832b712d6767d6c7b01965fd788d1ca84fc92 upstream.
    
    When we act as an AP, new firmware versions handle
    internally the power saving clients and the driver doesn't
    know that the peers went to sleep. It is, hence, possible
    that a peer goes to sleep for a long time and stop pulling
    frames. This will cause its transmit queue to hang which is
    a condition that triggers the recovery flow in the driver.
    
    While this client is certainly buggy (it should have pulled
    the frame based on the TIM IE in the beacon), we can't blow
    up because of a buggy client.
    
    Change the current implementation to not enable the
    transmit queue hang detection on queues that serve peers
    when we act as an AP / GO.
    
    We can still enable this mechanism using the debug
    configuration which can come in handy when we want to
    debug why the client doesn't wake up.
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b1b28d246c333e9b8ce84e294ae4cad09cfc909
Author: Sara Sharon <sara.sharon@intel.com>
Date:   Mon Feb 8 23:30:47 2016 +0200

    iwlwifi: mvm: mark MIC stripped MPDUs
    
    commit bf19037074e770aad74b3b90f37b8b98db3f3748 upstream.
    
    When RADA is active, the hardware decrypts the packets and strips off
    the MIC as it is useless after decryption. Indicate that to mac80211.
    
    [this is needed for the 9000-series HW to work properly]
    Signed-off-by: Sara Sharon <sara.sharon@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f11f5c4b87164c88da85193430f36d7d14bdcec4
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Dec 6 18:21:14 2017 +1000

    powerpc/64s: Initialize ISAv3 MMU registers before setting partition table
    
    commit 371b80447ff33ddac392c189cf884a5a3e18faeb upstream.
    
    kexec can leave MMU registers set when booting into a new kernel,
    the PIDR (Process Identification Register) in particular. The boot
    sequence does not zero PIDR, so it only gets set when CPUs first
    switch to a userspace processes (until then it's running a kernel
    thread with effective PID = 0).
    
    This leaves a window where a process table entry and page tables are
    set up due to user processes running on other CPUs, that happen to
    match with a stale PID. The CPU with that PID may cause speculative
    accesses that address quadrant 0 (aka userspace addresses), which will
    result in cached translations and PWC (Page Walk Cache) for that
    process, on a CPU which is not in the mm_cpumask and so they will not
    be invalidated properly.
    
    The most common result is the kernel hanging in infinite page fault
    loops soon after kexec (usually in schedule_tail, which is usually the
    first non-speculative quadrant 0 access to a new PID) due to a stale
    PWC. However being a stale translation error, it could result in
    anything up to security and data corruption problems.
    
    Fix this by zeroing out PIDR at boot and kexec.
    
    Fixes: 7e381c0ff618 ("powerpc/mm/radix: Add mmu context handling callback for radix")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d46be2f67c1088077e35ab87da6fc2b0d367fb88
Author: David Gibson <david@gibson.dropbear.id.au>
Date:   Mon Dec 4 16:27:25 2017 +1100

    Revert "powerpc: Do not call ppc_md.panic in fadump panic notifier"
    
    commit ab9dbf771ff9b6b7e814e759213ed01d7f0de320 upstream.
    
    This reverts commit a3b2cb30f252b21a6f962e0dd107c8b897ca65e4.
    
    That commit tried to fix problems with panic on powerpc in certain
    circumstances, where some output from the generic panic code was being
    dropped.
    
    Unfortunately, it breaks things worse in other circumstances. In
    particular when running a PAPR guest, it will now attempt to reboot
    instead of informing the hypervisor (KVM or PowerVM) that the guest
    has crashed. The crash notification is important to some
    virtualization management layers.
    
    Revert it for now until we can come up with a better solution.
    
    Fixes: a3b2cb30f252 ("powerpc: Do not call ppc_md.panic in fadump panic notifier")
    Signed-off-by: David Gibson <david@gibson.dropbear.id.au>
    [mpe: Tweak change log a bit]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59d97bf77a98adb08ce98073842374f17d7876de
Author: Janosch Frank <frankja@linux.vnet.ibm.com>
Date:   Mon Dec 4 12:19:11 2017 +0100

    KVM: s390: Fix skey emulation permission check
    
    commit ca76ec9ca871e67d8cd0b6caba24aca3d3ac4546 upstream.
    
    All skey functions call skey_check_enable at their start, which checks
    if we are in the PSTATE and injects a privileged operation exception
    if we are.
    
    Unfortunately they continue processing afterwards and perform the
    operation anyhow as skey_check_enable does not deliver an error if the
    exception injection was successful.
    
    Let's move the PSTATE check into the skey functions and exit them on
    such an occasion, also we now do not enable skey handling anymore in
    such a case.
    
    Signed-off-by: Janosch Frank <frankja@linux.vnet.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Fixes: a7e19ab ("KVM: s390: handle missing storage-key facility")
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Thomas Huth <thuth@redhat.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fad60d717bccf42b60b45969bcddba577785d5d
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Wed Dec 6 16:11:27 2017 +0100

    s390: fix compat system call table
    
    commit e779498df587dd2189b30fe5b9245aefab870eb8 upstream.
    
    When wiring up the socket system calls the compat entries were
    incorrectly set. Not all of them point to the corresponding compat
    wrapper functions, which clear the upper 33 bits of user space
    pointers, like it is required.
    
    Fixes: 977108f89c989 ("s390: wire up separate socketcalls system calls")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb7fb979f090997654d70c24d975e8d3c5711b32
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Dec 4 09:42:45 2017 +0100

    s390/mm: fix off-by-one bug in 5-level page table handling
    
    commit 8d306f53b63099fec2d56300149e400d181ba4f5 upstream.
    
    Martin Cermak reported that setting a uprobe doesn't work. Reason for
    this is that the common uprobes code tries to get an unmapped area at
    the last possible page within an address space.
    
    This broke with commit 1aea9b3f9210 ("s390/mm: implement 5 level pages
    tables") which introduced an off-by-one bug which prevents to map
    anything at the last possible page within an address space.
    
    The check with the off-by-one bug however can be removed since with
    commit 8ab867cb0806 ("s390/mm: fix BUG_ON in crst_table_upgrade") the
    necessary check is done at both call sites.
    
    Reported-by: Martin Cermak <mcermak@redhat.com>
    Bisected-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
    Fixes: 1aea9b3f9210 ("s390/mm: implement 5 level pages tables")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb90fcfcdd9062453c463622be3029548966f34a
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Nov 20 12:38:44 2017 +0100

    s390: always save and restore all registers on context switch
    
    commit fbbd7f1a51965b50dd12924841da0d478f3da71b upstream.
    
    The switch_to() macro has an optimization to avoid saving and
    restoring register contents that aren't needed for kernel threads.
    
    There is however the possibility that a kernel thread execve's a user
    space program. In such a case the execve'd process can partially see
    the contents of the previous process, which shouldn't be allowed.
    
    To avoid this, simply always save and restore register contents on
    context switch.
    
    Fixes: fdb6d070effba ("switch_to: dont restore/save access & fpu regs for kernel threads")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b68df97ec8d0fd2074c130a64c831b8b760f1228
Author: Lai Jiangshan <jiangshanlai@gmail.com>
Date:   Tue Nov 28 21:19:53 2017 +0800

    smp/hotplug: Move step CPUHP_AP_SMPCFD_DYING to the correct place
    
    commit 46febd37f9c758b05cd25feae8512f22584742fe upstream.
    
    Commit 31487f8328f2 ("smp/cfd: Convert core to hotplug state machine")
    accidently put this step on the wrong place. The step should be at the
    cpuhp_ap_states[] rather than the cpuhp_bp_states[].
    
    grep smpcfd /sys/devices/system/cpu/hotplug/states
     40: smpcfd:prepare
    129: smpcfd:dying
    
    "smpcfd:dying" was missing before.
    So was the invocation of the function smpcfd_dying_cpu().
    
    Fixes: 31487f8328f2 ("smp/cfd: Convert core to hotplug state machine")
    Signed-off-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lkml.kernel.org/r/20171128131954.81229-1-jiangshanlai@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce1079588ebc42a2e3a0d310a2ea1f3a75aa8d49
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Thu Sep 28 15:14:01 2017 +0100

    iommu/vt-d: Fix scatterlist offset handling
    
    commit 29a90b70893817e2f2bb3cea40a29f5308e21b21 upstream.
    
    The intel-iommu DMA ops fail to correctly handle scatterlists where
    sg->offset is greater than PAGE_SIZE - the IOVA allocation is computed
    appropriately based on the page-aligned portion of the offset, but the
    mapping is set up relative to sg->page, which means it fails to actually
    cover the whole buffer (and in the worst case doesn't cover it at all):
    
        (sg->dma_address + sg->dma_len) ----+
        sg->dma_address ---------+          |
        iov_pfn------+           |          |
                     |           |          |
                     v           v          v
    iova:   a        b        c        d        e        f
            |--------|--------|--------|--------|--------|
                              <...calculated....>
                     [_____mapped______]
    pfn:    0        1        2        3        4        5
            |--------|--------|--------|--------|--------|
                     ^           ^          ^
                     |           |          |
        sg->page ----+           |          |
        sg->offset --------------+          |
        (sg->offset + sg->length) ----------+
    
    As a result, the caller ends up overrunning the mapping into whatever
    lies beyond, which usually goes badly:
    
    [  429.645492] DMAR: DRHD: handling fault status reg 2
    [  429.650847] DMAR: [DMA Write] Request device [02:00.4] fault addr f2682000 ...
    
    Whilst this is a fairly rare occurrence, it can happen from the result
    of intermediate scatterlist processing such as scatterwalk_ffwd() in the
    crypto layer. Whilst that particular site could be fixed up, it still
    seems worthwhile to bring intel-iommu in line with other DMA API
    implementations in handling this robustly.
    
    To that end, fix the intel_map_sg() path to line up the mapping
    correctly (in units of MM pages rather than VT-d pages to match the
    aligned_nrpages() calculation) regardless of the offset, and use
    sg_phys() consistently for clarity.
    
    Reported-by: Harsh Jain <Harsh@chelsio.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Reviewed by: Ashok Raj <ashok.raj@intel.com>
    Tested by: Jacob Pan <jacob.jun.pan@intel.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3884d12e17ab770aa0f5d4bc65bfbfd006f417fa
Author: Jaejoong Kim <climbbb.kim@gmail.com>
Date:   Mon Dec 4 15:31:49 2017 +0900

    ALSA: usb-audio: Add check return value for usb_string()
    
    commit 89b89d121ffcf8d9546633b98ded9d18b8f75891 upstream.
    
    snd_usb_copy_string_desc() returns zero if usb_string() fails.
    In case of failure, we need to check the snd_usb_copy_string_desc()'s
    return value and add an exception case
    
    Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3936d752df21f3f83155df3a19ec3617c18741be
Author: Jaejoong Kim <climbbb.kim@gmail.com>
Date:   Mon Dec 4 15:31:48 2017 +0900

    ALSA: usb-audio: Fix out-of-bound error
    
    commit 251552a2b0d454badc8f486e6d79100970c744b0 upstream.
    
    The snd_usb_copy_string_desc() retrieves the usb string corresponding to
    the index number through the usb_string(). The problem is that the
    usb_string() returns the length of the string (>= 0) when successful, but
    it can also return a negative value about the error case or status of
    usb_control_msg().
    
    If iClockSource is '0' as shown below, usb_string() will returns -EINVAL.
    This will result in '0' being inserted into buf[-22], and the following
    KASAN out-of-bound error message will be output.
    
    AudioControl Interface Descriptor:
      bLength                 8
      bDescriptorType        36
      bDescriptorSubtype     10 (CLOCK_SOURCE)
      bClockID                1
      bmAttributes         0x07 Internal programmable Clock (synced to SOF)
      bmControls           0x07
      Clock Frequency Control (read/write)
      Clock Validity Control (read-only)
      bAssocTerminal          0
      iClockSource            0
    
    To fix it, check usb_string()'return value and bail out.
    
    ==================================================================
    BUG: KASAN: stack-out-of-bounds in parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    Write of size 1 at addr ffff88007e66735a by task systemd-udevd/18376
    
    CPU: 0 PID: 18376 Comm: systemd-udevd Not tainted 4.13.0+ #3
    Hardware name: LG Electronics                   15N540-RFLGL/White Tip Mountain, BIOS 15N5
    Call Trace:
    dump_stack+0x63/0x8d
    print_address_description+0x70/0x290
    ? parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    kasan_report+0x265/0x350
    __asan_store1+0x4a/0x50
    parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    ? save_stack+0xb5/0xd0
    ? save_stack_trace+0x1b/0x20
    ? save_stack+0x46/0xd0
    ? kasan_kmalloc+0xad/0xe0
    ? kmem_cache_alloc_trace+0xff/0x230
    ? snd_usb_create_mixer+0xb0/0x4b0 [snd_usb_audio]
    ? usb_audio_probe+0x4de/0xf40 [snd_usb_audio]
    ? usb_probe_interface+0x1f5/0x440
    ? driver_probe_device+0x3ed/0x660
    ? build_feature_ctl+0xb10/0xb10 [snd_usb_audio]
    ? save_stack_trace+0x1b/0x20
    ? init_object+0x69/0xa0
    ? snd_usb_find_csint_desc+0xa8/0xf0 [snd_usb_audio]
    snd_usb_mixer_controls+0x1dc/0x370 [snd_usb_audio]
    ? build_audio_procunit+0x890/0x890 [snd_usb_audio]
    ? snd_usb_create_mixer+0xb0/0x4b0 [snd_usb_audio]
    ? kmem_cache_alloc_trace+0xff/0x230
    ? usb_ifnum_to_if+0xbd/0xf0
    snd_usb_create_mixer+0x25b/0x4b0 [snd_usb_audio]
    ? snd_usb_create_stream+0x255/0x2c0 [snd_usb_audio]
    usb_audio_probe+0x4de/0xf40 [snd_usb_audio]
    ? snd_usb_autosuspend.part.7+0x30/0x30 [snd_usb_audio]
    ? __pm_runtime_idle+0x90/0x90
    ? kernfs_activate+0xa6/0xc0
    ? usb_match_one_id_intf+0xdc/0x130
    ? __pm_runtime_set_status+0x2d4/0x450
    usb_probe_interface+0x1f5/0x440
    
    Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a4b29a72a7cac97a44dec1b74ec804e0176cca8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 30 10:08:28 2017 +0100

    ALSA: seq: Remove spurious WARN_ON() at timer check
    
    commit 43a3542870328601be02fcc9d27b09db467336ef upstream.
    
    The use of snd_BUG_ON() in ALSA sequencer timer may lead to a spurious
    WARN_ON() when a slave timer is deployed as its backend and a
    corresponding master timer stops meanwhile.  The symptom was triggered
    by syzkaller spontaneously.
    
    Since the NULL timer is valid there, rip off snd_BUG_ON().
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0482dcd51004920b13b59995b7afb66df49937da
Author: Robb Glasser <rglasser@google.com>
Date:   Tue Dec 5 09:16:55 2017 -0800

    ALSA: pcm: prevent UAF in snd_pcm_info
    
    commit 362bca57f5d78220f8b5907b875961af9436e229 upstream.
    
    When the device descriptor is closed, the `substream->runtime` pointer
    is freed. But another thread may be in the ioctl handler, case
    SNDRV_CTL_IOCTL_PCM_INFO. This case calls snd_pcm_info_user() which
    calls snd_pcm_info() which accesses the now freed `substream->runtime`.
    
    Note: this fixes CVE-2017-0861
    
    Signed-off-by: Robb Glasser <rglasser@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6705e4c64eb549c1eb86007438034dd7b7a6129
Author: Kailang Yang <kailang@realtek.com>
Date:   Tue Dec 5 15:38:24 2017 +0800

    ALSA: hda/realtek - New codec support for ALC257
    
    commit f429e7e494afaded76e62c6f98211a635aa03098 upstream.
    
    Add new support for ALC257 codec.
    
    [ It's supposed to be almost equivalent with other ALC25x variants,
      just adding another type and id -- tiwai ]
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a121ecb3764e84da656b8d20138997f2fd6aed6f
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Tue Nov 21 13:58:49 2017 -0500

    btrfs: handle errors while updating refcounts in update_ref_for_cow
    
    commit 692826b2738101549f032a761a9191636e83be4e upstream.
    
    Since commit fb235dc06fa (btrfs: qgroup: Move half of the qgroup
    accounting time out of commit trans) the assumption that
    btrfs_add_delayed_{data,tree}_ref can only return 0 or -ENOMEM has
    been false.  The qgroup operations call into btrfs_search_slot
    and friends and can now return the full spectrum of error codes.
    
    Fortunately, the fix here is easy since update_ref_for_cow failing
    is already handled so we just need to bail early with the error
    code.
    
    Fixes: fb235dc06fa (btrfs: qgroup: Move half of the qgroup accounting ...)
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: Edmund Nadolski <enadolski@suse.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85ab61fdfa4866cd0465c75fb97a0601fed9973d
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Mon Dec 4 13:11:45 2017 -0500

    btrfs: fix missing error return in btrfs_drop_snapshot
    
    commit e19182c0fff451e3744c1107d98f072e7ca377a0 upstream.
    
    If btrfs_del_root fails in btrfs_drop_snapshot, we'll pick up the
    error but then return 0 anyway due to mixing err and ret.
    
    Fixes: 79787eaab4612 ("btrfs: replace many BUG_ONs with proper error handling")
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58582f04bc87b9d8d848d9163ce3355dd6f00602
Author: Radim Krčmář <rkrcmar@redhat.com>
Date:   Thu Nov 30 19:05:45 2017 +0100

    KVM: x86: fix APIC page invalidation
    
    commit b1394e745b9453dcb5b0671c205b770e87dedb87 upstream.
    
    Implementation of the unpinned APIC page didn't update the VMCS address
    cache when invalidation was done through range mmu notifiers.
    This became a problem when the page notifier was removed.
    
    Re-introduce the arch-specific helper and call it from ...range_start.
    
    Reported-by: Fabian Grünbichler <f.gruenbichler@proxmox.com>
    Fixes: 38b9917350cb ("kvm: vmx: Implement set_apic_access_page_addr")
    Fixes: 369ea8242c0f ("mm/rmap: update to new mmu_notifier semantic v2")
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Andrea Arcangeli <aarcange@redhat.com>
    Tested-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Tested-by: Fabian Grünbichler <f.gruenbichler@proxmox.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d333778b05edfa13a3eb51f3d98efae7b7c2caa8
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Dec 1 15:08:12 2017 +0100

    x86/PCI: Make broadcom_postcore_init() check acpi_disabled
    
    commit ddec3bdee05b06f1dda20ded003c3e10e4184cab upstream.
    
    acpi_os_get_root_pointer() may return a valid address even if acpi_disabled
    is set, but the host bridge information from the ACPI tables is not going
    to be used in that case and the Broadcom host bridge initialization should
    not be skipped then, So make broadcom_postcore_init() check acpi_disabled
    too to avoid this issue.
    
    Fixes: 6361d72b04d1 (x86/PCI: read Broadcom CNB20LE host bridge info before PCI scan)
    Reported-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Linux PCI <linux-pci@vger.kernel.org>
    Link: https://lkml.kernel.org/r/3186627.pxZj1QbYNg@aspire.rjw.lan
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7bb5cf984ba767bc7badbb4f2bead35b88783d6
Author: Chunyu Hu <chuhu@redhat.com>
Date:   Mon Nov 27 22:21:39 2017 +0800

    x86/idt: Load idt early in start_secondary
    
    commit 55d2d0ad2fb4325f615d1950486fbc5e6fba1769 upstream.
    
    On a secondary, idt is first loaded in cpu_init() with load_current_idt(),
    i.e. no exceptions can be handled before that point.
    
    The conversion of WARN() to use UD requires the IDT being loaded earlier as
    any warning between start_secondary() and load_curren_idt() in cpu_init()
    will result in an unhandled @UD exception and therefore fail the bringup of
    the CPU.
    
    Install the IDT handlers right in start_secondary() before calling cpu_init().
    
    [ tglx: Massaged changelog ]
    
    Fixes: 9a93848fe787 ("x86/debug: Implement __WARN() using UD0")
    Signed-off-by: Chunyu Hu <chuhu@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: rostedt@goodmis.org
    Cc: luto@kernel.org
    Link: https://lkml.kernel.org/r/1511792499-4073-1-git-send-email-chuhu@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70feeaaabf4fabf78812d33facd7f8f993b33011
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:29 2017 +0000

    X.509: fix comparisons of ->pkey_algo
    
    commit 54c1fb39fe0495f846539ab765925b008f86801c upstream.
    
    ->pkey_algo used to be an enum, but was changed to a string by commit
    4e8ae72a75aa ("X.509: Make algo identifiers text instead of enum").  But
    two comparisons were not updated.  Fix them to use strcmp().
    
    This bug broke signature verification in certain configurations,
    depending on whether the string constants were deduplicated or not.
    
    Fixes: 4e8ae72a75aa ("X.509: Make algo identifiers text instead of enum")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31b3bcc66f52790010f6a5d4458cabf89f2ffcfa
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    X.509: reject invalid BIT STRING for subjectPublicKey
    
    commit 0f30cbea005bd3077bd98cd29277d7fc2699c1da upstream.
    
    Adding a specially crafted X.509 certificate whose subjectPublicKey
    ASN.1 value is zero-length caused x509_extract_key_data() to set the
    public key size to SIZE_MAX, as it subtracted the nonexistent BIT STRING
    metadata byte.  Then, x509_cert_parse() called kmemdup() with that bogus
    size, triggering the WARN_ON_ONCE() in kmalloc_slab().
    
    This appears to be harmless, but it still must be fixed since WARNs are
    never supposed to be user-triggerable.
    
    Fix it by updating x509_cert_parse() to validate that the value has a
    BIT STRING metadata byte, and that the byte is 0 which indicates that
    the number of bits in the bitstring is a multiple of 8.
    
    It would be nice to handle the metadata byte in asn1_ber_decoder()
    instead.  But that would be tricky because in the general case a BIT
    STRING could be implicitly tagged, and/or could legitimately have a
    length that is not a whole number of bytes.
    
    Here was the WARN (cleaned up slightly):
    
        WARNING: CPU: 1 PID: 202 at mm/slab_common.c:971 kmalloc_slab+0x5d/0x70 mm/slab_common.c:971
        Modules linked in:
        CPU: 1 PID: 202 Comm: keyctl Tainted: G    B            4.14.0-09238-g1d3b78bbc6e9 #26
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
        task: ffff880033014180 task.stack: ffff8800305c8000
        Call Trace:
         __do_kmalloc mm/slab.c:3706 [inline]
         __kmalloc_track_caller+0x22/0x2e0 mm/slab.c:3726
         kmemdup+0x17/0x40 mm/util.c:118
         kmemdup include/linux/string.h:414 [inline]
         x509_cert_parse+0x2cb/0x620 crypto/asymmetric_keys/x509_cert_parser.c:106
         x509_key_preparse+0x61/0x750 crypto/asymmetric_keys/x509_public_key.c:174
         asymmetric_key_preparse+0xa4/0x150 crypto/asymmetric_keys/asymmetric_type.c:388
         key_create_or_update+0x4d4/0x10a0 security/keys/key.c:850
         SYSC_add_key security/keys/keyctl.c:122 [inline]
         SyS_add_key+0xe8/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
    Fixes: 42d5ec27f873 ("X.509: Add an ASN.1 decoder")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28e7c9a8e548c8c7e839f6ae1e21d61dc92308b0
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:29 2017 +0000

    KEYS: reject NULL restriction string when type is specified
    
    commit 18026d866801d0c52e5550210563222bd6c7191d upstream.
    
    keyctl_restrict_keyring() allows through a NULL restriction when the
    "type" is non-NULL, which causes a NULL pointer dereference in
    asymmetric_lookup_restriction() when it calls strcmp() on the
    restriction string.
    
    But no key types actually use a "NULL restriction" to mean anything, so
    update keyctl_restrict_keyring() to reject it with EINVAL.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Fixes: 97d3aa0f3134 ("KEYS: Add a lookup_restriction function for the asymmetric key type")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69d5894ce0a67d37f900d2597fc0b2b8cef6c863
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    KEYS: add missing permission check for request_key() destination
    
    commit 4dca6ea1d9432052afb06baf2e3ae78188a4410b upstream.
    
    When the request_key() syscall is not passed a destination keyring, it
    links the requested key (if constructed) into the "default" request-key
    keyring.  This should require Write permission to the keyring.  However,
    there is actually no permission check.
    
    This can be abused to add keys to any keyring to which only Search
    permission is granted.  This is because Search permission allows joining
    the keyring.  keyctl_set_reqkey_keyring(KEY_REQKEY_DEFL_SESSION_KEYRING)
    then will set the default request-key keyring to the session keyring.
    Then, request_key() can be used to add keys to the keyring.
    
    Both negatively and positively instantiated keys can be added using this
    method.  Adding negative keys is trivial.  Adding a positive key is a
    bit trickier.  It requires that either /sbin/request-key positively
    instantiates the key, or that another thread adds the key to the process
    keyring at just the right time, such that request_key() misses it
    initially but then finds it in construct_alloc_key().
    
    Fix this bug by checking for Write permission to the keyring in
    construct_get_dest_keyring() when the default keyring is being used.
    
    We don't do the permission check for non-default keyrings because that
    was already done by the earlier call to lookup_user_key().  Also,
    request_key_and_link() is currently passed a 'struct key *' rather than
    a key_ref_t, so the "possessed" bit is unavailable.
    
    We also don't do the permission check for the "requestor keyring", to
    continue to support the use case described by commit 8bbf4976b59f
    ("KEYS: Alter use of key instantiation link-to-keyring argument") where
    /sbin/request-key recursively calls request_key() to add keys to the
    original requestor's destination keyring.  (I don't know of any users
    who actually do that, though...)
    
    Fixes: 3e30148c3d52 ("[PATCH] Keys: Make request-key create an authorisation key")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c69b34050996d1a1167242f625973dfb9f54271
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    ASN.1: check for error from ASN1_OP_END__ACT actions
    
    commit 81a7be2cd69b412ab6aeacfe5ebf1bb6e5bce955 upstream.
    
    asn1_ber_decoder() was ignoring errors from actions associated with the
    opcodes ASN1_OP_END_SEQ_ACT, ASN1_OP_END_SET_ACT,
    ASN1_OP_END_SEQ_OF_ACT, and ASN1_OP_END_SET_OF_ACT.  In practice, this
    meant the pkcs7_note_signed_info() action (since that was the only user
    of those opcodes).  Fix it by checking for the error, just like the
    decoder does for actions associated with the other opcodes.
    
    This bug allowed users to leak slab memory by repeatedly trying to add a
    specially crafted "pkcs7_test" key (requires CONFIG_PKCS7_TEST_KEY).
    
    In theory, this bug could also be used to bypass module signature
    verification, by providing a PKCS#7 message that is misparsed such that
    a signature's ->authattrs do not contain its ->msgdigest.  But it
    doesn't seem practical in normal cases, due to restrictions on the
    format of the ->authattrs.
    
    Fixes: 42d5ec27f873 ("X.509: Add an ASN.1 decoder")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c4c01d13f74ef37299b4e23a95bb0691298370a
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    ASN.1: fix out-of-bounds read when parsing indefinite length item
    
    commit e0058f3a874ebb48b25be7ff79bc3b4e59929f90 upstream.
    
    In asn1_ber_decoder(), indefinitely-sized ASN.1 items were being passed
    to the action functions before their lengths had been computed, using
    the bogus length of 0x80 (ASN1_INDEFINITE_LENGTH).  This resulted in
    reading data past the end of the input buffer, when given a specially
    crafted message.
    
    Fix it by rearranging the code so that the indefinite length is resolved
    before the action is called.
    
    This bug was originally found by fuzzing the X.509 parser in userspace
    using libFuzzer from the LLVM project.
    
    KASAN report (cleaned up slightly):
    
        BUG: KASAN: slab-out-of-bounds in memcpy ./include/linux/string.h:341 [inline]
        BUG: KASAN: slab-out-of-bounds in x509_fabricate_name.constprop.1+0x1a4/0x940 crypto/asymmetric_keys/x509_cert_parser.c:366
        Read of size 128 at addr ffff880035dd9eaf by task keyctl/195
    
        CPU: 1 PID: 195 Comm: keyctl Not tainted 4.14.0-09238-g1d3b78bbc6e9 #26
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
        Call Trace:
         __dump_stack lib/dump_stack.c:17 [inline]
         dump_stack+0xd1/0x175 lib/dump_stack.c:53
         print_address_description+0x78/0x260 mm/kasan/report.c:252
         kasan_report_error mm/kasan/report.c:351 [inline]
         kasan_report+0x23f/0x350 mm/kasan/report.c:409
         memcpy+0x1f/0x50 mm/kasan/kasan.c:302
         memcpy ./include/linux/string.h:341 [inline]
         x509_fabricate_name.constprop.1+0x1a4/0x940 crypto/asymmetric_keys/x509_cert_parser.c:366
         asn1_ber_decoder+0xb4a/0x1fd0 lib/asn1_decoder.c:447
         x509_cert_parse+0x1c7/0x620 crypto/asymmetric_keys/x509_cert_parser.c:89
         x509_key_preparse+0x61/0x750 crypto/asymmetric_keys/x509_public_key.c:174
         asymmetric_key_preparse+0xa4/0x150 crypto/asymmetric_keys/asymmetric_type.c:388
         key_create_or_update+0x4d4/0x10a0 security/keys/key.c:850
         SYSC_add_key security/keys/keyctl.c:122 [inline]
         SyS_add_key+0xe8/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
        Allocated by task 195:
         __do_kmalloc_node mm/slab.c:3675 [inline]
         __kmalloc_node+0x47/0x60 mm/slab.c:3682
         kvmalloc ./include/linux/mm.h:540 [inline]
         SYSC_add_key security/keys/keyctl.c:104 [inline]
         SyS_add_key+0x19e/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
    Fixes: 42d5ec27f873 ("X.509: Add an ASN.1 decoder")
    Reported-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4d901739324cc1c400f322767a9df6de7d838ce
Author: Pan Bian <bianpan2016@163.com>
Date:   Wed Dec 6 09:50:09 2017 +0000

    efi/esrt: Use memunmap() instead of kfree() to free the remapping
    
    commit 89c5a2d34bda58319e3075e8e7dd727ea25a435c upstream.
    
    The remapping result of memremap() should be freed with memunmap(), not kfree().
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Link: http://lkml.kernel.org/r/20171206095010.24170-3-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 985ce9ee25cca9d8841b0cc31ced92dbd1f9bf99
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 6 09:50:08 2017 +0000

    efi: Move some sysfs files to be read-only by root
    
    commit af97a77bc01ce49a466f9d4c0125479e2e2230b6 upstream.
    
    Thanks to the scripts/leaking_addresses.pl script, it was found that
    some EFI values should not be readable by non-root users.
    
    So make them root-only, and to do that, add a __ATTR_RO_MODE() macro to
    make this easier, and use it in other places at the same time.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Tested-by: Dave Young <dyoung@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Link: http://lkml.kernel.org/r/20171206095010.24170-2-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a326fc91abb834c832166cff9f4362f98ff7f95d
Author: Huacai Chen <chenhc@lemote.com>
Date:   Tue Nov 21 14:23:39 2017 +0100

    scsi: libsas: align sata_device's rps_resp on a cacheline
    
    commit c2e8fbf908afd81ad502b567a6639598f92c9b9d upstream.
    
    The rps_resp buffer in ata_device is a DMA target, but it isn't
    explicitly cacheline aligned. Due to this, adjacent fields can be
    overwritten with stale data from memory on non-coherent architectures.
    As a result, the kernel is sometimes unable to communicate with an SATA
    device behind a SAS expander.
    
    Fix this by ensuring that the rps_resp buffer is cacheline aligned.
    
    This issue is similar to that fixed by Commit 84bda12af31f93 ("libata:
    align ap->sector_buf") and Commit 4ee34ea3a12396f35b26 ("libata: Align
    ata_device's id on a cacheline").
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21747052c4b31f453e9fbbf4ee46f221c58cf2cd
Author: Huacai Chen <chenhc@lemote.com>
Date:   Tue Nov 21 14:23:38 2017 +0100

    scsi: use dma_get_cache_alignment() as minimum DMA alignment
    
    commit 90addc6b3c9cda0146fbd62a08e234c2b224a80c upstream.
    
    In non-coherent DMA mode, kernel uses cache flushing operations to
    maintain I/O coherency, so scsi's block queue should be aligned to the
    value returned by dma_get_cache_alignment().  Otherwise, If a DMA buffer
    and a kernel structure share a same cache line, and if the kernel
    structure has dirty data, cache_invalidate (no writeback) will cause
    data corruption.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    [hch: rebased and updated the comment and changelog]
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc2b3046048bc193def020ef9d871f4edb3f47ba
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Nov 21 14:23:37 2017 +0100

    scsi: dma-mapping: always provide dma_get_cache_alignment
    
    commit 860dd4424f344400b491b212ee4acb3a358ba9d9 upstream.
    
    Provide the dummy version of dma_get_cache_alignment that always returns
    1 even if CONFIG_HAS_DMA is not set, so that drivers and subsystems can
    use it without ifdefs.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 400391d711b1f783c85679b70f71c5fea56c0341
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Wed Nov 8 10:23:11 2017 -0500

    isa: Prevent NULL dereference in isa_bus driver callbacks
    
    commit 5a244727f428a06634f22bb890e78024ab0c89f3 upstream.
    
    The isa_driver structure for an isa_bus device is stored in the device
    platform_data member of the respective device structure. This
    platform_data member may be reset to NULL if isa_driver match callback
    for the device fails, indicating a device unsupported by the ISA driver.
    
    This patch fixes a possible NULL pointer dereference if one of the
    isa_driver callbacks to attempted for an unsupported device. This error
    should not occur in practice since ISA devices are typically manually
    configured and loaded by the users, but we may as well prevent this
    error from popping up for the 0day testers.
    
    Fixes: a5117ba7da37 ("[PATCH] Driver model: add ISA bus")
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff8307709c0aff44bb1919e7d98ffa245af7cf6a
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Nov 15 13:00:45 2017 -0800

    firmware: vpd: Fix platform driver and device registration/unregistration
    
    commit 0631fb8b027f5968c2f5031f0b3ff7be3e4bebcc upstream.
    
    The driver exit function needs to unregister both platform device and
    driver. Also, during registration, register driver first and perform
    error checks.
    
    Fixes: 049a59db34eb ("firmware: Google VPD sysfs driver")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03bb8e9a18190ee12f5250ff4e97ac035fb2abca
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Nov 15 13:00:44 2017 -0800

    firmware: vpd: Tie firmware kobject to device lifetime
    
    commit e4b28b3c3a405b251fa25db58abe1512814a680a upstream.
    
    It doesn't make sense to have /sys/firmware/vpd if the device is not
    instantiated, so tie its lifetime to the device.
    
    Fixes: 049a59db34eb ("firmware: Google VPD sysfs driver")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Tested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdc5340c054b37655ea1f8fef99d3e4ab39855d8
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Nov 15 13:00:43 2017 -0800

    firmware: vpd: Destroy vpd sections in remove function
    
    commit 811d7e0215fb738fb9a9f0bcb1276516ad161ed1 upstream.
    
    vpd sections are initialized during probe and thus should be destroyed
    in the remove function.
    
    Fixes: 049a59db34eb ("firmware: Google VPD sysfs driver")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Tested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b167dc4b875aa9d3bddf5c29b34ccfe8b87174e
Author: Robin H. Johnson <robbat2@gentoo.org>
Date:   Thu Nov 16 14:36:12 2017 -0800

    firmware: cleanup FIRMWARE_IN_KERNEL message
    
    commit 0946b2fb38fdb6585a5ac3ca84ac73924f645952 upstream.
    
    The help for FIRMWARE_IN_KERNEL still references the firmware_install
    command that was recently removed by commit 5620a0d1aacd ("firmware:
    delete in-kernel firmware").
    
    Clean up the message to direct the user to their distribution's
    linux-firmware package, and remove any reference to firmware being
    included in the kernel source tree.
    
    Fixes: 5620a0d1aacd ("firmware: delete in-kernel firmware").
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Signed-off-by: Robin H. Johnson <robbat2@gentoo.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 070703364a970ac029f04c09d3e42a6d2287e01a
Author: Paul Meyer <Paul.Meyer@microsoft.com>
Date:   Tue Nov 14 13:06:47 2017 -0700

    hv: kvp: Avoid reading past allocated blocks from KVP file
    
    commit 297d6b6e56c2977fc504c61bbeeaa21296923f89 upstream.
    
    While reading in more than one block (50) of KVP records, the allocation
    goes per block, but the reads used the total number of allocated records
    (without resetting the pointer/stream). This causes the records buffer to
    overrun when the refresh reads more than one block over the previous
    capacity (e.g. reading more than 100 KVP records whereas the in-memory
    database was empty before).
    
    Fix this by reading the correct number of KVP records from file each time.
    
    Signed-off-by: Paul Meyer <Paul.Meyer@microsoft.com>
    Signed-off-by: Long Li <longli@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f77a2c68ba8377f7f7ddcadff5ffda238cb83db
Author: K. Y. Srinivasan <kys@microsoft.com>
Date:   Tue Nov 14 06:53:33 2017 -0700

    Drivers: hv: vmbus: Fix a rescind issue
    
    commit 7fa32e5ec28b1609abc0b797b58267f725fc3964 upstream.
    
    The current rescind processing code will not correctly handle
    the case where the host immediately rescinds a channel that has
    been offerred. In this case, we could be blocked in the open call and
    since the channel is rescinded, the host will not respond and we could
    be blocked forever in the vmbus open call.i Fix this problem.
    
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c802ac42f970976d26241068e7202a84c9fd8b7
Author: Gregory CLEMENT <gregory.clement@free-electrons.com>
Date:   Tue Nov 14 17:51:50 2017 +0100

    pinctrl: armada-37xx: Fix direction_output() callback behavior
    
    commit 6702abb3bf2394f250af0ee04070227bb5dda788 upstream.
    
    The direction_output callback of the gpio_chip structure is supposed to
    set the output direction but also to set the value of the gpio. For the
    armada-37xx driver this callback acted as the gpio_set_direction callback
    for the pinctrl.
    
    This patch fixes the behavior of the direction_output callback by also
    applying the value received as parameter.
    
    Fixes: 5715092a458c ("pinctrl: armada-37xx: Add gpio support")
    Reported-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b13ec02ab4a24192ad56b47e39a82269cc4825ca
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Tue Oct 31 21:01:45 2017 +0100

    iio: adc: meson-saradc: Meson8 and Meson8b do not have REG11 and REG13
    
    commit 96748823c483c6eed8321f78bd128dd33f09c55c upstream.
    
    The Meson GXBB and newer SoCs have a few more registers than the older
    Meson8 and Meson8b SoCs.
    Use a separate regmap config to limit the older SoCs to the DELTA_10
    register.
    
    Fixes: 6c76ed31cd05 ("iio: adc: meson-saradc: add Meson8b SoC compatibility")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6c6d01a2debe8df9541a9bd21cc60760d20f6a2
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Tue Oct 31 21:01:44 2017 +0100

    iio: adc: meson-saradc: initialize the bandgap correctly on older SoCs
    
    commit d85eed9f576369bc90322659de96b7dbea1f9a57 upstream.
    
    Meson8 and Meson8b do not have the MESON_SAR_ADC_REG11 register. The
    bandgap setting for these SoCs is configured in the
    MESON_SAR_ADC_DELTA_10 register instead.
    Make the driver aware of this difference and use the correct bandgap
    register depending on the SoC.
    This has worked fine on Meson8 and Meson8b because the bootloader is
    already initializing the bandgap setting.
    
    Fixes: 6c76ed31cd05 ("iio: adc: meson-saradc: add Meson8b SoC compatibility")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac2d7838808c5bb68ea357f748cc4c1710555d6d
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Tue Oct 31 21:01:43 2017 +0100

    iio: adc: meson-saradc: fix the bit_idx of the adc_en clock
    
    commit 7a6b0420d2fe4ce59437bd318826fe468f0d71ae upstream.
    
    Meson8 and Meson8b SoCs use the the SAR ADC gate clock provided by the
    MESON_SAR_ADC_REG3 register within the SAR ADC register area.
    According to the datasheet (and the existing MESON_SAR_ADC_REG3_CLK_EN
    definition) the gate is on bit 30.
    The fls() function returns the last set bit, which is "bit index + 1"
    (fls(MESON_SAR_ADC_REG3_CLK_EN) returns 31). Fix this by switching to
    __ffs() which returns the first set bit, which is bit 30 in our case.
    
    This off by one error results in the ADC not being usable on devices
    where the bootloader did not enable the clock.
    
    Fixes: 3adbf3427330 ("iio: adc: add a driver for the SAR ADC found in Amlogic Meson SoCs")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f4a0a44ba5aafcb4884b863e0e27923c41ab2ec
Author: Pan Bian <bianpan2016@163.com>
Date:   Mon Nov 13 00:01:20 2017 +0800

    iio: adc: cpcap: fix incorrect validation
    
    commit 81b039ec36a41a5451e1e36f05bb055eceab1dc8 upstream.
    
    Function platform_get_irq_byname() returns a negative error code on
    failure, and a zero or positive number on success. However, in function
    cpcap_adc_probe(), positive IRQ numbers are also taken as error cases.
    Use "if (ddata->irq < 0)" instead of "if (!ddata->irq)" to validate the
    return value of platform_get_irq_byname().
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Fixes: 25ec249632d50 ("iio: adc: cpcap: Add minimal support for CPCAP PMIC ADC")
    Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aaeba39ddfe21321c8cfd5e3caeaef1b7153b184
Author: Peter Meerwald-Stadler <pmeerw@pmeerw.net>
Date:   Fri Oct 27 21:45:31 2017 +0200

    iio: health: max30102: Temperature should be in milli Celsius
    
    commit ad44a9f804c1591ba2a2ec0ac8d916a515d2790c upstream.
    
    As per ABI temperature should be in milli Celsius after scaling,
    not Celsius
    
    Note on stable cc.  This driver is breaking the standard IIO
    ABI. (JC)
    
    Signed-off-by: Peter Meerwald-Stadler <pmeerw@pmeerw.net>
    Acked-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c55befc42a9e65fed575dd7ce4e605e1164df79a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Sep 6 14:56:50 2017 +0200

    iio: stm32: fix adc/trigger link error
    
    commit 6d745ee8b5e81f3a33791e3c854fbbfd6f3e585e upstream.
    
    The ADC driver can trigger on either the timer or the lptim
    trigger, but it only uses a Kconfig 'select' statement
    to ensure that the first of the two is present. When the lptim
    trigger is enabled as a loadable module, and the adc driver
    is built-in, we now get a link error:
    
    drivers/iio/adc/stm32-adc.o: In function `stm32_adc_get_trig_extsel':
    stm32-adc.c:(.text+0x4e0): undefined reference to `is_stm32_lptim_trigger'
    
    We could use a second 'select' statement and always have both
    trigger drivers enabled when the adc driver is, but it seems that
    the lptimer trigger was intentionally left optional, so it seems
    better to keep it that way.
    
    This adds a hack to use 'IS_REACHABLE()' rather than 'IS_ENABLED()',
    which avoids the link error, but instead leads to the lptimer trigger
    not being used in the broken configuration. I've added a runtime
    warning for this case to help users figure out what they did wrong
    if this should ever be done by accident.
    
    Fixes: f0b638a7f6db ("iio: adc: stm32: add support for lptimer triggers")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5a5c47c40ce2478ad5b42b781b16c3e3849438f
Author: weiping zhang <zwp10758@gmail.com>
Date:   Wed Nov 29 09:23:01 2017 +0800

    virtio: release virtio index when fail to device_register
    
    commit e60ea67bb60459b95a50a156296041a13e0e380e upstream.
    
    index can be reused by other virtio device.
    
    Signed-off-by: weiping zhang <zhangweiping@didichuxing.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f5d203906bc32ddb57d73ec6ea1694505ab7ffa
Author: Stephane Grosjean <s.grosjean@peak-system.com>
Date:   Thu Dec 7 16:13:43 2017 +0100

    can: peak/pcie_fd: fix potential bug in restarting tx queue
    
    commit 91785de6f94b58c3fb6664609e3682f011bd28d2 upstream.
    
    Don't rely on can_get_echo_skb() return value to wake the network tx
    queue up: can_get_echo_skb() returns 0 if the echo array slot was not
    occupied, but also when the DLC of the released echo frame was 0.
    
    Signed-off-by: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67464fbca35ccfbe2f5e957ff2a31334390b7947
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:50 2017 -0800

    can: usb_8dev: cancel urb on -EPIPE and -EPROTO
    
    commit 12147edc434c9e4c7c2f5fee2e5519b2e5ac34ce upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 421b93cb0f352c84964b701cf1db2e221c187d37
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:48 2017 -0800

    can: esd_usb2: cancel urb on -EPIPE and -EPROTO
    
    commit 7a31ced3de06e9878e4f9c3abe8f87d9344d8144 upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7a80033fd226b71bd49602052ff8242355fd4a5
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:47 2017 -0800

    can: ems_usb: cancel urb on -EPIPE and -EPROTO
    
    commit bd352e1adfe0d02d3ea7c8e3fb19183dc317e679 upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b96f17231dca5ddc2136999ca147cdeb842b2664
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 10:34:03 2017 -0800

    can: mcba_usb: cancel urb on -EPROTO
    
    commit c7f33023308f3142433b7379718af5f0c2c322a6 upstream.
    
    When we unplug the device, we can see both -EPIPE and -EPROTO depending
    on exact timing and what system we run on. If we continue to resubmit
    URBs, they will immediately fail, and they can cause stalls, especially
    on slower CPUs.
    
    Fix this by not resubmitting on -EPROTO, as we already do on -EPIPE.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d04d52a6f268b635b4e69cbe28beaf5fd19228e1
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:49 2017 -0800

    can: kvaser_usb: cancel urb on -EPIPE and -EPROTO
    
    commit 6aa8d5945502baf4687d80de59b7ac865e9e666b upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f4fd93f349036ebeb136838444336f376f0e7db
Author: Jimmy Assarsson <jimmyassarsson@gmail.com>
Date:   Tue Nov 21 08:22:28 2017 +0100

    can: kvaser_usb: ratelimit errors if incomplete messages are received
    
    commit 8bd13bd522ff7dfa0eb371921aeb417155f7a3be upstream.
    
    Avoid flooding the kernel log with "Formate error", if incomplete message
    are received.
    
    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5250169e7390db30c60d35515b6b40501764164d
Author: Jimmy Assarsson <jimmyassarsson@gmail.com>
Date:   Tue Nov 21 08:22:27 2017 +0100

    can: kvaser_usb: Fix comparison bug in kvaser_usb_read_bulk_callback()
    
    commit e84f44eb5523401faeb9cc1c97895b68e3cfb78d upstream.
    
    The conditon in the while-loop becomes true when actual_length is less than
    2 (MSG_HEADER_LEN). In best case we end up with a former, already
    dispatched msg, that got msg->len greater than actual_length. This will
    result in a "Format error" error printout.
    
    Problem seen when unplugging a Kvaser USB device connected to a vbox guest.
    
    warning: comparison between signed and unsigned integer expressions
    [-Wsign-compare]
    
    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 896ae65aabc8438a3fa9405e3996bd59e3372055
Author: Jimmy Assarsson <jimmyassarsson@gmail.com>
Date:   Tue Nov 21 08:22:26 2017 +0100

    can: kvaser_usb: free buf in error paths
    
    commit 435019b48033138581a6171093b181fc6b4d3d30 upstream.
    
    The allocated buffer was not freed if usb_submit_urb() failed.
    
    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63f2bd86ccc0a2864bdb0d9bb7bb6735276019af
Author: Oliver Stäbler <oliver.staebler@bytesatwork.ch>
Date:   Mon Nov 20 14:45:15 2017 +0100

    can: ti_hecc: Fix napi poll return value for repoll
    
    commit f6c23b174c3c96616514827407769cbcfc8005cf upstream.
    
    After commit d75b1ade567f ("net: less interrupt masking in NAPI") napi
    repoll is done only when work_done == budget.
    So we need to return budget if there are still packets to receive.
    
    Signed-off-by: Oliver Stäbler <oliver.staebler@bytesatwork.ch>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39797254631553b51b2e64d5160ff8709a66254c
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Mon Nov 27 09:18:21 2017 +0100

    can: flexcan: fix VF610 state transition issue
    
    commit 29c64b17a0bc72232acc45e9533221d88a262efb upstream.
    
    Enable FLEXCAN_QUIRK_BROKEN_PERR_STATE for VF610 to report correct state
    transitions.
    
    Tested-by: Mirza Krak <mirza.krak@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b65e2916c4ba62ce543cd1366a6649a9ff5bcb2
Author: Stephane Grosjean <s.grosjean@peak-system.com>
Date:   Thu Nov 23 15:44:35 2017 +0100

    can: peak/pci: fix potential bug when probe() fails
    
    commit 5c2cb02edf79ad79d9b8d07c6d52243a948c4c9f upstream.
    
    PCI/PCIe drivers for PEAK-System CAN/CAN-FD interfaces do some access to the
    PCI config during probing. In case one of these accesses fails, a POSITIVE
    PCIBIOS_xxx error code is returned back. This POSITIVE error code MUST be
    converted into a NEGATIVE errno for the probe() function to indicate it
    failed. Using the pcibios_err_to_errno() function, we make sure that the
    return code will always be negative.
    
    Signed-off-by: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba4eed1bd4d82ed591f07eee628b1efade7e6764
Author: Martin Kelly <mkelly@xevo.com>
Date:   Mon Nov 27 15:49:16 2017 -0800

    can: mcba_usb: fix device disconnect bug
    
    commit 1cb35a33a28394fd711bb26ddf3a564f4e9d9125 upstream.
    
    Currently, when you disconnect the device, the driver infinitely
    resubmits all URBs, so you see:
    
    Rx URB aborted (-32)
    
    in an infinite loop.
    
    Fix this by catching -EPIPE (what we get in urb->status when the device
    disconnects) and not resubmitting.
    
    With this patch, I can plug and unplug many times and the driver
    recovers correctly.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4dc9c1cfa9fffed0ec812a85e4b06a68efb6afea
Author: John Keeping <john@metanate.com>
Date:   Mon Nov 27 18:15:40 2017 +0000

    usb: f_fs: Force Reserved1=1 in OS_DESC_EXT_COMPAT
    
    commit a3acc696085e112733d191a77b106e67a4fa110b upstream.
    
    The specification says that the Reserved1 field in OS_DESC_EXT_COMPAT
    must have the value "1", but when this feature was first implemented we
    rejected any non-zero values.
    
    This was adjusted to accept all non-zero values (while now rejecting
    zero) in commit 53642399aa71 ("usb: gadget: f_fs: Fix wrong check on
    reserved1 of OS_DESC_EXT_COMPAT"), but that breaks any userspace
    programs that worked previously by returning EINVAL when Reserved1 == 0
    which was previously the only value that succeeded!
    
    If we just set the field to "1" ourselves, both old and new userspace
    programs continue to work correctly and, as a bonus, old programs are
    now compliant with the specification without having to fix anything
    themselves.
    
    Fixes: 53642399aa71 ("usb: gadget: f_fs: Fix wrong check on reserved1 of OS_DESC_EXT_COMPAT")
    Signed-off-by: John Keeping <john@metanate.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce42ed5ae8982360dba581acfafdaff88f2b3fbe
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Nov 3 15:30:56 2017 +0100

    serdev: ttyport: fix tty locking in close
    
    commit 90dbad8cd6efccbdce109d5ef0724f8434a6cdde upstream.
    
    Make sure to hold the tty lock as required when calling tty-driver
    close() (e.g. to avoid racing with hangup()).
    
    Note that the serport active flag is currently set under the lock at
    controller open, but really isn't protected by it.
    
    Fixes: cd6484e1830b ("serdev: Introduce new bus for serial attached devices")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a3da8bd93c78b6a4aed19c83cb8f493dfc4dfef
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Nov 3 15:30:55 2017 +0100

    serdev: ttyport: fix NULL-deref on hangup
    
    commit 8bcd4e6a8decac251d55c4377e2e67f052777ce0 upstream.
    
    Make sure to use a properly refcounted tty_struct in write_wake up to
    avoid dereferencing a NULL-pointer when a port is being hung up.
    
    Fixes: bed35c6dfa6a ("serdev: add a tty port controller driver")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d415ccdd0be1a745904a7b12b87437463aa35a8d
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Nov 3 15:30:52 2017 +0100

    serdev: ttyport: add missing receive_buf sanity checks
    
    commit eb281683621b71ab9710d9dccbbef0c2e1769c97 upstream.
    
    The receive_buf tty-port callback should return the number of bytes
    accepted and must specifically never return a negative errno (or a value
    larger than the buffer size) to the tty layer.
    
    A serdev driver not providing a receive_buf callback would currently
    cause the flush_to_ldisc() worker to spin in a tight loop when the tty
    buffer pointers are incremented with -EINVAL (-22) after data has been
    received.
    
    A serdev driver occasionally returning a negative errno (or a too large
    byte count) could cause information leaks or crashes when accessing
    memory outside the tty buffers in consecutive callbacks.
    
    Fixes: cd6484e1830b ("serdev: Introduce new bus for serial attached devices")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28ddc2b45f5f409b905dc78e79d959377789fc12
Author: Roger Quadros <rogerq@ti.com>
Date:   Tue Oct 31 15:56:29 2017 +0200

    usb: gadget: core: Fix ->udc_set_speed() speed handling
    
    commit a4f0927ef588cf62bb864707261482c874352942 upstream.
    
    Currently UDC core calls ->udc_set_speed() with the speed parameter
    containing the maximum speed supported by the gadget function
    driver. This might very well be more than that supported by the
    UDC controller driver.
    
    Select the lesser of the 2 speeds so both UDC and gadget function
    driver are operating within limits.
    
    This fixes PHY Erratic errors and 2 second enumeration delay on
    TI's AM437x platforms.
    
    Fixes: 6099eca796ae ("usb: gadget: core: introduce ->udc_set_speed() method")
    Reported-by: Dylan Howey <Dylan.Howey@tennantco.com>
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb6c13d914e0f5b7badc3ec455114e4b45177c2a
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Mon Nov 13 17:59:18 2017 +0900

    usb: gadget: udc: renesas_usb3: fix number of the pipes
    
    commit a58204ab91ad8cae4d8474aa0ba5d1fc504860c9 upstream.
    
    This controller on R-Car Gen3 has 6 pipes that included PIPE 0 for
    control actually. But, the datasheet has error in writing as it has
    31 pipes. (However, the previous code defined 30 pipes wrongly...)
    
    Anyway, this patch fixes it.
    
    Fixes: 746bfe63bba3 ("usb: gadget: renesas_usb3: add support for Renesas USB3.0 peripheral controller")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64138f0adb25ca8f34baa57af33260b05efe2874
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Dec 10 13:40:45 2017 +0100

    Linux 4.14.5

commit c3b0874866f2282f51295dc4cf69672b2caf6039
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Dec 4 17:24:54 2017 -0800

    locking/refcounts: Do not force refcount_t usage as GPL-only export
    
    commit b562c171cf011d297059bd0265742eb5fab0ad2f upstream.
    
    The refcount_t protection on x86 was not intended to use the stricter
    GPL export. This adjusts the linkage again to avoid a regression in
    the availability of the refcount API.
    
    Reported-by: Dave Airlie <airlied@gmail.com>
    Fixes: 7a46ec0e2f48 ("locking/refcounts, x86/asm: Implement fast refcount overflow protection")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Ivan Kozik <ivan@ludios.org>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de667b08c34c61b59fb1a71ba0eff648550a7799
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Nov 7 16:45:04 2017 +0000

    usb: host: fix incorrect updating of offset
    
    commit 1d5a31582ef046d3b233f0da1a68ae26519b2f0a upstream.
    
    The variable temp is incorrectly being updated, instead it should
    be offset otherwise the loop just reads the same capability value
    and loops forever.  Thanks to Alan Stern for pointing out the
    correct fix to my original fix.  Fix also cleans up clang warning:
    
    drivers/usb/host/ehci-dbg.c:840:4: warning: Value stored to 'temp'
    is never read
    
    Fixes: d49d43174400 ("USB: misc ehci updates")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15f12be9860e380ccc809f0bb939b9ea385be9b1
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Nov 23 16:39:52 2017 +0100

    USB: usbfs: Filter flags passed in from user space
    
    commit 446f666da9f019ce2ffd03800995487e79a91462 upstream.
    
    USBDEVFS_URB_ISO_ASAP must be accepted only for ISO endpoints.
    Improve sanity checking.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 903b2d14d0e57e48fd80d5a9d35d9fbf3c1e63ea
Author: Masakazu Mokuno <masakazu.mokuno@gmail.com>
Date:   Fri Nov 10 01:25:50 2017 +0900

    USB: core: Add type-specific length check of BOS descriptors
    
    commit 81cf4a45360f70528f1f64ba018d61cb5767249a upstream.
    
    As most of BOS descriptors are longer in length than their header
    'struct usb_dev_cap_header', comparing solely with it is not sufficient
    to avoid out-of-bounds access to BOS descriptors.
    
    This patch adds descriptor type specific length check in
    usb_get_bos_descriptor() to fix the issue.
    
    Signed-off-by: Masakazu Mokuno <masakazu.mokuno@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4346c775cf707a703e2b305315e37b9beee30bd6
Author: Yu Chen <chenyu56@huawei.com>
Date:   Fri Dec 1 13:41:20 2017 +0200

    usb: xhci: fix panic in xhci_free_virt_devices_depth_first
    
    commit 80e457699a8dbdd70f2d26911e46f538645c55fc upstream.
    
    Check vdev->real_port 0 to avoid panic
    [    9.261347] [<ffffff800884a390>] xhci_free_virt_devices_depth_first+0x58/0x108
    [    9.261352] [<ffffff800884a814>] xhci_mem_cleanup+0x1bc/0x570
    [    9.261355] [<ffffff8008842de8>] xhci_stop+0x140/0x1c8
    [    9.261365] [<ffffff80087ed304>] usb_remove_hcd+0xfc/0x1d0
    [    9.261369] [<ffffff80088551c4>] xhci_plat_remove+0x6c/0xa8
    [    9.261377] [<ffffff80086e928c>] platform_drv_remove+0x2c/0x70
    [    9.261384] [<ffffff80086e6ea0>] __device_release_driver+0x80/0x108
    [    9.261387] [<ffffff80086e7a1c>] device_release_driver+0x2c/0x40
    [    9.261392] [<ffffff80086e5f28>] bus_remove_device+0xe0/0x120
    [    9.261396] [<ffffff80086e2e34>] device_del+0x114/0x210
    [    9.261399] [<ffffff80086e9e00>] platform_device_del+0x30/0xa0
    [    9.261403] [<ffffff8008810bdc>] dwc3_otg_work+0x204/0x488
    [    9.261407] [<ffffff80088133fc>] event_work+0x304/0x5b8
    [    9.261414] [<ffffff80080e31b0>] process_one_work+0x148/0x490
    [    9.261417] [<ffffff80080e3548>] worker_thread+0x50/0x4a0
    [    9.261421] [<ffffff80080e9ea0>] kthread+0xe8/0x100
    [    9.261427] [<ffffff8008083680>] ret_from_fork+0x10/0x50
    
    The problem can occur if xhci_plat_remove() is called shortly after
    xhci_plat_probe(). While xhci_free_virt_devices_depth_first been
    called before the device has been setup and get real_port initialized.
    The problem occurred on Hikey960 and was reproduced by Guenter Roeck
    on Kevin with chromeos-4.4.
    
    Fixes: ee8665e28e8d ("xhci: free xhci virtual devices with leaf nodes first")
    Cc: Guenter Roeck <groeck@google.com>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Fan Ning <fanning4@hisilicon.com>
    Signed-off-by: Li Rui <lirui39@hisilicon.com>
    Signed-off-by: yangdi <yangdi10@hisilicon.com>
    Signed-off-by: Yu Chen <chenyu56@huawei.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33288619482a876f2575ed308ac2c1c3199a6a1a
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Dec 1 13:41:19 2017 +0200

    xhci: Don't show incorrect WARN message about events for empty rings
    
    commit e4ec40ec4b260efcca15089de4285a0a3411259b upstream.
    
    xHC can generate two events for a short transfer if the short TRB and
    last TRB in the TD are not the same TRB.
    
    The driver will handle the TD after the first short event, and remove
    it from its internal list. Driver then incorrectly prints a warning
    for the second event:
    
    "WARN Event TRB for slot x ep y with no TDs queued"
    
    Fix this by not printing a warning if we get a event on a empty list
    if the previous event was a short event.
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8bc546bbfec9be32108af2684a2766629acc052d
Author: Johan Hovold <johan@kernel.org>
Date:   Sat Nov 11 16:31:18 2017 +0100

    USB: ulpi: fix bus-node lookup
    
    commit 33c309ebc797b908029fd3a0851aefe697e9b598 upstream.
    
    Fix bus-node lookup during registration, which ended up searching the whole
    device tree depth-first starting at the parent (or grand parent) rather
    than just matching on its children.
    
    To make things worse, the parent (or grand-parent) node could end being
    prematurely freed as well.
    
    Fixes: ef6a7bcfb01c ("usb: ulpi: Support device discovery via DT")
    Reported-by: Peter Robinson <pbrobinson@gmail.com>
    Reported-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 755532dd5f643f1a1da479bb133a946ce5c97905
Author: Mike Looijmans <mike.looijmans@topic.nl>
Date:   Thu Nov 9 13:16:46 2017 +0100

    usb: hub: Cycle HUB power when initialization fails
    
    commit 973593a960ddac0f14f0d8877d2d0abe0afda795 upstream.
    
    Sometimes the USB device gets confused about the state of the initialization and
    the connection fails. In particular, the device thinks that it's already set up
    and running while the host thinks the device still needs to be configured. To
    work around this issue, power-cycle the hub's output to issue a sort of "reset"
    to the device. This makes the device restart its state machine and then the
    initialization succeeds.
    
    This fixes problems where the kernel reports a list of errors like this:
    
    usb 1-1.3: device not accepting address 19, error -71
    
    The end result is a non-functioning device. After this patch, the sequence
    becomes like this:
    
    usb 1-1.3: new high-speed USB device number 18 using ci_hdrc
    usb 1-1.3: device not accepting address 18, error -71
    usb 1-1.3: new high-speed USB device number 19 using ci_hdrc
    usb 1-1.3: device not accepting address 19, error -71
    usb 1-1-port3: attempt power cycle
    usb 1-1.3: new high-speed USB device number 21 using ci_hdrc
    usb-storage 1-1.3:1.2: USB Mass Storage device detected
    
    Signed-off-by: Mike Looijmans <mike.looijmans@topic.nl>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a633c7ed4a4c6097475de05d950e35cf92b8dec7
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu Nov 9 09:16:09 2017 +0000

    staging: ccree: fix leak of import() after init()
    
    commit c5f39d07860c35e5e4c63188139465af790f86ce upstream.
    
    crypto_ahash_import() may be called either after
    crypto_ahash_init() or without such call. Right now
    we always internally call init() as part of
    import(), thus leaking memory and mappings if the
    user has already called init() herself.
    
    Fix this by only calling init() internally if the
    state is not already initialized.
    
    Fixes: commit 454527d0d94f ("staging: ccree: fix hash import/export")
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 779bfa90bdf97a6d00459471f6d371f6036f3da5
Author: Dominik Behr <dbehr@chromium.org>
Date:   Thu Sep 7 16:02:46 2017 -0300

    dma-buf/sw_sync: force signal all unsignaled fences on dying timeline
    
    commit ea4d5a270b57fa8d4871f372ca9b97b7697fdfda upstream.
    
    To avoid hanging userspace components that might have been waiting on the
    active fences of the destroyed timeline we need to signal with error all
    remaining fences on such timeline.
    
    This restore the default behaviour of the Android sw_sync framework, which
    Android still relies on. It was broken on the dma fence conversion a few
    years ago and never fixed.
    
    v2: Do not bother with cleanup do the list (Chris Wilson)
    
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Dominik Behr <dbehr@chromium.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170907190246.16425-2-gustavo@padovan.org
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ffabfc1d58ba586fa11cc3cde21d54afec03387
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Mon Oct 23 22:07:38 2017 +0530

    powerpc/kprobes: Disable preemption before invoking probe handler for optprobes
    
    commit 8a2d71a3f2737e2448aa68de2b6052cb570d3d2a upstream.
    
    Per Documentation/kprobes.txt, probe handlers need to be invoked with
    preemption disabled. Update optimized_callback() to do so. Also move
    get_kprobe_ctlblk() invocation post preemption disable, since it
    accesses pre-cpu data.
    
    This was not an issue so far since optprobes wasn't selected if
    CONFIG_PREEMPT was enabled. Commit a30b85df7d599f ("kprobes: Use
    synchronize_rcu_tasks() for optprobe with CONFIG_PREEMPT=y") changes
    this.
    
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8d07852819a0c2da239fca155342b4f80f4aedf
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Fri Sep 22 14:40:47 2017 +0530

    powerpc/jprobes: Disable preemption when triggered through ftrace
    
    commit 6baea433bc84cd148af1c524389a8d756f67412e upstream.
    
    KPROBES_SANITY_TEST throws the below splat when CONFIG_PREEMPT is
    enabled:
    
      Kprobe smoke test: started
      DEBUG_LOCKS_WARN_ON(val > preempt_count())
      ------------[ cut here ]------------
      WARNING: CPU: 19 PID: 1 at kernel/sched/core.c:3094 preempt_count_sub+0xcc/0x140
      Modules linked in:
      CPU: 19 PID: 1 Comm: swapper/0 Not tainted 4.13.0-rc7-nnr+ #97
      task: c0000000fea80000 task.stack: c0000000feb00000
      NIP:  c00000000011d3dc LR: c00000000011d3d8 CTR: c000000000a090d0
      REGS: c0000000feb03400 TRAP: 0700   Not tainted  (4.13.0-rc7-nnr+)
      MSR:  8000000000021033 <SF,ME,IR,DR,RI,LE>  CR: 28000282  XER: 00000000
      CFAR: c00000000015aa18 SOFTE: 0
      <snip>
      NIP preempt_count_sub+0xcc/0x140
      LR  preempt_count_sub+0xc8/0x140
      Call Trace:
        preempt_count_sub+0xc8/0x140 (unreliable)
        kprobe_handler+0x228/0x4b0
        program_check_exception+0x58/0x3b0
        program_check_common+0x16c/0x170
        --- interrupt: 0 at kprobe_target+0x8/0x20
                         LR = init_test_probes+0x248/0x7d0
        kp+0x0/0x80 (unreliable)
        livepatch_handler+0x38/0x74
        init_kprobes+0x1d8/0x208
        do_one_initcall+0x68/0x1d0
        kernel_init_freeable+0x298/0x374
        kernel_init+0x24/0x160
        ret_from_kernel_thread+0x5c/0x70
      Instruction dump:
      419effdc 3d22001b 39299240 81290000 2f890000 409effc8 3c82ffcb 3c62ffcb
      3884bc68 3863bc18 4803d5fd 60000000 <0fe00000> 4bffffa8 60000000 60000000
      ---[ end trace 432dd46b4ce3d29f ]---
      Kprobe smoke test: passed successfully
    
    The issue is that we aren't disabling preemption in
    kprobe_ftrace_handler(). Disable it.
    
    Fixes: ead514d5fb30a0 ("powerpc/kprobes: Add support for KPROBES_ON_FTRACE")
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    [mpe: Trim oops a little for formatting]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 340d45d70850ea395a7e397a94ab59972581022c
Author: Kees Cook <keescook@chromium.org>
Date:   Sat Sep 2 13:09:46 2017 -0700

    locking/refcounts, x86/asm: Enable CONFIG_ARCH_HAS_REFCOUNT
    
    
    [ Upstream commit 39208aa7ecb7d9c4e86df782b5693270313cbab1 ]
    
    With the section inlining bug fixed for the x86 refcount protection,
    we can turn the config back on.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Elena <elena.reshetova@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch <linux-arch@vger.kernel.org>
    Link: http://lkml.kernel.org/r/1504382986-49301-3-git-send-email-keescook@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53ce4d4aad93e2b48999ab9a225a84bfa54760fe
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Thu Jul 6 23:53:11 2017 -0500

    iio: multiplexer: add NULL check on devm_kzalloc() and devm_kmemdup() return values
    
    
    [ Upstream commit dd92d5ea20ef8a42be7aeda08c669c586c730451 ]
    
    Check return values from call to devm_kzalloc() and devm_kmemup()
    in order to prevent a NULL pointer dereference.
    
    This issue was detected using Coccinelle and the following semantic patch:
    
    @@
    expression x;
    identifier fld;
    @@
    
    * x = devm_kzalloc(...);
       ... when != x == NULL
       x->fld
    
    Fixes: 7ba9df54b091 ("iio: multiplexer: new iio category and iio-mux driver")
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Acked-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68744edd6edcfa663ab917f62827919a0ca95b05
Author: Ladislav Michl <ladis@linux-mips.org>
Date:   Fri Aug 25 07:39:16 2017 +0200

    iio: adc: ti-ads1015: add 10% to conversion wait time
    
    
    [ Upstream commit fe895ac88b9fbdf2026f0bfd56c82747bb9d7c48 ]
    
    As user's guide "ADS1015EVM, ADS1115EVM, ADS1015EVM-PDK, ADS1115EVM-PDK
    User Guide (Rev. B)" (http://www.ti.com/lit/ug/sbau157b/sbau157b.pdf)
    states at page 16:
    "Note that both the ADS1115 and ADS1015 have internal clocks with a ±10%
    accuracy. If performing FFT tests, frequencies may appear to be incorrect
    as a result of this tolerance range.", add those 10% to converion wait
    time.
    
    Cc: Daniel Baluta <daniel.baluta@gmail.com>
    Cc: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Ladislav Michl <ladis@linux-mips.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 342ee877580058554fe68480756c7d326b625bed
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Sat Sep 9 00:56:03 2017 +0300

    mm, x86/mm: Fix performance regression in get_user_pages_fast()
    
    
    [ Upstream commit 5b65c4677a57a1d4414212f9995aa0e46a21ff80 ]
    
    The 0-day test bot found a performance regression that was tracked down to
    switching x86 to the generic get_user_pages_fast() implementation:
    
      http://lkml.kernel.org/r/20170710024020.GA26389@yexl-desktop
    
    The regression was caused by the fact that we now use local_irq_save() +
    local_irq_restore() in get_user_pages_fast() to disable interrupts.
    In x86 implementation local_irq_disable() + local_irq_enable() was used.
    
    The fix is to make get_user_pages_fast() use local_irq_disable(),
    leaving local_irq_save() for __get_user_pages_fast() that can be called
    with interrupts disabled.
    
    Numbers for pinning a gigabyte of memory, one page a time, 20 repeats:
    
      Before:  Average: 14.91 ms, stddev: 0.45 ms
      After:   Average: 10.76 ms, stddev: 0.18 ms
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: linux-mm@kvack.org
    Fixes: e585513b76f7 ("x86/mm/gup: Switch GUP to the generic get_user_page_fast() implementation")
    Link: http://lkml.kernel.org/r/20170908215603.9189-3-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d29ae49cd31597586835fd22957adba5368cdb1
Author: Martin Kepplinger <martink@posteo.de>
Date:   Wed Sep 13 21:14:19 2017 +0200

    perf tools: Fix leaking rec_argv in error cases
    
    
    [ Upstream commit c896f85a7c15ab9d040ffac8b8003e47996602a2 ]
    
    Let's free the allocated rec_argv in case we return early, in order to
    avoid leaking memory.
    
    This adds free() at a few very similar places across the tree where it
    was missing.
    
    Signed-off-by: Martin Kepplinger <martink@posteo.de>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Martin kepplinger <martink@posteo.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20170913191419.29806-1-martink@posteo.de
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf33c88d64557ab627eca91c79c8a7891a9ba9d4
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Sep 21 12:12:17 2017 -0300

    tools include: Do not use poison with C++
    
    
    [ Upstream commit 6ae8eefc6c8fe050f057781b70a83262eb0a61ee ]
    
    LIST_POISON[12] are used to initialize list_head and hlist_node
    pointers, and do void pointer arithmetic, which C++ doesn't like, so, to
    avoid drifting from the kernel by introducing some HLIST_POISON to do
    away with void pointer math, just make those poisoned pointers be NULL
    when building it with a C++ compiler.
    
    Noticed with:
    
      $ make LLVM_CONFIG=/usr/bin/llvm-config-3.9 LIBCLANGLLVM=1
        CXX      util/c++/clang.o
        CXX    util/c++/clang-test.o
      In file included from /home/lizj/linux/tools/include/linux/list.h:5:0,
                       from /home/lizj/linux/tools/perf/util/namespaces.h:13,
                       from /home/lizj/linux/tools/perf/util/util.h:15,
                       from /home/lizj/linux/tools/perf/util/util-cxx.h:20,
                       from util/c++/clang-c.h:5,
                       from util/c++/clang-test.cpp:2:
      /home/lizj/linux/tools/include/linux/list.h: In function ‘void list_del(list_head*)’:
      /home/lizj/linux/tools/include/linux/poison.h:14:31: error: pointer of type ‘void *’ used in arithmetic [-Werror=pointer-arith]
       # define POISON_POINTER_DELTA 0
                                     ^
      /home/lizj/linux/tools/include/linux/poison.h:22:41: note: in expansion of macro ‘POISON_POINTER_DELTA’
       #define LIST_POISON1  ((void *) 0x100 + POISON_POINTER_DELTA)
                                               ^
      /home/lizj/linux/tools/include/linux/list.h:107:16: note: in expansion of macro ‘LIST_POISON1’
        entry->next = LIST_POISON1;
                      ^
      In file included from /home/lizj/linux/tools/perf/util/namespaces.h:13:0,
                       from /home/lizj/linux/tools/perf/util/util.h:15,
                       from /home/lizj/linux/tools/perf/util/util-cxx.h:20,
                       from util/c++/clang-c.h:5,
                       from util/c++/clang-test.cpp:2:
      /home/lizj/linux/tools/include/linux/list.h:107:14: error: invalid conversion from ‘void*’ to ‘list_head*’ [-fpermissive]
    
    Reported-by: Li Zhijian <lizhijian@cn.fujitsu.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Philip Li <philip.li@intel.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lkml.kernel.org/n/tip-m5ei2o0mjshucbr28baf5lqz@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9f359f24ce70a291997b3644aeead56d0c44cd6
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Sep 11 11:24:23 2017 +0200

    s390/ptrace: fix guarded storage regset handling
    
    
    [ Upstream commit 5ef2d5231d547c672c67bdf84c13a4adaf477964 ]
    
    If the guarded storage regset for current is supposed to be changed,
    the regset from user space is copied directly into the guarded storage
    control block.
    
    If then the process gets scheduled away while the control block is
    being copied and before the new control block has been loaded, the
    result is random: the process can be scheduled away due to a page
    fault or preemption. If that happens the already copied parts will be
    overwritten by save_gs_cb(), called from switch_to().
    
    Avoid this by copying the data to a temporary buffer on the stack and
    do the actual update with preemption disabled.
    
    Fixes: f5bbd7219891 ("s390/ptrace: guarded storage regset for the current task")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bef9bcf53789a454f54adf01c654650189628ab0
Author: Kees Cook <keescook@chromium.org>
Date:   Sat Sep 2 13:09:45 2017 -0700

    locking/refcounts, x86/asm: Use unique .text section for refcount exceptions
    
    
    [ Upstream commit 564c9cc84e2adf8a6671c1937f0a9fe3da2a4b0e ]
    
    Using .text.unlikely for refcount exceptions isn't safe because gcc may
    move entire functions into .text.unlikely (e.g. in6_dev_dev()), which
    would cause any uses of a protected refcount_t function to stay inline
    with the function, triggering the protection unconditionally:
    
            .section        .text.unlikely,"ax",@progbits
            .type   in6_dev_get, @function
    in6_dev_getx:
    .LFB4673:
            .loc 2 4128 0
            .cfi_startproc
    ...
            lock; incl 480(%rbx)
            js 111f
            .pushsection .text.unlikely
    111:    lea 480(%rbx), %rcx
    112:    .byte 0x0f, 0xff
    .popsection
    113:
    
    This creates a unique .text..refcount section and adds an additional
    test to the exception handler to WARN in the case of having none of OF,
    SF, nor ZF set so we can see things like this more easily in the future.
    
    The double dot for the section name keeps it out of the TEXT_MAIN macro
    namespace, to avoid collisions and so it can be put at the end with
    text.unlikely to keep the cold code together.
    
    See commit:
    
      cb87481ee89db ("kbuild: linker script do not match C names unless LD_DEAD_CODE_DATA_ELIMINATION is configured")
    
    ... which matches C names: [a-zA-Z0-9_] but not ".".
    
    Reported-by: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Elena <elena.reshetova@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch <linux-arch@vger.kernel.org>
    Fixes: 7a46ec0e2f48 ("locking/refcounts, x86/asm: Implement fast refcount overflow protection")
    Link: http://lkml.kernel.org/r/1504382986-49301-2-git-send-email-keescook@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d0d3ac1ec32444ad985cb92272c94d07e43e9f7
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Sep 19 19:01:40 2017 +0900

    kprobes/x86: Disable preemption in ftrace-based jprobes
    
    
    [ Upstream commit 5bb4fc2d8641219732eb2bb654206775a4219aca ]
    
    Disable preemption in ftrace-based jprobe handlers as
    described in Documentation/kprobes.txt:
    
      "Probe handlers are run with preemption disabled."
    
    This will fix jprobes behavior when CONFIG_PREEMPT=y.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Alexei Starovoitov <ast@fb.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E . McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/150581530024.32348.9863783558598926771.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c530d86ded9becc305aaf984cab5d547b6fd6480
Author: Thomas Richter <tmricht@linux.vnet.ibm.com>
Date:   Wed Sep 13 10:12:08 2017 +0200

    perf test attr: Fix python error on empty result
    
    
    [ Upstream commit 3440fe2790aa3d13530260af6033533b18959aee ]
    
    Commit d78ada4a767 ("perf tests attr: Do not store failed events") does
    not create an event file in the /tmp directory when the
    perf_open_event() system call failed.
    
    This can lead to a situation where not /tmp/event-xx-yy-zz result file
    exists at all (for example on a s390x virtual machine environment) where
    no CPUMF hardware is available.
    
    The following command then fails with a python call back chain instead
    of printing failure:
    
      [root@s8360046 perf]# /usr/bin/python2 ./tests/attr.py -d ./tests/attr/ \
          -p ./perf -v -ttest-stat-basic
      running './tests/attr//test-stat-basic'
      Traceback (most recent call last):
        File "./tests/attr.py", line 379, in <module>
          main()
        File "./tests/attr.py", line 370, in main
          run_tests(options)
        File "./tests/attr.py", line 311, in run_tests
          Test(f, options).run()
        File "./tests/attr.py", line 300, in run
          self.compare(self.expect, self.result)
        File "./tests/attr.py", line 248, in compare
          exp_event.diff(res_event)
      UnboundLocalError: local variable 'res_event' referenced before assignment
      [root@s8360046 perf]#
    
    This patch catches this pitfall and prints an error message instead:
    
      [root@s8360047 perf]# /usr/bin/python2 ./tests/attr.py -d ./tests/attr/ \
           -p ./perf  -vvv -ttest-stat-basic
      running './tests/attr//test-stat-basic'
        loading expected events
          Event event:base-stat
            fd = 1
            group_fd = -1
            flags = 0|8
            [....]
            sample_regs_user = 0
            sample_stack_user = 0
        'PERF_TEST_ATTR=/tmp/tmpJbMQMP ./perf stat -o /tmp/tmpJbMQMP/perf.data -e cycles kill >/dev/null 2>&1' ret '1', expected '1'
        loading result events
        compare
          matching [event:base-stat]
          match: [event:base-stat] matches []
          res_event is empty
      FAILED './tests/attr//test-stat-basic' - match failure
      [root@s8360047 perf]#
    
    Signed-off-by: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    LPU-Reference: 20170913081209.39570-1-tmricht@linux.vnet.ibm.com
    Link: http://lkml.kernel.org/n/tip-04d63nn7svfgxdhi60gq2mlm@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bb9d1772d4a07c1c71e4b82035a67c11f21ad20
Author: Thomas Richter <tmricht@linux.vnet.ibm.com>
Date:   Wed Sep 13 10:12:09 2017 +0200

    perf test attr: Fix ignored test case result
    
    
    [ Upstream commit 22905582f6dd4bbd0c370fe5732c607452010c04 ]
    
    Command perf test -v 16 (Setup struct perf_event_attr test) always
    reports success even if the test case fails.  It works correctly if you
    also specify -F (for don't fork).
    
       root@s35lp76 perf]# ./perf test -v 16
       15: Setup struct perf_event_attr               :
       --- start ---
       running './tests/attr/test-record-no-delay'
       [ perf record: Woken up 1 times to write data ]
       [ perf record: Captured and wrote 0.002 MB /tmp/tmp4E1h7R/perf.data
         (1 samples) ]
       expected task=0, got 1
       expected precise_ip=0, got 3
       expected wakeup_events=1, got 0
       FAILED './tests/attr/test-record-no-delay' - match failure
       test child finished with 0
       ---- end ----
       Setup struct perf_event_attr: Ok
    
    The reason for the wrong error reporting is the return value of the
    system() library call. It is called in run_dir() file tests/attr.c and
    returns the exit status, in above case 0xff00.
    
    This value is given as parameter to the exit() function which can only
    handle values 0-0xff.
    
    The child process terminates with exit value of 0 and the parent does
    not detect any error.
    
    This patch corrects the error reporting and prints the correct test
    result.
    
    Signed-off-by: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    LPU-Reference: 20170913081209.39570-2-tmricht@linux.vnet.ibm.com
    Link: http://lkml.kernel.org/n/tip-rdube6rfcjsr1nzue72c7lqn@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9093d8bc530402a7d7651be40dd53b0b97a813af
Author: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date:   Thu Sep 28 09:10:33 2017 -0500

    staging: fsl-mc/dpio: Fix incorrect comparison
    
    
    [ Upstream commit 8dabf52ffb6445fa5bcc8b6d2ecb615f60d0dd12 ]
    
    For some dpio functions, a cpu id parameter value of -1 is
    valid and means "any". But when trying to validate this param
    value against an upper limit, in this case num_possible_cpus(),
    we risk obtaining the wrong result due to an implicit cast.
    
    Avoid an incorrect check result by explicitly comparing the
    cpu id with the "any" value before verifying the upper bound.
    
    Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c25bec2de9268122407a3f431dd7d031c06f293d
Author: Ian Jamison <ian.dev@arkver.com>
Date:   Thu Sep 21 10:13:12 2017 +0200

    serial: imx: Update cached mctrl value when changing RTS
    
    
    [ Upstream commit a0983c742a5885f82afb282166f83f1d3d8addf4 ]
    
    UART core function uart_update_mctrl relies on a cached value of
    modem control lines. This was used but not updated by local RTS
    control functions within imx.c. These are used for RS485 line
    driver enable signalling. Having an out-of-date value in the cached
    mctrl can result in the transmitter being enabled when it shouldn't
    be.
    
    Fix this by updating the mctrl value before applying it.
    
    Signed-off-by: Ian Jamison <ian.dev@arkver.com>
    Origin: id:8195c96e674517b82a6ff7fe914c7ba0f86e702b.1505375165.git.ian.dev@arkver.com
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Tested-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Tested-by: Clemens Gruber <clemens.gruber@pqgruber.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87837b102c0630fd559a412f6fa48c8e9710755c
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sun Oct 1 02:18:37 2017 +0100

    usbip: tools: Install all headers needed for libusbip development
    
    
    [ Upstream commit c15562c0dcb2c7f26e891923b784cf1926b8c833 ]
    
    usbip_host_driver.h now depends on several additional headers, which
    need to be installed along with it.
    
    Fixes: 021aed845303 ("staging: usbip: userspace: migrate usbip_host_driver ...")
    Fixes: 3391ba0e2792 ("usbip: tools: Extract generic code to be shared with ...")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Acked-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25aafb3061f64099e379dfb24e394b07f3f93b38
Author: Andy Lowe <andy_lowe@mentor.com>
Date:   Fri Sep 22 20:29:30 2017 +0200

    serial: sh-sci: suppress warning for ports without dma channels
    
    
    [ Upstream commit 7464779fa8551b90d5797d4020b0bdb7e6422eb9 ]
    
    If a port has no dma channel defined in the device tree, then
    don't attempt to allocate a dma channel for the port.
    Also suppress the warning message concerning the failure to allocate
    a dma channel.  Continue to emit the warning message if a dma
    channel is defined but cannot be allocated.
    
    Signed-off-by: Andy Lowe <andy_lowe@mentor.com>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dddd2bd98cb2a547c9fd08d68273c69d5bca3e1f
Author: Jibin Xu <jibin.xu@windriver.com>
Date:   Sun Sep 10 20:11:42 2017 -0700

    sysrq : fix Show Regs call trace on ARM
    
    
    [ Upstream commit b00bebbc301c8e1f74f230dc82282e56b7e7a6db ]
    
    When kernel configuration SMP,PREEMPT and DEBUG_PREEMPT are enabled,
    echo 1 >/proc/sys/kernel/sysrq
    echo p >/proc/sysrq-trigger
    kernel will print call trace as below:
    
    sysrq: SysRq : Show Regs
    BUG: using __this_cpu_read() in preemptible [00000000] code: sh/435
    caller is __this_cpu_preempt_check+0x18/0x20
    Call trace:
    [<ffffff8008088e80>] dump_backtrace+0x0/0x1d0
    [<ffffff8008089074>] show_stack+0x24/0x30
    [<ffffff8008447970>] dump_stack+0x90/0xb0
    [<ffffff8008463950>] check_preemption_disabled+0x100/0x108
    [<ffffff8008463998>] __this_cpu_preempt_check+0x18/0x20
    [<ffffff80084c9194>] sysrq_handle_showregs+0x1c/0x40
    [<ffffff80084c9c7c>] __handle_sysrq+0x12c/0x1a0
    [<ffffff80084ca140>] write_sysrq_trigger+0x60/0x70
    [<ffffff8008251e00>] proc_reg_write+0x90/0xd0
    [<ffffff80081f1788>] __vfs_write+0x48/0x90
    [<ffffff80081f241c>] vfs_write+0xa4/0x190
    [<ffffff80081f3354>] SyS_write+0x54/0xb0
    [<ffffff80080833f0>] el0_svc_naked+0x24/0x28
    
    This can be seen on a common board like an r-pi3.
    This happens because when echo p >/proc/sysrq-trigger,
    get_irq_regs() is called outside of IRQ context,
    if preemption is enabled in this situation,kernel will
    print the call trace. Since many prior discussions on
    the mailing lists have made it clear that get_irq_regs
    either just returns NULL or stale data when used outside
    of IRQ context,we simply avoid calling it outside of
    IRQ context.
    
    Signed-off-by: Jibin Xu <jibin.xu@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e99614575b9f1e66249729878a415b9b6659ee7
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Thu Oct 5 11:21:43 2017 +0300

    usb: xhci: Return error when host is dead in xhci_disable_slot()
    
    
    [ Upstream commit dcabc76fa9361186e6b88c30a68db8fa9d5b4a1c ]
    
    xhci_disable_slot() is a helper for disabling a slot when a device
    goes away or recovers from error situations. Currently, it returns
    success when it sees a dead host. This is not the right way to go.
    It should return error and let the invoker know that disable slot
    command was failed due to a dead host.
    
    Fixes: f9e609b82479 ("usb: xhci: Add helper function xhci_disable_slot().")
    Cc: Guoqing Zhang <guoqing.zhang@intel.com>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8876436aa90d03372a2e6480b9a26d19d225603c
Author: Leo Yan <leo.yan@linaro.org>
Date:   Tue Oct 10 13:47:55 2017 +0800

    ARM: cpuidle: Correct driver unregistration if init fails
    
    
    [ Upstream commit 0f87855d969a87f02048ff5ced7503465d5ab2f1 ]
    
    If cpuidle init fails, the code misses to unregister the driver for
    current CPU. Furthermore, we also need to rollback to cancel all
    previous CPUs registration; but the code retrieves driver handler by
    using function cpuidle_get_driver(), this function returns back
    current CPU driver handler but not previous CPU's handler, which leads
    to the failure handling code cannot unregister previous CPUs driver.
    
    This commit fixes two mentioned issues, it adds error handling path
    'goto out_unregister_drv' for current CPU driver unregistration; and
    it is to replace cpuidle_get_driver() with cpuidle_get_cpu_driver(),
    the later function can retrieve driver handler for previous CPUs
    according to the CPU device handler so can unregister the driver
    properly.
    
    This patch also adds extra error handling paths 'goto out_kfree_dev'
    and 'goto out_kfree_drv' and adjusts the freeing sentences for previous
    CPUs; so make the code more readable for freeing 'dev' and 'drv'
    structures.
    
    Suggested-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Fixes: d50a7d8acd78 (ARM: cpuidle: Support asymmetric idle definition)
    Acked-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2001a980d1ab676f07a455c728fa72ae86d40058
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sat Sep 23 19:36:04 2017 -0500

    staging: rtl8822be: Keep array subscript no lower than zero
    
    
    [ Upstream commit 43d15c2013130a9fa230c2f5203aca818ae0bb86 ]
    
    The kbuild test robot reports the following:
       drivers/staging//rtlwifi/phydm/phydm_dig.c: In function 'odm_pause_dig':
       drivers/staging//rtlwifi/phydm/phydm_dig.c:494:45: warning: array subscript is below array bounds [-Warray-bounds]
          odm_write_dig(dm, dig_tab->pause_dig_value[max_level]);
    
    This condition is caused when a loop falls through. The fix is to pin
    max_level to be >= 0.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    c: kbuild test robot <fengguang.wu@intel.com>
    Fixes: 9ce99b04b5b82fdf11e4c76b60a5f82c1e541297 staging: r8822be: Add phydm mini driver
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11d9a37aaf271de4dc9b8016182330ba8f06bf38
Author: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date:   Wed Oct 11 08:29:44 2017 -0500

    staging: fsl-dpaa2/eth: Account for Rx FD buffers on error path
    
    
    [ Upstream commit cbb3ea40fc495bf04070200b35c1c4cd05d11bd3 ]
    
    On Rx path, if we fail to build an skb from the incoming FD,
    we still need to update the channel buffer count accordingly,
    otherwise we risk depleting the pool while the software counter
    still sees available buffers.
    
    Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8891ee7e676c0adc59b5e6c298de0b109a1934d5
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Fri Oct 13 17:10:37 2017 +0800

    usb: mtu3: fix error return code in ssusb_gadget_init()
    
    
    [ Upstream commit c162ff0aaaac456ef29aebd1e9d4d3e305cd3279 ]
    
    When failing to get IRQ number, platform_get_irq() may return
    -EPROBE_DEFER, but we ignore it and always return -ENODEV,
    so fix it.
    
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a95d0d2ee717908be9b67d1f1b2fb44e1c1210a1
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Mon Oct 16 12:40:29 2017 -0500

    EDAC, sb_edac: Fix missing break in switch
    
    
    [ Upstream commit a8e9b186f153a44690ad0363a56716e7077ad28c ]
    
    Add missing break statement in order to prevent the code from falling
    through.
    
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Cc: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20171016174029.GA19757@embeddedor.com
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a105cd032d9d42a61aad547b4af283ead1c0d37b
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Sep 18 15:46:41 2017 +0200

    dt-bindings: timer: renesas, cmt: Fix SoC-specific compatible values
    
    
    [ Upstream commit e20824e944c3bf4352fcd8d9f446c41b53901e7b ]
    
    While the new family-specific compatible values introduced by commit
    6f54cc1adcc8957f ("devicetree: bindings: R-Car Gen2 CMT0 and CMT1
    bindings") use the recommended order "<vendor>,<family>-<device>", the
    new SoC-specific compatible values still use the old and deprecated
    order "<vendor>,<device>-<soc>".
    
    Switch the SoC-specific compatible values to the recommended order while
    there are no upstream users of these compatible values yet.
    
    Fixes: 7f03a0ecfdc786c1 ("devicetree: bindings: r8a73a4 and R-Car Gen2 CMT bindings")
    Fixes: 63d9e8ca0dd4bfa4 ("devicetree: bindings: Deprecate property, update example")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebbd9c27dcf71d2947e30d743cfc2c15e7d8f723
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Mon Oct 16 16:28:38 2017 +0100

    clocksource/drivers/arm_arch_timer: Validate CNTFRQ after enabling frame
    
    
    [ Upstream commit 21492e1333a0d07af6968667f128e19088cf5ead ]
    
    The ACPI GTDT code validates the CNTFRQ field of each MMIO timer
    frame against the CNTFRQ system register of the current CPU, to
    ensure that they are equal, which is mandated by the architecture.
    
    However, reading the CNTFRQ field of a frame is not possible until
    the RFRQ bit in the frame's CNTACRn register is set, and doing so
    before that willl produce the following error:
    
      arch_timer: [Firmware Bug]: CNTFRQ mismatch: frame @ 0x00000000e0be0000: (0x00000000), CPU: (0x0ee6b280)
      arch_timer: Disabling MMIO timers due to CNTFRQ mismatch
      arch_timer: Failed to initialize memory-mapped timer.
    
    The reason is that the CNTFRQ field is RES0 if access is not enabled.
    
    So move the validation of CNTFRQ into the loop that iterates over the
    timers to find the best frame, but defer it until after we have selected
    the best frame, which should also have enabled the RFRQ bit.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec2d8c832343de707fd777f29d5916b4eb6fea28
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Wed Oct 18 10:21:07 2017 -0700

    x86/entry: Use SYSCALL_DEFINE() macros for sys_modify_ldt()
    
    
    [ Upstream commit da20ab35180780e4a6eadc804544f1fa967f3567 ]
    
    We do not have tracepoints for sys_modify_ldt() because we define
    it directly instead of using the normal SYSCALL_DEFINEx() macros.
    
    However, there is a reason sys_modify_ldt() does not use the macros:
    it has an 'int' return type instead of 'unsigned long'.  This is
    a bug, but it's a bug cemented in the ABI.
    
    What does this mean?  If we return -EINVAL from a function that
    returns 'int', we have 0x00000000ffffffea in %rax.  But, if we
    return -EINVAL from a function returning 'unsigned long', we end
    up with 0xffffffffffffffea in %rax, which is wrong.
    
    To work around this and maintain the 'int' behavior while using
    the SYSCALL_DEFINEx() macros, so we add a cast to 'unsigned int'
    in both implementations of sys_modify_ldt().
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Brian Gerst <brgerst@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171018172107.1A79C532@viggo.jf.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5715de464ac8ef97fdc0daacd41ac35dcd412e2f
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Oct 20 08:43:39 2017 +0900

    kprobes: Use synchronize_rcu_tasks() for optprobe with CONFIG_PREEMPT=y
    
    
    [ Upstream commit a30b85df7d599f626973e9cd3056fe755bd778e0 ]
    
    We want to wait for all potentially preempted kprobes trampoline
    execution to have completed. This guarantees that any freed
    trampoline memory is not in use by any task in the system anymore.
    synchronize_rcu_tasks() gives such a guarantee, so use it.
    
    Also, this guarantees to wait for all potentially preempted tasks
    on the instructions which will be replaced with a jump.
    
    Since this becomes a problem only when CONFIG_PREEMPT=y, enable
    CONFIG_TASKS_RCU=y for synchronize_rcu_tasks() in that case.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Naveen N . Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Paul E . McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/150845661962.5443.17724352636247312231.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c36100e295ffc4d957b0884a82bd32ac5a135c51
Author: Aaron Sierra <asierra@xes-inc.com>
Date:   Wed Oct 4 10:01:28 2017 -0500

    serial: 8250: Preserve DLD[7:4] for PORT_XR17V35X
    
    
    [ Upstream commit 0ab84da2e076948c49d36197ee7d254125c53eab ]
    
    The upper four bits of the XR17V35x fractional divisor register (DLD)
    control general chip function (RS-485 direction pin polarity, multidrop
    mode, XON/XOFF parity check, and fast IR mode). Don't allow these bits
    to be clobbered when setting the baudrate.
    
    Signed-off-by: Aaron Sierra <asierra@xes-inc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c5faa44569688d8b984059def5846e9f15b2cff
Author: Reinette Chatre <reinette.chatre@intel.com>
Date:   Fri Oct 20 02:16:59 2017 -0700

    x86/intel_rdt: Fix potential deadlock during resctrl mount
    
    
    [ Upstream commit 87943db7dfb0c5ee5aa74a9ac06346fadd9695c8 ]
    
    Sai reported a warning during some MBA tests:
    
    [  236.755559] ======================================================
    [  236.762443] WARNING: possible circular locking dependency detected
    [  236.769328] 4.14.0-rc4-yocto-standard #8 Not tainted
    [  236.774857] ------------------------------------------------------
    [  236.781738] mount/10091 is trying to acquire lock:
    [  236.787071]  (cpu_hotplug_lock.rw_sem){++++}, at: [<ffffffff8117f892>] static_key_enable+0x12/0x30
    [  236.797058]
                   but task is already holding lock:
    [  236.803552]  (&type->s_umount_key#37/1){+.+.}, at: [<ffffffff81208b2f>] sget_userns+0x32f/0x520
    [  236.813247]
                   which lock already depends on the new lock.
    
    [  236.822353]
                   the existing dependency chain (in reverse order) is:
    [  236.830686]
                   -> #4 (&type->s_umount_key#37/1){+.+.}:
    [  236.837756]        __lock_acquire+0x1100/0x11a0
    [  236.842799]        lock_acquire+0xdf/0x1d0
    [  236.847363]        down_write_nested+0x46/0x80
    [  236.852310]        sget_userns+0x32f/0x520
    [  236.856873]        kernfs_mount_ns+0x7e/0x1f0
    [  236.861728]        rdt_mount+0x30c/0x440
    [  236.866096]        mount_fs+0x38/0x150
    [  236.870262]        vfs_kern_mount+0x67/0x150
    [  236.875015]        do_mount+0x1df/0xd50
    [  236.879286]        SyS_mount+0x95/0xe0
    [  236.883464]        entry_SYSCALL_64_fastpath+0x18/0xad
    [  236.889183]
                   -> #3 (rdtgroup_mutex){+.+.}:
    [  236.895292]        __lock_acquire+0x1100/0x11a0
    [  236.900337]        lock_acquire+0xdf/0x1d0
    [  236.904899]        __mutex_lock+0x80/0x8f0
    [  236.909459]        mutex_lock_nested+0x1b/0x20
    [  236.914407]        intel_rdt_online_cpu+0x3b/0x4a0
    [  236.919745]        cpuhp_invoke_callback+0xce/0xb80
    [  236.925177]        cpuhp_thread_fun+0x1c5/0x230
    [  236.930222]        smpboot_thread_fn+0x11a/0x1e0
    [  236.935362]        kthread+0x152/0x190
    [  236.939536]        ret_from_fork+0x27/0x40
    [  236.944097]
                   -> #2 (cpuhp_state-up){+.+.}:
    [  236.950199]        __lock_acquire+0x1100/0x11a0
    [  236.955241]        lock_acquire+0xdf/0x1d0
    [  236.959800]        cpuhp_issue_call+0x12e/0x1c0
    [  236.964845]        __cpuhp_setup_state_cpuslocked+0x13b/0x2f0
    [  236.971242]        __cpuhp_setup_state+0xa7/0x120
    [  236.976483]        page_writeback_init+0x43/0x67
    [  236.981623]        pagecache_init+0x38/0x3b
    [  236.986281]        start_kernel+0x3c6/0x41a
    [  236.990931]        x86_64_start_reservations+0x2a/0x2c
    [  236.996650]        x86_64_start_kernel+0x72/0x75
    [  237.001793]        verify_cpu+0x0/0xfb
    [  237.005966]
                   -> #1 (cpuhp_state_mutex){+.+.}:
    [  237.012364]        __lock_acquire+0x1100/0x11a0
    [  237.017408]        lock_acquire+0xdf/0x1d0
    [  237.021969]        __mutex_lock+0x80/0x8f0
    [  237.026527]        mutex_lock_nested+0x1b/0x20
    [  237.031475]        __cpuhp_setup_state_cpuslocked+0x54/0x2f0
    [  237.037777]        __cpuhp_setup_state+0xa7/0x120
    [  237.043013]        page_alloc_init+0x28/0x30
    [  237.047769]        start_kernel+0x148/0x41a
    [  237.052425]        x86_64_start_reservations+0x2a/0x2c
    [  237.058145]        x86_64_start_kernel+0x72/0x75
    [  237.063284]        verify_cpu+0x0/0xfb
    [  237.067456]
                   -> #0 (cpu_hotplug_lock.rw_sem){++++}:
    [  237.074436]        check_prev_add+0x401/0x800
    [  237.079286]        __lock_acquire+0x1100/0x11a0
    [  237.084330]        lock_acquire+0xdf/0x1d0
    [  237.088890]        cpus_read_lock+0x42/0x90
    [  237.093548]        static_key_enable+0x12/0x30
    [  237.098496]        rdt_mount+0x406/0x440
    [  237.102862]        mount_fs+0x38/0x150
    [  237.107035]        vfs_kern_mount+0x67/0x150
    [  237.111787]        do_mount+0x1df/0xd50
    [  237.116058]        SyS_mount+0x95/0xe0
    [  237.120233]        entry_SYSCALL_64_fastpath+0x18/0xad
    [  237.125952]
                   other info that might help us debug this:
    
    [  237.134867] Chain exists of:
                     cpu_hotplug_lock.rw_sem --> rdtgroup_mutex --> &type->s_umount_key#37/1
    
    [  237.148425]  Possible unsafe locking scenario:
    
    [  237.155015]        CPU0                    CPU1
    [  237.160057]        ----                    ----
    [  237.165100]   lock(&type->s_umount_key#37/1);
    [  237.169952]                                lock(rdtgroup_mutex);
    [  237.176641]
    lock(&type->s_umount_key#37/1);
    [  237.184287]   lock(cpu_hotplug_lock.rw_sem);
    [  237.189041]
                    *** DEADLOCK ***
    
    When the resctrl filesystem is mounted the locks must be acquired in the
    same order as was done when the cpus came online:
    
         cpu_hotplug_lock before rdtgroup_mutex.
    
    This also requires to switch the static_branch_enable() calls to the
    _cpulocked variant because now cpu hotplug lock is held already.
    
    [ tglx: Switched to cpus_read_[un]lock ]
    
    Reported-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Signed-off-by: Reinette Chatre <reinette.chatre@intel.com>
    Tested-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Acked-by: Vikas Shivappa <vikas.shivappa@linux.intel.com>
    Cc: fenghua.yu@intel.com
    Cc: tony.luck@intel.com
    Link: https://lkml.kernel.org/r/9c41b91bc2f47d9e95b62b213ecdb45623c47a9f.1508490116.git.reinette.chatre@intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24567dc3cc8a9fb6f7ac7e9a5040e839efe3716c
Author: Reinette Chatre <reinette.chatre@intel.com>
Date:   Fri Oct 20 02:16:57 2017 -0700

    x86/intel_rdt: Initialize bitmask of shareable resource if CDP enabled
    
    
    [ Upstream commit 95953034fb24c16ad0047a98b16427e5935830c4 ]
    
    The platform informs via CPUID.(EAX=0x10, ECX=res#):EBX[31:0] (valid res#
    are only 1 for L3 and 2 for L2) which unit of the allocation may be used by
    other entities in the platform. This information is valid whether CDP (Code
    and Data Prioritization) is enabled or not.
    
    Ensure that the bitmask of shareable resource is initialized when CDP is
    enabled.
    
    Fixes: 0dd2d7494cd8 ("x86/intel_rdt: Show bitmask of shareable resource with other executing units"
    Signed-off-by: Reinette Chatre <reinette.chatre@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Fenghua Yu <fenghua.yu@intel.com>
    Acked-by: Vikas Shivappa <vikas.shivappa@linux.intel.com>
    Acked-by: Tony Luck <tony.luck@intel.com>
    Link: https://lkml.kernel.org/r/815747bddc820ca221a8924edaf4d1a7324547e4.1508490116.git.reinette.chatre@intel.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd89f47e21aa3166d557f348deae1affde54f8b8
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Mon Oct 9 14:33:37 2017 +0530

    PCI: dra7xx: Create functional dependency between PCIe and PHY
    
    
    [ Upstream commit 7a4db656a6350f8dd46f711bdef3b0e9c6e3f4cb ]
    
    PCI core access configuration space registers in resume_noirq callbacks.
    In the case of dra7xx, PIPE3 PHY connected to PCIe controller has to be
    enabled before accessing configuration space registers. Since
    PIPE3 PHY is enabled by only configuring control module registers, no
    aborts has been observed so far (though during noirq stage, interface
    clock of PIPE3 PHY is not enabled).
    
    With new TRM updates, PIPE3 PHY has to be initialized (PIPE3 PHY
    registers has to be accessed) as well which requires the interface
    clock of PIPE3 PHY to be enabled. The interface clock of PIPE3 PHY is
    derived from OCP2SCP and hence PCIe PHY is modeled as a child of
    OCP2SCP. Since pm_runtime is not enabled during noirq stage,
    pm_runtime_get_sync done in phy_init doesn't enable
    OCP2SCP clocks resulting in abort when PIPE3 PHY registers are
    accessed.
    
    Create a function dependency between PCIe and PHY here to make
    sure PCIe is suspended before PCIe PHY/OCP2SCP and resumed after
    PCIe PHY/OCP2SCP.
    
    Suggested-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cac6a26e3c76c310e33172133e4621b38143244
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Oct 21 01:02:07 2017 +0300

    usb: phy: tahvo: fix error handling in tahvo_usb_probe()
    
    
    [ Upstream commit ce035409bfa892a2fabb89720b542e1b335c3426 ]
    
    If devm_extcon_dev_allocate() fails, we should disable clk before return.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Fixes: 860d2686fda7 ("usb: phy: tahvo: Use devm_extcon_dev_[allocate|register]() and replace deprecated API")
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ee9572b109de66357a73e27effed5266a449183
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Sep 5 13:38:24 2017 +0200

    perf/core: Fix __perf_read_group_add() locking
    
    
    [ Upstream commit a9cd8194e1e6bd09619954721dfaf0f94fe2003e ]
    
    Event timestamps are serialized using ctx->lock, make sure to hold it
    over reading all values.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9851961159b6d33b7523e73cdedf156204a731bd
Author: Edward A. James <eajames@us.ibm.com>
Date:   Fri Oct 27 11:55:05 2017 -0500

    hwmon: (pmbus/core) Prevent unintentional setting of page to 0xFF
    
    
    [ Upstream commit 6dcf2fb5e8db3704f50af1f198256cb4e2453f8b ]
    
    The pmbus core may call read/write word data functions with a page value
    of -1, intending to perform the operation without setting the page.
    However, the read/write word data functions accept only unsigned 8-bit
    page numbers, and therefore cannot check for negative page number to
    avoid setting the page. This results in setting the page number to 0xFF.
    This may result in errors or undefined behavior of some devices
    (specifically the ir35221, which allows the page to be set to 0xFF,
    but some subsequent operations to read registers may fail).
    
    Switch the pmbus_set_page page parameter to an integer and perform the
    check for negative page there. Make read/write functions consistent in
    accepting an integer page number parameter.
    
    Signed-off-by: Edward A. James <eajames@us.ibm.com>
    Fixes: cbcdec6202c9 ("hwmon: (pmbus): Access word data for STATUS_WORD")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69d02547cbdf3d571f0aba394ce4b90b5daf6b71
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Wed Sep 27 11:04:40 2017 +0530

    mmc: sdhci-msm: fix issue with power irq
    
    
    [ Upstream commit c7ccee224d2d551f712752c4a16947f6529d6506 ]
    
    SDCC controller reset (SW_RST) during probe may trigger power irq if
    previous status of PWRCTL was either BUS_ON or IO_HIGH_V. So before we
    enable the power irq interrupt in GIC (by registering the interrupt
    handler), we need to ensure that any pending power irq interrupt status
    is acknowledged otherwise power irq interrupt handler would be fired
    prematurely.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Vijay Viswanath <vviswana@codeaurora.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ef27d564261b2ae9d7c39f9993da8dace2cb99b
Author: Fabrizio Castro <fabrizio.castro@bp.renesas.com>
Date:   Fri Sep 22 12:22:17 2017 +0100

    mmc: tmio: check mmc_regulator_get_supply return value
    
    
    [ Upstream commit a3d95d1d4007b1fefd6d8b12db26fda05de05cfb ]
    
    mmc_regulator_get_supply returns -EPROBE_DEFER if either vmmc or
    vqmmc regulators had their probing deferred.
    vqmmc regulator is needed by UHS to work properly, therefore this
    patch checks the value returned by mmc_regulator_get_supply to
    make sure we have a reference to both vmmc and vqmmc (if found in
    the DT).
    
    Signed-off-by: Fabrizio Castro <fabrizio.castro@bp.renesas.com>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4507d57777ff432efa66a3d212f35a6036015298
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 30 11:35:27 2017 +0100

    spi: spi-axi: fix potential use-after-free after deregistration
    
    
    [ Upstream commit 4d5e0689dc9d5640ad46cdfbe1896b74d8df1661 ]
    
    Take an extra reference to the controller before deregistering it to
    prevent use-after-free in the interrupt handler in case an interrupt
    fires before the line is disabled.
    
    Fixes: b1353d1c1d45 ("spi: Add Analog Devices AXI SPI Engine controller support")
    Acked-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9bf23504e6521af8cbce108761eb22fe9b63136
Author: Hiromitsu Yamasaki <hiromitsu.yamasaki.ym@renesas.com>
Date:   Thu Nov 2 10:32:36 2017 +0100

    spi: sh-msiof: Fix DMA transfer size check
    
    
    [ Upstream commit 36735783fdb599c94b9c86824583df367c65900b ]
    
    DMA supports 32-bit words only,
    even if BITLEN1 of SITMDR2 register is 16bit.
    
    Fixes: b0d0ce8b6b91 ("spi: sh-msiof: Add DMA support")
    Signed-off-by: Hiromitsu Yamasaki <hiromitsu.yamasaki.ym@renesas.com>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Acked-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Dirk Behme <dirk.behme@de.bosch.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3912c2aef4ea046568ace227aa5d54bad44cac9
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Oct 20 20:40:24 2017 +0200

    staging: rtl8188eu: avoid a null dereference on pmlmepriv
    
    
    [ Upstream commit 123c0aab0050cd0e07ce18e453389fbbb0a5a425 ]
    
    There is a check on pmlmepriv before dereferencing it when
    vfree'ing pmlmepriv->free_bss_buf however the previous call
    to rtw_free_mlme_priv_ie_data deferences pmlmepriv causing
    a null pointer deference if it is null.  Avoid this by also
    calling rtw_free_mlme_priv_ie_data if the pointer is non-null.
    
    Detected by CoverityScan, CID#1230262 ("Dereference before null check")
    Fixes: 7b464c9fa5cc ("staging: r8188eu: Add files for new driver - part 4")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a99611910dd745e940fc1a0cdab15aadf07c3e23
Author: Stanislaw Gruszka <sgruszka@redhat.com>
Date:   Mon Oct 23 11:35:59 2017 +0200

    staging: rtl8822be: fix wrong dma unmap len
    
    
    [ Upstream commit c40a45a465e9eab72cfdd3ab69d15cf8ef8b89c8 ]
    
    Patch fixes splat:
    
    r8822be 0000:04:00.0: DMA-API: device driver frees DMA memory with different size
    [device address=0x0000000078477000] [map size=4096 bytes] [unmap size=424 bytes]
    <snip>
    Call Trace:
      debug_dma_unmap_page+0xa5/0xb0
      ? unmap_single+0x2f/0x40
      _rtl8822be_send_bcn_or_cmd_packet+0x2c5/0x300 [r8822be]
      ? _rtl8822be_send_bcn_or_cmd_packet+0x2c5/0x300 [r8822be]
      rtl8822b_halmac_cb_write_data_rsvd_page+0x51/0xc0 [r8822be]
      _halmac_write_data_rsvd_page+0x22/0x30 [r8822be]
      halmac_download_rsvd_page_88xx+0xee/0x1f0 [r8822be]
      halmac_dlfw_to_mem_88xx+0x80/0x120 [r8822be]
      halmac_download_firmware_88xx.part.47+0x477/0x600 [r8822be]
      halmac_download_firmware_88xx+0x32/0x40 [r8822be]
      rtl_halmac_dlfw+0x70/0x120 [r8822be]
      rtl_halmac_init_hal+0x5f/0x1b0 [r8822be]
      rtl8822be_hw_init+0x8a2/0x1040 [r8822be]
    
    Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bee9d1d1c54c8bf9ff8149ccacbaf398f524a37
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sat Oct 28 11:35:49 2017 +0200

    serial: 8250_fintek: Fix rs485 disablement on invalid ioctl()
    
    
    [ Upstream commit 3236a965486ba0c6043cf2c7b51943d8b382ae29 ]
    
    This driver's ->rs485_config callback checks if SER_RS485_RTS_ON_SEND
    and SER_RS485_RTS_AFTER_SEND have the same value.  If they do, it means
    the user has passed in invalid data with the TIOCSRS485 ioctl()
    since RTS must have a different polarity when sending and when not
    sending.  In this case, rs485 mode is not enabled (the RS485_URA bit
    is not set in the RS485 Enable Register) and this is supposed to be
    signaled back to the user by clearing the SER_RS485_ENABLED bit in
    struct serial_rs485 ... except a missing tilde character is preventing
    that from happening.
    
    Fixes: 28e3fb6c4dce ("serial: Add support for Fintek F81216A LPC to 4 UART")
    Cc: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
    Cc: "Ji-Ze Hong (Peter Hong)" <hpeter@gmail.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 162cefc5547b95f24c1a2aad2af1817381afa6a6
Author: Greg Ungerer <gerg@linux-m68k.org>
Date:   Tue Sep 5 22:57:06 2017 +1000

    m68k: fix ColdFire node shift size calculation
    
    
    [ Upstream commit f55ab8f27548ff3431a6567d400c6757c49fd520 ]
    
    The m68k pg_data_table is a fix size array defined in arch/m68k/mm/init.c.
    Index numbers within it are defined based on memory size. But for Coldfire
    these don't take into account a non-zero physical RAM base address, and this
    causes us to access past the end of this array at system start time.
    
    Change the node shift calculation so that we keep the index inside its range.
    
    Reported-by: Angelo Dureghello <angelo@sysam.it>
    Tested-by: Angelo Dureghello <angelo@sysam.it>
    Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff8cc6f882c735df53ae2e2fdde8362cafe14100
Author: Bryan O'Donoghue <pure.logic@nexus-software.ie>
Date:   Mon Nov 6 01:32:20 2017 +0000

    staging: greybus: loopback: Fix iteration count on async path
    
    
    [ Upstream commit 44b02da39210e6dd67e39ff1f48d30c56d384240 ]
    
    Commit 12927835d211 ("greybus: loopback: Add asynchronous bi-directional
    support") does what it says on the tin - namely, adds support for
    asynchronous bi-directional loopback operations.
    
    What it neglects to do though is increment the per-connection
    gb->iteration_count on an asynchronous operation error. This patch fixes
    that omission.
    
    Fixes: 12927835d211 ("greybus: loopback: Add asynchronous bi-directional support")
    
    Signed-off-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Reported-by: Mitch Tasman <tasman@leaflabs.com>
    Reviewed-by: Johan Hovold <johan@kernel.org>
    Cc: Alex Elder <elder@kernel.org>
    Cc: Mitch Tasman <tasman@leaflabs.com>
    Cc: greybus-dev@lists.linaro.org
    Cc: devel@driverdev.osuosl.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 898fe968f78c45e12fed31aee35a118a4e26e1b4
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sat Nov 4 04:19:49 2017 -0700

    selftests/x86/ldt_gdt: Robustify against set_thread_area() and LAR oddities
    
    
    [ Upstream commit d60ad744c9741586010d4bea286f09a063a90fbd ]
    
    Bits 19:16 of LAR's result are undefined, and some upcoming
    improvements to the test case seem to trigger this.  Mask off those
    bits to avoid spurious failures.
    
    commit 5b781c7e317f ("x86/tls: Forcibly set the accessed bit in TLS
    segments") adds a valid case in which LAR's output doesn't quite
    agree with set_thread_area()'s input.  This isn't triggered in the
    test as is, but it will be if we start calling set_thread_area()
    with the accessed bit clear.  Work around this discrepency.
    
    I've added a Fixes tag so that -stable can pick this up if neccesary.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 5b781c7e317f ("x86/tls: Forcibly set the accessed bit in TLS segments")
    Link: http://lkml.kernel.org/r/b82f3f89c034b53580970ac865139fd8863f44e2.1509794321.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9aaa793b6b05b57cf37814ccf0d992035ea41407
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sat Nov 4 04:19:52 2017 -0700

    selftests/x86/ldt_get: Add a few additional tests for limits
    
    
    [ Upstream commit fec8f5ae1715a01c72ad52cb2ecd8aacaf142302 ]
    
    We weren't testing the .limit and .limit_in_pages fields very well.
    Add more tests.
    
    This addition seems to trigger the "bits 16:19 are undefined" issue
    that was fixed in an earlier patch.  I think that, at least on my
    CPU, the high nibble of the limit ends in LAR bits 16:19.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/5601c15ea9b3113d288953fd2838b18bedf6bc67.1509794321.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3dde14f7f78b337d43fc1a6877cb283023121f2f
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Mon Oct 30 14:38:58 2017 +0100

    s390/pci: do not require AIS facility
    
    
    [ Upstream commit 48070c73058be6de9c0d754d441ed7092dfc8f12 ]
    
    As of today QEMU does not provide the AIS facility to its guest.  This
    prevents Linux guests from using PCI devices as the ais facility is
    checked during init. As this is just a performance optimization, we can
    move the ais check into the code where we need it (calling the SIC
    instruction). This is used at initialization and on interrupt. Both
    places do not require any serialization, so we can simply skip the
    instruction.
    
    Since we will now get all interrupts, we can also avoid the 2nd scan.
    As we can have multiple interrupts in parallel we might trigger spurious
    irqs more often for the non-AIS case but the core code can handle that.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>
    Reviewed-by: Halil Pasic <pasic@linux.vnet.ibm.com>
    Acked-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca04b90f9d8e053e81f630610076d00239129c1f
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Wed Nov 8 10:11:02 2017 +0100

    PM / Domains: Fix genpd to deal with drivers returning 1 from ->prepare()
    
    
    [ Upstream commit 5241ab40f6e742f8a1631f8826faf6dc6412b3b5 ]
    
    During system-wide PM, genpd relies on its PM callbacks to be invoked for
    all its attached devices, as to deal with powering off/on the PM domain. In
    other words, genpd is not compatible with the direct_complete path, if
    executed by the PM core for any of its attached devices.
    
    However, when genpd's ->prepare() callback invokes pm_generic_prepare(), it
    does not take into account that it may return 1. Instead it treats that as
    an error internally and expects the PM core to abort the prepare phase and
    roll back. This leads to genpd not properly powering on/off the PM domain,
    because its internal counters gets wrongly balanced.
    
    To fix the behaviour, allow drivers to return 1 from their ->prepare()
    callbacks, but let's return 0 from genpd's ->prepare() callback in such
    case, as that prevents the PM core from running the direct_complete path
    for the device.
    
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0bf7b7396a474cf3d61ebd7669bb20f914289fc
Author: Jason J. Herne <jjherne@linux.vnet.ibm.com>
Date:   Tue Nov 7 10:22:32 2017 -0500

    s390: vfio-ccw: Do not attempt to free no-op, test and tic cda.
    
    
    [ Upstream commit 408358b50deaf59b07c82a7bff8c7e7cce031fae ]
    
    Because we do not make use of the cda (channel data address) for test,
    no-op ccws no address translation takes place. This means cda could
    contain a guest address which we do not want to attempt to free. Let's
    check the command type and skip cda free when it is not needed.
    
    For a TIC ccw, ccw->cda points to either a ccw in an existing chain or
    it points to a whole new allocated chain. In either case the data will
    be freed when the owning chain is freed.
    
    Signed-off-by: Jason J. Herne <jjherne@linux.vnet.ibm.com>
    Reviewed-by: Dong Jia Shi <bjsdjshi@linux.vnet.ibm.com>
    Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>
    Message-Id: <1510068152-21988-1-git-send-email-jjherne@linux.vnet.ibm.com>
    Reviewed-by: Halil Pasic <pasic@linux.vnet.ibm.com>
    Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c503475ae2aa08c10e50e56c9e12efe6415eefa
Author: Boshi Wang <wangboshi@huawei.com>
Date:   Fri Oct 20 16:01:03 2017 +0800

    ima: fix hash algorithm initialization
    
    
    [ Upstream commit ebe7c0a7be92bbd34c6ff5b55810546a0ee05bee ]
    
    The hash_setup function always sets the hash_setup_done flag, even
    when the hash algorithm is invalid.  This prevents the default hash
    algorithm defined as CONFIG_IMA_DEFAULT_HASH from being used.
    
    This patch sets hash_setup_done flag only for valid hash algorithms.
    
    Fixes: e7a2ad7eb6f4 "ima: enable support for larger default filedata hash algorithms"
    Signed-off-by: Boshi Wang <wangboshi@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07c925116820b3def5610a917cad3901d69d18d9
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Tue Nov 28 15:22:20 2017 +0000

    MIPS: Add custom serial.h with BASE_BAUD override for generic kernel
    
    commit c8ec2041f549e7f2dee0c34d25381be6f7805f99 upstream.
    
    Add a custom serial.h header for MIPS, allowing platforms to override
    the asm-generic version if required.
    
    The generic platform uses this header to set BASE_BAUD to 0. The
    generic platform supports multiple boards, which may have different
    UART clocks. Also one of the boards supported is the Boston FPGA board,
    where the UART clock depends on the loaded FPGA bitfile. As such there
    is no way that the generic kernel can set a compile time default
    BASE_BAUD.
    
    Commit 31cb9a8575ca ("earlycon: initialise baud field of earlycon device
    structure") changed the behavior of of_setup_earlycon such that any baud
    rate set in the device tree is now set in the earlycon structure. The
    UART driver will then calculate a divisor based on BASE_BAUD and set it.
    With MIPS generic kernels this resulted in garbage output due to the
    incorrect uart clock rate being used to calculate a divisor. This
    commit, combined with "serial: 8250_early: Only set divisor if valid clk
    & baud" prevents the earlycon code setting a bad divisor and restores
    earlycon output.
    
    Fixes: 31cb9a8575ca ("earlycon: initialise baud field of earlycon device structure")
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64dbff3359fc3865a000d051143ade71aea1242b
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Wed Nov 22 09:57:28 2017 +0000

    serial: 8250_early: Only set divisor if valid clk & baud
    
    commit 0ff3ab701963a845d52337ded7eebf2d1a14fe00 upstream.
    
    If either uartclk or baud are 0, avoid calculating and setting a divisor
    based on them since the output will almost certainly be garbage.
    
    This also allows platforms such as the MIPS generic kernel, which has no
    way to know a valid BASE_BASE for the board it is actually booted on at
    compile time, to set BASE_BAUD to 0 and avoid early_8250 setting a bad
    divisor.
    
    This fixes a regression caused by commit 31cb9a8575ca ("earlycon:
    initialise baud field of earlycon device structure"), which changed the
    behavior of of_setup_earlycon such that it sets a baud rate in the
    earlycon structure where previously it was left as 0. All boards
    supported by the MIPS generic kernel started outputting garbage from the
    boot console due to an incorrect divisor being set.
    
    Fixes: 31cb9a8575ca ("earlycon: initialise baud field of earlycon device structure")
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a53dae2e338bcd32d8fac11ee87c01ab873fec3
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue Nov 28 12:40:59 2017 +0800

    USB: serial: usb_debug: add new USB device id
    
    commit 762ff4678e89a5e3f8b2237533e04d3ef2737e78 upstream.
    
    USB vendor id and product id for Linux USB Debug Target is added.
    
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b200d9899afe672d66c0d8d618c63455d21913ea
Author: Sebastian Sjoholm <ssjoholm@mac.com>
Date:   Mon Nov 20 19:29:32 2017 +0100

    USB: serial: option: add Quectel BG96 id
    
    commit c654b21ede93845863597de9ad774fd30db5f2ab upstream.
    
    Quectel BG96 is an Qualcomm MDM9206 based IoT modem, supporting both
    CAT-M and NB-IoT. Tested hardware is BG96 mounted on Quectel
    development board (EVB). The USB id is added to option.c to allow
    DIAG,GPS,AT and modem communication with the BG96.
    
    Signed-off-by: Sebastian Sjoholm <ssjoholm@mac.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22ad53793edbc73a5a12f6960749bc967551fde4
Author: Martijn Coenen <maco@android.com>
Date:   Mon Nov 13 10:06:08 2017 +0100

    ANDROID: binder: fix transaction leak.
    
    commit fb2c445277e7b0b4ffe10de8114bad4eccaca948 upstream.
    
    If a call to put_user() fails, we failed to
    properly free a transaction and send a failed
    reply (if necessary).
    
    Signed-off-by: Martijn Coenen <maco@android.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45c17d9b6ea66925c8aadbb2973c48d668f673fc
Author: Matt Wilson <msw@amazon.com>
Date:   Mon Nov 13 11:31:31 2017 -0800

    serial: 8250_pci: Add Amazon PCI serial device ID
    
    commit 3bfd1300abfe3adb18e84a89d97a0e82a22124bb upstream.
    
    This device will be used in future Amazon EC2 instances as the primary
    serial port (i.e., data sent to this port will be available via the
    GetConsoleOuput [1] EC2 API).
    
    [1] http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleOutput.html
    
    Signed-off-by: Matt Wilson <msw@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 502ae7582aacc85ffd38fa820e4c734a230ccc25
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Tue Nov 14 01:31:15 2017 -0500

    usb: quirks: Add no-lpm quirk for KY-688 USB 3.1 Type-C Hub
    
    commit e43a12f1793ae1fe006e26fe9327a8840a92233c upstream.
    
    KY-688 USB 3.1 Type-C Hub internally uses a Genesys Logic hub to connect
    to Realtek r8153.
    
    Similar to commit ("7496cfe5431f2 usb: quirks: Add no-lpm quirk for Moshi
    USB to Ethernet Adapter"), no-lpm can make r8153 ethernet work.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6e6e58814d5583bef5c75734324b27f77f70f1b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Nov 14 19:27:22 2017 +0100

    uas: Always apply US_FL_NO_ATA_1X quirk to Seagate devices
    
    commit 7fee72d5e8f1e7b8d8212e28291b1a0243ecf2f1 upstream.
    
    We've been adding this as a quirk on a per device basis hoping that
    newer disk enclosures would do better, but that has not happened,
    so simply apply this quirk to all Seagate devices.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b76f8338123f06c565574a5f36964f482db829a3
Author: Yuyang Du <yuyang.du@intel.com>
Date:   Thu Nov 30 10:22:40 2017 +0800

    usbip: Fix USB device hang due to wrong enabling of scatter-gather
    
    commit 770b2edece42fa55bbe7d4cbe53347a07b8968d4 upstream.
    
    The previous USB3 SuperSpeed enabling patches mistakenly enabled
    URB scatter-gather chaining, which is actually not supported by
    the VHCI HCD. This patch fixes that.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=197867
    Fixes: 03cd00d538a6feb ("usbip: vhci-hcd: Set the vhci structure up to work")
    Reported-by: Juan Zea <juan.zea@qindel.com>
    Signed-off-by: Yuyang Du <yuyang.du@intel.com>
    Acked-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0264c662ca8ba118715072927af08d96fd90a36
Author: Shuah Khan <shuahkh@osg.samsung.com>
Date:   Wed Nov 29 15:24:22 2017 -0700

    usbip: fix usbip attach to find a port that matches the requested speed
    
    commit 1ac7c8a78be85f84b019d3d2742d1a9f07255cc5 upstream.
    
    usbip attach fails to find a free port when the device on the first port
    is a USB_SPEED_SUPER device and non-super speed device is being attached.
    It keeps checking the first port and returns without a match getting stuck
    in a loop.
    
    Fix it check to find the first port with matching speed.
    
    Reported-by: Juan Zea <juan.zea@qindel.com>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8e212c599082896a180a18a0c9bd529526590be
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Sep 11 11:24:22 2017 +0200

    s390/runtime instrumentation: simplify task exit handling
    
    commit 8d9047f8b967ce6181fd824ae922978e1b055cc0 upstream.
    
    Free data structures required for runtime instrumentation from
    arch_release_task_struct(). This allows to simplify the code a bit,
    and also makes the semantics a bit easier: arch_release_task_struct()
    is never called from the task that is being removed.
    
    In addition this allows to get rid of exit_thread() in a later patch.
    
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 955c907b978589fbd34e9eaaf53527d8cbf589b4
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Wed Nov 22 15:55:21 2017 +0100

    drm/amdgpu: Use unsigned ring indices in amdgpu_queue_mgr_map
    
    commit fa7c7939b4bf112cd06ba166b739244077898990 upstream.
    
    This matches the corresponding UAPI fields. Treating the ring index as
    signed could result in accessing random unrelated memory if the MSB was
    set.
    
    Fixes: effd924d2f3b ("drm/amdgpu: untie user ring ids from kernel ring ids v6")
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bacbe44889828852678bc74ad0e942a7684f206f
Author: Stefan Agner <stefan@agner.ch>
Date:   Fri Nov 10 10:15:28 2017 +0100

    drm/fsl-dcu: enable IRQ before drm_atomic_helper_resume()
    
    commit 9fd99f4f3f5e13ce959900ae57d64b1bdb51d823 upstream.
    
    The resume helpers wait for a vblank to occurre hence IRQ need
    to be enabled. This avoids a warning as follows during resume:
      WARNING: CPU: 0 PID: 314 at drivers/gpu/drm/drm_atomic_helper.c:1249 drm_atomic_helper_wait_for_vblanks.part.1+0x284/0x288
      [CRTC:28:crtc-0] vblank wait timed out
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8111b1885d3a802e57f895e77aaa1e88de57282
Author: Stefan Agner <stefan@agner.ch>
Date:   Thu Nov 9 15:39:56 2017 +0100

    drm/fsl-dcu: avoid disabling pixel clock twice on suspend
    
    commit 9306e996574f7f57136a62e49cd0075f85713623 upstream.
    
    With commit 0a70c998d0c5 ("drm/fsl-dcu: enable pixel clock when
    enabling CRTC") the pixel clock is controlled by the CRTC code.
    Disabling the pixel clock in suspend leads to a warning due to
    the second clk_disable_unprepare call:
      WARNING: CPU: 0 PID: 359 at drivers/clk/clk.c:594 clk_core_disable+0x8c/0x90
    
    Remove clk_disable_unprepare call for pixel clock to avoid
    unbalanced clock disable on suspend.
    
    Fixes: 0a70c998d0c5 ("drm/fsl-dcu: enable pixel clock when enabling CRTC")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51a2a68fde2035887c0d74aee1c9569c691dfd61
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Dec 5 11:26:38 2017 +0100

    Linux 4.14.4

commit e49d722f26b904015077655bff47cdbde049226a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Dec 4 12:59:57 2017 +0100

    Revert "x86/entry/64: Add missing irqflags tracing to native_load_gs_index()"
    
    This reverts commit f9a64e23a9da528e7d8aa1bd2c7bb92be4ebb724 which is
    commit 0d794d0d018f23fb09c50f6ae26868bd6ae343d6 upstream.
    
    Andy writes:
    
            I think the thing to do is to revert the patch from -stable.
            The bug it fixes is very minor, and the regression is that it
            made a pre-existing bug in some nearly-undebuggable core resume
            code much easier to hit.  I don't feel comfortable with a
            backport of the latter fix until it has a good long soak in
            Linus' tree.
    
    Reported-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88e1bb2a24125747d48b5e2d60bccdb247b86eb9
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu Nov 23 21:41:57 2017 +0200

    drm/i915: Prevent zero length "index" write
    
    commit 56350fb8978bbf4aafe08f21234e161dd128b417 upstream.
    
    The hardware always writes one or two bytes in the index portion of
    an indexed transfer. Make sure the message we send as the index
    doesn't have a zero length.
    
    Cc: Daniel Kurtz <djkurtz@chromium.org>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Sean Paul <seanpaul@chromium.org>
    Fixes: 56f9eac05489 ("drm/i915/intel_i2c: use INDEX cycles for i2c read transactions")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171123194157.25367-3-ville.syrjala@linux.intel.com
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    (cherry picked from commit bb9e0d4bca50f429152e74a459160b41f3d60fb2)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e522b9247ce931a7319f1d7e9d0bdfa5817b9a4e
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu Nov 23 21:41:56 2017 +0200

    drm/i915: Don't try indexed reads to alternate slave addresses
    
    commit ae5c631e605a452a5a0e73205a92810c01ed954b upstream.
    
    We can only specify the one slave address to indexed reads/writes.
    Make sure the messages we check are destined to the same slave
    address before deciding to do an indexed transfer.
    
    Cc: Daniel Kurtz <djkurtz@chromium.org>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Sean Paul <seanpaul@chromium.org>
    Fixes: 56f9eac05489 ("drm/i915/intel_i2c: use INDEX cycles for i2c read transactions")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171123194157.25367-2-ville.syrjala@linux.intel.com
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    (cherry picked from commit c4deb62d7821672265b87952bcd1c808f3bf3e8f)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c0d3d1d5908f5cd5c838c99663238cac201953b
Author: Xiong Zhang <xiong.y.zhang@intel.com>
Date:   Tue Nov 28 07:29:54 2017 +0800

    drm/i915/gvt: Correct ADDR_4K/2M/1G_MASK definition
    
    commit b721b65af4eb46df6a1d9e34b14003225e403565 upstream.
    
    For ADDR_4K_MASK, bit[45..12] should be 1, all other bits
    should be 0. The current definition wrongly set bit[46] as 1
    also. This path fixes this.
    
    v2: Add commit message, fixes and cc stable.(Zhenyu)
    
    Fixes: 2707e4446688("drm/i915/gvt: vGPU graphics memory virtualization")
    Signed-off-by: Xiong Zhang <xiong.y.zhang@intel.com>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7042c2b9a19e74972f5783ab3b7ef98ebdee293f
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Sat Nov 25 19:41:55 2017 +0000

    drm/i915/fbdev: Serialise early hotplug events with async fbdev config
    
    commit a45b30a6c5db631e2ba680304bd5edd0cd1f9643 upstream.
    
    As both the hotplug event and fbdev configuration run asynchronously, it
    is possible for them to run concurrently. If configuration fails, we were
    freeing the fbdev causing a use-after-free in the hotplug event.
    
    <7>[ 3069.935211] [drm:intel_fb_initial_config [i915]] Not using firmware configuration
    <7>[ 3069.935225] [drm:drm_setup_crtcs] looking for cmdline mode on connector 77
    <7>[ 3069.935229] [drm:drm_setup_crtcs] looking for preferred mode on connector 77 0
    <7>[ 3069.935233] [drm:drm_setup_crtcs] found mode 3200x1800
    <7>[ 3069.935236] [drm:drm_setup_crtcs] picking CRTCs for 8192x8192 config
    <7>[ 3069.935253] [drm:drm_setup_crtcs] desired mode 3200x1800 set on crtc 43 (0,0)
    <7>[ 3069.935323] [drm:intelfb_create [i915]] no BIOS fb, allocating a new one
    <4>[ 3069.967737] general protection fault: 0000 [#1] PREEMPT SMP
    <0>[ 3069.977453] ---------------------------------
    <4>[ 3069.977457] Modules linked in: i915(+) vgem snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_codec_generic x86_pkg_temp_thermal intel_powerclamp coretemp crct10dif_pclmul crc32_pclmul ghash_clmulni_intel snd_hda_codec snd_hwdep snd_hda_core snd_pcm r8169 mei_me mii prime_numbers mei i2c_hid pinctrl_geminilake pinctrl_intel [last unloaded: i915]
    <4>[ 3069.977492] CPU: 1 PID: 15414 Comm: kworker/1:0 Tainted: G     U          4.14.0-CI-CI_DRM_3388+ #1
    <4>[ 3069.977497] Hardware name: Intel Corp. Geminilake/GLK RVP1 DDR4 (05), BIOS GELKRVPA.X64.0062.B30.1708222146 08/22/2017
    <4>[ 3069.977508] Workqueue: events output_poll_execute
    <4>[ 3069.977512] task: ffff880177734e40 task.stack: ffffc90001fe4000
    <4>[ 3069.977519] RIP: 0010:__lock_acquire+0x109/0x1b60
    <4>[ 3069.977523] RSP: 0018:ffffc90001fe7bb0 EFLAGS: 00010002
    <4>[ 3069.977526] RAX: 6b6b6b6b6b6b6b6b RBX: 0000000000000282 RCX: 0000000000000000
    <4>[ 3069.977530] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff880170d4efd0
    <4>[ 3069.977534] RBP: ffffc90001fe7c70 R08: 0000000000000001 R09: 0000000000000000
    <4>[ 3069.977538] R10: 0000000000000000 R11: ffffffff81899609 R12: ffff880170d4efd0
    <4>[ 3069.977542] R13: ffff880177734e40 R14: 0000000000000001 R15: 0000000000000000
    <4>[ 3069.977547] FS:  0000000000000000(0000) GS:ffff88017fc80000(0000) knlGS:0000000000000000
    <4>[ 3069.977551] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    <4>[ 3069.977555] CR2: 00007f7e8b7bcf04 CR3: 0000000003e0f000 CR4: 00000000003406e0
    <4>[ 3069.977559] Call Trace:
    <4>[ 3069.977565]  ? mark_held_locks+0x64/0x90
    <4>[ 3069.977571]  ? _raw_spin_unlock_irq+0x24/0x50
    <4>[ 3069.977575]  ? _raw_spin_unlock_irq+0x24/0x50
    <4>[ 3069.977579]  ? trace_hardirqs_on_caller+0xde/0x1c0
    <4>[ 3069.977583]  ? _raw_spin_unlock_irq+0x2f/0x50
    <4>[ 3069.977588]  ? finish_task_switch+0xa5/0x210
    <4>[ 3069.977592]  ? lock_acquire+0xaf/0x200
    <4>[ 3069.977596]  lock_acquire+0xaf/0x200
    <4>[ 3069.977600]  ? __mutex_lock+0x5e9/0x9b0
    <4>[ 3069.977604]  _raw_spin_lock+0x2a/0x40
    <4>[ 3069.977608]  ? __mutex_lock+0x5e9/0x9b0
    <4>[ 3069.977612]  __mutex_lock+0x5e9/0x9b0
    <4>[ 3069.977616]  ? drm_fb_helper_hotplug_event.part.19+0x16/0xa0
    <4>[ 3069.977621]  ? drm_fb_helper_hotplug_event.part.19+0x16/0xa0
    <4>[ 3069.977625]  drm_fb_helper_hotplug_event.part.19+0x16/0xa0
    <4>[ 3069.977630]  output_poll_execute+0x8d/0x180
    <4>[ 3069.977635]  process_one_work+0x22e/0x660
    <4>[ 3069.977640]  worker_thread+0x48/0x3a0
    <4>[ 3069.977644]  ? _raw_spin_unlock_irqrestore+0x4c/0x60
    <4>[ 3069.977649]  kthread+0x102/0x140
    <4>[ 3069.977653]  ? process_one_work+0x660/0x660
    <4>[ 3069.977657]  ? kthread_create_on_node+0x40/0x40
    <4>[ 3069.977662]  ret_from_fork+0x27/0x40
    <4>[ 3069.977666] Code: 8d 62 f8 c3 49 81 3c 24 e0 fa 3c 82 41 be 00 00 00 00 45 0f 45 f0 83 fe 01 77 86 89 f0 49 8b 44 c4 08 48 85 c0 0f 84 76 ff ff ff <f0> ff 80 38 01 00 00 8b 1d 62 f9 e8 01 45 8b 85 b8 08 00 00 85
    <1>[ 3069.977707] RIP: __lock_acquire+0x109/0x1b60 RSP: ffffc90001fe7bb0
    <4>[ 3069.977712] ---[ end trace 4ad012eb3af62df7 ]---
    
    In order to keep the dev_priv->ifbdev alive after failure, we have to
    avoid the free and leave it empty until we unload the module (which is
    less than ideal, but a necessary evil for simplicity). Then we can use
    intel_fbdev_sync() to serialise the hotplug event with the configuration.
    The serialisation between the two was removed in commit 934458c2c95d
    ("Revert "drm/i915: Fix races on fbdev""), but the use after free is much
    older, commit 366e39b4d2c5 ("drm/i915: Tear down fbdev if initialization
    fails")
    
    Fixes: 366e39b4d2c5 ("drm/i915: Tear down fbdev if initialization fails")
    Fixes: 934458c2c95d ("Revert "drm/i915: Fix races on fbdev"")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Lukas Wunner <lukas@wunner.de>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171125194155.355-1-chris@chris-wilson.co.uk
    (cherry picked from commit ad88d7fc6c032ddfb32b8d496a070ab71de3a64f)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 569e3d1de49f0896733de8e709fc1fd28034d7dc
Author: Hans de Goede <j.w.r.degoede@gmail.com>
Date:   Tue Nov 14 14:55:17 2017 +0100

    drm/i915: Re-register PMIC bus access notifier on runtime resume
    
    commit 294cf1af8cf2eb0d1eced377fdfb9a2d3f0e8b42 upstream.
    
    intel_uncore_suspend() unregisters the uncore code's PMIC bus access
    notifier and gets called on both normal and runtime suspend.
    
    intel_uncore_resume_early() re-registers the notifier, but only on
    normal resume. Add a new intel_uncore_runtime_resume() function which
    only re-registers the notifier and call that on runtime resume.
    
    Reported-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Imre Deak <imre.deak@intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171114135518.15981-2-hdegoede@redhat.com
    (cherry picked from commit bedf4d79c3654921839b62246b0965ddb308b201)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6613dc721fc232698aafd0f6e214137cfda61e35
Author: Hans de Goede <j.w.r.degoede@gmail.com>
Date:   Fri Nov 10 16:03:01 2017 +0100

    drm/i915: Fix false-positive assert_rpm_wakelock_held in i915_pmic_bus_access_notifier v2
    
    commit f4359cedfb43b934f38c50d1604db21333abe57b upstream.
    
    assert_rpm_wakelock_held is triggered from i915_pmic_bus_access_notifier
    even though it gets unregistered on (runtime) suspend, this is caused
    by a race happening under the following circumstances:
    
    intel_runtime_pm_put does:
    
       atomic_dec(&dev_priv->pm.wakeref_count);
    
       pm_runtime_mark_last_busy(kdev);
       pm_runtime_put_autosuspend(kdev);
    
    And pm_runtime_put_autosuspend calls intel_runtime_suspend from
    a workqueue, so there is ample of time between the atomic_dec() and
    intel_runtime_suspend() unregistering the notifier. If the notifier
    gets called in this windowd assert_rpm_wakelock_held falsely triggers
    (at this point we're not runtime-suspended yet).
    
    This commit adds disable_rpm_wakeref_asserts and
    enable_rpm_wakeref_asserts calls around the
    intel_uncore_forcewake_get(FORCEWAKE_ALL) call in
    i915_pmic_bus_access_notifier fixing the false-positive WARN_ON.
    
    Changes in v2:
    -Reword comment explaining why disabling the wakeref asserts is
     ok and necessary
    
    Reported-by: FKr <bugs-freedesktop@ubermail.me>
    Reviewed-by: Imre Deak <imre.deak@intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171110150301.9601-2-hdegoede@redhat.com
    (cherry picked from commit ce30560c80dead91e98a03d90fb8791e57a9b69d)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a67936842ba66eb229e6322856fefd2310e0b3fb
Author: NeilBrown <neilb@suse.com>
Date:   Tue Oct 17 14:24:09 2017 +1100

    md: forbid a RAID5 from having both a bitmap and a journal.
    
    commit 230b55fa8d64007339319539f8f8e68114d08529 upstream.
    
    Having both a bitmap and a journal is pointless.
    Attempting to do so can corrupt the bitmap if the journal
    replay happens before the bitmap is initialized.
    Rather than try to avoid this corruption, simply
    refuse to allow arrays with both a bitmap and a journal.
    So:
     - if raid5_run sees both are present, fail.
     - if adding a bitmap finds a journal is present, fail
     - if adding a journal finds a bitmap is present, fail.
    
    Signed-off-by: NeilBrown <neilb@suse.com>
    Tested-by: Joshua Kinard <kumba@gentoo.org>
    Acked-by: Joshua Kinard <kumba@gentoo.org>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 635526b896ca34fff5487d3ac00d04afbee7e1e4
Author: Sasha Neftin <sasha.neftin@intel.com>
Date:   Mon Nov 6 08:31:59 2017 +0200

    e1000e: fix the use of magic numbers for buffer overrun issue
    
    commit c0f4b163a03e73055dd734eaca64b9580e72e7fb upstream.
    
    This is a follow on to commit b10effb92e27 ("fix buffer overrun while the
     I219 is processing DMA transactions") to address David Laights concerns
    about the use of "magic" numbers.  So define masks as well as add
    additional code comments to give a better understanding of what needs to
    be done to avoid a buffer overrun.
    
    Signed-off-by: Sasha Neftin <sasha.neftin@intel.com>
    Reviewed-by: Alexander H Duyck <alexander.h.duyck@intel.com>
    Reviewed-by: Dima Ruinskiy <dima.ruinskiy@intel.com>
    Reviewed-by: Raanan Avargil <raanan.avargil@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c48f3c04984557e34cf2b7194eb4d7947edccc5e
Author: Don Hiatt <don.hiatt@intel.com>
Date:   Mon Oct 2 11:04:55 2017 -0700

    IB/hfi1: Do not warn on lid conversions for OPA
    
    commit 4988be5813ff2afdc0d8bfa315ef34a577d3efbf upstream.
    
    On OPA devices opa_local_smp_check will receive 32Bit LIDs when the LID
    is Extended. In such cases, it is okay to lose the upper 16 bits of the
    LID as this information is obtained elsewhere. Do not issue a warning
    when calling ib_lid_cpu16() in this case by masking out the upper 16Bits.
    
    [75920.148985] ------------[ cut here ]------------
    [75920.154651] WARNING: CPU: 0 PID: 1718 at ./include/rdma/ib_verbs.h:3788 hfi1_process_mad+0x1c1f/0x1c80 [hfi1]
    [75920.166192] Modules linked in: ib_ipoib hfi1(E) rdmavt(E) rdma_ucm(E) ib_ucm(E) rdma_cm(E) ib_cm(E) iw_cm(E) ib_umad(E) ib_uverbs(E) ib_core(E) libiscsi scsi_transport_iscsi dm_mirror dm_region_hash dm_log dm_mod dax x86_pkg_temp_thermal intel_powerclamp coretemp kvm irqbypass crct10dif_pclmul crc32_pclmul ghash_clmulni_intel pcbc aesni_intel mei_me ipmi_si iTCO_wdt iTCO_vendor_support crypto_simd ipmi_devintf pcspkr mei sg i2c_i801 glue_helper lpc_ich shpchp ioatdma mfd_core wmi ipmi_msghandler cryptd acpi_power_meter acpi_pad nfsd auth_rpcgss nfs_acl lockd grace sunrpc ip_tables xfs libcrc32c sd_mod mgag200 drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops ttm drm igb ptp ahci libahci pps_core crc32c_intel libata dca i2c_algo_bit i2c_core [last unloaded: ib_core]
    [75920.246331] CPU: 0 PID: 1718 Comm: kworker/0:1H Tainted: G        W I E   4.13.0-rc7+ #1
    [75920.255907] Hardware name: Intel Corporation S2600WT2/S2600WT2, BIOS SE5C610.86B.01.01.0008.021120151325 02/11/2015
    [75920.268158] Workqueue: ib-comp-wq ib_cq_poll_work [ib_core]
    [75920.274934] task: ffff88084a718000 task.stack: ffffc9000a424000
    [75920.282123] RIP: 0010:hfi1_process_mad+0x1c1f/0x1c80 [hfi1]
    [75920.288881] RSP: 0018:ffffc9000a427c38 EFLAGS: 00010206
    [75920.295265] RAX: 0000000000010001 RBX: ffff8808361420e8 RCX: ffff880837811d80
    [75920.303784] RDX: 0000000000000002 RSI: 0000000000007fff RDI: ffff880837811d80
    [75920.312302] RBP: ffffc9000a427d38 R08: 0000000000000000 R09: ffff8808361420e8
    [75920.320819] R10: ffff88083841f0e8 R11: ffffc9000a427da8 R12: 0000000000000001
    [75920.329335] R13: ffff880837810000 R14: 0000000000000000 R15: ffff88084f1a4800
    [75920.337849] FS:  0000000000000000(0000) GS:ffff88085f400000(0000) knlGS:0000000000000000
    [75920.347450] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [75920.354405] CR2: 00007f9e4b3d9000 CR3: 0000000001c09000 CR4: 00000000001406f0
    [75920.362947] Call Trace:
    [75920.366257]  ? ib_mad_recv_done+0x258/0x9b0 [ib_core]
    [75920.372457]  ? ib_mad_recv_done+0x258/0x9b0 [ib_core]
    [75920.378652]  ? __kmalloc+0x1df/0x210
    [75920.383229]  ib_mad_recv_done+0x305/0x9b0 [ib_core]
    [75920.389270]  __ib_process_cq+0x5d/0xb0 [ib_core]
    [75920.395032]  ib_cq_poll_work+0x20/0x60 [ib_core]
    [75920.400777]  process_one_work+0x149/0x360
    [75920.405836]  worker_thread+0x4d/0x3c0
    [75920.410505]  kthread+0x109/0x140
    [75920.414681]  ? rescuer_thread+0x380/0x380
    [75920.419731]  ? kthread_park+0x60/0x60
    [75920.424406]  ret_from_fork+0x25/0x30
    [75920.428972] Code: 4c 89 9d 58 ff ff ff 49 89 45 00 66 b8 00 02 49 89 45 08 e8 44 27 89 e0 4c 8b 9d 58 ff ff ff e9 d8 f6 ff ff 0f ff e9 55 e7 ff ff <0f> ff e9 3b e5 ff ff 0f ff 0f 1f 84 00 00 00 00 00 e9 4b e9 ff
    [75921.451269] ---[ end trace cf26df27c9597265 ]---
    
    Fixes: 62ede7779904 ("Add OPA extended LID support")
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Don Hiatt <don.hiatt@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b24fdca153f0fd6c2d0f1f60c7606a53b6db575
Author: Don Hiatt <don.hiatt@intel.com>
Date:   Mon Oct 2 11:04:48 2017 -0700

    IB/core: Do not warn on lid conversions for OPA
    
    commit 6588e412fe872ed81f3fb8d9b4561a66ecb763d0 upstream.
    
    On OPA devices the user_mad recv_handler can receive 32Bit LIDs
    (e.g. OPA_PERMISSIVE_LID) and it is okay to lose the upper 16 bits
    of the LID as this information is obtained elsewhere. Do not issue
    a warning when calling ib_lid_be16() in this case by masking out
    the upper 16Bits.
    
    [75667.310846] ------------[ cut here ]------------
    [75667.316447] WARNING: CPU: 0 PID: 1718 at ./include/rdma/ib_verbs.h:3799 recv_handler+0x15a/0x170 [ib_umad]
    [75667.327640] Modules linked in: ib_ipoib hfi1(E) rdmavt(E) rdma_ucm(E) ib_ucm(E) rdma_cm(E) ib_cm(E) iw_cm(E) ib_umad(E) ib_uverbs(E) ib_core(E) libiscsi scsi_transport_iscsi dm_mirror dm_region_hash dm_log dm_mod dax x86_pkg_temp_thermal intel_powerclamp coretemp kvm irqbypass crct10dif_pclmul crc32_pclmul ghash_clmulni_intel pcbc aesni_intel mei_me ipmi_si iTCO_wdt iTCO_vendor_support crypto_simd ipmi_devintf pcspkr mei sg i2c_i801 glue_helper lpc_ich shpchp ioatdma mfd_core wmi ipmi_msghandler cryptd acpi_power_meter acpi_pad nfsd auth_rpcgss nfs_acl lockd grace sunrpc ip_tables xfs libcrc32c sd_mod mgag200 drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops ttm drm igb ptp ahci libahci pps_core crc32c_intel libata dca i2c_algo_bit i2c_core [last unloaded: ib_core]
    [75667.407704] CPU: 0 PID: 1718 Comm: kworker/0:1H Tainted: G        W I E   4.13.0-rc7+ #1
    [75667.417310] Hardware name: Intel Corporation S2600WT2/S2600WT2, BIOS SE5C610.86B.01.01.0008.021120151325 02/11/2015
    [75667.429555] Workqueue: ib-comp-wq ib_cq_poll_work [ib_core]
    [75667.436360] task: ffff88084a718000 task.stack: ffffc9000a424000
    [75667.443549] RIP: 0010:recv_handler+0x15a/0x170 [ib_umad]
    [75667.450090] RSP: 0018:ffffc9000a427ce8 EFLAGS: 00010286
    [75667.456508] RAX: 00000000ffffffff RBX: ffff88085159ce80 RCX: 0000000000000000
    [75667.465094] RDX: ffff88085a47b068 RSI: 0000000000000000 RDI: ffff88085159cf00
    [75667.473668] RBP: ffffc9000a427d38 R08: 000000000001efc0 R09: ffff88085159ce80
    [75667.482228] R10: ffff88085f007480 R11: ffff88084acf20e8 R12: ffff88085a47b020
    [75667.490824] R13: ffff881056842e10 R14: ffff881056840200 R15: ffff88104c8d0800
    [75667.499390] FS:  0000000000000000(0000) GS:ffff88085f400000(0000) knlGS:0000000000000000
    [75667.509028] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [75667.516080] CR2: 00007f9e4b3d9000 CR3: 0000000001c09000 CR4: 00000000001406f0
    [75667.524664] Call Trace:
    [75667.528044]  ? find_mad_agent+0x7c/0x1b0 [ib_core]
    [75667.534031]  ? ib_mark_mad_done+0x73/0xa0 [ib_core]
    [75667.540142]  ib_mad_recv_done+0x423/0x9b0 [ib_core]
    [75667.546215]  __ib_process_cq+0x5d/0xb0 [ib_core]
    [75667.552007]  ib_cq_poll_work+0x20/0x60 [ib_core]
    [75667.557766]  process_one_work+0x149/0x360
    [75667.562844]  worker_thread+0x4d/0x3c0
    [75667.567529]  kthread+0x109/0x140
    [75667.571713]  ? rescuer_thread+0x380/0x380
    [75667.576775]  ? kthread_park+0x60/0x60
    [75667.581447]  ret_from_fork+0x25/0x30
    [75667.586014] Code: 43 4a 0f b6 45 c6 88 43 4b 48 8b 45 b0 48 89 43 4c 48 8b 45 b8 48 89 43 54 8b 45 c0 0f c8 89 43 5c e9 79 ff ff ff e8 16 4e fa e0 <0f> ff e9 42 ff ff ff 66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00
    [75667.608323] ---[ end trace cf26df27c9597264 ]---
    
    Fixes: 62ede7779904 ("Add OPA extended LID support")
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Don Hiatt <don.hiatt@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75e63076249aedd3a7a3c38677d135cc146f1f4b
Author: Sandipan Das <sandipan@linux.vnet.ibm.com>
Date:   Fri Nov 17 15:27:28 2017 -0800

    include/linux/compiler-clang.h: handle randomizable anonymous structs
    
    commit 4ca59b14e588f873795a11cdc77a25c686a29d23 upstream.
    
    The GCC randomize layout plugin can randomize the member offsets of
    sensitive kernel data structures.  To use this feature, certain
    annotations and members are added to the structures which affect the
    member offsets even if this plugin is not used.
    
    All of these structures are completely randomized, except for task_struct
    which leaves out some of its members.  All the other members are wrapped
    within an anonymous struct with the __randomize_layout attribute.  This is
    done using the randomized_struct_fields_start and
    randomized_struct_fields_end defines.
    
    When the plugin is disabled, the behaviour of this attribute can vary
    based on the GCC version.  For GCC 5.1+, this attribute maps to
    __designated_init otherwise it is just an empty define but the anonymous
    structure is still present.  For other compilers, both
    randomized_struct_fields_start and randomized_struct_fields_end default
    to empty defines meaning the anonymous structure is not introduced at
    all.
    
    So, if a module compiled with Clang, such as a BPF program, needs to
    access task_struct fields such as pid and comm, the offsets of these
    members as recognized by Clang are different from those recognized by
    modules compiled with GCC.  If GCC 4.6+ is used to build the kernel,
    this can be solved by introducing appropriate defines for Clang so that
    the anonymous structure is seen when determining the offsets for the
    members.
    
    Link: http://lkml.kernel.org/r/20171109064645.25581-1-sandipan@linux.vnet.ibm.com
    Signed-off-by: Sandipan Das <sandipan@linux.vnet.ibm.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Alexei Starovoitov <ast@fb.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 248b0ec5ad2501a35f2603384f1c7c7cee79eb02
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Wed Nov 22 15:55:21 2017 +0100

    drm/amdgpu: Set adev->vcn.irq.num_types for VCN
    
    commit 89ce6e0afee8eafa679093207dabd717af9d09c5 upstream.
    
    We were setting adev->uvd.irq.num_types instead.
    
    Fixes: 9b257116e784 ("drm/amdgpu: add vcn enc irq support")
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 802328da073a0ba36a1cde899c48a5f07732d4aa
Author: Leo Liu <leo.liu@amd.com>
Date:   Tue Nov 21 09:08:07 2017 -0500

    drm/amdgpu: move UVD/VCE and VCN structure out from union
    
    commit b43aaee69d4327d05e7624d9471c17d015b4d67d upstream.
    
    With the enablement of VCN Dec and Enc from user space, User space queries
    kernel for the IP information, if HW has UVD/VCE, the info comes from these
    IP blocks, but this could end up mis-interpret for VCN when they are in the
    union, the other way same when HW with VCN block.
    
    Signed-off-by: Leo Liu <leo.liu@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Fixes: 95d0906f8506 ("drm/amdgpu: add initial vcn support and decode tests")
    Reviewed-and-Tested-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8f74d70634aa0dfe063d0e445f683b0545fa5b8
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Nov 8 17:25:04 2017 +0200

    drm/edid: Don't send non-zero YQ in AVI infoframe for HDMI 1.x sinks
    
    commit 9271c0ca573e02a360b636ecd8cb408852f4e9f6 upstream.
    
    Apparently some sinks look at the YQ bits even when receiving RGB,
    and they get somehow confused when they see a non-zero YQ value.
    So we can't just blindly follow CEA-861-F and set YQ to match the
    RGB range.
    
    Unfortunately there is no good way to tell whether the sink
    designer claims to have read CEA-861-F. The CEA extension block
    revision number has generally been stuck at 3 since forever,
    and even a very recently manufactured sink might be based on
    an old design so the manufacturing date doesn't seem like
    something we can use. In lieu of better information let's
    follow CEA-861-F only for HDMI 2.0 sinks, since HDMI 2.0 is
    based on CEA-861-F. For HDMI 1.x sinks we'll always set YQ=0.
    
    The alternative would of course be to always set YQ=0. And if
    we ever encounter a HDMI 2.0+ sink with this bug that's what
    we'll probably have to do.
    
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Eric Anholt <eric@anholt.net>
    Cc: Neil Kownacki <njkkow@gmail.com>
    Reported-by: Neil Kownacki <njkkow@gmail.com>
    Tested-by: Neil Kownacki <njkkow@gmail.com>
    Fixes: fcc8a22cc905 ("drm/edid: Set YQ bits in the AVI infoframe according to CEA-861-F")
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=101639
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171108152504.12596-1-ville.syrjala@linux.intel.com
    Acked-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e685410c5f30a19c54d652e033942ed270d31b61
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Fri Nov 10 17:38:34 2017 +0100

    drm/fsl-dcu: Don't set connector DPMS property
    
    commit daee54263c1202cbdab85c5e15ae30b417602efb upstream.
    
    Since commit 4a97a3da420b ("drm: Don't update property values for atomic
    drivers") atomic drivers must not update property values as properties
    are read from the state instead. To catch remaining users, the
    drm_object_property_set_value() function now throws a warning when
    called by atomic drivers on non-immutable properties, and we hit that
    warning when creating connectors.
    
    The easy fix is to just remove the drm_object_property_set_value() as it
    is used here to set the initial value of the connector's DPMS property
    to OFF. The DPMS property applies on top of the connector's state crtc
    pointer (initialized to NULL) that is the main connector on/off control,
    and should thus default to ON.
    
    Fixes: 4a97a3da420b ("drm: Don't update property values for atomic drivers")
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dde499d3cf6edea946ff59cb5d72e4f9ef21f3fd
Author: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
Date:   Tue Nov 28 12:16:03 2017 +0100

    drm/fb_helper: Disable all crtc's when initial setup fails.
    
    commit 52dd06506e9bbc2a37b352df7dfc5468f8da21fd upstream.
    
    Some drivers like i915 start with crtc's enabled, but with deferred
    fbcon setup they were no longer disabled as part of fbdev setup.
    Headless units could no longer enter pc3 state because the crtc was
    still enabled.
    
    Fix this by calling restore_fbdev_mode when we would have called
    it otherwise once during initial fbdev setup.
    
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Fixes: ca91a2758fce ("drm/fb-helper: Support deferred setup")
    Reported-by: Thomas Voegtle <tv@lio96.de>
    Tested-by: Thomas Voegtle <tv@lio96.de>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171128111603.62757-1-maarten.lankhorst@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4c84b504e02f6f7103cdc67b1adbe304910c104
Author: Rex Zhu <Rex.Zhu@amd.com>
Date:   Fri Nov 17 16:41:16 2017 +0800

    drm/amd/pp: fix typecast error in powerplay.
    
    commit 8d8258bdab735d9f3c4b78e091ecfbb2b2b1f2ca upstream.
    
    resulted in unexpected data truncation
    
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Rex Zhu <Rex.Zhu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78f4bb6e965ddd9f60f607dfaf6e20109da84f6d
Author: Christian König <christian.koenig@amd.com>
Date:   Mon Oct 30 14:57:43 2017 +0100

    drm/ttm: once more fix ttm_buffer_object_transfer
    
    commit 4d98e5ee6084f6d7bc578c5d5f86de7156aaa4cb upstream.
    
    When the mutex is locked just in the moment we copy it we end up with a
    warning that we release a locked mutex.
    
    Fix this by properly reinitializing the mutex.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5e69000aa80880491ca4a613679bd21c60b048b
Author: Peter Griffin <peter.griffin@linaro.org>
Date:   Tue Aug 15 15:14:25 2017 +0100

    drm/hisilicon: Ensure LDI regs are properly configured.
    
    commit a2f042430784d86eb2b7a6d2a869f552da30edba upstream.
    
    This patch fixes the following soft lockup:
      BUG: soft lockup - CPU#0 stuck for 23s! [weston:307]
    
    On weston idle-timeout the IP is powered down and reset
    asserted. On weston resume we get a massive vblank
    IRQ storm due to the LDI registers having lost some state.
    
    This state loss is caused by ade_crtc_atomic_begin() not
    calling ade_ldi_set_mode(). With this patch applied
    resuming from Weston idle-timeout works well.
    
    Signed-off-by: Peter Griffin <peter.griffin@linaro.org>
    Tested-by: John Stultz <john.stultz@linaro.org>
    Reviewed-by: Xinliang Liu <xinliang.liu@linaro.org>
    Signed-off-by: Xinliang Liu <xinliang.liu@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87139913c0e2d0a7270868a7a36d549dfd3fad5d
Author: Jonathan Liu <net147@gmail.com>
Date:   Mon Aug 7 21:55:45 2017 +1000

    drm/panel: simple: Add missing panel_simple_unprepare() calls
    
    commit f3621a8eb59a913612c8e6e37d81f16b649f8b6c upstream.
    
    During panel removal or system shutdown panel_simple_disable() is called
    which disables the panel backlight but the panel is still powered due to
    missing calls to panel_simple_unprepare().
    
    Fixes: d02fd93e2cd8 ("drm/panel: simple - Disable panel on shutdown")
    Signed-off-by: Jonathan Liu <net147@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170807115545.27747-1-net147@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8153a0fc1212157a4bf8b303cbf51993ff87aa7c
Author: Roman Kapl <rka@sysgo.com>
Date:   Mon Oct 30 11:56:13 2017 +0100

    drm/radeon: fix atombios on big endian
    
    commit 4f626a4ac8f57ddabf06d03870adab91e463217f upstream.
    
    The function for byteswapping the data send to/from atombios was buggy for
    num_bytes not divisible by four. The function must be aware of the fact
    that after byte-swapping the u32 units, valid bytes might end up after the
    num_bytes boundary.
    
    This patch was tested on kernel 3.12 and allowed us to sucesfully use
    DisplayPort on and Radeon SI card. Namely it fixed the link training and
    EDID readout.
    
    The function is patched both in radeon and amd drivers, since the functions
    and the fixes are identical.
    
    Signed-off-by: Roman Kapl <rka@sysgo.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3c5870862d95ff198a1902c3d7bd2a548b89ea7
Author: Jyri Sarha <jsarha@ti.com>
Date:   Thu Oct 12 12:19:46 2017 +0300

    drm/tilcdc: Precalculate total frametime in tilcdc_crtc_set_mode()
    
    commit ce99f7206c9105851d97202ed08c058af6f11ac4 upstream.
    
    We need the total frame refresh time to check if we are too close to
    vertical sync when updating the two framebuffer DMA registers and risk
    a collision. This new method is more accurate that the previous that
    based on mode's vrefresh value, which itself is inaccurate or may not
    even be initialized.
    
    Reported-by: Kevin Hao <kexin.hao@windriver.com>
    Fixes: 11abbc9f39e0 ("drm/tilcdc: Set framebuffer DMA address to HW only if CRTC is enabled")
    Signed-off-by: Jyri Sarha <jsarha@ti.com>
    Reviewed-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5851fdb17dda5f0854417f15a0c9c833a92dcc6
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Oct 23 18:25:40 2017 +0300

    drm/vblank: Tune drm_crtc_accurate_vblank_count() WARN down to a debug
    
    commit a111fbc4c44d2981f1a8fef64418685be5e30280 upstream.
    
    Since commit 632c6e4edef1 ("drm/vblank: Fix flip event vblank count")
    even drivers that don't implement accurate vblank timestamps will end
    up using drm_crtc_accurate_vblank_count(). That leads to a WARN every
    time drm_crtc_arm_vblank_event() gets called. The could be as often
    as every frame for each active crtc.
    
    Considering drm_crtc_accurate_vblank_count() is never any worse than
    the drm_vblank_count() we used previously, let's just skip the WARN
    unless DRM_UT_VBL is enabled. That way people won't be bothered by
    this unless they're debugging vblank code. And let's also change it
    to WARN_ONCE() so that even when you're debugging vblank code you
    won't get drowned by constant WARNs.
    
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: "Szyprowski, Marek" <m.szyprowski@samsung.com>
    Cc: Andrzej Hajda <a.hajda@samsung.com>
    Reported-by: Andrzej Hajda <a.hajda@samsung.com>
    Fixes: 632c6e4edef1 ("drm/vblank: Fix flip event vblank count")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171023152540.15364-1-ville.syrjala@linux.intel.com
    Acked-by: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c33c32d39b9d11338624d4a7bad4e75bf64fbf8
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Tue Oct 10 16:33:22 2017 +0300

    drm/vblank: Fix flip event vblank count
    
    commit 632c6e4edef17c40bba3be67c980d959790d142f upstream.
    
    On machines where the vblank interrupt fires some time after the start
    of vblank (or we just manage to race with the vblank interrupt handler)
    we will currently stuff a stale vblank counter value into the flip event,
    and thus we'll prematurely complete the flip.
    
    Switch over to drm_crtc_accurate_vblank_count() to make sure we have an
    up to date counter value, crucially also remember to add the +1 so that
    the delayed vblank interrupt won't complete the flip prematurely.
    
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Suggested-by: Daniel Vetter <daniel@ffwll.ch>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171010133322.24029-1-ville.syrjala@linux.intel.com
    Reviewed-by: Daniel Vetter <daniel@ffwll.ch> #irc
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cd3e4a3e697cca84f27a0af68ba59a6ab00892f
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Fri Nov 3 16:00:35 2017 +0100

    drm/ttm: Always and only destroy bo->ttm_resv in ttm_bo_release_list
    
    commit e1fc12c5d9ad06a2a74e97a91f1b0c5f4c723b50 upstream.
    
    Fixes a use-after-free due to a race condition in
    ttm_bo_cleanup_refs_and_unlock, which allows one task to reserve a BO
    and destroy its ttm_resv while another task is waiting for it to signal
    in reservation_object_wait_timeout_rcu.
    
    v2:
    * Always initialize bo->ttm_resv in ttm_bo_init_reserved
     (Christian König)
    
    Fixes: 0d2bd2ae045d "drm/ttm: fix memory leak while individualizing BOs"
    Reviewed-by: Chunming Zhou <david1.zhou@amd.com> # v1
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99b0ea0391d1b49ed4a944a07ad57ee448b0541c
Author: Christian König <christian.koenig@amd.com>
Date:   Fri Oct 13 17:24:31 2017 +0200

    drm/amdgpu: reserve root PD while releasing it
    
    commit 2642cf110d08a403f585a051e4cbf45a90b3adea upstream.
    
    Otherwise somebody could try to evict it at the same time and try to use
    half torn down structures.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-and-Tested-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 509536b227fb35ed34d144ff4280aa78605ab85e
Author: Christian König <christian.koenig@amd.com>
Date:   Mon Sep 4 21:02:45 2017 +0200

    dma-buf: make reservation_object_copy_fences rcu save
    
    commit 39e16ba16c147e662bf9fbcee9a99d70d420382f upstream.
    
    Stop requiring that the src reservation object is locked for this operation.
    
    Acked-by: Chunming Zhou <david1.zhou@amd.com>
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1504551766-5093-1-git-send-email-deathsimple@vodafone.de
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45d1765032b645a2e86a606f7d173d4bf97a9810
Author: Christian König <christian.koenig@amd.com>
Date:   Mon Sep 4 20:58:45 2017 +0200

    drm/ttm: fix ttm_bo_cleanup_refs_or_queue once more
    
    commit 378e2d5b504fe0231c557751e58b80fcf717cc20 upstream.
    
    With shared reservation objects __ttm_bo_reserve() can easily fail even on
    destroyed BOs. This prevents correct handling when we need to individualize
    the reservation object.
    
    Fix this by individualizing the object before even trying to reserve it.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Acked-by: Chunming Zhou <david1.zhou@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d48221f3399764748f706cc1126b5d6465e27d87
Author: Ken Wang <Ken.Wang@amd.com>
Date:   Wed Nov 8 14:48:50 2017 +0800

    drm/amdgpu: Remove check which is not valid for certain VBIOS
    
    commit ab6613b7eaefe85dadfc86025e901c55d71c0379 upstream.
    
    Fixes vbios fetching on certain headless boards.
    
    Signed-off-by: Ken Wang <Ken.Wang@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecd08e684cd1d138bf894e632e0d141f5e7c4140
Author: ozeng <oak.zeng@amd.com>
Date:   Tue Jun 6 10:53:28 2017 -0500

    drm/amdgpu: Properly allocate VM invalidate eng v2
    
    commit c5066129af4436ab0da8eefe4289774a5409706d upstream.
    
    v1: Properly allocate TLB invalidation engine to avoid conflict.
    v2: Added comments to codes
    
    Signed-off-by: Oak Zeng <Oak.Zeng@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Acked-by: Christian Konig <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a00b7ea3df52da50097d22c9eb3b0eba3e504838
Author: Christian König <christian.koenig@amd.com>
Date:   Tue Oct 31 09:36:13 2017 +0100

    drm/amdgpu: fix error handling in amdgpu_bo_do_create
    
    commit a695e43712242c354748e9bae5d137d4337a7694 upstream.
    
    The bo structure is freed up in case of an error, so we can't do any
    accounting if that happens.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 402b1de75ce06404c96cf803e1fe0b5c685f7797
Author: Ken Wang <Ken.Wang@amd.com>
Date:   Fri Sep 29 15:41:43 2017 +0800

    drm/amdgpu: correct reference clock value on vega10
    
    commit 76d6172b6fab16455af4b67bb18a3f66011592f8 upstream.
    
    Old value from bringup was wrong.
    
    Signed-off-by: Ken Wang <Ken.Wang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f182df2eacbe52100b82e193a7917fdbb4312dd1
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat Sep 30 11:14:13 2017 +0300

    drm/amdgpu: Potential uninitialized variable in amdgpu_vm_update_directories()
    
    commit 78aa02c713fcf19e9bc8511ab61a5fd6c877cc01 upstream.
    
    After commit ea09729c9302 ("drm/amdgpu: rework page directory filling
    v2") then it becomes a lot harder to verify that "r" is initialized.  My
    static checker complains and so I've reviewed the code.  It does look
    like it might be buggy... Anyway, it doesn't hurt to set "r" to zero
    at the start.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d8b3a9b7853dbbf12c853674ef4403481ab1513
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat Sep 30 11:13:28 2017 +0300

    drm/amdgpu: potential uninitialized variable in amdgpu_vce_ring_parse_cs()
    
    commit 40a9960b046290939b56ce8e51f365258f27f264 upstream.
    
    We shifted some code around in commit 9cca0b8e5df0 ("drm/amdgpu: move
    amdgpu_cs_sysvm_access_required into find_mapping") and now my static
    checker complains that "r" might not be initialized at the end of the
    function.  I've reviewed the code, and that seems possible, but it's
    also possible I may have missed something.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23506bc7fdb2313c63d8811967fcf82d5764b973
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Nov 14 17:19:29 2017 -0500

    Revert "drm/radeon: dont switch vt on suspend"
    
    commit 18c437caa5b18a235dd65cec224eab54bebcee65 upstream.
    
    Fixes distorted colors on some cards on resume from suspend.
    
    This reverts commit b9729b17a414f99c61f4db9ac9f9ed987fa0cbfe.
    
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=98832
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=99163
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=107001
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e19169a88be15d6c845e93d62e448ee06a14b2f
Author: Jeff Lien <jeff.lien@wdc.com>
Date:   Tue Nov 21 10:44:37 2017 -0600

    nvme-pci: add quirk for delay before CHK RDY for WDC SN200
    
    commit 8c97eeccf0ad8783c057830119467b877bdfced7 upstream.
    
    And increase the existing delay to cover this device as well.
    
    Signed-off-by: Jeff Lien <jeff.lien@wdc.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de120fc9624162a3507091d6b92dd9037440c9d8
Author: Peter Rosin <peda@axentia.se>
Date:   Mon Nov 27 17:31:00 2017 +0100

    hwmon: (jc42) optionally try to disable the SMBUS timeout
    
    commit 68615eb01f82256c19e41967bfb3eef902f77033 upstream.
    
    With a nxp,se97 chip on an atmel sama5d31 board, the I2C adapter driver
    is not always capable of avoiding the 25-35 ms timeout as specified by
    the SMBUS protocol. This may cause silent corruption of the last bit of
    any transfer, e.g. a one is read instead of a zero if the sensor chip
    times out. This also affects the eeprom half of the nxp-se97 chip, where
    this silent corruption was originally noticed. Other I2C adapters probably
    suffer similar issues, e.g. bit-banging comes to mind as risky...
    
    The SMBUS register in the nxp chip is not a standard Jedec register, but
    it is not special to the nxp chips either, at least the atmel chips
    have the same mechanism. Therefore, do not special case this on the
    manufacturer, it is opt-in via the device property anyway.
    
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cafc451a955c44ec7eba47bae340d9ca5ccb483
Author: Rui Hua <huarui.dev@gmail.com>
Date:   Fri Nov 24 15:14:26 2017 -0800

    bcache: recover data from backing when data is clean
    
    commit e393aa2446150536929140739f09c6ecbcbea7f0 upstream.
    
    When we send a read request and hit the clean data in cache device, there
    is a situation called cache read race in bcache(see the commit in the tail
    of cache_look_up(), the following explaination just copy from there):
    The bucket we're reading from might be reused while our bio is in flight,
    and we could then end up reading the wrong data. We guard against this
    by checking (in bch_cache_read_endio()) if the pointer is stale again;
    if so, we treat it as an error (s->iop.error = -EINTR) and reread from
    the backing device (but we don't pass that error up anywhere)
    
    It should be noted that cache read race happened under normal
    circumstances, not the circumstance when SSD failed, it was counted
    and shown in  /sys/fs/bcache/XXX/internal/cache_read_races.
    
    Without this patch, when we use writeback mode, we will never reread from
    the backing device when cache read race happened, until the whole cache
    device is clean, because the condition
    (s->recoverable && (dc && !atomic_read(&dc->has_dirty))) is false in
    cached_dev_read_error(). In this situation, the s->iop.error(= -EINTR)
    will be passed up, at last, user will receive -EINTR when it's bio end,
    this is not suitable, and wield to up-application.
    
    In this patch, we use s->read_dirty_data to judge whether the read
    request hit dirty data in cache device, it is safe to reread data from
    the backing device when the read request hit clean data. This can not
    only handle cache read race, but also recover data when failed read
    request from cache device.
    
    [edited by mlyle to fix up whitespace, commit log title, comment
    spelling]
    
    Fixes: d59b23795933 ("bcache: only permit to recovery read error when cache device is clean")
    Signed-off-by: Hua Rui <huarui.dev@gmail.com>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Coly Li <colyli@suse.de>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 260c6625c85e7e1a5db0b5ece9944a4010c9bade
Author: Coly Li <colyli@suse.de>
Date:   Mon Oct 30 14:46:31 2017 -0700

    bcache: only permit to recovery read error when cache device is clean
    
    commit d59b23795933678c9638fd20c942d2b4f3cd6185 upstream.
    
    When bcache does read I/Os, for example in writeback or writethrough mode,
    if a read request on cache device is failed, bcache will try to recovery
    the request by reading from cached device. If the data on cached device is
    not synced with cache device, then requester will get a stale data.
    
    For critical storage system like database, providing stale data from
    recovery may result an application level data corruption, which is
    unacceptible.
    
    With this patch, for a failed read request in writeback or writethrough
    mode, recovery a recoverable read request only happens when cache device
    is clean. That is to say, all data on cached device is up to update.
    
    For other cache modes in bcache, read request will never hit
    cached_dev_read_error(), they don't need this patch.
    
    Please note, because cache mode can be switched arbitrarily in run time, a
    writethrough mode might be switched from a writeback mode. Therefore
    checking dc->has_data in writethrough mode still makes sense.
    
    Changelog:
    V4: Fix parens error pointed by Michael Lyle.
    v3: By response from Kent Oversteet, he thinks recovering stale data is a
        bug to fix, and option to permit it is unnecessary. So this version
        the sysfs file is removed.
    v2: rename sysfs entry from allow_stale_data_on_failure  to
        allow_stale_data_on_failure, and fix the confusing commit log.
    v1: initial patch posted.
    
    [small change to patch comment spelling by mlyle]
    
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Reported-by: Arne Wolf <awolf@lenovo.com>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Cc: Kent Overstreet <kent.overstreet@gmail.com>
    Cc: Nix <nix@esperi.org.uk>
    Cc: Kai Krakow <hurikhan77@gmail.com>
    Cc: Eric Wheeler <bcache@lists.ewheeler.net>
    Cc: Junhui Tang <tang.junhui@zte.com.cn>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5b41b366273ff51c7a62643f8667784eb349fba
Author: Huacai Chen <chenhc@lemote.com>
Date:   Fri Nov 24 15:14:25 2017 -0800

    bcache: Fix building error on MIPS
    
    commit cf33c1ee5254c6a430bc1538232b49c3ea13e613 upstream.
    
    This patch try to fix the building error on MIPS. The reason is MIPS
    has already defined the PTR macro, which conflicts with the PTR macro
    in include/uapi/linux/bcache.h.
    
    [fixed by mlyle: corrected a line-length issue]
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e8aca2095790b90217b759a0d5e2ec5138bbfd2
Author: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
Date:   Thu Nov 23 09:08:57 2017 +0530

    cxl: Check if vphb exists before iterating over AFU devices
    
    commit 12841f87b7a8ceb3d54f171660f72a86941bfcb3 upstream.
    
    During an eeh a kernel-oops is reported if no vPHB is allocated to the
    AFU. This happens as during AFU init, an error in creation of vPHB is
    a non-fatal error. Hence afu->phb should always be checked for NULL
    before iterating over it for the virtual AFU pci devices.
    
    This patch fixes the kenel-oops by adding a NULL pointer check for
    afu->phb before it is dereferenced.
    
    Fixes: 9e8df8a21963 ("cxl: EEH support")
    Signed-off-by: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
    Acked-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
    Acked-by: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c71f896bb8f3b7bb228ece70341b26b2ff32ae9
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Nov 22 12:28:17 2017 +0100

    i2c: i801: Fix Failed to allocate irq -2147483648 error
    
    commit 6e0c9507bf51e1517a80ad0ac171e5402528fcef upstream.
    
    On Apollo Lake devices the BIOS does not set up IRQ routing for the i801
    SMBUS controller IRQ, so we end up with dev->irq set to IRQ_NOTCONNECTED.
    
    Detect this and do not try to use the irq in this case silencing:
    i801_smbus 0000:00:1f.1: Failed to allocate irq -2147483648: -107
    
    BugLink: https://communities.intel.com/thread/114759
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52d9bb958f080f0a548139676dbf6a87a40af2a0
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Fri Nov 24 07:47:50 2017 +0100

    eeprom: at24: check at24_read/write arguments
    
    commit d9bcd462daf34aebb8de9ad7f76de0198bb5a0f0 upstream.
    
    So far we completely rely on the caller to provide valid arguments.
    To be on the safe side perform an own sanity check.
    
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 656155d07658e84ac6ab6f6eceac67b807d6fedb
Author: Bartosz Golaszewski <brgl@bgdev.pl>
Date:   Mon Nov 27 22:06:13 2017 +0100

    eeprom: at24: correctly set the size for at24mac402
    
    commit 5478e478eee3b096b8d998d4ed445da30da2dfbc upstream.
    
    There's an ilog2() expansion in AT24_DEVICE_MAGIC() which rounds down
    the actual size of EUI-48 byte array in at24mac402 eeproms to 4 from 6,
    making it impossible to read it all.
    
    Fix it by manually adjusting the value in probe().
    
    This patch contains a temporary fix that is suitable for stable
    branches. Eventually we'll probably remove the call to ilog2() while
    converting the magic values to actual structs.
    
    Fixes: 0b813658c115 ("eeprom: at24: add support for at24mac series")
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ad53c57966a1a295c0ea5a8a7d6e85d3d75253a
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Mon Nov 27 20:46:22 2017 +0100

    eeprom: at24: fix reading from 24MAC402/24MAC602
    
    commit 644a1f19c6c8393d0c4168a5adf79056da6822eb upstream.
    
    Chip datasheet mentions that word addresses other than the actual
    start position of the MAC delivers undefined results. So fix this.
    Current implementation doesn't work due to this wrong offset.
    
    Fixes: 0b813658c115 ("eeprom: at24: add support for at24mac series")
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 450d75882552d59bb03b1ccb0999e98f5b227532
Author: Lv Zheng <lv.zheng@intel.com>
Date:   Tue Sep 26 16:54:09 2017 +0800

    ACPI / EC: Fix regression related to PM ops support in ECDT device
    
    commit a64a62ce9a380213dc9e192f762266d70c9b40ec upstream.
    
    On platforms (ASUS X550ZE and possibly all ASUS X series) with valid ECDT
    EC but invalid DSDT EC, EC PM ops won't be invoked as ECDT EC is not an
    ACPI device. Thus the following commit actually removed post-resume
    acpi_ec_enable_event() invocation for such platforms, and triggered a
    regression on them that after being resumed, EC (actually should be ECDT)
    driver stops handling EC events:
    
     Commit: c2b46d679b30c5c0d7eb47a21085943242bdd8dc
     Subject: ACPI / EC: Add PM operations to improve event handling for resume process
    
    Notice that the root cause actually is "ECDT is not an ACPI device" rather
    than "the timing of acpi_ec_enable_event() invocation", this patch fixes
    this issue by enumerating ECDT EC as an ACPI device. Due to the existence
    of the noirq stage, the ability of tuning the timing of
    acpi_ec_enable_event() invocation is still meaningful.
    
    This patch is a little bit different from the posted fix by moving
    acpi_config_boot_ec() from acpi_ec_ecdt_start() to acpi_ec_add() to make
    sure that EC event handling won't be stopped as long as the ACPI EC driver
    is bound. Thus the following sequence shouldn't disable EC event handling:
    unbind,suspend,resume,bind.
    
    Fixes: c2b46d679b30 (ACPI / EC: Add PM operations to improve event handling for resume process)
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=196847
    Reported-by: Luya Tshimbalanga <luya@fedoraproject.org>
    Tested-by: Luya Tshimbalanga <luya@fedoraproject.org>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ef1173c4864c06b6104f386c2694aa740cf02ee
Author: Bastian Stender <bst@pengutronix.de>
Date:   Tue Nov 28 09:24:07 2017 +0100

    mmc: core: prepend 0x to OCR entry in sysfs
    
    commit c892b0d81705c566f575e489efc3c50762db1bde upstream.
    
    The sysfs entry "ocr" was missing the 0x prefix to identify it as hex
    formatted.
    
    Fixes: 5fb06af7a33b ("mmc: core: Extend sysfs with OCR register")
    Signed-off-by: Bastian Stender <bst@pengutronix.de>
    [Ulf: Amended change to also cover SD-cards]
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6aa6389263d0db52ea674ed45eb591d21585eca
Author: Bastian Stender <bst@pengutronix.de>
Date:   Tue Nov 28 09:24:06 2017 +0100

    mmc: core: prepend 0x to pre_eol_info entry in sysfs
    
    commit 80a780a167d9267c72867b806142bd6ec69ba123 upstream.
    
    The sysfs entry "pre_eol_info" was missing the 0x prefix to identify it
    as hex formatted.
    
    Fixes: 46bc5c408e4e ("mmc: core: Export device lifetime information through sysfs")
    Signed-off-by: Bastian Stender <bst@pengutronix.de>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64d1df6f018e728774bdf5d1aeb576d1c8d1872d
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Nov 21 15:42:30 2017 +0200

    mmc: block: Ensure that debugfs files are removed
    
    commit f9f0da98819503b06b35e61869d18cf3a8cd3323 upstream.
    
    The card is not necessarily being removed, but the debugfs files must be
    removed when the driver is removed, otherwise they will continue to exist
    after unbinding the card from the driver. e.g.
    
      # echo "mmc1:0001" > /sys/bus/mmc/drivers/mmcblk/unbind
      # cat /sys/kernel/debug/mmc1/mmc1\:0001/ext_csd
      [  173.634584] BUG: unable to handle kernel NULL pointer dereference at 0000000000000050
      [  173.643356] IP: mmc_ext_csd_open+0x5e/0x170
    
    A complication is that the debugfs_root may have already been removed, so
    check for that too.
    
    Fixes: 627c3ccfb46a ("mmc: debugfs: Move block debugfs into block module")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94497458fbb519dbc230e5156f58d4b3a49ba0c1
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Nov 21 15:42:29 2017 +0200

    mmc: core: Do not leave the block driver in a suspended state
    
    commit ebe7dd45cf49e3b49cacbaace17f9f878f21fbea upstream.
    
    The block driver must be resumed if the mmc bus fails to suspend the card.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 957c27d45611ad4ef924840346bc338b8f3c870b
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Nov 21 15:42:28 2017 +0200

    mmc: block: Check return value of blk_get_request()
    
    commit fb8e456e547ed2c699f64665bd8a3b9bde7b9728 upstream.
    
    blk_get_request() can fail, always check the return value.
    
    Fixes: 0493f6fe5bde ("mmc: block: Move boot partition locking into a driver op")
    Fixes: 3ecd8cf23f88 ("mmc: block: move multi-ioctl() to use block layer")
    Fixes: 614f0388f580 ("mmc: block: move single ioctl() commands to block requests")
    Fixes: 627c3ccfb46a ("mmc: debugfs: Move block debugfs into block module")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d8d2b6373c19f85bab6af1702563b50e17b2cf6
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Nov 21 15:42:27 2017 +0200

    mmc: block: Fix missing blk_put_request()
    
    commit 34c089e806793a66e450b11bd167db6047399fcd upstream.
    
    Ensure blk_get_request() is paired with blk_put_request().
    
    Fixes: 0493f6fe5bde ("mmc: block: Move boot partition locking into a driver op")
    Fixes: 627c3ccfb46a ("mmc: debugfs: Move block debugfs into block module")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4162b2973c1c6e49d7b193e572dec691233115c3
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Mon Nov 27 11:28:50 2017 +0100

    mmc: sdhci: Avoid swiotlb buffer being full
    
    commit 250dcd11466e06df64b92520e2c56bdae453581b upstream.
    
    The commit de3ee99b097d ("mmc: Delete bounce buffer handling") deletes the
    bounce buffer handling, but also causes the max_req_size for sdhci to be
    increased, in case when max_segs == 1. This causes errors for sdhci-pci
    Ricoh variant, about the swiotlb buffer to become full.
    
    Fix the issue, by taking IO_TLB_SEGSIZE and IO_TLB_SHIFT into account when
    deciding the max_req_size for sdhci.
    
    Reported-by: Jiri Slaby <jslaby@suse.cz>
    Fixes: de3ee99b097d ("mmc: Delete bounce buffer handling")
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Tested-by: Jiri Slaby <jslaby@suse.cz>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81b3019c35d650e7570ff016ba0732ba6d62c466
Author: Dr. David Alan Gilbert <dgilbert@redhat.com>
Date:   Fri Nov 17 11:52:50 2017 +0000

    KVM: lapic: Fixup LDR on load in x2apic
    
    commit 12806ba937382fdfdbad62a399aa2dce65c10fcd upstream.
    
    In x2apic mode the LDR is fixed based on the ID rather
    than separately loadable like it was before x2.
    When kvm_apic_set_state is called, the base is set, and if
    it has the X2APIC_ENABLE flag set then the LDR is calculated;
    however that value gets overwritten by the memcpy a few lines
    below overwriting it with the value that came from userland.
    
    The symptom is a lack of EOI after loading the state
    (e.g. after a QEMU migration) and is due to the EOI bitmap
    being wrong due to the incorrect LDR.  This was seen with
    a Win2016 guest under Qemu with irqchip=split whose USB mouse
    didn't work after a VM migration.
    
    This corresponds to RH bug:
      https://bugzilla.redhat.com/show_bug.cgi?id=1502591
    
    Reported-by: Yiqian Wei <yiwei@redhat.com>
    Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>
    [Applied fixup from Liran Alon. - Paolo]
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47b35d190b4676953a5ce25572e031d842264194
Author: Dr. David Alan Gilbert <dgilbert@redhat.com>
Date:   Fri Nov 17 11:52:49 2017 +0000

    KVM: lapic: Split out x2apic ldr calculation
    
    commit e872fa94662d0644057c7c80b3071bdb9249e5ab upstream.
    
    Split out the ldr calculation from kvm_apic_set_x2apic_id
    since we're about to reuse it in the following patch.
    
    Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb98bd9733b5b54b0de67e171b0057dcc6fb98de
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Nov 10 10:49:38 2017 +0100

    KVM: x86: inject exceptions produced by x86_decode_insn
    
    commit 6ea6e84309ca7e0e850b3083e6b09344ee15c290 upstream.
    
    Sometimes, a processor might execute an instruction while another
    processor is updating the page tables for that instruction's code page,
    but before the TLB shootdown completes.  The interesting case happens
    if the page is in the TLB.
    
    In general, the processor will succeed in executing the instruction and
    nothing bad happens.  However, what if the instruction is an MMIO access?
    If *that* happens, KVM invokes the emulator, and the emulator gets the
    updated page tables.  If the update side had marked the code page as non
    present, the page table walk then will fail and so will x86_decode_insn.
    
    Unfortunately, even though kvm_fetch_guest_virt is correctly returning
    X86EMUL_PROPAGATE_FAULT, x86_decode_insn's caller treats the failure as
    a fatal error if the instruction cannot simply be reexecuted (as is the
    case for MMIO).  And this in fact happened sometimes when rebooting
    Windows 2012r2 guests.  Just checking ctxt->have_exception and injecting
    the exception if true is enough to fix the case.
    
    Thanks to Eduardo Habkost for helping in the debugging of this issue.
    
    Reported-by: Yanan Fu <yfu@redhat.com>
    Cc: Eduardo Habkost <ehabkost@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15cc35bc76f95d22d1e3e42617f6103568f19931
Author: Liran Alon <liran.alon@oracle.com>
Date:   Sun Nov 5 16:56:32 2017 +0200

    KVM: x86: Exit to user-mode on #UD intercept when emulator requires
    
    commit 61cb57c9ed631c95b54f8e9090c89d18b3695b3c upstream.
    
    Instruction emulation after trapping a #UD exception can result in an
    MMIO access, for example when emulating a MOVBE on a processor that
    doesn't support the instruction.  In this case, the #UD vmexit handler
    must exit to user mode, but there wasn't any code to do so.  Add it for
    both VMX and SVM.
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c4eaffbad3701f037f1d60ca892dcbe7641ff74
Author: Liran Alon <liran.alon@oracle.com>
Date:   Sun Nov 5 16:11:30 2017 +0200

    KVM: x86: pvclock: Handle first-time write to pvclock-page contains random junk
    
    commit 51c4b8bba674cfd2260d173602c4dac08e4c3a99 upstream.
    
    When guest passes KVM it's pvclock-page GPA via WRMSR to
    MSR_KVM_SYSTEM_TIME / MSR_KVM_SYSTEM_TIME_NEW, KVM don't initialize
    pvclock-page to some start-values. It just requests a clock-update which
    will happen before entering to guest.
    
    The clock-update logic will call kvm_setup_pvclock_page() to update the
    pvclock-page with info. However, kvm_setup_pvclock_page() *wrongly*
    assumes that the version-field is initialized to an even number. This is
    wrong because at first-time write, field could be any-value.
    
    Fix simply makes sure that if first-time version-field is odd, increment
    it once more to make it even and only then start standard logic.
    This follows same logic as done in other pvclock shared-pages (See
    kvm_write_wall_clock() and record_steal_time()).
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c12e358867d2656b10ccccc36240d6ce93e0e497
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Nov 24 14:51:02 2017 +1100

    powerpc/kexec: Fix kexec/kdump in P9 guest kernels
    
    commit 2621e945fbf1d6df5f3f0ba7be5bae3d2cf9b6a5 upstream.
    
    The code that cleans up the IAMR/AMOR before kexec'ing failed to
    remember that when we're running as a guest AMOR is not writable, it's
    hypervisor privileged.
    
    They symptom is that the kexec stops before entering purgatory and
    nothing else is seen on the console. If you examine the state of the
    system all threads will be in the 0x700 program check handler.
    
    Fix it by making the write to AMOR dependent on HV mode.
    
    Fixes: 1e2a516e89fc ("powerpc/kexec: Fix radix to hash kexec due to IAMR/AMOR")
    Reported-by: Yilin Zhang <yilzhang@redhat.com>
    Debugged-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Tested-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bfbf2b1bc18f76dc88064b4d6354b2e4424478c
Author: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
Date:   Wed Nov 22 23:02:07 2017 +0530

    powerpc/powernv: Fix kexec crashes caused by tlbie tracing
    
    commit a3961f824cdbe7eb431254dc7d8f6f6767f474aa upstream.
    
    Rebooting into a new kernel with kexec fails in trace_tlbie() which is
    called from native_hpte_clear(). This happens if the running kernel
    has CONFIG_LOCKDEP enabled. With lockdep enabled, the tracepoints
    always execute few RCU checks regardless of whether tracing is on or
    off. We are already in the last phase of kexec sequence in real mode
    with HILE_BE set. At this point the RCU check ends up in
    RCU_LOCKDEP_WARN and causes kexec to fail.
    
    Fix this by not calling trace_tlbie() from native_hpte_clear().
    
    mpe: It's not safe to call trace points at this point in the kexec
    path, even if we could avoid the RCU checks/warnings. The only
    solution is to not call them.
    
    Fixes: 0428491cba92 ("powerpc/mm: Trace tlbie(l) instructions")
    Signed-off-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
    Reported-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Suggested-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9b2a6680fb6173819598cba411522d37cb4585a
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Mon Nov 20 17:41:30 2017 +0000

    arm64: ftrace: emit ftrace-mod.o contents through code
    
    commit be0f272bfc83797f70d44faca86954df62e2bbc0 upstream.
    
    When building the arm64 kernel with both CONFIG_ARM64_MODULE_PLTS and
    CONFIG_DYNAMIC_FTRACE enabled, the ftrace-mod.o object file is built
    with the kernel and contains a trampoline that is linked into each
    module, so that modules can be loaded far away from the kernel and
    still reach the ftrace entry point in the core kernel with an ordinary
    relative branch, as is emitted by the compiler instrumentation code
    dynamic ftrace relies on.
    
    In order to be able to build out of tree modules, this object file
    needs to be included into the linux-headers or linux-devel packages,
    which is undesirable, as it makes arm64 a special case (although a
    precedent does exist for 32-bit PPC).
    
    Given that the trampoline essentially consists of a PLT entry, let's
    not bother with a source or object file for it, and simply patch it
    in whenever the trampoline is being populated, using the existing
    PLT support routines.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1b4e001b22a12b67c890f4611bcf55285fd0fc5
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Mon Nov 20 17:41:29 2017 +0000

    arm64: module-plts: factor out PLT generation code for ftrace
    
    commit 7e8b9c1d2e2f5f45db7d40b50d14f606097c25de upstream.
    
    To allow the ftrace trampoline code to reuse the PLT entry routines,
    factor it out and move it into asm/module.h.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69af22696bc737dfe3444d2ece5db000fbff5c35
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Nov 22 07:33:38 2017 -0800

    apparmor: fix oops in audit_signal_cb hook
    
    commit b12cbb21586277f72533769832c24cc6c1d60ab3 upstream.
    
    The apparmor_audit_data struct ordering got messed up during a merge
    conflict, resulting in the signal integer and peer pointer being in
    a union instead of a struct.
    
    For most of the 4.13 and 4.14 life cycle, this was hidden by
    commit 651e28c5537a ("apparmor: add base infastructure for socket
    mediation") which fixed the apparmor_audit_data struct when its data
    was added. When that commit was reverted in -rc7 the signal audit bug
    was exposed, and unfortunately it never showed up in any of the
    testing until after 4.14 was released. Shaun Khan, Zephaniah
    E. Loss-Cutler-Hull filed nearly simultaneous bug reports (with
    different oopes, the smaller of which is included below).
    
    Full credit goes to Tetsuo Handa for jumping on this as well and
    noticing the audit data struct problem and reporting it.
    
    [   76.178568] BUG: unable to handle kernel paging request at
    ffffffff0eee3bc0
    [   76.178579] IP: audit_signal_cb+0x6c/0xe0
    [   76.178581] PGD 1a640a067 P4D 1a640a067 PUD 0
    [   76.178586] Oops: 0000 [#1] PREEMPT SMP
    [   76.178589] Modules linked in: fuse rfcomm bnep usblp uvcvideo btusb
    btrtl btbcm btintel bluetooth ecdh_generic ip6table_filter ip6_tables
    xt_tcpudp nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack
    iptable_filter ip_tables x_tables intel_rapl joydev wmi_bmof serio_raw
    iwldvm iwlwifi shpchp kvm_intel kvm irqbypass autofs4 algif_skcipher
    nls_iso8859_1 nls_cp437 crc32_pclmul ghash_clmulni_intel
    [   76.178620] CPU: 0 PID: 10675 Comm: pidgin Not tainted
    4.14.0-f1-dirty #135
    [   76.178623] Hardware name: Hewlett-Packard HP EliteBook Folio
    9470m/18DF, BIOS 68IBD Ver. F.62 10/22/2015
    [   76.178625] task: ffff9c7a94c31dc0 task.stack: ffffa09b02a4c000
    [   76.178628] RIP: 0010:audit_signal_cb+0x6c/0xe0
    [   76.178631] RSP: 0018:ffffa09b02a4fc08 EFLAGS: 00010292
    [   76.178634] RAX: ffffa09b02a4fd60 RBX: ffff9c7aee0741f8 RCX:
    0000000000000000
    [   76.178636] RDX: ffffffffee012290 RSI: 0000000000000006 RDI:
    ffff9c7a9493d800
    [   76.178638] RBP: ffffa09b02a4fd40 R08: 000000000000004d R09:
    ffffa09b02a4fc46
    [   76.178641] R10: ffffa09b02a4fcb8 R11: ffff9c7ab44f5072 R12:
    ffffa09b02a4fd40
    [   76.178643] R13: ffffffff9e447be0 R14: ffff9c7a94c31dc0 R15:
    0000000000000001
    [   76.178646] FS:  00007f8b11ba2a80(0000) GS:ffff9c7afea00000(0000)
    knlGS:0000000000000000
    [   76.178648] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   76.178650] CR2: ffffffff0eee3bc0 CR3: 00000003d5209002 CR4:
    00000000001606f0
    [   76.178652] Call Trace:
    [   76.178660]  common_lsm_audit+0x1da/0x780
    [   76.178665]  ? d_absolute_path+0x60/0x90
    [   76.178669]  ? aa_check_perms+0xcd/0xe0
    [   76.178672]  aa_check_perms+0xcd/0xe0
    [   76.178675]  profile_signal_perm.part.0+0x90/0xa0
    [   76.178679]  aa_may_signal+0x16e/0x1b0
    [   76.178686]  apparmor_task_kill+0x51/0x120
    [   76.178690]  security_task_kill+0x44/0x60
    [   76.178695]  group_send_sig_info+0x25/0x60
    [   76.178699]  kill_pid_info+0x36/0x60
    [   76.178703]  SYSC_kill+0xdb/0x180
    [   76.178707]  ? preempt_count_sub+0x92/0xd0
    [   76.178712]  ? _raw_write_unlock_irq+0x13/0x30
    [   76.178716]  ? task_work_run+0x6a/0x90
    [   76.178720]  ? exit_to_usermode_loop+0x80/0xa0
    [   76.178723]  entry_SYSCALL_64_fastpath+0x13/0x94
    [   76.178727] RIP: 0033:0x7f8b0e58b767
    [   76.178729] RSP: 002b:00007fff19efd4d8 EFLAGS: 00000206 ORIG_RAX:
    000000000000003e
    [   76.178732] RAX: ffffffffffffffda RBX: 0000557f3e3c2050 RCX:
    00007f8b0e58b767
    [   76.178735] RDX: 0000000000000000 RSI: 0000000000000000 RDI:
    000000000000263b
    [   76.178737] RBP: 0000000000000000 R08: 0000557f3e3c2270 R09:
    0000000000000001
    [   76.178739] R10: 000000000000022d R11: 0000000000000206 R12:
    0000000000000000
    [   76.178741] R13: 0000000000000001 R14: 0000557f3e3c13c0 R15:
    0000000000000000
    [   76.178745] Code: 48 8b 55 18 48 89 df 41 b8 20 00 08 01 5b 5d 48 8b
    42 10 48 8b 52 30 48 63 48 4c 48 8b 44 c8 48 31 c9 48 8b 70 38 e9 f4 fd
    00 00 <48> 8b 14 d5 40 27 e5 9e 48 c7 c6 7d 07 19 9f 48 89 df e8 fd 35
    [   76.178794] RIP: audit_signal_cb+0x6c/0xe0 RSP: ffffa09b02a4fc08
    [   76.178796] CR2: ffffffff0eee3bc0
    [   76.178799] ---[ end trace 514af9529297f1a3 ]---
    
    Fixes: cd1dbf76b23d ("apparmor: add the ability to mediate signals")
    Reported-by: Zephaniah E. Loss-Cutler-Hull <warp-spam_kernel@aehallh.com>
    Reported-by: Shuah Khan <shuahkh@osg.samsung.com>
    Suggested-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Tested-by: Ivan Kozik <ivan@ludios.org>
    Tested-by: Zephaniah E. Loss-Cutler-Hull <warp-spam_kernel@aehallh.com>
    Tested-by: Christian Boltz <apparmor@cboltz.de>
    Tested-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3ed24cd28f2db6f6f5b2009565a2463c0df4af0
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Mon Nov 20 11:51:40 2017 +0200

    omapdrm: hdmi4: Correct the SoC revision matching
    
    commit 23970e150a0a49f9a966c46e5d22fed06226098f upstream.
    
    I believe the intention of the commit 2c9fc9bf45f8
    ("drm: omapdrm: Move FEAT_HDMI_* features to hdmi4 driver")
    was to identify omap4430 ES1.x, omap4430 ES2.x and other OMAP4 revisions,
    like omap4460.
    
    By using family=OMAP4 in the match the code will treat omap4460 ES1.x in a
    same way as it would treat omap4430 ES1.x
    
    This breaks HDMI audio on OMAP4460 devices (PandaES for example).
    
    Correct the match rule so we are not going to get false positive match.
    
    Fixes: 2c9fc9bf45f8 ("drm: omapdrm: Move FEAT_HDMI_* features to hdmi4 driver")
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4479ade38b14f53673b0843308fe24344b37cba5
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Thu Nov 16 09:50:19 2017 +0100

    drm: omapdrm: Fix DPI on platforms using the DSI VDDS
    
    commit bf25dac38f71d392a31ec074f55cbc941f1eaf1d upstream.
    
    Commit d178e034d565 ("drm: omapdrm: Move FEAT_DPI_USES_VDDS_DSI feature
    to dpi code") replaced usage of platform data version with SoC matching
    to configure DPI VDDS. The SoC match entries were incorrect, they should
    have matched on the machine name instead of the SoC family. Fix it.
    
    The result was observed on OpenPandora with OMAP3530 where the panel only
    had the Blue channel and Red&Green were missing. It was not observed on
    GTA04 with DM3730.
    
    Fixes: d178e034d565 ("drm: omapdrm: Move FEAT_DPI_USES_VDDS_DSI feature to dpi code")
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reported-by: H. Nikolaus Schaller <hns@goldelico.com>
    Tested-by: H. Nikolaus Schaller <hns@goldelico.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b367ea94535dbdede5e00110339b3e4c9bdc617d
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Fri Nov 24 16:23:15 2017 +0100

    s390: revert ELF_ET_DYN_BASE base changes
    
    commit 345f8f34bb473241d62803951c18a844dd705f8d upstream.
    
    This reverts commit a73dc5370e153ac63718d850bddf0c9aa9d871e6.
    
    Reducing the base address for 31-bit PIE executables from
    (STACK_TOP/3)*2 to 4MB broke several compat programs which
    use -fpie to move the executable out of the lower 16MB.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84779085fa10014b9e8208d7e71b54bced73075c
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Thu Nov 2 13:03:42 2017 +0300

    lockd: lost rollback of set_grace_period() in lockd_down_net()
    
    commit 3a2b19d1ee5633f76ae8a88da7bc039a5d1732aa upstream.
    
    Commit efda760fe95ea ("lockd: fix lockd shutdown race") is incorrect,
    it removes lockd_manager and disarm grace_period_end for init_net only.
    
    If nfsd was started from another net namespace lockd_up_net() calls
    set_grace_period() that adds lockd_manager into per-netns list
    and queues grace_period_end delayed work.
    
    These action should be reverted in lockd_down_net().
    Otherwise it can lead to double list_add on after restart nfsd in netns,
    and to use-after-free if non-disarmed delayed work will be executed after netns destroy.
    
    Fixes: efda760fe95e ("lockd: fix lockd shutdown race")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 861eae231b0437427676a4ed323d31097002d5a2
Author: Ondrej Mosnáček <omosnacek@gmail.com>
Date:   Thu Nov 23 13:49:06 2017 +0100

    crypto: skcipher - Fix skcipher_walk_aead_common
    
    commit c14ca8386539a298c1c19b003fe55e37d0f0e89c upstream.
    
    The skcipher_walk_aead_common function calls scatterwalk_copychunks on
    the input and output walks to skip the associated data. If the AD end
    at an SG list entry boundary, then after these calls the walks will
    still be pointing to the end of the skipped region.
    
    These offsets are later checked for alignment in skcipher_walk_next,
    so the skcipher_walk may detect the alignment incorrectly.
    
    This patch fixes it by calling scatterwalk_done after the copychunks
    calls to ensure that the offsets refer to the right SG list entry.
    
    Fixes: b286d8b1a690 ("crypto: skcipher - Add skcipher walk interface")
    Signed-off-by: Ondrej Mosnacek <omosnacek@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f21961a2d7bfe45f734eab5b0ce6a40ee128b17
Author: Stephan Mueller <smueller@chronox.de>
Date:   Fri Nov 10 13:20:55 2017 +0100

    crypto: af_alg - remove locking in async callback
    
    commit 7d2c3f54e6f646887d019faa45f35d6fe9fe82ce upstream.
    
    The code paths protected by the socket-lock do not use or modify the
    socket in a non-atomic fashion. The actions pertaining the socket do not
    even need to be handled as an atomic operation. Thus, the socket-lock
    can be safely ignored.
    
    This fixes a bug regarding scheduling in atomic as the callback function
    may be invoked in interrupt context.
    
    In addition, the sock_hold is moved before the AIO encrypt/decrypt
    operation to ensure that the socket is always present. This avoids a
    tiny race window where the socket is unprotected and yet used by the AIO
    operation.
    
    Finally, the release of resources for a crypto operation is moved into a
    common function of af_alg_free_resources.
    
    Fixes: e870456d8e7c8 ("crypto: algif_skcipher - overhaul memory management")
    Fixes: d887c52d6ae43 ("crypto: algif_aead - overhaul memory management")
    Reported-by: Romain Izard <romain.izard.pro@gmail.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Tested-by: Romain Izard <romain.izard.pro@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 721872a1997c4b8aae80ed2e6ef9dc05c53383f6
Author: Stephan Mueller <smueller@chronox.de>
Date:   Fri Nov 10 11:04:52 2017 +0100

    crypto: algif_aead - skip SGL entries with NULL page
    
    commit 8e1fa89aa8bc2870009b4486644e4a58f2e2a4f5 upstream.
    
    The TX SGL may contain SGL entries that are assigned a NULL page. This
    may happen if a multi-stage AIO operation is performed where the data
    for each stage is pointed to by one SGL entry. Upon completion of that
    stage, af_alg_pull_tsgl will assign NULL to the SGL entry.
    
    The NULL cipher used to copy the AAD from TX SGL to the destination
    buffer, however, cannot handle the case where the SGL starts with an SGL
    entry having a NULL page. Thus, the code needs to advance the start
    pointer into the SGL to the first non-NULL entry.
    
    This fixes a crash visible on Intel x86 32 bit using the libkcapi test
    suite.
    
    Fixes: 72548b093ee38 ("crypto: algif_aead - copy AAD from src to dst")
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b78da96d2882bea2ec7184dc1eba3e07e829364d
Author: Naofumi Honda <honda@math.sci.hokudai.ac.jp>
Date:   Thu Nov 9 10:57:16 2017 -0500

    nfsd: fix panic in posix_unblock_lock called from nfs4_laundromat
    
    commit 64ebe12494fd5d193f014ce38e1fd83cc57883c8 upstream.
    
    From kernel 4.9, my two nfsv4 servers sometimes suffer from
        "panic: unable to handle kernel page request"
    in posix_unblock_lock() called from nfs4_laundromat().
    
    These panics diseappear if we revert the commit "nfsd: add a LRU list
    for blocked locks".
    
    The cause appears to be a typo in nfs4_laundromat(), which is also
    present in nfs4_state_shutdown_net().
    
    Fixes: 7919d0a27f1e "nfsd: add a LRU list for blocked locks"
    Cc: jlayton@redhat.com
    Reveiwed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73cfeab6755ccd442b689ea15769b7e9342c471e
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Nov 3 08:00:11 2017 -0400

    nfsd: Fix another OPEN stateid race
    
    commit d8a1a000555ecd1b824ac1ed6df8fe364dfbbbb0 upstream.
    
    If nfsd4_process_open2() is initialising a new stateid, and yet the
    call to nfs4_get_vfs_file() fails for some reason, then we must
    declare the stateid closed, and unhash it before dropping the mutex.
    
    Right now, we unhash the stateid after dropping the mutex, and without
    changing the stateid type, meaning that another OPEN could theoretically
    look it up and attempt to use it.
    
    Reported-by: Andrew W Elble <aweits@rit.edu>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db77ab54a5e2f740d1ae39326f90c06d5c5a26d4
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Nov 3 08:00:10 2017 -0400

    nfsd: Fix stateid races between OPEN and CLOSE
    
    commit 15ca08d3299682dc49bad73251677b2c5017ef08 upstream.
    
    Open file stateids can linger on the nfs4_file list of stateids even
    after they have been closed. In order to avoid reusing such a
    stateid, and confusing the client, we need to recheck the
    nfs4_stid's type after taking the mutex.
    Otherwise, we risk reusing an old stateid that was already closed,
    which will confuse clients that expect new stateids to conform to
    RFC7530 Sections 9.1.4.2 and 16.2.5 or RFC5661 Sections 8.2.2 and 18.2.4.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28580e75734b8bfc10d0c23ba026737c71c551c8
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Nov 17 14:50:46 2017 -0500

    btrfs: clear space cache inode generation always
    
    commit 8e138e0d92c6c9d3d481674fb14e3439b495be37 upstream.
    
    We discovered a box that had double allocations, and suspected the space
    cache may be to blame.  While auditing the write out path I noticed that
    if we've already setup the space cache we will just carry on.  This
    means that any error we hit after cache_save_setup before we go to
    actually write the cache out we won't reset the inode generation, so
    whatever was already written will be considered correct, except it'll be
    stale.  Fix this by _always_ resetting the generation on the block group
    inode, this way we only ever have valid or invalid cache.
    
    With this patch I was no longer able to reproduce cache corruption with
    dm-log-writes and my bpf error injection tool.
    
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be75ad849b9f3b0512e976a81e31a0beea1419ab
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Wed Nov 29 16:11:30 2017 -0800

    mm/hugetlb: fix NULL-pointer dereference on 5-level paging machine
    
    commit f4f0a3d85b50a65a348e2b8635041d6b30f01deb upstream.
    
    I made a mistake during converting hugetlb code to 5-level paging: in
    huge_pte_alloc() we have to use p4d_alloc(), not p4d_offset().
    
    Otherwise it leads to crash -- NULL-pointer dereference in pud_alloc()
    if p4d table is not yet allocated.
    
    It only can happen in 5-level paging mode.  In 4-level paging mode
    p4d_offset() always returns pgd, so we are fine.
    
    Link: http://lkml.kernel.org/r/20171122121921.64822-1-kirill.shutemov@linux.intel.com
    Fixes: c2febafc6773 ("mm: convert generic code to 5-level paging")
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f354f4ffe6a371a4ae27a682cea56a7e4e1d74d9
Author: Ian Kent <raven@themaw.net>
Date:   Wed Nov 29 16:11:26 2017 -0800

    autofs: revert "autofs: fix AT_NO_AUTOMOUNT not being honored"
    
    commit 5d38f049cee1e1c4a7ac55aa79d37d01ddcc3860 upstream.
    
    Commit 42f461482178 ("autofs: fix AT_NO_AUTOMOUNT not being honored")
    allowed the fstatat(2) system call to properly honor the AT_NO_AUTOMOUNT
    flag but introduced a semantic change.
    
    In order to honor AT_NO_AUTOMOUNT a semantic change was made to the
    negative dentry case for stat family system calls in follow_automount().
    
    This changed the unconditional triggering of an automount in this case
    to no longer be done and an error returned instead.
    
    This has caused more problems than I expected so reverting the change is
    needed.
    
    In a discussion with Neil Brown it was concluded that the automount(8)
    daemon can implement this change without kernel modifications.  So that
    will be done instead and the autofs module documentation updated with a
    description of the problem and what needs to be done by module users for
    this specific case.
    
    Link: http://lkml.kernel.org/r/151174730120.6162.3848002191530283984.stgit@pluto.themaw.net
    Fixes: 42f4614821 ("autofs: fix AT_NO_AUTOMOUNT not being honored")
    Signed-off-by: Ian Kent <raven@themaw.net>
    Cc: Neil Brown <neilb@suse.com>
    Cc: Al Viro <viro@ZenIV.linux.org.uk>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Colin Walters <walters@redhat.com>
    Cc: Ondrej Holy <oholy@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 793a07bef9eb557ebad28cdf9ca30ba41d082c9f
Author: Ian Kent <raven@themaw.net>
Date:   Wed Nov 29 16:11:23 2017 -0800

    autofs: revert "autofs: take more care to not update last_used on path walk"
    
    commit 43694d4bf843ddd34519e8e9de983deefeada699 upstream.
    
    While commit 092a53452bb7 ("autofs: take more care to not update
    last_used on path walk") helped (partially) resolve a problem where
    automounts were not expiring due to aggressive accesses from user space
    it has a side effect for very large environments.
    
    This change helps with the expire problem by making the expire more
    aggressive but, for very large environments, that means more mount
    requests from clients.  When there are a lot of clients that can mean
    fairly significant server load increases.
    
    It turns out I put the last_used in this position to solve this very
    problem and failed to update my own thinking of the autofs expire
    policy.  So the patch being reverted introduces a regression which
    should be fixed.
    
    Link: http://lkml.kernel.org/r/151174729420.6162.1832622523537052460.stgit@pluto.themaw.net
    Fixes: 092a53452b ("autofs: take more care to not update last_used on path walk")
    Signed-off-by: Ian Kent <raven@themaw.net>
    Reviewed-by: NeilBrown <neilb@suse.com>
    Cc: Al Viro <viro@ZenIV.linux.org.uk>
    Cc: Colin Walters <walters@redhat.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Ondrej Holy <oholy@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa2a9894733bdeaa93c750735b7fdc581ef10024
Author: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
Date:   Wed Nov 29 16:11:19 2017 -0800

    fs/fat/inode.c: fix sb_rdonly() change
    
    commit b6e8e12c0aeb5fbf1bf46c84d58cc93aedede385 upstream.
    
    Commit bc98a42c1f7d ("VFS: Convert sb->s_flags & MS_RDONLY to
    sb_rdonly(sb)") converted fat_remount():new_rdonly from a bool to an
    int.
    
    However fat_remount() depends upon the compiler's conversion of a
    non-zero integer into boolean `true'.
    
    Fix it by switching `new_rdonly' back into a bool.
    
    Link: http://lkml.kernel.org/r/87mv3d5x51.fsf@mail.parknet.co.jp
    Fixes: bc98a42c1f7d0f8 ("VFS: Convert sb->s_flags & MS_RDONLY to sb_rdonly(sb)")
    Signed-off-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
    Cc: Joe Perches <joe@perches.com>
    Cc: David Howells <dhowells@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d983b6251c5535b5c5eb02ce48bf8eeb7417ef65
Author: Shakeel Butt <shakeelb@google.com>
Date:   Wed Nov 29 16:11:15 2017 -0800

    mm, memcg: fix mem_cgroup_swapout() for THPs
    
    commit d08afa149acfd00871484ada6dabc3880524cd1c upstream.
    
    Commit d6810d730022 ("memcg, THP, swap: make mem_cgroup_swapout()
    support THP") changed mem_cgroup_swapout() to support transparent huge
    page (THP).
    
    However the patch missed one location which should be changed for
    correctly handling THPs.  The resulting bug will cause the memory
    cgroups whose THPs were swapped out to become zombies on deletion.
    
    Link: http://lkml.kernel.org/r/20171128161941.20931-1-shakeelb@google.com
    Fixes: d6810d730022 ("memcg, THP, swap: make mem_cgroup_swapout() support THP")
    Signed-off-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Greg Thelen <gthelen@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 13167cf417ddf105d2822eebe775547ed35d1a08
Author: Zi Yan <zi.yan@cs.rutgers.edu>
Date:   Wed Nov 29 16:11:12 2017 -0800

    mm: migrate: fix an incorrect call of prep_transhuge_page()
    
    commit 40a899ed16486455f964e46d1af31fd4fded21c1 upstream.
    
    In https://lkml.org/lkml/2017/11/20/411, Andrea reported that during
    memory hotplug/hot remove prep_transhuge_page() is called incorrectly on
    non-THP pages for migration, when THP is on but THP migration is not
    enabled.  This leads to a bad state of target pages for migration.
    
    By inspecting the code, if called on a non-THP, prep_transhuge_page()
    will
    
     1) change the value of the mapping of (page + 2), since it is used for
        THP deferred list;
    
     2) change the lru value of (page + 1), since it is used for THP's dtor.
    
    Both can lead to data corruption of these two pages.
    
    Andrea said:
     "Pragmatically and from the point of view of the memory_hotplug subsys,
      the effect is a kernel crash when pages are being migrated during a
      memory hot remove offline and migration target pages are found in a
      bad state"
    
    This patch fixes it by only calling prep_transhuge_page() when we are
    certain that the target page is THP.
    
    Link: http://lkml.kernel.org/r/20171121021855.50525-1-zi.yan@sent.com
    Fixes: 8135d8926c08 ("mm: memory_hotplug: memory hotremove supports thp migration")
    Signed-off-by: Zi Yan <zi.yan@cs.rutgers.edu>
    Reported-by: Andrea Reale <ar@linux.vnet.ibm.com>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: "Jérôme Glisse" <jglisse@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a0bb9ebaa8b8faee61f095757662fe5d7fd8da6
Author: chenjie <chenjie6@huawei.com>
Date:   Wed Nov 29 16:10:54 2017 -0800

    mm/madvise.c: fix madvise() infinite loop under special circumstances
    
    commit 6ea8d958a2c95a1d514015d4e29ba21a8c0a1a91 upstream.
    
    MADVISE_WILLNEED has always been a noop for DAX (formerly XIP) mappings.
    Unfortunately madvise_willneed() doesn't communicate this information
    properly to the generic madvise syscall implementation.  The calling
    convention is quite subtle there.  madvise_vma() is supposed to either
    return an error or update &prev otherwise the main loop will never
    advance to the next vma and it will keep looping for ever without a way
    to get out of the kernel.
    
    It seems this has been broken since introduction.  Nobody has noticed
    because nobody seems to be using MADVISE_WILLNEED on these DAX mappings.
    
    [mhocko@suse.com: rewrite changelog]
    Link: http://lkml.kernel.org/r/20171127115318.911-1-guoxuenan@huawei.com
    Fixes: fe77ba6f4f97 ("[PATCH] xip: madvice/fadvice: execute in place")
    Signed-off-by: chenjie <chenjie6@huawei.com>
    Signed-off-by: guoxuenan <guoxuenan@huawei.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: zhangyi (F) <yi.zhang@huawei.com>
    Cc: Miao Xie <miaoxie@huawei.com>
    Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: Shaohua Li <shli@fb.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Anshuman Khandual <khandual@linux.vnet.ibm.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Carsten Otte <cotte@de.ibm.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c16a65582a72d3adea145b9b0a737c6c35ce89fc
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Nov 29 16:10:51 2017 -0800

    exec: avoid RLIMIT_STACK races with prlimit()
    
    commit 04e35f4495dd560db30c25efca4eecae8ec8c375 upstream.
    
    While the defense-in-depth RLIMIT_STACK limit on setuid processes was
    protected against races from other threads calling setrlimit(), I missed
    protecting it against races from external processes calling prlimit().
    This adds locking around the change and makes sure that rlim_max is set
    too.
    
    Link: http://lkml.kernel.org/r/20171127193457.GA11348@beast
    Fixes: 64701dee4178e ("exec: Use sane stack rlimit under secureexec")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Reported-by: Brad Spengler <spender@grsecurity.net>
    Acked-by: Serge Hallyn <serge@hallyn.com>
    Cc: James Morris <james.l.morris@oracle.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aab681eb8f3bfe2950c8493f39cef6ae34b731b3
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Nov 29 16:10:47 2017 -0800

    IB/core: disable memory registration of filesystem-dax vmas
    
    commit 5f1d43de54164dcfb9bfa542fcc92c1e1a1b6c1d upstream.
    
    Until there is a solution to the dma-to-dax vs truncate problem it is
    not safe to allow RDMA to create long standing memory registrations
    against filesytem-dax vmas.
    
    Link: http://lkml.kernel.org/r/151068941011.7446.7766030590347262502.stgit@dwillia2-desk3.amr.corp.intel.com
    Fixes: 3565fce3a659 ("mm, x86: get_user_pages() for dax mappings")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Reported-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Jason Gunthorpe <jgg@mellanox.com>
    Acked-by: Doug Ledford <dledford@redhat.com>
    Cc: Sean Hefty <sean.hefty@intel.com>
    Cc: Hal Rosenstock <hal.rosenstock@gmail.com>
    Cc: Jeff Moyer <jmoyer@redhat.com>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Cc: Inki Dae <inki.dae@samsung.com>
    Cc: Jan Kara <jack@suse.cz>
    Cc: Joonyoung Shim <jy0922.shim@samsung.com>
    Cc: Kyungmin Park <kyungmin.park@samsung.com>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Seung-Woo Kim <sw0312.kim@samsung.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e13ee3368ee1cbf4d2a9a70af20cdf519fd8bb3c
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Nov 29 16:10:43 2017 -0800

    v4l2: disable filesystem-dax mapping support
    
    commit b70131de648c2b997d22f4653934438013f407a1 upstream.
    
    V4L2 memory registrations are incompatible with filesystem-dax that
    needs the ability to revoke dma access to a mapping at will, or
    otherwise allow the kernel to wait for completion of DMA.  The
    filesystem-dax implementation breaks the traditional solution of
    truncate of active file backed mappings since there is no page-cache
    page we can orphan to sustain ongoing DMA.
    
    If v4l2 wants to support long lived DMA mappings it needs to arrange to
    hold a file lease or use some other mechanism so that the kernel can
    coordinate revoking DMA access when the filesystem needs to truncate
    mappings.
    
    Link: http://lkml.kernel.org/r/151068940499.7446.12846708245365671207.stgit@dwillia2-desk3.amr.corp.intel.com
    Fixes: 3565fce3a659 ("mm, x86: get_user_pages() for dax mappings")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Reported-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Doug Ledford <dledford@redhat.com>
    Cc: Hal Rosenstock <hal.rosenstock@gmail.com>
    Cc: Inki Dae <inki.dae@samsung.com>
    Cc: Jason Gunthorpe <jgg@mellanox.com>
    Cc: Jeff Moyer <jmoyer@redhat.com>
    Cc: Joonyoung Shim <jy0922.shim@samsung.com>
    Cc: Kyungmin Park <kyungmin.park@samsung.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Cc: Sean Hefty <sean.hefty@intel.com>
    Cc: Seung-Woo Kim <sw0312.kim@samsung.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit daac045736edf0e4ec21d7b39b3633537246f9c8
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Nov 29 16:10:39 2017 -0800

    mm: fail get_vaddr_frames() for filesystem-dax mappings
    
    commit b7f0554a56f21fb3e636a627450a9add030889be upstream.
    
    Until there is a solution to the dma-to-dax vs truncate problem it is
    not safe to allow V4L2, Exynos, and other frame vector users to create
    long standing / irrevocable memory registrations against filesytem-dax
    vmas.
    
    [dan.j.williams@intel.com: add comment for vma_is_fsdax() check in get_vaddr_frames(), per Jan]
      Link: http://lkml.kernel.org/r/151197874035.26211.4061781453123083667.stgit@dwillia2-desk3.amr.corp.intel.com
    Link: http://lkml.kernel.org/r/151068939985.7446.15684639617389154187.stgit@dwillia2-desk3.amr.corp.intel.com
    Fixes: 3565fce3a659 ("mm, x86: get_user_pages() for dax mappings")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: Inki Dae <inki.dae@samsung.com>
    Cc: Seung-Woo Kim <sw0312.kim@samsung.com>
    Cc: Joonyoung Shim <jy0922.shim@samsung.com>
    Cc: Kyungmin Park <kyungmin.park@samsung.com>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Doug Ledford <dledford@redhat.com>
    Cc: Hal Rosenstock <hal.rosenstock@gmail.com>
    Cc: Jason Gunthorpe <jgg@mellanox.com>
    Cc: Jeff Moyer <jmoyer@redhat.com>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Cc: Sean Hefty <sean.hefty@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40aa9d2998ca55d9011e75a0fa526ed52e0a4bce
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Nov 29 16:10:35 2017 -0800

    mm: introduce get_user_pages_longterm
    
    commit 2bb6d2837083de722bfdc369cb0d76ce188dd9b4 upstream.
    
    Patch series "introduce get_user_pages_longterm()", v2.
    
    Here is a new get_user_pages api for cases where a driver intends to
    keep an elevated page count indefinitely.  This is distinct from usages
    like iov_iter_get_pages where the elevated page counts are transient.
    The iov_iter_get_pages cases immediately turn around and submit the
    pages to a device driver which will put_page when the i/o operation
    completes (under kernel control).
    
    In the longterm case userspace is responsible for dropping the page
    reference at some undefined point in the future.  This is untenable for
    filesystem-dax case where the filesystem is in control of the lifetime
    of the block / page and needs reasonable limits on how long it can wait
    for pages in a mapping to become idle.
    
    Fixing filesystems to actually wait for dax pages to be idle before
    blocks from a truncate/hole-punch operation are repurposed is saved for
    a later patch series.
    
    Also, allowing longterm registration of dax mappings is a future patch
    series that introduces a "map with lease" semantic where the kernel can
    revoke a lease and force userspace to drop its page references.
    
    I have also tagged these for -stable to purposely break cases that might
    assume that longterm memory registrations for filesystem-dax mappings
    were supported by the kernel.  The behavior regression this policy
    change implies is one of the reasons we maintain the "dax enabled.
    Warning: EXPERIMENTAL, use at your own risk" notification when mounting
    a filesystem in dax mode.
    
    It is worth noting the device-dax interface does not suffer the same
    constraints since it does not support file space management operations
    like hole-punch.
    
    This patch (of 4):
    
    Until there is a solution to the dma-to-dax vs truncate problem it is
    not safe to allow long standing memory registrations against
    filesytem-dax vmas.  Device-dax vmas do not have this problem and are
    explicitly allowed.
    
    This is temporary until a "memory registration with layout-lease"
    mechanism can be implemented for the affected sub-systems (RDMA and
    V4L2).
    
    [akpm@linux-foundation.org: use kcalloc()]
    Link: http://lkml.kernel.org/r/151068939435.7446.13560129395419350737.stgit@dwillia2-desk3.amr.corp.intel.com
    Fixes: 3565fce3a659 ("mm, x86: get_user_pages() for dax mappings")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Suggested-by: Christoph Hellwig <hch@lst.de>
    Cc: Doug Ledford <dledford@redhat.com>
    Cc: Hal Rosenstock <hal.rosenstock@gmail.com>
    Cc: Inki Dae <inki.dae@samsung.com>
    Cc: Jan Kara <jack@suse.cz>
    Cc: Jason Gunthorpe <jgg@mellanox.com>
    Cc: Jeff Moyer <jmoyer@redhat.com>
    Cc: Joonyoung Shim <jy0922.shim@samsung.com>
    Cc: Kyungmin Park <kyungmin.park@samsung.com>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Cc: Sean Hefty <sean.hefty@intel.com>
    Cc: Seung-Woo Kim <sw0312.kim@samsung.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61586a2286140935fe711b3410c53ee1141633b2
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Nov 29 16:10:32 2017 -0800

    device-dax: implement ->split() to catch invalid munmap attempts
    
    commit 9702cffdbf2129516db679e4467db81e1cd287da upstream.
    
    Similar to how device-dax enforces that the 'address', 'offset', and
    'len' parameters to mmap() be aligned to the device's fundamental
    alignment, the same constraints apply to munmap().  Implement ->split()
    to fail munmap calls that violate the alignment constraint.
    
    Otherwise, we later fail VM_BUG_ON checks in the unmap_page_range() path
    with crash signatures of the form:
    
        vma ffff8800b60c8a88 start 00007f88c0000000 end 00007f88c0e00000
        next           (null) prev           (null) mm ffff8800b61150c0
        prot 8000000000000027 anon_vma           (null) vm_ops ffffffffa0091240
        pgoff 0 file ffff8800b638ef80 private_data           (null)
        flags: 0x380000fb(read|write|shared|mayread|maywrite|mayexec|mayshare|softdirty|mixedmap|hugepage)
        ------------[ cut here ]------------
        kernel BUG at mm/huge_memory.c:2014!
        [..]
        RIP: 0010:__split_huge_pud+0x12a/0x180
        [..]
        Call Trace:
         unmap_page_range+0x245/0xa40
         ? __vma_adjust+0x301/0x990
         unmap_vmas+0x4c/0xa0
         unmap_region+0xae/0x120
         ? __vma_rb_erase+0x11a/0x230
         do_munmap+0x276/0x410
         vm_munmap+0x6a/0xa0
         SyS_munmap+0x1d/0x30
    
    Link: http://lkml.kernel.org/r/151130418681.4029.7118245855057952010.stgit@dwillia2-desk3.amr.corp.intel.com
    Fixes: dee410792419 ("/dev/dax, core: file operations and dax-mmap")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Reported-by: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6c78a1d4561880c744d3ec932264b264a879e7c
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Nov 29 16:10:28 2017 -0800

    mm, hugetlbfs: introduce ->split() to vm_operations_struct
    
    commit 31383c6865a578834dd953d9dbc88e6b19fe3997 upstream.
    
    Patch series "device-dax: fix unaligned munmap handling"
    
    When device-dax is operating in huge-page mode we want it to behave like
    hugetlbfs and fail attempts to split vmas into unaligned ranges.  It
    would be messy to teach the munmap path about device-dax alignment
    constraints in the same (hstate) way that hugetlbfs communicates this
    constraint.  Instead, these patches introduce a new ->split() vm
    operation.
    
    This patch (of 2):
    
    The device-dax interface has similar constraints as hugetlbfs in that it
    requires the munmap path to unmap in huge page aligned units.  Rather
    than add more custom vma handling code in __split_vma() introduce a new
    vm operation to perform this vma specific check.
    
    Link: http://lkml.kernel.org/r/151130418135.4029.6783191281930729710.stgit@dwillia2-desk3.amr.corp.intel.com
    Fixes: dee410792419 ("/dev/dax, core: file operations and dax-mmap")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf55918cb4fb374000ad1d063b207a17a93e8726
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Nov 29 16:10:06 2017 -0800

    mm: fix device-dax pud write-faults triggered by get_user_pages()
    
    commit 1501899a898dfb5477c55534bdfd734c046da06d upstream.
    
    Currently only get_user_pages_fast() can safely handle the writable gup
    case due to its use of pud_access_permitted() to check whether the pud
    entry is writable.  In the gup slow path pud_write() is used instead of
    pud_access_permitted() and to date it has been unimplemented, just calls
    BUG_ON().
    
        kernel BUG at ./include/linux/hugetlb.h:244!
        [..]
        RIP: 0010:follow_devmap_pud+0x482/0x490
        [..]
        Call Trace:
         follow_page_mask+0x28c/0x6e0
         __get_user_pages+0xe4/0x6c0
         get_user_pages_unlocked+0x130/0x1b0
         get_user_pages_fast+0x89/0xb0
         iov_iter_get_pages_alloc+0x114/0x4a0
         nfs_direct_read_schedule_iovec+0xd2/0x350
         ? nfs_start_io_direct+0x63/0x70
         nfs_file_direct_read+0x1e0/0x250
         nfs_file_read+0x90/0xc0
    
    For now this just implements a simple check for the _PAGE_RW bit similar
    to pmd_write.  However, this implies that the gup-slow-path check is
    missing the extra checks that the gup-fast-path performs with
    pud_access_permitted.  Later patches will align all checks to use the
    'access_permitted' helper if the architecture provides it.
    
    Note that the generic 'access_permitted' helper fallback is the simple
    _PAGE_RW check on architectures that do not define the
    'access_permitted' helper(s).
    
    [dan.j.williams@intel.com: fix powerpc compile error]
      Link: http://lkml.kernel.org/r/151129126165.37405.16031785266675461397.stgit@dwillia2-desk3.amr.corp.intel.com
    Link: http://lkml.kernel.org/r/151043109938.2842.14834662818213616199.stgit@dwillia2-desk3.amr.corp.intel.com
    Fixes: a00cc7d9dd93 ("mm, x86: add support for PUD-sized transparent hugepages")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>  [x86]
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4c8fce668423c0dde23fe57682e5bd8df5bbeb9
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Wed Nov 29 16:10:01 2017 -0800

    mm/cma: fix alloc_contig_range ret code/potential leak
    
    commit 63cd448908b5eb51d84c52f02b31b9b4ccd1cb5a upstream.
    
    If the call __alloc_contig_migrate_range() in alloc_contig_range returns
    -EBUSY, processing continues so that test_pages_isolated() is called
    where there is a tracepoint to identify the busy pages.  However, it is
    possible for busy pages to become available between the calls to these
    two routines.  In this case, the range of pages may be allocated.
    Unfortunately, the original return code (ret == -EBUSY) is still set and
    returned to the caller.  Therefore, the caller believes the pages were
    not allocated and they are leaked.
    
    Update the comment to indicate that allocation is still possible even if
    __alloc_contig_migrate_range returns -EBUSY.  Also, clear return code in
    this case so that it is not accidentally used or returned to caller.
    
    Link: http://lkml.kernel.org/r/20171122185214.25285-1-mike.kravetz@oracle.com
    Fixes: 8ef5849fa8a2 ("mm/cma: always check which page caused allocation failure")
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Michal Nazarewicz <mina86@mina86.com>
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01ca9727457a167463a47e35b6fe5a5173b4e341
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Mon Nov 27 06:21:25 2017 +0300

    mm, thp: Do not make page table dirty unconditionally in touch_p[mu]d()
    
    commit a8f97366452ed491d13cf1e44241bc0b5740b1f0 upstream.
    
    Currently, we unconditionally make page table dirty in touch_pmd().
    It may result in false-positive can_follow_write_pmd().
    
    We may avoid the situation, if we would only make the page table entry
    dirty if caller asks for write access -- FOLL_WRITE.
    
    The patch also changes touch_pud() in the same way.
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Hugh Dickins <hughd@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 786b924d39bad16ff99aacdb4076df027cc2f8b8
Author: Wang Nan <wangnan0@huawei.com>
Date:   Wed Nov 29 16:09:58 2017 -0800

    mm, oom_reaper: gather each vma to prevent leaking TLB entry
    
    commit 687cb0884a714ff484d038e9190edc874edcf146 upstream.
    
    tlb_gather_mmu(&tlb, mm, 0, -1) means gathering the whole virtual memory
    space.  In this case, tlb->fullmm is true.  Some archs like arm64
    doesn't flush TLB when tlb->fullmm is true:
    
      commit 5a7862e83000 ("arm64: tlbflush: avoid flushing when fullmm == 1").
    
    Which causes leaking of tlb entries.
    
    Will clarifies his patch:
     "Basically, we tag each address space with an ASID (PCID on x86) which
      is resident in the TLB. This means we can elide TLB invalidation when
      pulling down a full mm because we won't ever assign that ASID to
      another mm without doing TLB invalidation elsewhere (which actually
      just nukes the whole TLB).
    
      I think that means that we could potentially not fault on a kernel
      uaccess, because we could hit in the TLB"
    
    There could be a window between complete_signal() sending IPI to other
    cores and all threads sharing this mm are really kicked off from cores.
    In this window, the oom reaper may calls tlb_flush_mmu_tlbonly() to
    flush TLB then frees pages.  However, due to the above problem, the TLB
    entries are not really flushed on arm64.  Other threads are possible to
    access these pages through TLB entries.  Moreover, a copy_to_user() can
    also write to these pages without generating page fault, causes
    use-after-free bugs.
    
    This patch gathers each vma instead of gathering full vm space.  In this
    case tlb->fullmm is not true.  The behavior of oom reaper become similar
    to munmapping before do_exit, which should be safe for all archs.
    
    Link: http://lkml.kernel.org/r/20171107095453.179940-1-wangnan0@huawei.com
    Fixes: aac453635549 ("mm, oom: introduce oom reaper")
    Signed-off-by: Wang Nan <wangnan0@huawei.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Bob Liu <liubo95@huawei.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8d0c953d928fbdc3207f741a2b77055d34fd0b9
Author: Michal Hocko <mhocko@suse.com>
Date:   Wed Nov 29 16:09:54 2017 -0800

    mm, memory_hotplug: do not back off draining pcp free pages from kworker context
    
    commit 4b81cb2ff69c8a8e297a147d2eb4d9b5e8d7c435 upstream.
    
    drain_all_pages backs off when called from a kworker context since
    commit 0ccce3b92421 ("mm, page_alloc: drain per-cpu pages from workqueue
    context") because the original IPI based pcp draining has been replaced
    by a WQ based one and the check wanted to prevent from recursion and
    inter workers dependencies.  This has made some sense at the time
    because the system WQ has been used and one worker holding the lock
    could be blocked while waiting for new workers to emerge which can be a
    problem under OOM conditions.
    
    Since then commit ce612879ddc7 ("mm: move pcp and lru-pcp draining into
    single wq") has moved draining to a dedicated (mm_percpu_wq) WQ with a
    rescuer so we shouldn't depend on any other WQ activity to make a
    forward progress so calling drain_all_pages from a worker context is
    safe as long as this doesn't happen from mm_percpu_wq itself which is
    not the case because all workers are required to _not_ depend on any MM
    locks.
    
    Why is this a problem in the first place? ACPI driven memory hot-remove
    (acpi_device_hotplug) is executed from the worker context.  We end up
    calling __offline_pages to free all the pages and that requires both
    lru_add_drain_all_cpuslocked and drain_all_pages to do their job
    otherwise we can have dangling pages on pcp lists and fail the offline
    operation (__test_page_isolated_in_pageblock would see a page with 0 ref
    count but without PageBuddy set).
    
    Fix the issue by removing the worker check in drain_all_pages.
    lru_add_drain_all_cpuslocked doesn't have this restriction so it works
    as expected.
    
    Link: http://lkml.kernel.org/r/20170828093341.26341-1-mhocko@kernel.org
    Fixes: 0ccce3b924212 ("mm, page_alloc: drain per-cpu pages from workqueue context")
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Tejun Heo <tj@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cbd866dd858ceebe2b735e3d8cd8eb702ca1f88
Author: Stefan Brüns <stefan.bruens@rwth-aachen.de>
Date:   Fri Nov 3 03:01:53 2017 +0100

    platform/x86: hp-wmi: Fix tablet mode detection for convertibles
    
    commit 9968e12a291e639dd51d1218b694d440b22a917f upstream.
    
    Commit f9cf3b2880cc ("platform/x86: hp-wmi: Refactor dock and tablet
    state fetchers") consolidated the methods for docking and laptop mode
    detection, but omitted to apply the correct mask for the laptop mode
    (it always uses the constant for docking).
    
    Fixes: f9cf3b2880cc ("platform/x86: hp-wmi: Refactor dock and tablet state fetchers")
    Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Cc: Michel Dänzer <michel@daenzer.net>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 191314edb326764c4481b09ccf7d00159abe4679
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Nov 30 08:41:00 2017 +0000

    Linux 4.14.3

commit 0f478f25d50cb6464678284a13f514fefc16e271
Author: Sasha Neftin <sasha.neftin@intel.com>
Date:   Sun Aug 6 16:49:18 2017 +0300

    e1000e: fix buffer overrun while the I219 is processing DMA transactions
    
    commit b10effb92e272051dd1ec0d7be56bf9ca85ab927 upstream.
    
    Intel® 100/200 Series Chipset platforms reduced the round-trip
    latency for the LAN Controller DMA accesses, causing in some high
    performance cases a buffer overrun while the I219 LAN Connected
    Device is processing the DMA transactions. I219LM and I219V devices
    can fall into unrecovered Tx hang under very stressfully UDP traffic
    and multiple reconnection of Ethernet cable. This Tx hang of the LAN
    Controller is only recovered if the system is rebooted. Slightly slow
    down DMA access by reducing the number of outstanding requests.
    This workaround could have an impact on TCP traffic performance
    on the platform. Disabling TSO eliminates performance loss for TCP
    traffic without a noticeable impact on CPU performance.
    
    Please, refer to I218/I219 specification update:
    https://www.intel.com/content/www/us/en/embedded/products/networking/
    ethernet-connection-i218-family-documentation.html
    
    Signed-off-by: Sasha Neftin <sasha.neftin@intel.com>
    Reviewed-by: Dima Ruinskiy <dima.ruinskiy@intel.com>
    Reviewed-by: Raanan Avargil <raanan.avargil@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10d0fd29310387313680b12cb69f7b9e11938c8e
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Fri Jul 21 11:36:27 2017 -0700

    e1000e: Avoid receiver overrun interrupt bursts
    
    commit 4aea7a5c5e940c1723add439f4088844cd26196d upstream.
    
    When e1000e_poll() is not fast enough to keep up with incoming traffic, the
    adapter (when operating in msix mode) raises the Other interrupt to signal
    Receiver Overrun.
    
    This is a double problem because 1) at the moment e1000_msix_other()
    assumes that it is only called in case of Link Status Change and 2) if the
    condition persists, the interrupt is repeatedly raised again in quick
    succession.
    
    Ideally we would configure the Other interrupt to not be raised in case of
    receiver overrun but this doesn't seem possible on this adapter. Instead,
    we handle the first part of the problem by reverting to the practice of
    reading ICR in the other interrupt handler, like before commit 16ecba59bc33
    ("e1000e: Do not read ICR in Other interrupt"). Thanks to commit
    0a8047ac68e5 ("e1000e: Fix msi-x interrupt automask") which cleared IAME
    from CTRL_EXT, reading ICR doesn't interfere with RxQ0, TxQ0 interrupts
    anymore. We handle the second part of the problem by not re-enabling the
    Other interrupt right away when there is overrun. Instead, we wait until
    traffic subsides, napi polling mode is exited and interrupts are
    re-enabled.
    
    Reported-by: Lennart Sorensen <lsorense@csclub.uwaterloo.ca>
    Fixes: 16ecba59bc33 ("e1000e: Do not read ICR in Other interrupt")
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 830466993daf09adbd179e4c74db07279a088f8c
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Fri Jul 21 11:36:26 2017 -0700

    e1000e: Separate signaling for link check/link up
    
    commit 19110cfbb34d4af0cdfe14cd243f3b09dc95b013 upstream.
    
    Lennart reported the following race condition:
    
    \ e1000_watchdog_task
        \ e1000e_has_link
            \ hw->mac.ops.check_for_link() === e1000e_check_for_copper_link
                /* link is up */
                mac->get_link_status = false;
    
                                /* interrupt */
                                \ e1000_msix_other
                                    hw->mac.get_link_status = true;
    
            link_active = !hw->mac.get_link_status
            /* link_active is false, wrongly */
    
    This problem arises because the single flag get_link_status is used to
    signal two different states: link status needs checking and link status is
    down.
    
    Avoid the problem by using the return value of .check_for_link to signal
    the link status to e1000e_has_link().
    
    Reported-by: Lennart Sorensen <lsorense@csclub.uwaterloo.ca>
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b91745f8a4accb0f04c07433ee4297054bc88b1
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Fri Jul 21 11:36:25 2017 -0700

    e1000e: Fix return value test
    
    commit d3509f8bc7b0560044c15f0e3ecfde1d9af757a6 upstream.
    
    All the helpers return -E1000_ERR_PHY.
    
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8606bf0219f6632a931f7317dad0d4b672b1e035
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Fri Jul 21 11:36:23 2017 -0700

    e1000e: Fix error path in link detection
    
    commit c4c40e51f9c32c6dd8adf606624c930a1c4d9bbb upstream.
    
    In case of error from e1e_rphy(), the loop will exit early and "success"
    will be set to true erroneously.
    
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 391243ca6dc70e52afed671c0837aceae198abf7
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Fri Nov 10 14:03:36 2017 +0200

    iwlwifi: mvm: support version 7 of the SCAN_REQ_UMAC FW command
    
    commit dac4df1c5f2c34903f61b1bc4fc722e31b4199e7 upstream.
    
    Newer firmware versions (such as iwlwifi-8000C-34.ucode) have
    introduced an API change in the SCAN_REQ_UMAC command that is not
    backwards compatible.  The driver needs to detect and use the new API
    format when the firmware reports it, otherwise the scan command will
    not work properly, causing a command timeout.
    
    Fix this by adding a TLV that tells the driver that the new API is in
    use and use the correct structures for it.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=197591
    
    Fixes: d7a5b3e9e42e ("iwlwifi: mvm: bump API to 34 for 8000 and up")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f24172d80a4a9d93e20d03b34491ee7a76602cd
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Wed Nov 15 18:28:04 2017 +0200

    iwlwifi: fix PCI IDs and configuration mapping for 9000 series
    
    commit dbc89253a7e15f8f031fb1eeb956de91204655e3 upstream.
    
    A lot of PCI IDs were missing and there were some problems with the
    configuration and firmware selection for devices on the 9000 series.
    Fix the firmware selection by adding files for the B-steps; add
    configuration for some integrated devices; and add a bunch of PCI IDs
    (mostly for integrated devices) that were missing from the driver's
    list.
    
    Without this patch, a lot of devices will not be recognized or will
    try to load the wrong firmware file.
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f4482f1a31784fce0a09a68d1d5a19883c0eadf
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Tue Oct 24 17:36:43 2017 +0300

    iwlwifi: add new cards for 8260 series
    
    commit d669fc2d42a43ee0abcf2396df6e9c5a124aa984 upstream.
    
    add three new PCI ID'S for 8260 series
    
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b2c1ae5b3cb13673db2394cd90ad5eec5afefed
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Tue Oct 24 17:38:12 2017 +0300

    iwlwifi: add new cards for 8265 series
    
    commit 7cddbef445631109bd530ce7cdacaa04ff0a62d1 upstream.
    
    add two new PCI ID'S for 8265 series
    
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e85efe021070671b8d773560b49b03a16a4c9ec
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Tue Oct 24 17:04:24 2017 +0300

    iwlwifi: add new cards for a000 series
    
    commit 57b36f7fcb39c5eae8c1f463699f747af69643ba upstream.
    
    add four new PCI ID'S for a000 series
    
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 150dc29e1d99f0a58d52ec9fe0c93bb5ae86df37
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Thu Oct 12 11:20:50 2017 +0300

    iwlwifi: pcie: sort IDs for the 9000 series for easier comparisons
    
    commit 1105a337375258515ed09b92a83fd7bfd6775958 upstream.
    
    It's hard to find values that are missing in the list, so sorting the
    values and comparing them makes it much easier.  To simplify this
    task, sort the devices in the list.
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b4c45dc7d1b149dd4742d0579cdba044bde3482
Author: Oren Givon <oren.givon@intel.com>
Date:   Thu Aug 31 13:15:09 2017 +0300

    iwlwifi: add a new a000 device
    
    commit d048b36b9654c4e0cf0d3576be2d1ed2a3084c6f upstream.
    
    Add a new a000 device with PCI ID (0x2720, 0x0030).
    
    Signed-off-by: Oren Givon <oren.givon@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98f581f6aa4f79dbad1d00271f334d813e0870c2
Author: Oren Givon <oren.givon@intel.com>
Date:   Mon Aug 28 10:33:38 2017 +0300

    iwlwifi: fix wrong struct for a000 device
    
    commit f7f5873bbd45a67d3097dfb55237ade2ad520184 upstream.
    
    The PCI ID (0x2720, 0x0070) was set with the config struct
    iwla000_2ax_cfg_hr instead of iwla000_2ac_cfg_hr_cdb.
    
    Fixes: 175b87c69253 ("iwlwifi: add the new a000_2ax series")
    Signed-off-by: Oren Givon <oren.givon@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a51c88c35ae6fbd858a50eef3f30719242659c5
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Wed Oct 11 17:23:12 2017 +0200

    ARM64: dts: meson-gxl: Add alternate ARM Trusted Firmware reserved memory zone
    
    commit 4ee8e51b9edfe7845a094690a365c844e5a35b4b upstream.
    
    This year, Amlogic updated the ARM Trusted Firmware reserved memory mapping
    for Meson GXL SoCs and products sold since May 2017 uses this alternate
    reserved memory mapping.
    But products had been sold using the previous mapping.
    
    This issue has been explained in [1] and a dynamic solution is yet to be
    found to avoid loosing another 3Mbytes of reservable memory.
    
    In the meantime, this patch adds this alternate memory zone only for
    the GXL and GXM SoCs since GXBB based new products stopped earlier.
    
    [1] http://lists.infradead.org/pipermail/linux-amlogic/2017-October/004860.html
    
    Fixes: bba8e3f42736 ("ARM64: dts: meson-gx: Add firmware reserved memory zones")
    Reported-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e7706a2a5e989b3f02d083c3c8829a39ec8482f
Author: Stanimir Varbanov <stanimir.varbanov@linaro.org>
Date:   Fri Oct 13 16:13:17 2017 +0200

    media: venus: reimplement decoder stop command
    
    commit e69b987a97599456b95b5fef4aca8dcdb1505aea upstream.
    
    This addresses the wrong behavior of decoder stop command by
    rewriting it. These new implementation enqueue an empty buffer
    on the decoder input buffer queue to signal end-of-stream. The
    client should stop queuing buffers on the V4L2 Output queue
    and continue queuing/dequeuing buffers on Capture queue. This
    process will continue until the client receives a buffer with
    V4L2_BUF_FLAG_LAST flag raised, which means that this is last
    decoded buffer with data.
    
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Tested-by: Nicolas Dufresne <nicolas.dufresne@collabora.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88a703f31bdf4b609e838495c733aa6c3f270c33
Author: Stanimir Varbanov <stanimir.varbanov@linaro.org>
Date:   Tue Oct 10 09:52:36 2017 +0200

    media: venus: venc: fix bytesused v4l2_plane field
    
    commit 5232c37ce244db04fd50d160b92e40d2df46a2e9 upstream.
    
    This fixes wrongly filled bytesused field of v4l2_plane structure
    by include data_offset in the plane, Also fill data_offset and
    bytesused for capture type of buffers only.
    
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 242ceaf6dc6159e71078fb6d53ecf62d2627da9f
Author: Stanimir Varbanov <stanimir.varbanov@linaro.org>
Date:   Mon Oct 9 14:24:57 2017 +0200

    media: venus: fix wrong size on dma_free
    
    commit cd1a77e3c9cc6dbb57f02aa50e1740fc144d2dad upstream.
    
    This change will fix an issue with dma_free size found with
    DMA API debug enabled.
    
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab7724bf5bc1811fc83743627a8acbcd17ba7f7b
Author: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
Date:   Tue Oct 17 11:48:50 2017 -0400

    media: v4l2-ctrl: Fix flags field on Control events
    
    commit 9cac9d2fb2fe0e0cadacdb94415b3fe49e3f724f upstream.
    
    VIDIOC_DQEVENT and VIDIOC_QUERY_EXT_CTRL should give the same output for
    the control flags field.
    
    This patch creates a new function user_flags(), that calculates the user
    exported flags value (which is different than the kernel internal flags
    structure). This function is then used by all the code that exports the
    internal flags to userspace.
    
    Reported-by: Dimitrios Katsaros <patcherwork@gmail.com>
    Signed-off-by: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a482b8a75500ec7516f3d11c7fb063e3f4abc45
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Sep 21 05:40:18 2017 -0300

    cx231xx-cards: fix NULL-deref on missing association descriptor
    
    commit 6c3b047fa2d2286d5e438bcb470c7b1a49f415f6 upstream.
    
    Make sure to check that we actually have an Interface Association
    Descriptor before dereferencing it during probe to avoid dereferencing a
    NULL-pointer.
    
    Fixes: e0d3bafd0258 ("V4L/DVB (10954): Add cx231xx USB driver")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfec97f26d299f64cb5dd94f5e391d74c9977486
Author: Sean Young <sean@mess.org>
Date:   Sun Oct 1 16:38:29 2017 -0400

    media: rc: nec decoder should not send both repeat and keycode
    
    commit 829bbf268894d0866bb9dd2b1e430cfa5c5f0779 upstream.
    
    When receiving an nec repeat, rc_repeat() is called and then rc_keydown()
    with the last decoded scancode. That last call is redundant.
    
    Fixes: 265a2988d202 ("media: rc-core: consistent use of rc_repeat()")
    
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e82273a266d03aeb00f0d27762ca306abbf14e01
Author: Sean Young <sean@mess.org>
Date:   Sun Oct 8 14:18:52 2017 -0400

    media: rc: check for integer overflow
    
    commit 3e45067f94bbd61dec0619b1c32744eb0de480c8 upstream.
    
    The ioctl LIRC_SET_REC_TIMEOUT would set a timeout of 704ns if called
    with a timeout of 4294968us.
    
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7da7bed3c80ffc818ea3955d1fb21df119c3e9d7
Author: Michele Baldessari <michele@acksyn.org>
Date:   Mon Nov 6 08:50:22 2017 -0500

    media: Don't do DMA on stack for firmware upload in the AS102 driver
    
    commit b3120d2cc447ee77b9d69bf4ad7b452c9adb4d39 upstream.
    
    Firmware load on AS102 is using the stack which is not allowed any
    longer. We currently fail with:
    
    kernel: transfer buffer not dma capable
    kernel: ------------[ cut here ]------------
    kernel: WARNING: CPU: 0 PID: 598 at drivers/usb/core/hcd.c:1595 usb_hcd_map_urb_for_dma+0x41d/0x620
    kernel: Modules linked in: amd64_edac_mod(-) edac_mce_amd as102_fe dvb_as102(+) kvm_amd kvm snd_hda_codec_realtek dvb_core snd_hda_codec_generic snd_hda_codec_hdmi snd_hda_intel snd_hda_codec irqbypass crct10dif_pclmul crc32_pclmul snd_hda_core snd_hwdep snd_seq ghash_clmulni_intel sp5100_tco fam15h_power wmi k10temp i2c_piix4 snd_seq_device snd_pcm snd_timer parport_pc parport tpm_infineon snd tpm_tis soundcore tpm_tis_core tpm shpchp acpi_cpufreq xfs libcrc32c amdgpu amdkfd amd_iommu_v2 radeon hid_logitech_hidpp i2c_algo_bit drm_kms_helper crc32c_intel ttm drm r8169 mii hid_logitech_dj
    kernel: CPU: 0 PID: 598 Comm: systemd-udevd Not tainted 4.13.10-200.fc26.x86_64 #1
    kernel: Hardware name: ASUS All Series/AM1I-A, BIOS 0505 03/13/2014
    kernel: task: ffff979933b24c80 task.stack: ffffaf83413a4000
    kernel: RIP: 0010:usb_hcd_map_urb_for_dma+0x41d/0x620
    systemd-fsck[659]: /dev/sda2: clean, 49/128016 files, 268609/512000 blocks
    kernel: RSP: 0018:ffffaf83413a7728 EFLAGS: 00010282
    systemd-udevd[604]: link_config: autonegotiation is unset or enabled, the speed and duplex are not writable.
    kernel: RAX: 000000000000001f RBX: ffff979930bce780 RCX: 0000000000000000
    kernel: RDX: 0000000000000000 RSI: ffff97993ec0e118 RDI: ffff97993ec0e118
    kernel: RBP: ffffaf83413a7768 R08: 000000000000039a R09: 0000000000000000
    kernel: R10: 0000000000000001 R11: 00000000ffffffff R12: 00000000fffffff5
    kernel: R13: 0000000001400000 R14: 0000000000000001 R15: ffff979930806800
    kernel: FS:  00007effaca5c8c0(0000) GS:ffff97993ec00000(0000) knlGS:0000000000000000
    kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    kernel: CR2: 00007effa9fca962 CR3: 0000000233089000 CR4: 00000000000406f0
    kernel: Call Trace:
    kernel:  usb_hcd_submit_urb+0x493/0xb40
    kernel:  ? page_cache_tree_insert+0x100/0x100
    kernel:  ? xfs_iunlock+0xd5/0x100 [xfs]
    kernel:  ? xfs_file_buffered_aio_read+0x57/0xc0 [xfs]
    kernel:  usb_submit_urb+0x22d/0x560
    kernel:  usb_start_wait_urb+0x6e/0x180
    kernel:  usb_bulk_msg+0xb8/0x160
    kernel:  as102_send_ep1+0x49/0xe0 [dvb_as102]
    kernel:  ? devres_add+0x3f/0x50
    kernel:  as102_firmware_upload.isra.0+0x1dc/0x210 [dvb_as102]
    kernel:  as102_fw_upload+0xb6/0x1f0 [dvb_as102]
    kernel:  as102_dvb_register+0x2af/0x2d0 [dvb_as102]
    kernel:  as102_usb_probe+0x1f3/0x260 [dvb_as102]
    kernel:  usb_probe_interface+0x124/0x300
    kernel:  driver_probe_device+0x2ff/0x450
    kernel:  __driver_attach+0xa4/0xe0
    kernel:  ? driver_probe_device+0x450/0x450
    kernel:  bus_for_each_dev+0x6e/0xb0
    kernel:  driver_attach+0x1e/0x20
    kernel:  bus_add_driver+0x1c7/0x270
    kernel:  driver_register+0x60/0xe0
    kernel:  usb_register_driver+0x81/0x150
    kernel:  ? 0xffffffffc0807000
    kernel:  as102_usb_driver_init+0x1e/0x1000 [dvb_as102]
    kernel:  do_one_initcall+0x50/0x190
    kernel:  ? __vunmap+0x81/0xb0
    kernel:  ? kfree+0x154/0x170
    kernel:  ? kmem_cache_alloc_trace+0x15f/0x1c0
    kernel:  ? do_init_module+0x27/0x1e9
    kernel:  do_init_module+0x5f/0x1e9
    kernel:  load_module+0x2602/0x2c30
    kernel:  SYSC_init_module+0x170/0x1a0
    kernel:  ? SYSC_init_module+0x170/0x1a0
    kernel:  SyS_init_module+0xe/0x10
    kernel:  do_syscall_64+0x67/0x140
    kernel:  entry_SYSCALL64_slow_path+0x25/0x25
    kernel: RIP: 0033:0x7effab6cf3ea
    kernel: RSP: 002b:00007fff5cfcbbc8 EFLAGS: 00000246 ORIG_RAX: 00000000000000af
    kernel: RAX: ffffffffffffffda RBX: 00005569e0b83760 RCX: 00007effab6cf3ea
    kernel: RDX: 00007effac2099c5 RSI: 0000000000009a13 RDI: 00005569e0b98c50
    kernel: RBP: 00007effac2099c5 R08: 00005569e0b83ed0 R09: 0000000000001d80
    kernel: R10: 00007effab98db00 R11: 0000000000000246 R12: 00005569e0b98c50
    kernel: R13: 00005569e0b81c60 R14: 0000000000020000 R15: 00005569dfadfdf7
    kernel: Code: 48 39 c8 73 30 80 3d 59 60 9d 00 00 41 bc f5 ff ff ff 0f 85 26 ff ff ff 48 c7 c7 b8 6b d0 92 c6 05 3f 60 9d 00 01 e8 24 3d ad ff <0f> ff 8b 53 64 e9 09 ff ff ff 65 48 8b 0c 25 00 d3 00 00 48 8b
    kernel: ---[ end trace c4cae366180e70ec ]---
    kernel: as10x_usb: error during firmware upload part1
    
    Let's allocate the the structure dynamically so we can get the firmware
    loaded correctly:
    [   14.243057] as10x_usb: firmware: as102_data1_st.hex loaded with success
    [   14.500777] as10x_usb: firmware: as102_data2_st.hex loaded with success
    
    Signed-off-by: Michele Baldessari <michele@acksyn.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 275e5c44679dcaed07007a8fbc634721afc7020d
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Nov 10 04:27:38 2017 +1100

    powerpc/64s/hash: Allow MAP_FIXED allocations to cross 128TB boundary
    
    commit 35602f82d0c765f991420e319c8d3a596c921eb8 upstream.
    
    While mapping hints with a length that cross 128TB are disallowed,
    MAP_FIXED allocations that cross 128TB are allowed. These are failing
    on hash (on radix they succeed). Add an additional case for fixed
    mappings to expand the addr_limit when crossing 128TB.
    
    Fixes: f4ea6dcb08ea ("powerpc/mm: Enable mappings above 128TB")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34c8d3ffb64883b9279c03e79c1b08c9a1931940
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Nov 10 04:27:37 2017 +1100

    powerpc/64s/hash: Fix fork() with 512TB process address space
    
    commit effc1b25088502fbd30305c79773de2d1f7470a6 upstream.
    
    Hash unconditionally resets the addr_limit to default (128TB) when the
    mm context is initialised. If a process has > 128TB mappings when it
    forks, the child will not get the 512TB addr_limit, so accesses to
    valid > 128TB mappings will fail in the child.
    
    Fix this by only resetting the addr_limit to default if it was 0. Non
    zero indicates it was duplicated from the parent (0 means exec()).
    
    Fixes: f4ea6dcb08ea ("powerpc/mm: Enable mappings above 128TB")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2279e9c895778cc8942b82e6e9fa153d5024acc2
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Nov 10 04:27:36 2017 +1100

    powerpc/64s/hash: Fix 128TB-512TB virtual address boundary case allocation
    
    commit 6a72dc038b615229a1b285829d6c8378d15c2347 upstream.
    
    When allocating VA space with a hint that crosses 128TB, the SLB
    addr_limit variable is not expanded if addr is not > 128TB, but the
    slice allocation looks at task_size, which is 512TB. This results in
    slice_check_fit() incorrectly succeeding because the slice_count
    truncates off bit 128 of the requested mask, so the comparison to the
    available mask succeeds.
    
    Fix this by using mm->context.addr_limit instead of mm->task_size for
    testing allocation limits. This causes such allocations to fail.
    
    Fixes: f4ea6dcb08ea ("powerpc/mm: Enable mappings above 128TB")
    Reported-by: Florian Weimer <fweimer@redhat.com>
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45567ab5983900c5363019c5465b1dc46fa0218d
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Nov 13 23:17:28 2017 +1100

    powerpc/64s/hash: Fix 512T hint detection to use >= 128T
    
    commit 7ece370996b694ae263025e056ad785afc1be5ab upstream.
    
    Currently userspace is able to request mmap() search between 128T-512T
    by specifying a hint address that is greater than 128T. But that means
    a hint of 128T exactly will return an address below 128T, which is
    confusing and wrong.
    
    So fix the logic to check the hint is greater than *or equal* to 128T.
    
    Fixes: f4ea6dcb08ea ("powerpc/mm: Enable mappings above 128TB")
    Suggested-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Suggested-by: Nicholas Piggin <npiggin@gmail.com>
    [mpe: Split out of Nick's bigger patch]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de9c35508f80fc77804402f0d5a50885b43e3339
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Nov 10 04:27:39 2017 +1100

    powerpc/64s/radix: Fix 128TB-512TB virtual address boundary case allocation
    
    commit 85e3f1adcb9d49300b0a943bb93f9604be375bfb upstream.
    
    Radix VA space allocations test addresses against mm->task_size which
    is 512TB, even in cases where the intention is to limit allocation to
    below 128TB.
    
    This results in mmap with a hint address below 128TB but address +
    length above 128TB succeeding when it should fail (as hash does after
    the previous patch).
    
    Set the high address limit to be considered up front, and base
    subsequent allocation checks on that consistently.
    
    Fixes: f4ea6dcb08ea ("powerpc/mm: Enable mappings above 128TB")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cee5a6e8c3966b146a255f121425a064559a0767
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Nov 14 15:48:47 2017 +1100

    powerpc/64s: Fix masking of SRR1 bits on instruction fault
    
    commit 475b581ff57bc01437cbc680e281869918447763 upstream.
    
    On 64-bit Book3s, when we take an instruction fault the reason for the
    fault may be reported in SRR1. For data faults the reason is reported
    in DSISR (Data Storage Instruction Status Register).
    
    The reasons reported in each do not necessarily correspond, so we mask
    the SRR1 bits before copying them to the DSISR, which is then used by
    the page fault code.
    
    Prior to commit b4c001dc44f0 ("powerpc/mm: Use symbolic constants for
    filtering SRR1 bits on ISIs") we used a hard-coded mask of 0x58200000,
    which corresponds to:
    
      DSISR_NOHPTE          0x40000000 /* no translation found */
      DSISR_NOEXEC_OR_G     0x10000000 /* exec of no-exec or guarded */
      DSISR_PROTFAULT       0x08000000 /* protection fault */
      DSISR_KEYFAULT        0x00200000 /* Storage Key fault */
    
    That commit added a #define for the mask, DSISR_SRR1_MATCH_64S, but
    incorrectly used a different similarly named DSISR_BAD_FAULT_64S.
    
    This had the effect of changing the mask to 0xa43a0000, which omits
    everything but DSISR_KEYFAULT.
    
    Luckily this had no visible effect, because in practice we hardly use
    the DSISR bits. The lack of DSISR_NOHPTE means a TLB flush
    optimisation was missed in the native HPTE code, and DSISR_NOEXEC_OR_G
    and DSISR_PROTFAULT are both only used to trigger rare warnings.
    
    So we got lucky, but let's fix it. The new value only has bits between
    17 and 30 set, so we can continue to use andis.
    
    Fixes: b4c001dc44f0 ("powerpc/mm: Use symbolic constants for filtering SRR1 bits on ISIs")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 586fa9ed8b4916c84f1284020843c825fff97e2c
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Aug 31 21:55:57 2017 +0530

    powerpc/signal: Properly handle return value from uprobe_deny_signal()
    
    commit 46725b17f1c6c815a41429259b3f070c01e71bc1 upstream.
    
    When a uprobe is installed on an instruction that we currently do not
    emulate, we copy the instruction into a xol buffer and single step
    that instruction. If that instruction generates a fault, we abort the
    single stepping before invoking the signal handler. Once the signal
    handler is done, the uprobe trap is hit again since the instruction is
    retried and the process repeats.
    
    We use uprobe_deny_signal() to detect if the xol instruction triggered
    a signal. If so, we clear TIF_SIGPENDING and set TIF_UPROBE so that the
    signal is not handled until after the single stepping is aborted. In
    this case, uprobe_deny_signal() returns true and get_signal() ends up
    returning 0. However, in do_signal(), we are not looking at the return
    value, but depending on ksig.sig for further action, all with an
    uninitialized ksig that is not touched in this scenario. Fix the same
    by initializing ksig.sig to 0.
    
    Fixes: 129b69df9c90 ("powerpc: Use get_signal() signal_setup_done()")
    Reported-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b090846da0a14d24a2c943d3ae030692594c9f6
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Oct 16 00:13:41 2017 +0530

    powerpc/perf/imc: Use cpu_to_node() not topology_physical_package_id()
    
    commit f3f1dfd600ff82b18b7ea73d80eb27f476a6aa97 upstream.
    
    init_imc_pmu() uses topology_physical_package_id() to detect the
    node id of the processor it is on to get local memory, but that's
    wrong, and can lead to crashes. Fix it to use cpu_to_node().
    
    Fixes: 885dcd709ba9 ("powerpc/perf: Add nest IMC PMU support")
    Reported-By: Rob Lippert <rlippert@google.com>
    Tested-By: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    Signed-off-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44a4adbc9949653a89e027a86caf373ec49a2fd1
Author: Balbir Singh <bsingharora@gmail.com>
Date:   Mon Oct 16 16:21:35 2017 +1100

    powerpc/mm/radix: Fix crashes on Power9 DD1 with radix MMU and STRICT_RWX
    
    commit f79ad50ea3c73fb1ea5b09e95c864e5bb263adfb upstream.
    
    When using the radix MMU on Power9 DD1, to work around a hardware
    problem, radix__pte_update() is required to do a two stage update of
    the PTE. First we write a zero value into the PTE, then we flush the
    TLB, and then we write the new PTE value.
    
    In the normal case that works OK, but it does not work if we're
    updating the PTE that maps the code we're executing, because the
    mapping is removed by the TLB flush and we can no longer execute from
    it. Unfortunately the STRICT_RWX code needs to do exactly that.
    
    The exact symptoms when we hit this case vary, sometimes we print an
    oops and then get stuck after that, but I've also seen a machine just
    get stuck continually page faulting with no oops printed. The variance
    is presumably due to the exact layout of the text and the page size
    used for the mappings. In all cases we are unable to boot to a shell.
    
    There are possible solutions such as creating a second mapping of the
    TLB flush code, executing from that, and then jumping back to the
    original. However we don't want to add that level of complexity for a
    DD1 work around.
    
    So just detect that we're running on Power9 DD1 and refrain from
    changing the permissions, effectively disabling STRICT_RWX on Power9
    DD1.
    
    Fixes: 7614ff3272a1 ("powerpc/mm/radix: Implement STRICT_RWX/mark_rodata_ro() for Radix")
    Reported-by: Andrew Jeffery <andrew@aj.id.au>
    [Changelog as suggested by Michael Ellerman <mpe@ellerman.id.au>]
    Signed-off-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df4d69feaf017cd2d6d521d5d32870e7e05f7121
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Tue Nov 21 15:28:20 2017 +0100

    powerpc: Fix boot on BOOK3S_32 with CONFIG_STRICT_KERNEL_RWX
    
    commit 252eb55816a6f69ef9464cad303cdb3326cdc61d upstream.
    
    On powerpc32, patch_instruction() is called by apply_feature_fixups()
    which is called from early_init()
    
    There is the following note in front of early_init():
     * Note that the kernel may be running at an address which is different
     * from the address that it was linked at, so we must use RELOC/PTRRELOC
     * to access static data (including strings).  -- paulus
    
    Therefore, slab_is_available() cannot be called yet, and
    text_poke_area must be addressed with PTRRELOC()
    
    Fixes: 95902e6c8864 ("powerpc/mm: Implement STRICT_KERNEL_RWX on PPC32")
    Reported-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7311af0e236710e57a71bc942d1fd1f968865a5
Author: John David Anglin <dave.anglin@bell.net>
Date:   Sat Nov 11 17:11:16 2017 -0500

    parisc: Fix validity check of pointer size argument in new CAS implementation
    
    commit 05f016d2ca7a4fab99d5d5472168506ddf95e74f upstream.
    
    As noted by Christoph Biedl, passing a pointer size of 4 in the new CAS
    implementation causes a kernel crash.  The attached patch corrects the
    off by one error in the argument validity check.
    
    In reviewing the code, I noticed that we only perform word operations
    with the pointer size argument.  The subi instruction intentionally uses
    a word condition on 64-bit kernels.  Nullification was used instead of a
    cmpib instruction as the branch should never be taken.  The shlw
    pseudo-operation generates a depw,z instruction and it clears the target
    before doing a shift left word deposit.  Thus, we don't need to clip the
    upper 32 bits of this argument on 64-bit kernels.
    
    Tested with a gcc testsuite run with a 64-bit kernel.  The gcc atomic
    code in libgcc is the only direct user of the new CAS implementation
    that I am aware of.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00f886bb5545ea5eb82a9a0abf656257bb570957
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:43 2017 -0600

    ixgbe: Fix skb list corruption on Power systems
    
    commit 0a9a17e3bb4564caf4bfe2a6783ae1287667d188 upstream.
    
    This patch fixes an issue seen on Power systems with ixgbe which results
    in skb list corruption and an eventual kernel oops. The following is what
    was observed:
    
    CPU 1                                   CPU2
    ============================            ============================
    1: ixgbe_xmit_frame_ring                ixgbe_clean_tx_irq
    2:  first->skb = skb                     eop_desc = tx_buffer->next_to_watch
    3:  ixgbe_tx_map                         read_barrier_depends()
    4:   wmb                                 check adapter written status bit
    5:   first->next_to_watch = tx_desc      napi_consume_skb(tx_buffer->skb ..);
    6:   writel(i, tx_ring->tail);
    
    The read_barrier_depends is insufficient to ensure that tx_buffer->skb does not
    get loaded prior to tx_buffer->next_to_watch, which then results in loading
    a stale skb pointer. This patch replaces the read_barrier_depends with
    smp_rmb to ensure loads are ordered with respect to the load of
    tx_buffer->next_to_watch.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 730501f25a42c88487458b0c08253734fd6ac6b2
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:48 2017 -0600

    fm10k: Use smp_rmb rather than read_barrier_depends
    
    commit 7b8edcc685b5e2c3c37aa13dc50a88e84a5bfef8 upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with fm10k as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61cef8f08c5121f1e7d192190c4f71a7eb6ec58f
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:49 2017 -0600

    i40evf: Use smp_rmb rather than read_barrier_depends
    
    commit f72271e2a0ae4277d53c4053f5eed8bb346ba38a upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with i40evf as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc46257bf4d825e56566d2710b56efdc913b0eb6
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:45 2017 -0600

    ixgbevf: Use smp_rmb rather than read_barrier_depends
    
    commit ae0c585d93dfaf923d2c7eb44b2c3ab92854ea9b upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with ixgbevf as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d8be80e5fc4c2e03bc9df9b0fb53e62981e8d53
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:46 2017 -0600

    igbvf: Use smp_rmb rather than read_barrier_depends
    
    commit 1e1f9ca546556e508d021545861f6b5fc75a95fe upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with igbvf as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8379910921d1658391d62d24e6534c4725563252
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:47 2017 -0600

    igb: Use smp_rmb rather than read_barrier_depends
    
    commit c4cb99185b4cc96c0a1c70104dc21ae14d7e7f28 upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with igb as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5727faafa56eeacb1f409969b373d912ef259ca5
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:44 2017 -0600

    i40e: Use smp_rmb rather than read_barrier_depends
    
    commit 52c6912fde0133981ee50ba08808f257829c4c93 upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with i40e as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb76fcebb9c9edf843581e44c6a0a60033f3a66f
Author: Bin Meng <bmeng.cn@gmail.com>
Date:   Mon Sep 11 02:41:53 2017 -0700

    spi-nor: intel-spi: Fix broken software sequencing codes
    
    commit 9d63f17661e25fd28714dac94bdebc4ff5b75f09 upstream.
    
    There are two bugs in current intel_spi_sw_cycle():
    
    - The 'data byte count' field should be the number of bytes
      transferred minus 1
    - SSFSTS_CTL is the offset from ispi->sregs, not ispi->base
    
    Signed-off-by: Bin Meng <bmeng.cn@gmail.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Cyrille Pitchen <cyrille.pitchen@wedev4u.fr>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb2499b394805094884601b85d209bb9a9d16384
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Jul 9 13:08:58 2017 +0200

    NFC: fix device-allocation error return
    
    commit c45e3e4c5b134b081e8af362109905427967eb19 upstream.
    
    A recent change fixing NFC device allocation itself introduced an
    error-handling bug by returning an error pointer in case device-id
    allocation failed. This is clearly broken as the callers still expected
    NULL to be returned on errors as detected by Dan's static checker.
    
    Fix this up by returning NULL in the event that we've run out of memory
    when allocating a new device id.
    
    Note that the offending commit is marked for stable (3.8) so this fix
    needs to be backported along with it.
    
    Fixes: 20777bc57c34 ("NFC: fix broken device allocation")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f92dea588014ae5083cac7ee33c88d58c9e87127
Author: Daniel Jurgens <danielj@mellanox.com>
Date:   Tue Nov 7 18:33:26 2017 +0200

    IB/core: Only maintain real QPs in the security lists
    
    commit 877add28178a7fa3c68f29c450d050a8e6513f08 upstream.
    
    When modify QP is called on a shared QP update the security context for
    the real QP. When security is subsequently enforced the shared QP
    handles will be checked as well.
    
    Without this change shared QP handles get added to the port/pkey lists,
    which is a bug, because not all shared QP handles will be checked for
    access. Also the shared QP security context wouldn't get removed from
    the port/pkey lists causing access to free memory and list corruption
    when they are destroyed.
    
    Fixes: d291f1a65232 ("IB/core: Enforce PKey security on QPs")
    Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2477321f8a1ae2920ba503e4216992bddfb33687
Author: Parav Pandit <parav@mellanox.com>
Date:   Tue Oct 31 10:33:18 2017 -0500

    IB/core: Avoid crash on pkey enforcement failed in received MADs
    
    commit 89548bcafec7ecfeea58c553f0834b5d575a66eb upstream.
    
    Below kernel crash is observed when Pkey security enforcement fails on
    received MADs. This issue is reported in [1].
    
    ib_free_recv_mad() accesses the rmpp_list, whose initialization is
    needed before accessing it.
    When security enformcent fails on received MADs, MAD processing avoided
    due to security checks failed.
    
    OpenSM[3770]: SM port is down
    kernel: BUG: unable to handle kernel NULL pointer dereference at 0000000000000008
    kernel: IP: ib_free_recv_mad+0x44/0xa0 [ib_core]
    kernel: PGD 0
    kernel: P4D 0
    kernel:
    kernel: Oops: 0002 [#1] SMP
    kernel: CPU: 0 PID: 2833 Comm: kworker/0:1H Tainted: P          IO    4.13.4-1-pve #1
    kernel: Hardware name: Dell       XS23-TY3        /9CMP63, BIOS 1.71 09/17/2013
    kernel: Workqueue: ib-comp-wq ib_cq_poll_work [ib_core]
    kernel: task: ffffa069c6541600 task.stack: ffffb9a729054000
    kernel: RIP: 0010:ib_free_recv_mad+0x44/0xa0 [ib_core]
    kernel: RSP: 0018:ffffb9a729057d38 EFLAGS: 00010286
    kernel: RAX: ffffa069cb138a48 RBX: ffffa069cb138a10 RCX: 0000000000000000
    kernel: RDX: ffffb9a729057d38 RSI: 0000000000000000 RDI: ffffa069cb138a20
    kernel: RBP: ffffb9a729057d60 R08: ffffa072d2d49800 R09: ffffa069cb138ae0
    kernel: R10: ffffa069cb138ae0 R11: ffffa072b3994e00 R12: ffffb9a729057d38
    kernel: R13: ffffa069d1c90000 R14: 0000000000000000 R15: ffffa069d1c90880
    kernel: FS:  0000000000000000(0000) GS:ffffa069dba00000(0000) knlGS:0000000000000000
    kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    kernel: CR2: 0000000000000008 CR3: 00000011f51f2000 CR4: 00000000000006f0
    kernel: Call Trace:
    kernel:  ib_mad_recv_done+0x5cc/0xb50 [ib_core]
    kernel:  __ib_process_cq+0x5c/0xb0 [ib_core]
    kernel:  ib_cq_poll_work+0x20/0x60 [ib_core]
    kernel:  process_one_work+0x1e9/0x410
    kernel:  worker_thread+0x4b/0x410
    kernel:  kthread+0x109/0x140
    kernel:  ? process_one_work+0x410/0x410
    kernel:  ? kthread_create_on_node+0x70/0x70
    kernel:  ? SyS_exit_group+0x14/0x20
    kernel:  ret_from_fork+0x25/0x30
    kernel: RIP: ib_free_recv_mad+0x44/0xa0 [ib_core] RSP: ffffb9a729057d38
    kernel: CR2: 0000000000000008
    
    [1] : https://www.spinics.net/lists/linux-rdma/msg56190.html
    
    Fixes: 47a2b338fe63 ("IB/core: Enforce security on management datagrams")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reported-by: Chris Blake <chrisrblake93@gmail.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Hal Rosenstock <hal@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c15ec17e8d8da60e07f81afe7c6f699b6233d80e
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Wed Oct 11 10:27:26 2017 -0700

    IB/srp: Avoid that a cable pull can trigger a kernel crash
    
    commit 8a0d18c62121d3c554a83eb96e2752861d84d937 upstream.
    
    This patch fixes the following kernel crash:
    
    general protection fault: 0000 [#1] PREEMPT SMP
    Workqueue: ib_mad2 timeout_sends [ib_core]
    Call Trace:
     ib_sa_path_rec_callback+0x1c4/0x1d0 [ib_core]
     send_handler+0xb2/0xd0 [ib_core]
     timeout_sends+0x14d/0x220 [ib_core]
     process_one_work+0x200/0x630
     worker_thread+0x4e/0x3b0
     kthread+0x113/0x150
    
    Fixes: commit aef9ec39c47f ("IB: Add SCSI RDMA Protocol (SRP) initiator")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d555533d4238957beebbce0e92d190b95c8f5908
Author: Michael J. Ruhl <michael.j.ruhl@intel.com>
Date:   Mon Oct 2 11:04:19 2017 -0700

    IB/hfi1: Fix incorrect available receive user context count
    
    commit d7d626179fb283aba73699071af0df6d00e32138 upstream.
    
    The addition of the VNIC contexts to num_rcv_contexts changes the
    meaning of the sysfs value nctxts from available user contexts, to
    user contexts + reserved VNIC contexts.
    
    User applications that use nctxts are now broken.
    
    Update the calculation so that VNIC contexts are used only if there are
    hardware contexts available, and do not silently affect nctxts.
    
    Update code to use the calculated VNIC context number.
    
    Update the sysfs value nctxts to be available user contexts only.
    
    Fixes: 2280740f01ae ("IB/hfi1: Virtual Network Interface Controller (VNIC) HW support")
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: Niranjana Vishwanathapura <Niranjana.Vishwanathapura@intel.com>
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5449283f245d85c80077fd024491de5ae0e40907
Author: Parav Pandit <parav@mellanox.com>
Date:   Thu Oct 19 08:40:30 2017 +0300

    IB/cm: Fix memory corruption in handling CM request
    
    commit 5a3dc32372439eb9a0d6027c54cbfff64803fce5 upstream.
    
    In recent code, two path record entries are alwasy cleared while
    allocated could be either one or two path record entries.
    This leads to zero out of unallocated memory.
    
    This fix initializes alternative path record only when alternative path
    is set.
    
    While we are at it, path record allocation doesn't check for OPA
    alternative path, but rest of the code checks for OPA alternative path.
    Path record allocation code doesn't check for OPA alternative LID.
    This can further lead to memory corruption when only one path record is
    allocated, but there is actually alternative OPA path record present in CM
    request.
    
    Fixes: 9fdca4da4d8c ("IB/SA: Split struct sa_path_rec based on IB and ROCE specific fields")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d56fd8a032ab2879b70f9b69c4f59713552c1f9a
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Wed Oct 11 10:27:22 2017 -0700

    IB/srpt: Do not accept invalid initiator port names
    
    commit c70ca38960399a63d5c048b7b700612ea321d17e upstream.
    
    Make srpt_parse_i_port_id() return a negative value if hex2bin()
    fails.
    
    Fixes: commit a42d985bd5b2 ("ib_srpt: Initial SRP Target merge for v3.3-rc1")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7a05def6f722746259ae58079470ebb891b584d
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Mon Oct 16 12:14:33 2017 -0400

    svcrdma: Preserve CB send buffer across retransmits
    
    commit 0bad47cada5defba13e98827d22d06f13258dfb3 upstream.
    
    During each NFSv4 callback Call, an RDMA Send completion frees the
    page that contains the RPC Call message. If the upper layer
    determines that a retransmit is necessary, this is too soon.
    
    One possible symptom: after a GARBAGE_ARGS response an NFSv4.1
    callback request, the following BUG fires on the NFS server:
    
    kernel: BUG: Bad page state in process kworker/0:2H  pfn:7d3ce2
    kernel: page:ffffea001f4f3880 count:-2 mapcount:0 mapping:          (null) index:0x0
    kernel: flags: 0x2fffff80000000()
    kernel: raw: 002fffff80000000 0000000000000000 0000000000000000 fffffffeffffffff
    kernel: raw: dead000000000100 dead000000000200 0000000000000000 0000000000000000
    kernel: page dumped because: nonzero _refcount
    kernel: Modules linked in: cts rpcsec_gss_krb5 ocfs2_dlmfs ocfs2_stack_o2cb ocfs2_dlm
    ocfs2_nodemanager ocfs2_stackglue rpcrdm a ib_ipoib rdma_ucm ib_ucm ib_uverbs ib_umad
    rdma_cm ib_cm iw_cm x86_pkg_temp_thermal intel_powerclamp coretemp kvm_intel
    kvm irqbypass crct10dif_pc lmul crc32_pclmul ghash_clmulni_intel pcbc iTCO_wdt
    iTCO_vendor_support aesni_intel crypto_simd glue_helper cryptd pcspkr lpc_ich i2c_i801
    mei_me mf d_core mei raid0 sg wmi ioatdma ipmi_si ipmi_devintf ipmi_msghandler shpchp
    acpi_power_meter acpi_pad nfsd nfs_acl lockd auth_rpcgss grace sunrpc ip_tables xfs
    libcrc32c mlx4_en mlx4_ib mlx5_ib ib_core sd_mod sr_mod cdrom ast drm_kms_helper
    syscopyarea sysfillrect sysimgblt fb_sys_fops ttm ahci crc32c_intel libahci drm
    mlx5_core igb libata mlx4_core dca i2c_algo_bit i2c_core nvme
    kernel: ptp nvme_core pps_core dm_mirror dm_region_hash dm_log dm_mod dax
    kernel: CPU: 0 PID: 11495 Comm: kworker/0:2H Not tainted 4.14.0-rc3-00001-g577ce48 #811
    kernel: Hardware name: Supermicro Super Server/X10SRL-F, BIOS 1.0c 09/09/2015
    kernel: Workqueue: ib-comp-wq ib_cq_poll_work [ib_core]
    kernel: Call Trace:
    kernel: dump_stack+0x62/0x80
    kernel: bad_page+0xfe/0x11a
    kernel: free_pages_check_bad+0x76/0x78
    kernel: free_pcppages_bulk+0x364/0x441
    kernel: ? ttwu_do_activate.isra.61+0x71/0x78
    kernel: free_hot_cold_page+0x1c5/0x202
    kernel: __put_page+0x2c/0x36
    kernel: svc_rdma_put_context+0xd9/0xe4 [rpcrdma]
    kernel: svc_rdma_wc_send+0x50/0x98 [rpcrdma]
    
    This issue exists all the way back to v4.5, but refactoring and code
    re-organization prevents this simple patch from applying to kernels
    older than v4.12. The fix is the same, however, if someone needs to
    backport it.
    
    Reported-by: Ben Coddington <bcodding@redhat.com>
    BugLink: https://bugzilla.linux-nfs.org/show_bug.cgi?id=314
    Fixes: 5d252f90a800 ('svcrdma: Add class for RDMA backwards ... ')
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65551fb50f05057da3f731059355fd67e6837a7b
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Sep 26 11:21:24 2017 -0700

    libnvdimm, namespace: make 'resource' attribute only readable by root
    
    commit c1fb3542074fd0c4d901d778bd52455111e4eb6f upstream.
    
    For the same reason that /proc/iomem returns 0's for non-root readers
    and acpi tables are root-only, make the 'resource' attribute for
    namespace devices only readable by root. Otherwise we disclose physical
    address information.
    
    Fixes: bf9bccc14c05 ("libnvdimm: pmem label sets and namespace instantiation")
    Reported-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6667298d1d0d47de619b23078ceb83ec2c09d46
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Sep 26 11:17:52 2017 -0700

    libnvdimm, region : make 'resource' attribute only readable by root
    
    commit b8ff981f88df03c72a4de2f6eaa9ce447a10ac03 upstream.
    
    For the same reason that /proc/iomem returns 0's for non-root readers
    and acpi tables are root-only, make the 'resource' attribute for region
    devices only readable by root. Otherwise we disclose physical address
    information.
    
    Fixes: 802f4be6feee ("libnvdimm: Add 'resource' sysfs attribute to regions")
    Cc: Dave Jiang <dave.jiang@intel.com>
    Cc: Johannes Thumshirn <jthumshirn@suse.de>
    Reported-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 913ff23bac73a9a8825942c957b6252ab3f8f198
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Sep 26 11:41:28 2017 -0700

    libnvdimm, namespace: fix label initialization to use valid seq numbers
    
    commit b18d4b8a25af6fe83d7692191d6ff962ea611c4f upstream.
    
    The set of valid sequence numbers is {1,2,3}. The specification
    indicates that an implementation should consider 0 a sign of a critical
    error:
    
        UEFI 2.7: 13.19 NVDIMM Label Protocol
    
        Software never writes the sequence number 00, so a correctly
        check-summed Index Block with this sequence number probably indicates a
        critical error. When software discovers this case it treats it as an
        invalid Index Block indication.
    
    While the expectation is that the invalid block is just thrown away, the
    Robustness Principle says we should fix this to make both sequence
    numbers valid.
    
    Fixes: f524bf271a5c ("libnvdimm: write pmem label set")
    Reported-by: Juston Li <juston.li@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a31016ea05be4c90ddf691f29aaf999e606e55e
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Sep 26 13:07:06 2017 -0700

    libnvdimm, pfn: make 'resource' attribute only readable by root
    
    commit 26417ae4fc6108f8db436f24108b08f68bdc520e upstream.
    
    For the same reason that /proc/iomem returns 0's for non-root readers
    and acpi tables are root-only, make the 'resource' attribute for pfn
    devices only readable by root. Otherwise we disclose physical address
    information.
    
    Fixes: f6ed58c70d14 ("libnvdimm, pfn: 'resource'-address and 'size'...")
    Reported-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f8fb6d5c2b77631c9b8d45417d2146e914ddb1b
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Sep 25 11:01:31 2017 -0700

    libnvdimm, dimm: clear 'locked' status on successful DIMM enable
    
    commit d34cb808402898e53b9a9bcbbedd01667a78723b upstream.
    
    If we successfully enable a DIMM then it must not be locked and we can
    clear the label-read failure condition. Otherwise, we need to reload the
    entire bus provider driver to achieve the same effect, and that can
    disrupt unrelated DIMMs and namespaces.
    
    Fixes: 9d62ed965118 ("libnvdimm: handle locked label storage areas")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf93b23582af410df8e9ddd682e9a5c4d48b2c65
Author: Johan Hovold <johan@kernel.org>
Date:   Sat Nov 11 17:29:29 2017 +0100

    clk: ti: dra7-atl-clock: fix child-node lookups
    
    commit 33ec6dbc5a02677509d97fe36cd2105753f0f0ea upstream.
    
    Fix child node-lookup during probe, which ended up searching the whole
    device tree depth-first starting at parent rather than just matching on
    its children.
    
    Note that the original premature free of the parent node has already
    been fixed separately, but that fix was apparently never backported to
    stable.
    
    Fixes: 9ac33b0ce81f ("CLK: TI: Driver for DRA7 ATL (Audio Tracking Logic)")
    Fixes: 660e15519399 ("clk: ti: dra7-atl-clock: Fix of_node reference counting")
    Cc: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 210ecdf24e06fb076f40bf3d904d947deb70055e
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Tue Oct 10 17:31:42 2017 -0400

    SUNRPC: Fix tracepoint storage issues with svc_recv and svc_rqst_status
    
    commit e9d4bf219c83d09579bc62512fea2ca10f025d93 upstream.
    
    There is no guarantee that either the request or the svc_xprt exist
    by the time we get round to printing the trace message.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1c2e5668cfd6b0332330e711f3e86d7bfe29230
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Nov 14 09:59:54 2017 -0500

    dax: fix general protection fault in dax_alloc_inode
    
    commit 9f586fff6574f6ecbf323f92d44ffaf0d96225fe upstream.
    
    Don't crash in case of allocation failure in dax_alloc_inode.
    
        syzkaller hit the following crash on e4880bc5dfb1
    
        kasan: CONFIG_KASAN_INLINE enabled
        kasan: GPF could be caused by NULL-ptr deref or user memory access
        [..]
        RIP: 0010:dax_alloc_inode+0x3b/0x70 drivers/dax/super.c:348
        Call Trace:
        alloc_inode+0x65/0x180 fs/inode.c:208
        new_inode_pseudo+0x69/0x190 fs/inode.c:890
        new_inode+0x1c/0x40 fs/inode.c:919
        mount_pseudo_xattr+0x288/0x560 fs/libfs.c:261
        mount_pseudo include/linux/fs.h:2137 [inline]
        dax_mount+0x2e/0x40 drivers/dax/super.c:388
        mount_fs+0x66/0x2d0 fs/super.c:1223
    
    Fixes: 7b6be8444e0f ("dax: refactor dax-fs into a generic provider...")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c21261e6311a7d237da47b608e933f3abd7e534e
Author: Jeff Moyer <jmoyer@redhat.com>
Date:   Tue Nov 14 20:37:27 2017 -0500

    dax: fix PMD faults on zero-length files
    
    commit 957ac8c421ad8b5eef9b17fe98e146d8311a541e upstream.
    
    PMD faults on a zero length file on a file system mounted with -o dax
    will not generate SIGBUS as expected.
    
            fd = open(...O_TRUNC);
            addr = mmap(NULL, 2*1024*1024, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);
            *addr = 'a';
            <expect SIGBUS>
    
    The problem is this code in dax_iomap_pmd_fault:
    
            max_pgoff = (i_size_read(inode) - 1) >> PAGE_SHIFT;
    
    If the inode size is zero, we end up with a max_pgoff that is way larger
    than 0.  :)  Fix it by using DIV_ROUND_UP, as is done elsewhere in the
    kernel.
    
    I tested this with some simple test code that ensured that SIGBUS was
    received where expected.
    
    Fixes: 642261ac995e ("dax: add struct iomap based DAX PMD support")
    Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a77360e989f3dc06e4f177a0837d533d13a20d91
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon Nov 6 13:31:12 2017 +0100

    kvm: vmx: Reinstate support for CPUs without virtual NMI
    
    commit 8a1b43922d0d1279e7936ba85c4c2a870403c95f upstream.
    
    This is more or less a revert of commit 2c82878b0cb3 ("KVM: VMX: require
    virtual NMI support", 2017-03-27); it turns out that Core 2 Duo machines
    only had virtual NMIs in some SKUs.
    
    The revert is not trivial because in the meanwhile there have been several
    fixes to nested NMI injection.  Therefore, the entire vNMI state is moved
    to struct loaded_vmcs.
    
    Another change compared to before the patch is a simplification here:
    
           if (unlikely(!cpu_has_virtual_nmis() && vmx->soft_vnmi_blocked &&
               !(is_guest_mode(vcpu) && nested_cpu_has_virtual_nmis(
                                           get_vmcs12(vcpu))))) {
    
    The final condition here is always true (because nested_cpu_has_virtual_nmis
    is always false) and is removed.
    
    Fixes: 2c82878b0cb38fd516fd612c67852a6bbf282003
    Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1490803
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04d7f0cfd5a50cab9edfd73ceca460de5bdd55ac
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Oct 26 09:13:27 2017 +0200

    KVM: SVM: obey guest PAT
    
    commit 15038e14724799b8c205beb5f20f9e54896013c3 upstream.
    
    For many years some users of assigned devices have reported worse
    performance on AMD processors with NPT than on AMD without NPT,
    Intel or bare metal.
    
    The reason turned out to be that SVM is discarding the guest PAT
    setting and uses the default (PA0=PA4=WB, PA1=PA5=WT, PA2=PA6=UC-,
    PA3=UC).  The guest might be using a different setting, and
    especially might want write combining but isn't getting it
    (instead getting slow UC or UC- accesses).
    
    Thanks a lot to geoff@hostfission.com for noticing the relation
    to the g_pat setting.  The patch has been tested also by a bunch
    of people on VFIO users forums.
    
    Fixes: 709ddebf81cb40e3c36c6109a7892e8b93a09464
    Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=196409
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Tested-by: Nick Sarnie <commendsarnex@gmail.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b09ee40aae7ca0c4a7956dcbc5361c5ef7ccf2e
Author: Ladi Prosek <lprosek@redhat.com>
Date:   Wed Oct 11 16:54:42 2017 +0200

    KVM: nVMX: set IDTR and GDTR limits when loading L1 host state
    
    commit 21f2d551183847bc7fbe8d866151d00cdad18752 upstream.
    
    Intel SDM 27.5.2 Loading Host Segment and Descriptor-Table Registers:
    
    "The GDTR and IDTR limits are each set to FFFFH."
    
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5073bc7c18358d08bc9dd39458bc469dc9e978d
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Thu Oct 26 17:00:22 2017 +1100

    KVM: PPC: Book3S HV: Don't call real-mode XICS hypercall handlers if not enabled
    
    commit 00bb6ae5006205e041ce9784c819460562351d47 upstream.
    
    When running a guest on a POWER9 system with the in-kernel XICS
    emulation disabled (for example by running QEMU with the parameter
    "-machine pseries,kernel_irqchip=off"), the kernel does not pass
    the XICS-related hypercalls such as H_CPPR up to userspace for
    emulation there as it should.
    
    The reason for this is that the real-mode handlers for these
    hypercalls don't check whether a XICS device has been instantiated
    before calling the xics-on-xive code.  That code doesn't check
    either, leading to potential NULL pointer dereferences because
    vcpu->arch.xive_vcpu is NULL.  Those dereferences won't cause an
    exception in real mode but will lead to kernel memory corruption.
    
    This fixes it by adding kvmppc_xics_enabled() checks before calling
    the XICS functions.
    
    Fixes: 5af50993850a ("KVM: PPC: Book3S HV: Native usage of the XIVE interrupt controller")
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 665e6619705a19910ab3aaa81eb34343e9628da4
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Oct 20 17:33:18 2017 +0300

    lockd: double unregister of inetaddr notifiers
    
    commit dc3033e16c59a2c4e62b31341258a5786cbcee56 upstream.
    
    lockd_up() can call lockd_unregister_notifiers twice:
    inside lockd_start_svc() when it calls lockd_svc_exit_thread()
    and then in error path of lockd_up()
    
    Patch forces lockd_start_svc() to unregister notifiers in all error cases
    and removes extra unregister in error path of lockd_up().
    
    Fixes: cb7d224f82e4 "lockd: unregister notifier blocks if the service ..."
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca655bc65e830819ded1b7a0b51a3beb204103a2
Author: Johan Hovold <johan@kernel.org>
Date:   Sat Nov 11 17:51:25 2017 +0100

    irqchip/gic-v3: Fix ppi-partitions lookup
    
    commit 00ee9a1ca5080202bc37b44e998c3b2c74d45817 upstream.
    
    Fix child-node lookup during initialisation, which ended up searching
    the whole device tree depth-first starting at the parent rather than
    just matching on its children.
    
    To make things worse, the parent gic node was prematurely freed, while
    the ppi-partitions node was leaked.
    
    Fixes: e3825ba1af3a ("irqchip/gic-v3: Add support for partitioned PPIs")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c01dd3addb99763551f2717d1c7c6d20bd9491de
Author: Marc Zyngier <marc.zyngier@arm.com>
Date:   Thu Nov 9 14:17:59 2017 +0000

    genirq: Track whether the trigger type has been set
    
    commit 4f8413a3a799c958f7a10a6310a451e6b8aef5ad upstream.
    
    When requesting a shared interrupt, we assume that the firmware
    support code (DT or ACPI) has called irqd_set_trigger_type
    already, so that we can retrieve it and check that the requester
    is being reasonnable.
    
    Unfortunately, we still have non-DT, non-ACPI systems around,
    and these guys won't call irqd_set_trigger_type before requesting
    the interrupt. The consequence is that we fail the request that
    would have worked before.
    
    We can either chase all these use cases (boring), or address it
    in core code (easier). Let's have a per-irq_desc flag that
    indicates whether irqd_set_trigger_type has been called, and
    let's just check it when checking for a shared interrupt.
    If it hasn't been set, just take whatever the interrupt
    requester asks.
    
    Fixes: 382bd4de6182 ("genirq: Use irqd_get_trigger_type to compare the trigger type for shared IRQs")
    Reported-and-tested-by: Petr Cvek <petrcvekcz@gmail.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d92105f93aeb2c80f6840bed9af71d3f97321916
Author: Nate Dailey <nate.dailey@stratus.com>
Date:   Tue Oct 17 08:17:03 2017 -0400

    raid1: prevent freeze_array/wait_all_barriers deadlock
    
    commit f6eca2d43ed694ab8124dd24c88277f7eca93b7d upstream.
    
    If freeze_array is attempted in the middle of close_sync/
    wait_all_barriers, deadlock can occur.
    
    freeze_array will wait for nr_pending and nr_queued to line up.
    wait_all_barriers increments nr_pending for each barrier bucket, one
    at a time, but doesn't actually issue IO that could be counted in
    nr_queued. So freeze_array is blocked until wait_all_barriers
    completes and allow_all_barriers runs. At the same time, when
    _wait_barrier sees array_frozen == 1, it stops and waits for
    freeze_array to complete.
    
    Prevent the deadlock by making close_sync call _wait_barrier and
    _allow_barrier for one bucket at a time, instead of deferring the
    _allow_barrier calls until after all _wait_barriers are complete.
    
    Signed-off-by: Nate Dailey <nate.dailey@stratus.com>
    Fix: fd76863e37fe(RAID1: a new I/O barrier implementation to remove resync window)
    Reviewed-by: Coly Li <colyli@suse.de>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77a38e88ccbc9e6451333f742b18d0fe5176c5cd
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Thu Oct 19 10:00:48 2017 -0700

    block: Fix a race between blk_cleanup_queue() and timeout handling
    
    commit 4e9b6f20828ac880dbc1fa2fdbafae779473d1af upstream.
    
    Make sure that if the timeout timer fires after a queue has been
    marked "dying" that the affected requests are finished.
    
    Reported-by: chenxiang (M) <chenxiang66@hisilicon.com>
    Fixes: commit 287922eb0b18 ("block: defer timeouts to a workqueue")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Tested-by: chenxiang (M) <chenxiang66@hisilicon.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Keith Busch <keith.busch@intel.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Ming Lei <ming.lei@redhat.com>
    Cc: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbf6614675482ae339510e331c2350455b2292b8
Author: Andrey Konovalov <andreyknvl@google.com>
Date:   Tue Sep 26 17:11:33 2017 +0200

    p54: don't unregister leds when they are not initialized
    
    commit fc09785de0a364427a5df63d703bae9a306ed116 upstream.
    
    ieee80211_register_hw() in p54_register_common() may fail and leds won't
    get initialized. Currently p54_unregister_common() doesn't check that and
    always calls p54_unregister_leds(). The fix is to check priv->registered
    flag before calling p54_unregister_leds().
    
    Found by syzkaller.
    
    INFO: trying to register non-static key.
    the code is fine but needs lockdep annotation.
    turning off the locking correctness validator.
    CPU: 1 PID: 1404 Comm: kworker/1:1 Not tainted
    4.14.0-rc1-42251-gebb2c2437d80-dirty #205
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Workqueue: usb_hub_wq hub_event
    Call Trace:
     __dump_stack lib/dump_stack.c:16
     dump_stack+0x292/0x395 lib/dump_stack.c:52
     register_lock_class+0x6c4/0x1a00 kernel/locking/lockdep.c:769
     __lock_acquire+0x27e/0x4550 kernel/locking/lockdep.c:3385
     lock_acquire+0x259/0x620 kernel/locking/lockdep.c:4002
     flush_work+0xf0/0x8c0 kernel/workqueue.c:2886
     __cancel_work_timer+0x51d/0x870 kernel/workqueue.c:2961
     cancel_delayed_work_sync+0x1f/0x30 kernel/workqueue.c:3081
     p54_unregister_leds+0x6c/0xc0 drivers/net/wireless/intersil/p54/led.c:160
     p54_unregister_common+0x3d/0xb0 drivers/net/wireless/intersil/p54/main.c:856
     p54u_disconnect+0x86/0x120 drivers/net/wireless/intersil/p54/p54usb.c:1073
     usb_unbind_interface+0x21c/0xa90 drivers/usb/core/driver.c:423
     __device_release_driver drivers/base/dd.c:861
     device_release_driver_internal+0x4f4/0x5c0 drivers/base/dd.c:893
     device_release_driver+0x1e/0x30 drivers/base/dd.c:918
     bus_remove_device+0x2f4/0x4b0 drivers/base/bus.c:565
     device_del+0x5c4/0xab0 drivers/base/core.c:1985
     usb_disable_device+0x1e9/0x680 drivers/usb/core/message.c:1170
     usb_disconnect+0x260/0x7a0 drivers/usb/core/hub.c:2124
     hub_port_connect drivers/usb/core/hub.c:4754
     hub_port_connect_change drivers/usb/core/hub.c:5009
     port_event drivers/usb/core/hub.c:5115
     hub_event+0x1318/0x3740 drivers/usb/core/hub.c:5195
     process_one_work+0xc7f/0x1db0 kernel/workqueue.c:2119
     process_scheduled_works kernel/workqueue.c:2179
     worker_thread+0xb2b/0x1850 kernel/workqueue.c:2255
     kthread+0x3a1/0x470 kernel/kthread.c:231
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431
    
    Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
    Acked-by: Christian Lamparter <chunkeey@googlemail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90b54bccdd9793d6e906baeb5975afa337987db8
Author: Anup Patel <anup.patel@broadcom.com>
Date:   Tue Oct 3 10:51:48 2017 +0530

    mailbox: bcm-flexrm-mailbox: Fix FlexRM ring flush sequence
    
    commit a371c10ea4b38a5f120e86d906d404d50a0f4660 upstream.
    
    As-per suggestion from FlexRM HW folks, we have to first set
    FlexRM ring flush state and then clear it for FlexRM ring flush
    to work properly.
    
    Currently, the FlexRM driver has incomplete FlexRM ring flush
    sequence which causes repeated insmod+rmmod of mailbox client
    drivers to fail.
    
    This patch fixes FlexRM ring flush sequence in flexrm_shutdown()
    as described above.
    
    Fixes: dbc049eee730 ("mailbox: Add driver for Broadcom FlexRM
    ring manager")
    
    Signed-off-by: Anup Patel <anup.patel@broadcom.com>
    Reviewed-by: Scott Branden <scott.branden@broadcom.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39b3926aad065a371e6dba925d7835117a4b9c16
Author: Xiaolei Li <xiaolei.li@mediatek.com>
Date:   Mon Oct 30 10:39:56 2017 +0800

    mtd: nand: mtk: fix infinite ECC decode IRQ issue
    
    commit 1d2fcdcf33339c7c8016243de0f7f31cf6845e8d upstream.
    
    For MT2701 NAND Controller, there may generate infinite ECC decode IRQ
    during long time burn test on some platforms. Once this issue occurred,
    the ECC decode IRQ status cannot be cleared in the IRQ handler function,
    and threads cannot be scheduled.
    
    ECC HW generates decode IRQ each sector, so there will have more than one
    decode IRQ if read one page of large page NAND.
    
    Currently, ECC IRQ handle flow is that we will check whether it is decode
    IRQ at first by reading the register ECC_DECIRQ_STA. This is a read-clear
    type register. If this IRQ is decode IRQ, then the ECC IRQ signal will be
    cleared at the same time.
    Secondly, we will check whether all sectors are decoded by reading the
    register ECC_DECDONE. This is because the current IRQ may be not dealed
    in time, and the next sectors have been decoded before reading the
    register ECC_DECIRQ_STA. Then, the next sectors's decode IRQs will not
    be generated.
    Thirdly, if all sectors are decoded by comparing with ecc->sectors, then we
    will complete ecc->done, set ecc->sectors as 0, and disable ECC IRQ by
    programming the register ECC_IRQ_REG(op) as 0. Otherwise, wait for the
    next ECC IRQ.
    
    But, there is a timing issue between step one and two. When we read the
    reigster ECC_DECIRQ_STA, all sectors are decoded except the last sector,
    and the ECC IRQ signal is cleared. But the last sector is decoded before
    reading ECC_DECDONE, so the ECC IRQ signal is enabled again by ECC HW, and
    it means we will receive one extra ECC IRQ later. In step three, we will
    find that all sectors were decoded, then disable ECC IRQ and return.
    When deal with the extra ECC IRQ, the ECC IRQ status cannot be cleared
    anymore. That is because the register ECC_DECIRQ_STA can only be cleared
    when the register ECC_IRQ_REG(op) is enabled. But actually we have
    disabled ECC IRQ in the previous ECC IRQ handle. So, there will
    keep receiving ECC decode IRQ.
    
    Now, we read the register ECC_DECIRQ_STA once again before completing the
    ecc done event. This ensures that there will be no extra ECC decode IRQ.
    
    Also, remove writel(0, ecc->regs + ECC_IRQ_REG(op)) from irq handler,
    because ECC IRQ is disabled in mtk_ecc_disable(). And clear ECC_DECIRQ_STA
    in mtk_ecc_disable() in case there is a timeout to wait decode IRQ.
    
    Fixes: 1d6b1e464950 ("mtd: mediatek: driver for MTK Smart Device")
    Signed-off-by: Xiaolei Li <xiaolei.li@mediatek.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff342113b7788420ae7da409e59afb8cd206b08d
Author: Brent Taylor <motobud@gmail.com>
Date:   Mon Oct 30 22:32:45 2017 -0500

    mtd: nand: Fix writing mtdoops to nand flash.
    
    commit 30863e38ebeb500a31cecee8096fb5002677dd9b upstream.
    
    When mtdoops calls mtd_panic_write(), it eventually calls
    panic_nand_write() in nand_base.c. In order to properly wait for the
    nand chip to be ready in panic_nand_wait(), the chip must first be
    selected.
    
    When using the atmel nand flash controller, a panic would occur due to
    a NULL pointer exception.
    
    Fixes: 2af7c6539931 ("mtd: Add panic_write for NAND flashes")
    Signed-off-by: Brent Taylor <motobud@gmail.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d54ca1d0ea19feb7aedd256b9f58a7478ef23819
Author: Roger Quadros <rogerq@ti.com>
Date:   Fri Oct 20 15:16:21 2017 +0300

    mtd: nand: omap2: Fix subpage write
    
    commit 739c64414f01748a36e7d82c8e0611dea94412bd upstream.
    
    Since v4.12, NAND subpage writes were causing a NULL pointer
    dereference on OMAP platforms (omap2-nand) using OMAP_ECC_BCH4_CODE_HW,
    OMAP_ECC_BCH8_CODE_HW and OMAP_ECC_BCH16_CODE_HW.
    
    This is because for those ECC modes, omap_calculate_ecc_bch()
    generates ECC bytes for the entire (multi-sector) page and this can
    overflow the ECC buffer provided by nand_write_subpage_hwecc()
    as it expects ecc.calculate() to return ECC bytes for just one sector.
    
    However, the root cause of the problem is present since v3.9
    but was not seen then as NAND buffers were being allocated
    as one big chunk prior to commit 3deb9979c731 ("mtd: nand: allocate
    aligned buffers if NAND_OWN_BUFFERS is unset").
    
    Fix the issue by providing a OMAP optimized write_subpage()
    implementation.
    
    Fixes: 62116e5171e0 ("mtd: nand: omap2: Support for hardware BCH error correction.")
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54d8f6c8a454c5f177906d1a3a74b02113afc9bf
Author: Boris Brezillon <boris.brezillon@free-electrons.com>
Date:   Thu Oct 5 18:57:24 2017 +0200

    mtd: nand: atmel: Actually use the PM ops
    
    commit 1533bfa6f6b6bcca1ea1f172ef4a1c5ce5e7b335 upstream.
    
    commit 6e532afaca8e ("mtd: nand: atmel: Add PM ops") was defining PM
    ops but nothing was using/referencing those PM ops.
    
    Fixes: 6e532afaca8e ("mtd: nand: atmel: Add PM ops")
    Cc: Romain Izard <romain.izard.pro@gmail.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Acked-by: Wenyou Yang <wenyou.yang@microchip.com>
    Tested-by: Romain Izard <romain.izard.pro@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 460bad5fe1ae2ebcd9cb73ad7b51538996b722b2
Author: Boris Brezillon <boris.brezillon@free-electrons.com>
Date:   Thu Oct 5 18:53:19 2017 +0200

    mtd: nand: Export nand_reset() symbol
    
    commit b9bb98424c51437973b854691aa1e9b2bfd348f5 upstream.
    
    Commit 6e532afaca8e ("mtd: nand: atmel: Add PM ops") started to use the
    nand_reset() function which was not yet exported by the NAND framework
    (because it was only used internally before that). Export this symbol
    to avoid build errors when the driver is enabled as a module.
    
    Fixes: 6e532afaca8e ("mtd: nand: atmel: Add PM ops")
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ad1a61d32af8a7d39dedcafaaf1f209237fa806
Author: Boris Brezillon <boris.brezillon@free-electrons.com>
Date:   Sat Nov 11 16:08:34 2017 +0100

    mtd: Avoid probe failures when mtd->dbg.dfs_dir is invalid
    
    commit 1530578abdac4edce9244c7a1962ded3ffdb58ce upstream.
    
    Commit e8e3edb95ce6 ("mtd: create per-device and module-scope debugfs
    entries") tried to make MTD related debugfs stuff consistent across the
    MTD framework by creating a root <debugfs>/mtd/ directory containing
    one directory per MTD device.
    
    The problem is that, by default, the MTD layer only registers the
    master device if no partitions are defined for this master. This
    behavior breaks all drivers that expect mtd->dbg.dfs_dir to be filled
    correctly after calling mtd_device_register() in order to add their own
    debugfs entries.
    
    The only way we can force all MTD masters to be registered no matter if
    they expose partitions or not is by enabling the
    CONFIG_MTD_PARTITIONED_MASTER option.
    
    In such situations, there's no other solution but to accept skipping
    debugfs initialization when dbg.dfs_dir is invalid, and when this
    happens, inform the user that he should consider enabling
    CONFIG_MTD_PARTITIONED_MASTER.
    
    Fixes: e8e3edb95ce6 ("mtd: create per-device and module-scope debugfs entries")
    Cc: Mario J. Rugiero <mrugiero@gmail.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Reported-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe1325027b4de33159853e0cf942abee58d01b74
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Oct 27 22:19:26 2017 -0800

    target: Avoid early CMD_T_PRE_EXECUTE failures during ABORT_TASK
    
    commit 1c21a48055a67ceb693e9c2587824a8de60a217c upstream.
    
    This patch fixes bug where early se_cmd exceptions that occur
    before backend execution can result in use-after-free if/when
    a subsequent ABORT_TASK occurs for the same tag.
    
    Since an early se_cmd exception will have had se_cmd added to
    se_session->sess_cmd_list via target_get_sess_cmd(), it will
    not have CMD_T_COMPLETE set by the usual target_complete_cmd()
    backend completion path.
    
    This causes a subsequent ABORT_TASK + __target_check_io_state()
    to signal ABORT_TASK should proceed.  As core_tmr_abort_task()
    executes, it will bring the outstanding se_cmd->cmd_kref count
    down to zero releasing se_cmd, after se_cmd has already been
    queued with error status into fabric driver response path code.
    
    To address this bug, introduce a CMD_T_PRE_EXECUTE bit that is
    set at target_get_sess_cmd() time, and cleared immediately before
    backend driver dispatch in target_execute_cmd() once CMD_T_ACTIVE
    is set.
    
    Then, check CMD_T_PRE_EXECUTE within __target_check_io_state() to
    determine when an early exception has occured, and avoid aborting
    this se_cmd since it will have already been queued into fabric
    driver response path code.
    
    Reported-by: Donald White <dew@datera.io>
    Cc: Donald White <dew@datera.io>
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c68944bda81603075e1205f066c9ff855d3ffe0
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Sep 29 16:43:11 2017 -0700

    target: Fix quiese during transport_write_pending_qf endless loop
    
    commit 9574a497df2bbc0a676b609ce0dd24d237cee3a6 upstream.
    
    This patch fixes a potential end-less loop during QUEUE_FULL,
    where cmd->se_tfo->write_pending() callback fails repeatedly
    but __transport_wait_for_tasks() has already been invoked to
    quiese the outstanding se_cmd descriptor.
    
    To address this bug, this patch adds a CMD_T_STOP|CMD_T_ABORTED
    check within transport_write_pending_qf() and invokes the
    existing se_cmd->t_transport_stop_comp to signal quiese
    completion back to __transport_wait_for_tasks().
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Cc: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Cc: Potnuri Bharat Teja <bharat@chelsio.com>
    Cc: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16870b7ba2855204af532c23fa973d530f4959b6
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Sep 29 16:03:24 2017 -0700

    target: Fix caw_sem leak in transport_generic_request_failure
    
    commit fd2f928b0ddd2fe8876d4f1344df2ace2b715a4d upstream.
    
    With the recent addition of transport_check_aborted_status() within
    transport_generic_request_failure() to avoid sending a SCSI status
    exception after CMD_T_ABORTED w/ TAS=1 has occured, it introduced
    a COMPARE_AND_WRITE early failure regression.
    
    Namely when COMPARE_AND_WRITE fails and se_device->caw_sem has
    been taken by sbc_compare_and_write(), if the new check for
    transport_check_aborted_status() returns true and exits,
    cmd->transport_complete_callback() -> compare_and_write_post()
    is skipped never releasing se_device->caw_sem.
    
    This regression was originally introduced by:
    
      commit e3b88ee95b4e4bf3e9729a4695d695b9c7c296c8
      Author: Bart Van Assche <bart.vanassche@sandisk.com>
      Date:   Tue Feb 14 16:25:45 2017 -0800
    
          target: Fix handling of aborted failed commands
    
    To address this bug, move the transport_check_aborted_status()
    call after transport_complete_task_attr() and
    cmd->transport_complete_callback().
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66abe4fc44689abe5c8b23c22ea5a4092f46d7eb
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Sep 22 16:48:28 2017 -0700

    target: Fix QUEUE_FULL + SCSI task attribute handling
    
    commit 1c79df1f349fb6050016cea4ef1dfbc3853a5685 upstream.
    
    This patch fixes a bug during QUEUE_FULL where transport_complete_qf()
    calls transport_complete_task_attr() after it's already been invoked
    by target_complete_ok_work() or transport_generic_request_failure()
    during initial completion, preceeding QUEUE_FULL.
    
    This will result in se_device->simple_cmds, se_device->dev_cur_ordered_id
    and/or se_device->dev_ordered_sync being updated multiple times for
    a single se_cmd.
    
    To address this bug, clear SCF_TASK_ATTR_SET after the first call
    to transport_complete_task_attr(), and avoid updating SCSI task
    attribute related counters for any subsequent calls.
    
    Also, when a se_cmd is deferred due to ordered tags and executed
    via target_restart_delayed_cmds(), set CMD_T_SENT before execution
    matching what target_execute_cmd() does.
    
    Cc: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Cc: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ecb83e55b71c2831b96140aa564e6d72e956f0c
Author: tangwenji <tang.wenji@zte.com.cn>
Date:   Thu Aug 17 19:51:54 2017 +0800

    target: fix buffer offset in core_scsi3_pri_read_full_status
    
    commit c58a252beb04cf0e02d6a746b2ed7ea89b6deb71 upstream.
    
    When at least two initiators register pr on the same LUN,
    the target returns the exception data due to buffer offset
    error, therefore the initiator executes command 'sg_persist -s'
    may cause the initiator to appear segfault error.
    
    This fixes a regression originally introduced by:
    
      commit a85d667e58bddf73be84d1981b41eaac985ed216
      Author: Bart Van Assche <bart.vanassche@sandisk.com>
      Date:   Tue May 23 16:48:27 2017 -0700
    
          target: Use {get,put}_unaligned_be*() instead of open coding these functions
    
    Signed-off-by: tangwenji <tang.wenji@zte.com.cn>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31c913191db3c680e1b71547e8d46713103ee805
Author: tangwenji <tang.wenji@zte.com.cn>
Date:   Wed Aug 16 16:39:00 2017 +0800

    target: fix null pointer regression in core_tmr_drain_tmr_list
    
    commit 88fb2fa7db7510bf1078226ab48d162d9854f3d4 upstream.
    
    The target system kernel crash when the initiator executes
    the sg_persist -A command,because of the second argument to
    be set to NULL when core_tmr_lun_reset is called in
    core_scsi3_pro_preempt function.
    
    This fixes a regression originally introduced by:
    
      commit 51ec502a32665fed66c7f03799ede4023b212536
      Author: Bart Van Assche <bart.vanassche@sandisk.com>
      Date:   Tue Feb 14 16:25:54 2017 -0800
    
          target: Delete tmr from list before processing
    
    Signed-off-by: tangwenji <tang.wenji@zte.com.cn>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8009209a65167c899729e9a9d40fd3b809474c9d
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Oct 27 20:52:56 2017 -0700

    iscsi-target: Fix non-immediate TMR reference leak
    
    commit 3fc9fb13a4b2576aeab86c62fd64eb29ab68659c upstream.
    
    This patch fixes a se_cmd->cmd_kref reference leak that can
    occur when a non immediate TMR is proceeded our of command
    sequence number order, and CMDSN_LOWER_THAN_EXP is returned
    by iscsit_sequence_cmd().
    
    To address this bug, call target_put_sess_cmd() during this
    special case following what iscsit_process_scsi_cmd() does
    upon CMDSN_LOWER_THAN_EXP.
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84ab17cf4f30740eff6247d2bf657f8ee527b034
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Oct 27 12:32:59 2017 -0700

    iscsi-target: Make TASK_REASSIGN use proper se_cmd->cmd_kref
    
    commit ae072726f6109bb1c94841d6fb3a82dde298ea85 upstream.
    
    Since commit 59b6986dbf fixed a potential NULL pointer dereference
    by allocating a se_tmr_req for ISCSI_TM_FUNC_TASK_REASSIGN, the
    se_tmr_req is currently leaked by iscsit_free_cmd() because no
    iscsi_cmd->se_cmd.se_tfo was associated.
    
    To address this, treat ISCSI_TM_FUNC_TASK_REASSIGN like any other
    TMR and call transport_init_se_cmd() + target_get_sess_cmd() to
    setup iscsi_cmd->se_cmd.se_tfo with se_cmd->cmd_kref of 2.
    
    This will ensure normal release operation once se_cmd->cmd_kref
    reaches zero and target_release_cmd_kref() is invoked, se_tmr_req
    will be released via existing target_free_cmd_mem() and
    core_tmr_release_req() code.
    
    Reported-by: Donald White <dew@datera.io>
    Cc: Donald White <dew@datera.io>
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5b7da1110a481f64f3a0530862a1ac19fc4d48d
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:39 2017 -0700

    scsi: lpfc: Fix oops if nvmet_fc_register_targetport fails
    
    commit e7981a2c725f8e237f749fa1358997707d57e32c upstream.
    
    if nvmet targetport registration fails, the driver encounters a NULL
    pointer oops in lpfc_hb_timeout_handler.
    
    To fix: if registration fails, ensure nvmet_support is cleared on the
    port structure.
    
    Also enhanced the log message on failure.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55d8b65043e7726d907c99d0034ad29669f98167
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:35 2017 -0700

    scsi: lpfc: Fix FCP hba_wqidx assignment
    
    commit 8e036a9497c5d565baafda4c648f2f372999a547 upstream.
    
    The driver is encountering  oops in lpfc_sli_calc_ring.
    
    The driver is setting hba_wqidx for FCP based on the policy in use for
    NVME. The two may not be the same.  Change to set the wqidx based on the
    FCP policy.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27b1313ce913feeef151d167eabc4a8f175d3ad3
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:29 2017 -0700

    scsi: lpfc: Fix crash receiving ELS while detaching driver
    
    commit 1234a6d54fed8a00091968c4eb2fb52e1cbb8e2e upstream.
    
    The driver crashes when attempting to use a freed ndpl pointer.
    
    The pci_remove_one handler runs on a separate kernel thread. The order
    of the removal is starting by freeing all of the ndlps and then
    disabling interrupts. In between these two events the driver can still
    receive an ELS and process it. When it tries to use the ndlp pointer
    will be NULL
    
    Change the order of the pci_remove_one vs disable interrupts so that
    interrupts are disabled before the ndlp's are freed.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d697650498c0e540d2c1a23b07395ca7997055e
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:28 2017 -0700

    scsi: lpfc: fix pci hot plug crash in list_add call
    
    commit 401bb4169da655f3e5d28d0b208182e1ab60bf2a upstream.
    
    During pci hot plug, the kernel crashes in a list_add_call
    
    The lookup by tag function will return null if the IOCB is out of range
    or does not have the on txcmplq flag set.
    
    Fix: Check for null return from lookup by tag.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 890d9fcd787e31d746070f6e4d5cdb674f8f1efc
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:27 2017 -0700

    scsi: lpfc: fix pci hot plug crash in timer management routines
    
    commit 1901762f2ca2747ed269239ca5332a8023ce4e3d upstream.
    
    During pci hot plug, the kernel crashes in timer management code.
    
    The sli4 remove_one handler is not stoping the timers as it starts to
    remove the port so that it can be swapped.
    
    Fix: Stop the timers early in the handler routine.
    
    Note: Fix in SLI-4 only. SLI-3 already stopped the timers properly.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49414387c4ac273cb7e62632269ea3bef2c7f422
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Wed Oct 11 05:54:25 2017 +0900

    scsi: sd_zbc: Fix sd_zbc_read_zoned_characteristics()
    
    commit 4a109032e3941413d8a029f619543fc5aec1d26d upstream.
    
    The three values starting at byte 8 of the Zoned Block Device
    Characteristics VPD page B6h are 32 bits values, not 64bits. So use
    get_unaligned_be32() to retrieve the values and not get_unaligned_be64()
    
    Fixes: 89d947561077 ("sd: Implement support for ZBC devices")
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Bart Van Assche <Bart.VanAssche@wdc.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 645fbe74f18409fcafca73763812190e077d2174
Author: Bart Van Assche <bart.vanassche@wdc.com>
Date:   Mon Nov 6 11:59:05 2017 -0800

    scsi: qla2xxx: Suppress a kernel complaint in qla_init_base_qpair()
    
    commit 8653188763b56e0bcbdcab30cc7b059672c900ac upstream.
    
    Avoid that the following is reported while loading the qla2xxx
    kernel module:
    
    BUG: using smp_processor_id() in preemptible [00000000] code: modprobe/783
    caller is debug_smp_processor_id+0x17/0x20
    CPU: 7 PID: 783 Comm: modprobe Not tainted 4.14.0-rc8-dbg+ #2
    Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011
    Call Trace:
     dump_stack+0x8e/0xce
     check_preemption_disabled+0xe3/0xf0
     debug_smp_processor_id+0x17/0x20
     qla2x00_probe_one+0xf43/0x26c0 [qla2xxx]
     pci_device_probe+0xca/0x140
     driver_probe_device+0x2e2/0x440
     __driver_attach+0xa3/0xe0
     bus_for_each_dev+0x5f/0x90
     driver_attach+0x19/0x20
     bus_add_driver+0x1c0/0x260
     driver_register+0x5b/0xd0
     __pci_register_driver+0x63/0x70
     qla2x00_module_init+0x1d6/0x222 [qla2xxx]
     do_one_initcall+0x3c/0x163
     do_init_module+0x55/0x1eb
     load_module+0x20a2/0x2890
     SYSC_finit_module+0xd7/0xf0
     SyS_finit_module+0x9/0x10
     entry_SYSCALL_64_fastpath+0x23/0xc2
    
    Fixes: commit 8abfa9e22683 ("scsi: qla2xxx: Add function call to qpair for door bell")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Quinn Tran <quinn.tran@cavium.com>
    Cc: Himanshu Madhani <himanshu.madhani@cavium.com>
    Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5c87f23a703ac257134ac77f7902d0cc10d0a09
Author: Tuomas Tynkkynen <tuomas@tuxera.com>
Date:   Wed Sep 6 17:59:08 2017 +0300

    net/9p: Switch to wait_event_killable()
    
    commit 9523feac272ccad2ad8186ba4fcc89103754de52 upstream.
    
    Because userspace gets Very Unhappy when calls like stat() and execve()
    return -EINTR on 9p filesystem mounts. For instance, when bash is
    looking in PATH for things to execute and some SIGCHLD interrupts
    stat(), bash can throw a spurious 'command not found' since it doesn't
    retry the stat().
    
    In practice, hitting the problem is rare and needs a really
    slow/bogged down 9p server.
    
    Signed-off-by: Tuomas Tynkkynen <tuomas@tuxera.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b178968f557219ae359cbd6c12d84f159038a38d
Author: Tuomas Tynkkynen <tuomas@tuxera.com>
Date:   Wed Sep 6 17:59:07 2017 +0300

    fs/9p: Compare qid.path in v9fs_test_inode
    
    commit 8ee031631546cf2f7859cc69593bd60bbdd70b46 upstream.
    
    Commit fd2421f54423 ("fs/9p: When doing inode lookup compare qid details
    and inode mode bits.") transformed v9fs_qid_iget() to use iget5_locked()
    instead of iget_locked(). However, the test() callback is not checking
    fid.path at all, which means that a lookup in the inode cache can now
    accidentally locate a completely wrong inode from the same inode hash
    bucket if the other fields (qid.type and qid.version) match.
    
    Fixes: fd2421f54423 ("fs/9p: When doing inode lookup compare qid details and inode mode bits.")
    Reviewed-by: Latchesar Ionkov <lucho@ionkov.net>
    Signed-off-by: Tuomas Tynkkynen <tuomas@tuxera.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8319b3bbc296db662736b5c00ff79dccafa19a0
Author: Tuomas Tynkkynen <tuomas@tuxera.com>
Date:   Sun Nov 19 11:28:43 2017 +0200

    9p: Fix missing commas in mount options
    
    commit 61b272c3aa170b3e461b8df636407b29f35f98eb upstream.
    
    Since commit c4fac9100456 ("9p: Implement show_options"), the mount
    options of 9p filesystems are printed out with some missing commas
    between the individual options:
    
    p9-scratch on /mnt/scratch type 9p (rw,dirsync,loose,access=clienttrans=virtio)
    
    Add them back.
    
    Fixes: c4fac9100456 ("9p: Implement show_options")
    Signed-off-by: Tuomas Tynkkynen <tuomas@tuxera.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 357621bca2cb346513d7f4d8f57edb53bd7bbe44
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun Sep 24 18:36:44 2017 -0400

    fix a page leak in vhost_scsi_iov_to_sgl() error recovery
    
    commit 11d49e9d089ccec81be87c2386dfdd010d7f7f6e upstream.
    
    we are advancing sg as we go, so the pages we need to drop in
    case of error are *before* the current sg.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04dd27af8ea24db24d0777a9ef3259621f32d6f5
Author: Joakim Tjernlund <joakim.tjernlund@infinera.com>
Date:   Wed Oct 11 12:40:55 2017 +0200

    mfd: lpc_ich: Avoton/Rangeley uses SPI_BYT method
    
    commit 07d70913dce59f3c8e5d0ca76250861158a9ca6c upstream.
    
    Avoton/Rangeley are based on Silvermount micro-architecture, like
    Bay Trail, and uses the INTEL_SPI_BYT method to drive SPI.
    
    Signed-off-by: Joakim Tjernlund <joakim.tjernlund@infinera.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79e019f2a539a4ff25327a3831c7c74d0c73c196
Author: Maxime Ripard <maxime.ripard@free-electrons.com>
Date:   Thu Nov 9 10:39:24 2017 +0100

    ASoC: sun8i-codec: Set the BCLK divider
    
    commit 316b7758c998fb13371d14bb6c9e45ab129c19a7 upstream.
    
    While the current code was reporting to be able to work in master mode, it
    failed to do so because the BCLK divider wasn't programmed, meaning that
    the BCLK would run at the PLL's frequency no matter the sample rate.
    
    It was obviously a bit too fast.
    
    Add support to retrieve the divider to use, and set it. Since our PLL is
    not always able to generate a perfect multiple of the sample rate, we'll
    have to choose the closest divider that matches our setup.
    
    Fixes: 36c684936fae ("ASoC: Add sun8i digital audio codec")
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eca496d8fe4bcad503e61dd4510907478ce00118
Author: Maxime Ripard <maxime.ripard@free-electrons.com>
Date:   Wed Nov 8 16:47:10 2017 +0100

    ASoC: sun8i-codec: Fix left and right channels inversion
    
    commit 18c1bf35c1c09bca05cf70bc984a4764e0b0372b upstream.
    
    Since its introduction, the codec had an inversion of the left and right
    channels. It turned out to be pretty simple as it appears that the codec
    doesn't have the same polarity on the LRCK signal than the I2S block.
    
    Fix this by inverting our bit value for the LRCK inversion.
    
    Fixes: 36c684936fae ("ASoC: Add sun8i digital audio codec")
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bc4abfb872532fd567397ed414b3336f6df7971
Author: Maxime Ripard <maxime.ripard@free-electrons.com>
Date:   Wed Nov 8 16:47:08 2017 +0100

    ASoC: sun8i-codec: Invert Master / Slave condition
    
    commit 560bfe774f058e97596f30ff71cffdac52b72914 upstream.
    
    The current code had the condition backward when checking if the codec
    should be running in slave or master mode.
    
    Fix it, and make the comment a bit more readable.
    
    Fixes: 36c684936fae ("ASoC: Add sun8i digital audio codec")
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b177556318a731878a1e9e8a9bb28b98f7bc832c
Author: Kailang Yang <kailang@realtek.com>
Date:   Wed Nov 22 15:21:32 2017 +0800

    ALSA: hda/realtek - Fix ALC700 family no sound issue
    
    commit 2d7fe6185722b0817bb345f62ab06b76a7b26542 upstream.
    
    It maybe the typo for ALC700 support patch.
    To fix the bit value on this patch.
    
    Fixes: 6fbae35a3170 ("ALSA: hda/realtek - Add support for new codecs ALC700/ALC701/ALC703")
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 665000d9507ac332b7dede78fb3f5dd7b6f77177
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 22 12:34:56 2017 +0100

    ALSA: hda - Fix yet remaining issue with vmaster 0dB initialization
    
    commit d6c0615f510bc1ee26cfb2b9a3343ac99b9c46fb upstream.
    
    The previous fix for addressing the breakage in vmaster slave
    initialization, commit a91d66129fb9 ("ALSA: hda - Fix incorrect TLV
    callback check introduced during set_fs() removal"), introduced a new
    helper to process over each slave kctl.  However, this helper passes
    only the original kctl, not the virtual slave kctl.  As a result,
    HD-audio driver (which is the only user so far) couldn't initialize
    the slave correctly because it's trying to update the value directly
    with the original kctl, not with the mapped kctl.
    
    This patch fixes the situation again by passing both the mapped slaved
    and original slave kctls to the function.  Luckily there is a single
    caller as of now, so changing the call signature is no big matter.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=197959
    Fixes: a91d66129fb9 ("ALSA: hda - Fix incorrect TLV callback check introduced during set_fs() removal")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ee1a8cf61714a960f7286d07890499553ea28e0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 17 12:08:40 2017 +0100

    ALSA: hda: Fix too short HDMI/DP chmap reporting
    
    commit c2432466f583cb719b35a41e757da587d9ab1d00 upstream.
    
    We got a regression report about the HD-audio HDMI chmap, where some
    surround channels are reported as UNKNOWN.  The git bisection pointed
    the culprit at the commit 9b3dc8aa3fb1 ("ALSA: hda - Register chmap
    obj as priv data instead of codec").  The story behind scene is like
    this:
    
    - While moving the code out of the legacy HDA to the HDA common place,
      the patch modifies the code to obtain the chmap array indirectly in
      a byte array, and it expands it to kctl value array.
    - At the latter operation, the size of the array is wrongly passed by
      sizeof() to the pointer.
    - It can be 4 on 32bit arch, thus too short for 6+ channels.
      (And that's the reason why it didn't hit other persons; it's 8 on
      64bit arch, thus it's usually enough.)
    
    The code was further changed meanwhile, but the problem persisted.
    Let's fix it by correctly evaluating the array size.
    
    Fixes: 9b3dc8aa3fb1 ("ALSA: hda - Register chmap obj as priv data instead of codec")
    Reported-by: VDR User <user.vdr@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 072c5925f867ecf3b1567f898abe7ace6b283079
Author: Kailang Yang <kailang@realtek.com>
Date:   Wed Nov 8 15:28:33 2017 +0800

    ALSA: hda/realtek - Fix ALC275 no sound issue
    
    commit 3aabf94c2d95fe465d5fa8590113d1c1f7d8333d upstream.
    
    Sound works after a cold boot but not after a reboot from windows.
    This patch will solve this issue. This is relation with Class-D power control.
    
    [ The bug was reported in Bugzilla below for Sony VAIO SVS13A1C5E
      -- tiwai]
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=197737
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6352ec905f914143ca80ea68b8cbf30f6ae27aa3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 21 16:36:11 2017 +0100

    ALSA: timer: Remove kernel warning at compat ioctl error paths
    
    commit 3d4e8303f2c747c8540a0a0126d0151514f6468b upstream.
    
    Some timer compat ioctls have NULL checks of timer instance with
    snd_BUG_ON() that bring up WARN_ON() when the debug option is set.
    Actually the condition can be met in the normal situation and it's
    confusing and bad to spew kernel warnings with stack trace there.
    Let's remove snd_BUG_ON() invocation and replace with the simple
    checks.  Also, correct the error code to EBADFD to follow the native
    ioctl error handling.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47f25441ffcfb262b83ec8acc7d94eddc4727014
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 21 17:28:06 2017 +0100

    ALSA: usb-audio: Add sanity checks in v2 clock parsers
    
    commit 0a62d6c966956d77397c32836a5bbfe3af786fc1 upstream.
    
    The helper functions to parse and look for the clock source, selector
    and multiplier unit may return the descriptor with a too short length
    than required, while there is no sanity check in the caller side.
    Add some sanity checks in the parsers, at least, to guarantee the
    given descriptor size, for avoiding the potential crashes.
    
    Fixes: 79f920fbff56 ("ALSA: usb-audio: parse clock topology of UAC2 devices")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f7873c9945dd026e20d006dd18b75b8f05cdb5a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 21 17:00:32 2017 +0100

    ALSA: usb-audio: Fix potential out-of-bound access at parsing SU
    
    commit f658f17b5e0e339935dca23e77e0f3cad591926b upstream.
    
    The usb-audio driver may trigger an out-of-bound access at parsing a
    malformed selector unit, as it checks the header length only after
    evaluating bNrInPins field, which can be already above the given
    length.  Fix it by adding the length check beforehand.
    
    Fixes: 99fc86450c43 ("ALSA: usb-mixer: parse descriptors with structs")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a0e3e553e0dfcabd7b5928f33352c0559afeb75
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 21 16:55:51 2017 +0100

    ALSA: usb-audio: Add sanity checks to FE parser
    
    commit d937cd6790a2bef2d07b500487646bd794c039bb upstream.
    
    When the usb-audio descriptor contains the malformed feature unit
    description with a too short length, the driver may access
    out-of-bounds.  Add a sanity check of the header size at the beginning
    of parse_audio_feature_unit().
    
    Fixes: 23caaf19b11e ("ALSA: usb-mixer: Add support for Audio Class v2.0")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27180144e50dccd03979469c3d714cad4815aa04
Author: Henrik Eriksson <henrik.eriksson@axis.com>
Date:   Tue Nov 21 09:29:28 2017 +0100

    ALSA: pcm: update tstamp only if audio_tstamp changed
    
    commit 20e3f985bb875fea4f86b04eba4b6cc29bfd6b71 upstream.
    
    commit 3179f6200188 ("ALSA: core: add .get_time_info") had a side effect
    of changing the behaviour of the PCM runtime tstamp.  Prior to this
    change tstamp was not updated by snd_pcm_update_hw_ptr0() unless the
    hw_ptr had moved, after this change tstamp was always updated.
    
    For an application using alsa-lib, doing snd_pcm_readi() followed by
    snd_pcm_status() to estimate the age of the read samples by subtracting
    status->avail * [sample rate] from status->tstamp this change degraded
    the accuracy of the estimate on devices where the pcm hw does not
    provide a granular hw_ptr, e.g., devices using
    soc-generic-dmaengine-pcm.c and a dma-engine with residue_granularity
    DMA_RESIDUE_GRANULARITY_DESCRIPTOR.  The accuracy of the estimate
    depended on the latency between the PCM hw completing a period and the
    driver called snd_pcm_period_elapsed() to notify ALSA core, typically
    determined by interrupt handling latency.  After the change the accuracy
    of the estimate depended on the latency between the PCM hw completing a
    period and the application calling snd_pcm_status(), determined by the
    scheduling of the application process.  The maximum error of the
    estimate is one period length in both cases, but the error average and
    variance is smaller when it depends on interrupt latency.
    
    Instead of always updating tstamp, update it only if audio_tstamp
    changed.
    
    Fixes: 3179f6200188 ("ALSA: core: add .get_time_info")
    Suggested-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Henrik Eriksson <henrik.eriksson@axis.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22e5190899e8d159fe59e0c0e3b9a1085ee5d4e8
Author: Ross Zwisler <ross.zwisler@linux.intel.com>
Date:   Thu Oct 12 11:54:08 2017 -0400

    ext4: prevent data corruption with journaling + DAX
    
    commit e9072d859df3e0f2c3ba450f0d1739595c2d5d13 upstream.
    
    The current code has the potential for data corruption when changing an
    inode's journaling mode, as that can result in a subsequent unsafe change
    in S_DAX.
    
    I've captured an instance of this data corruption in the following fstest:
    
    https://patchwork.kernel.org/patch/9948377/
    
    Prevent this data corruption from happening by disallowing changes to the
    journaling mode if the '-o dax' mount option was used.  This means that for
    a given filesystem we could have a mix of inodes using either DAX or
    data journaling, but whatever state the inodes are in will be held for the
    duration of the mount.
    
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 713cb65003f1d1038d211606871b12ff555fb3f3
Author: Ross Zwisler <ross.zwisler@linux.intel.com>
Date:   Thu Oct 12 11:52:34 2017 -0400

    ext4: prevent data corruption with inline data + DAX
    
    commit 559db4c6d784ceedc2a5418ced4d357cb843e221 upstream.
    
    If an inode has inline data it is currently prevented from using DAX by a
    check in ext4_set_inode_flags().  When the inode grows inline data via
    ext4_create_inline_data() or removes its inline data via
    ext4_destroy_inline_data_nolock(), the value of S_DAX can change.
    
    Currently these changes are unsafe because we don't hold off page faults
    and I/O, write back dirty radix tree entries and invalidate all mappings.
    There are also issues with mm-level races when changing the value of S_DAX,
    as well as issues with the VM_MIXEDMAP flag:
    
    https://www.spinics.net/lists/linux-xfs/msg09859.html
    
    The unsafe transition of S_DAX can reliably cause data corruption, as shown
    by the following fstest:
    
    https://patchwork.kernel.org/patch/9948381/
    
    Fix this issue by preventing the DAX mount option from being used on
    filesystems that were created to support inline data.  Inline data is an
    option given to mkfs.ext4.
    
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b891e716b8f89b87e1da4976047810aeaf3bd59f
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Fri Oct 6 23:09:55 2017 -0400

    ext4: fix interaction between i_size, fallocate, and delalloc after a crash
    
    commit 51e3ae81ec58e95f10a98ef3dd6d7bce5d8e35a2 upstream.
    
    If there are pending writes subject to delayed allocation, then i_size
    will show size after the writes have completed, while i_disksize
    contains the value of i_size on the disk (since the writes have not
    been persisted to disk).
    
    If fallocate(2) is called with the FALLOC_FL_KEEP_SIZE flag, either
    with or without the FALLOC_FL_ZERO_RANGE flag set, and the new size
    after the fallocate(2) is between i_size and i_disksize, then after a
    crash, if a journal commit has resulted in the changes made by the
    fallocate() call to be persisted after a crash, but the delayed
    allocation write has not resolved itself, i_size would not be updated,
    and this would cause the following e2fsck complaint:
    
    Inode 12, end of extent exceeds allowed value
            (logical block 33, physical block 33441, len 7)
    
    This can only take place on a sparse file, where the fallocate(2) call
    is allocating blocks in a range which is before a pending delayed
    allocation write which is extending i_size.  Since this situation is
    quite rare, and the window in which the crash must take place is
    typically < 30 seconds, in practice this condition will rarely happen.
    
    Nevertheless, it can be triggered in testing, and in particular by
    xfstests generic/456.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reported-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 496e65f64903a3ad420a07466c5d008432136985
Author: Rameshwar Prasad Sahu <rsahu@apm.com>
Date:   Thu Nov 2 16:31:07 2017 +0530

    ata: fixes kernel crash while tracing ata_eh_link_autopsy event
    
    commit f1601113ddc0339a745e702f4fb1ca37d4875e65 upstream.
    
    When tracing ata link error event, the kernel crashes when the disk is
    removed due to NULL pointer access by trace_ata_eh_link_autopsy API.
    This occurs as the dev is NULL when the disk disappeared. This patch
    fixes this crash by calling trace_ata_eh_link_autopsy only if "dev"
    is not NULL.
    
    v2 changes:
     Removed direct passing "link" pointer instead of "dev" in trace API.
    
    Signed-off-by: Rameshwar Prasad Sahu <rsahu@apm.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Fixes: 255c03d15a29 ("libata: Add tracepoints")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f5be981622190fa85ba3eed31e974d73a2cae71
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Oct 30 21:14:56 2017 +0100

    fsnotify: fix pinning group in fsnotify_prepare_user_wait()
    
    commit 9a31d7ad997f55768c687974ce36b759065b49e5 upstream.
    
    Blind increment of group's user_waits is not enough, we could be far enough
    in the group's destruction that it isn't taken into account (i.e. grabbing
    the mark ref afterwards doesn't guarantee that it was the ref coming from
    the _group_ that was grabbed).
    
    Instead we need to check (under lock) that the mark is still attached to
    the group after having obtained a ref to the mark.  If not, skip it.
    
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: 9385a84d7e1f ("fsnotify: Pass fsnotify_iter_info into handle_event handler")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e9569f05ea699e2453f25fed562b3cb969b8aef
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Oct 30 21:14:55 2017 +0100

    fsnotify: pin both inode and vfsmount mark
    
    commit 0d6ec079d6aaa098b978d6395973bb027c752a03 upstream.
    
    We may fail to pin one of the marks in fsnotify_prepare_user_wait() when
    dropping the srcu read lock, resulting in use after free at the next
    iteration.
    
    Solution is to store both marks in iter_info instead of just the one we'll
    be sending the event for.
    
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: 9385a84d7e1f ("fsnotify: Pass fsnotify_iter_info into handle_event handler")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47b02dcac666c310705621187557a84f0176d0f9
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Oct 30 21:14:55 2017 +0100

    fsnotify: clean up fsnotify_prepare/finish_user_wait()
    
    commit 24c20305c7fc8959836211cb8c50aab93ae0e54f upstream.
    
    This patch doesn't actually fix any bug, just paves the way for fixing mark
    and group pinning.
    
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6ff2fb417898b57e5f81349731855763260b266
Author: Shaohua Li <shli@fb.com>
Date:   Mon Oct 16 19:03:44 2017 -0700

    md/bitmap: revert a patch
    
    commit 938b533d479e7428b7fa1b8179283646d2e2c53d upstream.
    
    This reverts commit 8031c3ddc70a. That patches doesn't work well if PAGE_SIZE >
    4k. We will fix the original problem with a different approach.
    
    Fix: 8031c3ddc70a(md/bitmap: copy correct data for bitmap super)
    Reported-by: Joshua Kinard <kumba@gentoo.org>
    Suggested-by: Neil Brown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5912d9ca14f93b7f10bdf75067d1d9cef4c161a6
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Tue Sep 5 12:26:03 2017 +0200

    Bluetooth: btqcomsmd: Add support for BD address setup
    
    commit 6e518111060c2290427d79c43d4add9600ad852b upstream.
    
    This patch implements the hdev setup function since wcnss-bt does not have
    persistent memory to store an allocated BD address. The device is therefore
    marked as unconfigured if no BD address has been previously retrieved.
    
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cd7a7aa01203bc4aebf6b89e09d39148f9b0bce
Author: Artur Paszkiewicz <artur.paszkiewicz@intel.com>
Date:   Thu Oct 26 15:56:54 2017 +0200

    md: don't check MD_SB_CHANGE_CLEAN in md_allow_write
    
    commit b90f6ff080c52e2f05364210733df120e3c4e597 upstream.
    
    Only MD_SB_CHANGE_PENDING should be used to wait for transition from
    clean to dirty. Checking also MD_SB_CHANGE_CLEAN is unnecessary and can
    race with e.g. md_do_sync(). This sporadically causes a hang when
    changing consistency policy during resync:
    
    INFO: task mdadm:6183 blocked for more than 30 seconds.
          Not tainted 4.14.0-rc3+ #391
    "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    mdadm           D12752  6183   6022 0x00000000
    Call Trace:
     __schedule+0x93f/0x990
     schedule+0x6b/0x90
     md_allow_write+0x100/0x130 [md_mod]
     ? do_wait_intr_irq+0x90/0x90
     resize_stripes+0x3a/0x5b0 [raid456]
     ? kernfs_fop_write+0xbe/0x180
     raid5_change_consistency_policy+0xa6/0x200 [raid456]
     consistency_policy_store+0x2e/0x70 [md_mod]
     md_attr_store+0x90/0xc0 [md_mod]
     sysfs_kf_write+0x42/0x50
     kernfs_fop_write+0x119/0x180
     __vfs_write+0x28/0x110
     ? rcu_sync_lockdep_assert+0x12/0x60
     ? __sb_start_write+0x15a/0x1c0
     ? vfs_write+0xa3/0x1a0
     vfs_write+0xb4/0x1a0
     SyS_write+0x49/0xa0
     entry_SYSCALL_64_fastpath+0x18/0xad
    
    Fixes: 2214c260c72b ("md: don't return -EAGAIN in md_allow_write for external metadata arrays")
    Signed-off-by: Artur Paszkiewicz <artur.paszkiewicz@intel.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 459aad50a56bfca28cc41408448d08abdd7e17ae
Author: NeilBrown <neilb@suse.com>
Date:   Thu Oct 5 16:23:16 2017 +1100

    md: fix deadlock error in recent patch.
    
    commit d47c8ad261f787af22a220ffcc2d07afba809223 upstream.
    
    A recent patch aimed to cause md_write_start() to fail (rather than
    block) when the mddev was suspending, so as to avoid deadlocks.
    Unfortunately the test in wait_event() was wrong, and it didn't change
    behaviour at all.
    
    We wait_event() must wait until the metadata is written OR the array is
    suspending.
    
    Fixes: cc27b0c78c79 ("md: fix deadlock between mddev_suspend() and md_write_start()")
    Reported-by: Xiao Ni <xni@redhat.com>
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55e357bc316bc3f46e96bc55415cb7d512c8db6f
Author: Thomas Backlund <tmb@mageia.org>
Date:   Tue Nov 14 12:37:51 2017 +0200

    iwlwifi: fix firmware names for 9000 and A000 series hw
    
    commit c2c48ddfc8b03b9ecb51d2832b586497b37531bc upstream.
    
    iwlwifi 9000 and a0000 series hw contains an extra dash in firmware
    file name as seeen in modinfo output for kernel 4.14:
    
    firmware:       iwlwifi-9260-th-b0-jf-b0--34.ucode
    firmware:       iwlwifi-9260-th-a0-jf-a0--34.ucode
    firmware:       iwlwifi-9000-pu-a0-jf-b0--34.ucode
    firmware:       iwlwifi-9000-pu-a0-jf-a0--34.ucode
    firmware:       iwlwifi-QuQnj-a0-hr-a0--34.ucode
    firmware:       iwlwifi-QuQnj-a0-jf-b0--34.ucode
    firmware:       iwlwifi-QuQnj-f0-hr-a0--34.ucode
    firmware:       iwlwifi-Qu-a0-jf-b0--34.ucode
    firmware:       iwlwifi-Qu-a0-hr-a0--34.ucode
    
    Fix that by dropping the extra adding of '"-"'.
    
    Signed-off-by: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 404dcc55b001e2d56d75fa0ea65635963f16fe68
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Nov 6 14:55:35 2017 +0100

    rtlwifi: fix uninitialized rtlhal->last_suspend_sec time
    
    commit 3f2a162fab15aee243178b5308bb5d1206fc4043 upstream.
    
    We set rtlhal->last_suspend_sec to an uninitialized stack variable,
    but unfortunately gcc never warned about this, I only found it
    while working on another patch. I opened a gcc bug for this.
    
    Presumably the value of rtlhal->last_suspend_sec is not all that
    important, but it does get used, so we probably want the
    patch backported to stable kernels.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=82839
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f724960c581097e6a84a2f4b9c77a9f17a372cc
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Thu Sep 14 13:17:44 2017 -0500

    rtlwifi: rtl8192ee: Fix memory leak when loading firmware
    
    commit 519ce2f933fa14acf69d5c8cabcc18711943d629 upstream.
    
    In routine rtl92ee_set_fw_rsvdpagepkt(), the driver allocates an skb, but
    never calls rtl_cmd_send_packet(), which will free the buffer. All other
    rtlwifi drivers perform this operation correctly.
    
    This problem has been in the driver since it was included in the kernel.
    Fortunately, each firmware load only leaks 4 buffers, which likely
    explains why it has not previously been detected.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 584f0bb5681a1ed7e05b30aabab2764d55cbc3cb
Author: Andrew Elble <aweits@rit.edu>
Date:   Fri Nov 3 14:06:31 2017 -0400

    nfsd: deal with revoked delegations appropriately
    
    commit 95da1b3a5aded124dd1bda1e3cdb876184813140 upstream.
    
    If a delegation has been revoked by the server, operations using that
    delegation should error out with NFS4ERR_DELEG_REVOKED in the >4.1
    case, and NFS4ERR_BAD_STATEID otherwise.
    
    The server needs NFSv4.1 clients to explicitly free revoked delegations.
    If the server returns NFS4ERR_DELEG_REVOKED, the client will do that;
    otherwise it may just forget about the delegation and be unable to
    recover when it later sees SEQ4_STATUS_RECALLABLE_STATE_REVOKED set on a
    SEQUENCE reply.  That can cause the Linux 4.1 client to loop in its
    stage manager.
    
    Signed-off-by: Andrew Elble <aweits@rit.edu>
    Reviewed-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5756707370240737fc8fca120c6e2b81c6b348c1
Author: NeilBrown <neilb@suse.com>
Date:   Fri Aug 25 17:34:41 2017 +1000

    NFS: revalidate "." etc correctly on "open".
    
    commit b688741cb06695312f18b730653d6611e1bad28d upstream.
    
    For correct close-to-open semantics, NFS must validate
    the change attribute of a directory (or file) on open.
    
    Since commit ecf3d1f1aa74 ("vfs: kill FS_REVAL_DOT by adding a
    d_weak_revalidate dentry op"), open() of "." or a path ending ".." is
    not revalidated reliably (except when that direct is a mount point).
    
    Prior to that commit, "." was revalidated using nfs_lookup_revalidate()
    which checks the LOOKUP_OPEN flag and forces revalidation if the flag is
    set.
    Since that commit, nfs_weak_revalidate() is used for NFSv3 (which
    ignores the flags) and nothing is used for NFSv4.
    
    This is fixed by using nfs_lookup_verify_inode() in
    nfs_weak_revalidate().  This does the revalidation exactly when needed.
    Also, add a definition of .d_weak_revalidate for NFSv4.
    
    The incorrect behavior is easily demonstrated by running "echo *" in
    some non-mountpoint NFS directory while watching network traffic.
    Without this patch, "echo *" sometimes doesn't produce any traffic.
    With the patch it always does.
    
    Fixes: ecf3d1f1aa74 ("vfs: kill FS_REVAL_DOT by adding a d_weak_revalidate dentry op")
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2deb89453f74c576e145f4fd21664d175daf6bee
Author: Anna Schumaker <Anna.Schumaker@Netapp.com>
Date:   Wed Nov 1 15:48:43 2017 -0400

    NFS: Avoid RCU usage in tracepoints
    
    commit 3944369db701f075092357b511fd9f5755771585 upstream.
    
    There isn't an obvious way to acquire and release the RCU lock during a
    tracepoint, so we can't use the rpc_peeraddr2str() function here.
    Instead, rely on the client's cl_hostname, which should have similar
    enough information without needing an rcu_dereference().
    
    Reported-by: Dave Jones <davej@codemonkey.org.uk>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aed1a43399c78d7c329ec39b9a4d352216c40a16
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Sun Nov 5 15:45:22 2017 -0500

    nfs: Fix ugly referral attributes
    
    commit c05cefcc72416a37eba5a2b35f0704ed758a9145 upstream.
    
    Before traversing a referral and performing a mount, the mounted-on
    directory looks strange:
    
    dr-xr-xr-x. 2 4294967294 4294967294 0 Dec 31  1969 dir.0
    
    nfs4_get_referral is wiping out any cached attributes with what was
    returned via GETATTR(fs_locations), but the bit mask for that
    operation does not request any file attributes.
    
    Retrieve owner and timestamp information so that the memcpy in
    nfs4_get_referral fills in more attributes.
    
    Changes since v1:
    - Don't request attributes that the client unconditionally replaces
    - Request only MOUNTED_ON_FILEID or FILEID attribute, not both
    - encode_fs_locations() doesn't use the third bitmask word
    
    Fixes: 6b97fd3da1ea ("NFSv4: Follow a referral")
    Suggested-by: Pradeep Thomas <pradeepthomas@gmail.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57f3c05d030d38355daa001ac28a4c37238e2eb8
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Fri Nov 10 06:27:49 2017 -0500

    NFS: Revert "NFS: Move the flock open mode check into nfs_flock()"
    
    commit fcfa447062b2061e11f68b846d61cbfe60d0d604 upstream.
    
    Commit e12937279c8b "NFS: Move the flock open mode check into nfs_flock()"
    changed NFSv3 behavior for flock() such that the open mode must match the
    lock type, however that requirement shouldn't be enforced for flock().
    
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afaacc000e07b084e37f5b0a0f79ce62a399f0c9
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   Tue Nov 7 16:25:47 2017 -0600

    NFS: Fix typo in nomigration mount option
    
    commit f02fee227e5f21981152850744a6084ff3fa94ee upstream.
    
    The option was incorrectly masking off all other options.
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d628ac8abdfc0d3631cb76d6fc1f0b80d988b34f
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Fri Oct 13 10:27:45 2017 -0700

    f2fs: expose some sectors to user in inline data or dentry case
    
    commit 5b4267d195dd887c4412e34b5a7365baa741b679 upstream.
    
    If there's some data written through inline data or dentry, we need to shouw
    st_blocks. This fixes reporting zero blocks even though there is small written
    data.
    
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    [Jaegeuk Kim: avoid link file for quotacheck]
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1117628310079bbdd4a0fa951602419f258bead
Author: Josef Bacik <jbacik@fb.com>
Date:   Tue Aug 22 16:00:39 2017 -0400

    btrfs: change how we decide to commit transactions during flushing
    
    commit 996478ca9c460886ac147eb0d00e99841b71d31b upstream.
    
    Nikolay reported that generic/273 was failing currently with ENOSPC.
    Turns out this is because we get to the point where the outstanding
    reservations are greater than the pinned space on the fs.  This is a
    mistake, previously we used the current reservation amount in
    may_commit_transaction, not the entire outstanding reservation amount.
    Fix this to find the minimum byte size needed to make progress in
    flushing, and pass that into may_commit_transaction.  From there we can
    make a smarter decision on whether to commit the transaction or not.
    This fixes the failure in generic/273.
    
    From Nikolai, IOW: when we go to the final stage of deciding whether to
    do trans commit, instead of passing all the reservations from all
    tickets we just pass the reservation for the current ticket. Otherwise,
    in case all reservations exceed pinned space, then we don't commit
    transaction and fail prematurely. Before we passed num_bytes from
    flush_space, where num_bytes was the sum of all pending reserverations,
    but now all we do is take the first ticket and commit the trans if we
    can satisfy that.
    
    Fixes: 957780eb2788 ("Btrfs: introduce ticketed enospc infrastructure")
    Reported-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Tested-by: Nikolay Borisov <nborisov@suse.com>
    [ added Nikolai's comment ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2122d66edb0a2df551eabce64ed364c8eb2d5da
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Oct 19 16:47:48 2017 +0200

    isofs: fix timestamps beyond 2027
    
    commit 34be4dbf87fc3e474a842305394534216d428f5d upstream.
    
    isofs uses a 'char' variable to load the number of years since
    1900 for an inode timestamp. On architectures that use a signed
    char type by default, this results in an invalid date for
    anything beyond 2027.
    
    This changes the function argument to a 'u8' array, which
    is defined the same way on all architectures, and unambiguously
    lets us use years until 2155.
    
    This should be backported to all kernels that might still be
    in use by that date.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dd7dd07e875428e5f05ec55d90472ed6089b08e
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Oct 30 21:14:56 2017 +0100

    fanotify: fix fsnotify_prepare_user_wait() failure
    
    commit f37650f1c7c71cf5180b43229d13b421d81e7170 upstream.
    
    If fsnotify_prepare_user_wait() fails, we leave the event on the
    notification list.  Which will result in a warning in
    fsnotify_destroy_event() and later use-after-free.
    
    Instead of adding a new helper to remove the event from the list in this
    case, I opted to move the prepare/finish up into fanotify_handle_event().
    
    This will allow these to be moved further out into the generic code later,
    and perhaps let us move to non-sleeping RCU.
    
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: 05f0e38724e8 ("fanotify: Release SRCU lock when waiting for userspace response")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c21c3dde403cdf4b9c777e9dbd9399e6eb8e9b6
Author: Greg Edwards <gedwards@ddn.com>
Date:   Tue Oct 24 11:21:48 2017 -0600

    fs: guard_bio_eod() needs to consider partitions
    
    commit 67f2519fe2903c4041c0e94394d14d372fe51399 upstream.
    
    guard_bio_eod() needs to look at the partition capacity, not just the
    capacity of the whole device, when determining if truncation is
    necessary.
    
    [   60.268688] attempt to access beyond end of device
    [   60.268690] unknown-block(9,1): rw=0, want=67103509, limit=67103506
    [   60.268693] buffer_io_error: 2 callbacks suppressed
    [   60.268696] Buffer I/O error on dev md1p7, logical block 4524305, async page read
    
    Fixes: 74d46992e0d9 ("block: replace bi_bdev with a gendisk pointer and partitions index")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Edwards <gedwards@ddn.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9c80881b383df54cd519e10314dce4c47df8b8a
Author: Coly Li <colyli@suse.de>
Date:   Fri Oct 13 16:35:29 2017 -0700

    bcache: check ca->alloc_thread initialized before wake up it
    
    commit 91af8300d9c1d7c6b6a2fd754109e08d4798b8d8 upstream.
    
    In bcache code, sysfs entries are created before all resources get
    allocated, e.g. allocation thread of a cache set.
    
    There is posibility for NULL pointer deference if a resource is accessed
    but which is not initialized yet. Indeed Jorg Bornschein catches one on
    cache set allocation thread and gets a kernel oops.
    
    The reason for this bug is, when bch_bucket_alloc() is called during
    cache set registration and attaching, ca->alloc_thread is not properly
    allocated and initialized yet, call wake_up_process() on ca->alloc_thread
    triggers NULL pointer deference failure. A simple and fast fix is, before
    waking up ca->alloc_thread, checking whether it is allocated, and only
    wake up ca->alloc_thread when it is not NULL.
    
    Signed-off-by: Coly Li <colyli@suse.de>
    Reported-by: Jorg Bornschein <jb@capsec.org>
    Cc: Kent Overstreet <kent.overstreet@gmail.com>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcae2363e26309c8063384706dc1e546caed8a36
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Nov 6 21:57:26 2017 -0800

    libceph: don't WARN() if user tries to add invalid key
    
    commit b11270853fa3654f08d4a6a03b23ddb220512d8d upstream.
    
    The WARN_ON(!key->len) in set_secret() in net/ceph/crypto.c is hit if a
    user tries to add a key of type "ceph" with an invalid payload as
    follows (assuming CONFIG_CEPH_LIB=y):
    
        echo -e -n '\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' \
            | keyctl padd ceph desc @s
    
    This can be hit by fuzzers.  As this is merely bad input and not a
    kernel bug, replace the WARN_ON() with return -EINVAL.
    
    Fixes: 7af3ea189a9a ("libceph: stop allocating a new cipher on every crypto request")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc6e896836242678cd85252336e33d77039cdff3
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Aug 22 23:41:28 2017 +0300

    eCryptfs: use after free in ecryptfs_release_messaging()
    
    commit db86be3a12d0b6e5c5b51c2ab2a48f06329cb590 upstream.
    
    We're freeing the list iterator so we should be using the _safe()
    version of hlist_for_each_entry().
    
    Fixes: 88b4a07e6610 ("[PATCH] eCryptfs: Public key transport mechanism")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddf1264ec523c7ac7ae0dcbcaccd03a0a034b1b6
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Oct 29 06:30:19 2017 -0400

    fscrypt: lock mutex before checking for bounce page pool
    
    commit a0b3bc855374c50b5ea85273553485af48caf2f7 upstream.
    
    fscrypt_initialize(), which allocates the global bounce page pool when
    an encrypted file is first accessed, uses "double-checked locking" to
    try to avoid locking fscrypt_init_mutex.  However, it doesn't use any
    memory barriers, so it's theoretically possible for a thread to observe
    a bounce page pool which has not been fully initialized.  This is a
    classic bug with "double-checked locking".
    
    While "only a theoretical issue" in the latest kernel, in pre-4.8
    kernels the pointer that was checked was not even the last to be
    initialized, so it was easily possible for a crash (NULL pointer
    dereference) to happen.  This was changed only incidentally by the large
    refactor to use fs/crypto/.
    
    Solve both problems in a trivial way that can easily be backported: just
    always take the mutex.  It's theoretically less efficient, but it
    shouldn't be noticeable in practice as the mutex is only acquired very
    briefly once per encrypted file.
    
    Later I'd like to make this use a helper macro like DO_ONCE().  However,
    DO_ONCE() runs in atomic context, so we'd need to add a new macro that
    allows blocking.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f94782668b5ae6ee496aadfdea2055dad610b0d5
Author: Andreas Rohner <andreas.rohner@gmx.net>
Date:   Fri Nov 17 15:29:35 2017 -0800

    nilfs2: fix race condition that causes file system corruption
    
    commit 31ccb1f7ba3cfe29631587d451cf5bb8ab593550 upstream.
    
    There is a race condition between nilfs_dirty_inode() and
    nilfs_set_file_dirty().
    
    When a file is opened, nilfs_dirty_inode() is called to update the
    access timestamp in the inode.  It calls __nilfs_mark_inode_dirty() in a
    separate transaction.  __nilfs_mark_inode_dirty() caches the ifile
    buffer_head in the i_bh field of the inode info structure and marks it
    as dirty.
    
    After some data was written to the file in another transaction, the
    function nilfs_set_file_dirty() is called, which adds the inode to the
    ns_dirty_files list.
    
    Then the segment construction calls nilfs_segctor_collect_dirty_files(),
    which goes through the ns_dirty_files list and checks the i_bh field.
    If there is a cached buffer_head in i_bh it is not marked as dirty
    again.
    
    Since nilfs_dirty_inode() and nilfs_set_file_dirty() use separate
    transactions, it is possible that a segment construction that writes out
    the ifile occurs in-between the two.  If this happens the inode is not
    on the ns_dirty_files list, but its ifile block is still marked as dirty
    and written out.
    
    In the next segment construction, the data for the file is written out
    and nilfs_bmap_propagate() updates the b-tree.  Eventually the bmap root
    is written into the i_bh block, which is not dirty, because it was
    written out in another segment construction.
    
    As a result the bmap update can be lost, which leads to file system
    corruption.  Either the virtual block address points to an unallocated
    DAT block, or the DAT entry will be reused for something different.
    
    The error can remain undetected for a long time.  A typical error
    message would be one of the "bad btree" errors or a warning that a DAT
    entry could not be found.
    
    This bug can be reproduced reliably by a simple benchmark that creates
    and overwrites millions of 4k files.
    
    Link: http://lkml.kernel.org/r/1509367935-3086-2-git-send-email-konishi.ryusuke@lab.ntt.co.jp
    Signed-off-by: Andreas Rohner <andreas.rohner@gmx.net>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Tested-by: Andreas Rohner <andreas.rohner@gmx.net>
    Tested-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b7f543793b95fe1d21d520ea5479e72bd11e7af
Author: NeilBrown <neilb@suse.com>
Date:   Fri Nov 17 15:29:13 2017 -0800

    autofs: don't fail mount for transient error
    
    commit ecc0c469f27765ed1e2b967be0aa17cee1a60b76 upstream.
    
    Currently if the autofs kernel module gets an error when writing to the
    pipe which links to the daemon, then it marks the whole moutpoint as
    catatonic, and it will stop working.
    
    It is possible that the error is transient.  This can happen if the
    daemon is slow and more than 16 requests queue up.  If a subsequent
    process tries to queue a request, and is then signalled, the write to
    the pipe will return -ERESTARTSYS and autofs will take that as total
    failure.
    
    So change the code to assess -ERESTARTSYS and -ENOMEM as transient
    failures which only abort the current request, not the whole mountpoint.
    
    It isn't a crash or a data corruption, but having autofs mountpoints
    suddenly stop working is rather inconvenient.
    
    Ian said:
    
    : And given the problems with a half dozen (or so) user space applications
    : consuming large amounts of CPU under heavy mount and umount activity this
    : could happen more easily than we expect.
    
    Link: http://lkml.kernel.org/r/87y3norvgp.fsf@notabene.neil.brown.name
    Signed-off-by: NeilBrown <neilb@suse.com>
    Acked-by: Ian Kent <raven@themaw.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1a14af38a50f714fb32581fcd083b49a28c7d41
Author: Vitaly Wool <vitalywool@gmail.com>
Date:   Fri Nov 17 15:26:16 2017 -0800

    mm/z3fold.c: use kref to prevent page free/compact race
    
    commit 5d03a6613957785e94af7a4a6212ad4af66aa5c2 upstream.
    
    There is a race in the current z3fold implementation between
    do_compact() called in a work queue context and the page release
    procedure when page's kref goes to 0.
    
    do_compact() may be waiting for page lock, which is released by
    release_z3fold_page_locked right before putting the page onto the
    "stale" list, and then the page may be freed as do_compact() modifies
    its contents.
    
    The mechanism currently implemented to handle that (checking the
    PAGE_STALE flag) is not reliable enough.  Instead, we'll use page's kref
    counter to guarantee that the page is not released if its compaction is
    scheduled.  It then becomes compaction function's responsibility to
    decrease the counter and quit immediately if the page was actually
    freed.
    
    Link: http://lkml.kernel.org/r/20171117092032.00ea56f42affbed19f4fcc6c@gmail.com
    Signed-off-by: Vitaly Wool <vitaly.wool@sonymobile.com>
    Cc: <Oleksiy.Avramchenko@sony.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 769bfea594f5edb92b077b50ee58866a989ca2bb
Author: Stanislaw Gruszka <sgruszka@redhat.com>
Date:   Thu Nov 9 11:59:24 2017 +0100

    rt2x00usb: mark device removed when get ENOENT usb error
    
    commit bfa62a52cad93686bb8d8171ea5288813248a7c6 upstream.
    
    ENOENT usb error mean "specified interface or endpoint does not exist or
    is not enabled". Mark device not present when we encounter this error
    similar like we do with ENODEV error.
    
    Otherwise we can have infinite loop in rt2x00usb_work_rxdone(), because
    we remove and put again RX entries to the queue infinitely.
    
    We can have similar situation when submit urb will fail all the time
    with other error, so we need consider to limit number of entries
    processed by rxdone work. But for now, since the patch fixes
    reproducible soft lockup issue on single processor systems
    and taken ENOENT error meaning, let apply this fix.
    
    Patch adds additional ENOENT check not only in rx kick routine, but
    also on other places where we check for ENODEV error.
    
    Reported-by: Richard Genoud <richard.genoud@gmail.com>
    Debugged-by: Richard Genoud <richard.genoud@gmail.com>
    Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Tested-by: Richard Genoud <richard.genoud@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 085d66519c3e643f15b91ed0ece025200a2257a5
Author: Aleksandar Markovic <aleksandar.markovic@mips.com>
Date:   Thu Nov 2 12:13:58 2017 +0100

    MIPS: math-emu: Fix final emulation phase for certain instructions
    
    commit 409fcace9963c1e8d2cb0f7ac62e8b34d47ef979 upstream.
    
    Fix final phase of <CLASS|MADDF|MSUBF|MAX|MIN|MAXA|MINA>.<D|S>
    emulation. Provide proper generation of SIGFPE signal and updating
    debugfs FP exception stats in cases of any exception flags set in
    preceding phases of emulation.
    
    CLASS.<D|S> instruction may generate "Unimplemented Operation" FP
    exception. <MADDF|MSUBF>.<D|S> instructions may generate "Inexact",
    "Unimplemented Operation", "Invalid Operation", "Overflow", and
    "Underflow" FP exceptions. <MAX|MIN|MAXA|MINA>.<D|S> instructions
    can generate "Unimplemented Operation" and "Invalid Operation" FP
    exceptions.
    
    The proper final processing of the cases when any FP exception
    flag is set is achieved by replacing "break" statement with "goto
    copcsr" statement. With such solution, this patch brings the final
    phase of emulation of the above instructions consistent with the
    one corresponding to the previously implemented emulation of other
    related FPU instructions (ADD, SUB, etc.).
    
    Fixes: 38db37ba069f ("MIPS: math-emu: Add support for the MIPS R6 CLASS FPU instruction")
    Fixes: e24c3bec3e8e ("MIPS: math-emu: Add support for the MIPS R6 MADDF FPU instruction")
    Fixes: 83d43305a1df ("MIPS: math-emu: Add support for the MIPS R6 MSUBF FPU instruction")
    Fixes: a79f5f9ba508 ("MIPS: math-emu: Add support for the MIPS R6 MAX{, A} FPU instruction")
    Fixes: 4e9561b20e2f ("MIPS: math-emu: Add support for the MIPS R6 MIN{, A} FPU instruction")
    Signed-off-by: Aleksandar Markovic <aleksandar.markovic@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Douglas Leung <douglas.leung@mips.com>
    Cc: Goran Ferenc <goran.ferenc@mips.com>
    Cc: "Maciej W. Rozycki" <macro@imgtec.com>
    Cc: Miodrag Dinic <miodrag.dinic@mips.com>
    Cc: Paul Burton <paul.burton@mips.com>
    Cc: Petar Jovanovic <petar.jovanovic@mips.com>
    Cc: Raghu Gandham <raghu.gandham@mips.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17581/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d187fa8e9b56a8516291df055d956ca32d453ee
Author: Mirko Parthey <mirko.parthey@web.de>
Date:   Thu May 18 21:30:03 2017 +0200

    MIPS: BCM47XX: Fix LED inversion for WRT54GSv1
    
    commit 56a46acf62af5ba44fca2f3f1c7c25a2d5385b19 upstream.
    
    The WLAN LED on the Linksys WRT54GSv1 is active low, but the software
    treats it as active high. Fix the inverted logic.
    
    Fixes: 7bb26b169116 ("MIPS: BCM47xx: Fix LEDs on WRT54GS V1.0")
    Signed-off-by: Mirko Parthey <mirko.parthey@web.de>
    Looks-ok-by: Rafał Miłecki <zajec5@gmail.com>
    Cc: Hauke Mehrtens <hauke@hauke-m.de>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16071/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc3aceed47c35bfc5bcf67efea75c1109c7f6e20
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Tue Nov 7 19:09:20 2017 +0000

    MIPS: Fix an n32 core file generation regset support regression
    
    commit 547da673173de51f73887377eb275304775064ad upstream.
    
    Fix a commit 7aeb753b5353 ("MIPS: Implement task_user_regset_view.")
    regression, then activated by commit 6a9c001b7ec3 ("MIPS: Switch ELF
    core dumper to use regsets.)", that caused n32 processes to dump o32
    core files by failing to set the EF_MIPS_ABI2 flag in the ELF core file
    header's `e_flags' member:
    
    $ file tls-core
    tls-core: ELF 32-bit MSB executable, MIPS, N32 MIPS64 rel2 version 1 (SYSV), [...]
    $ ./tls-core
    Aborted (core dumped)
    $ file core
    core: ELF 32-bit MSB core file MIPS, MIPS-I version 1 (SYSV), SVR4-style
    $
    
    Previously the flag was set as the result of a:
    
    statement placed in arch/mips/kernel/binfmt_elfn32.c, however in the
    regset case, i.e. when CORE_DUMP_USE_REGSET is set, ELF_CORE_EFLAGS is
    no longer used by `fill_note_info' in fs/binfmt_elf.c, and instead the
    `->e_flags' member of the regset view chosen is.  We have the views
    defined in arch/mips/kernel/ptrace.c, however only an o32 and an n64
    one, and the latter is used for n32 as well.  Consequently an o32 core
    file is incorrectly dumped from n32 processes (the ELF32 vs ELF64 class
    is chosen elsewhere, and the 32-bit one is correctly selected for n32).
    
    Correct the issue then by defining an n32 regset view and using it as
    appropriate.  Issue discovered in GDB testing.
    
    Fixes: 7aeb753b5353 ("MIPS: Implement task_user_regset_view.")
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Djordje Todorovic <djordje.todorovic@rt-rk.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17617/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43bce9f2eb96e6dd87dbb5850138960a6265b11a
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Sun Nov 5 14:30:52 2017 +0900

    MIPS: dts: remove bogus bcm96358nb4ser.dtb from dtb-y entry
    
    commit 3cad14d56adbf7d621fc5a35db42f3acc0a2d6e8 upstream.
    
    arch/mips/boot/dts/brcm/bcm96358nb4ser.dts does not exist, so
    we cannot build bcm96358nb4ser.dtb .
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Fixes: 695835511f96 ("MIPS: BMIPS: rename bcm96358nb4ser to bcm6358-neufbox4-sercom")
    Acked-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d63534042a1b279ab50b907a4d9bcd5f9d632e98
Author: James Hogan <jhogan@kernel.org>
Date:   Mon Jul 3 23:41:47 2017 +0100

    MIPS: Fix MIPS64 FP save/restore on 32-bit kernels
    
    commit 22b8ba765a726d90e9830ff6134c32b04f12c10f upstream.
    
    32-bit kernels can be configured to support MIPS64, in which case
    neither CONFIG_64BIT or CONFIG_CPU_MIPS32_R* will be set. This causes
    the CP0_Status.FR checks at the point of floating point register save
    and restore to be compiled out, which results in odd FP registers not
    being saved or restored to the task or signal context even when
    CP0_Status.FR is set.
    
    Fix the ifdefs to use CONFIG_CPU_MIPSR2 and CONFIG_CPU_MIPSR6, which are
    enabled for the relevant revisions of either MIPS32 or MIPS64, along
    with some other CPUs such as Octeon (r2), Loongson1 (r2), XLP (r2),
    Loongson 3A R2.
    
    The suspect code originates from commit 597ce1723e0f ("MIPS: Support for
    64-bit FP with O32 binaries") in v3.14, however the code in
    __enable_fpu() was consistent and refused to set FR=1, falling back to
    software FPU emulation. This was suboptimal but should be functionally
    correct.
    
    Commit fcc53b5f6c38 ("MIPS: fpu.h: Allow 64-bit FPU on a 64-bit MIPS R6
    CPU") in v4.2 (and stable tagged back to 4.0) later introduced the bug
    by updating __enable_fpu() to set FR=1 but failing to update the other
    similar ifdefs to enable FR=1 state handling.
    
    Fixes: fcc53b5f6c38 ("MIPS: fpu.h: Allow 64-bit FPU on a 64-bit MIPS R6 CPU")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16739/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43292e652771658e976dd6e263172b7043cb98f0
Author: James Hogan <jhogan@kernel.org>
Date:   Fri Nov 10 11:46:54 2017 +0000

    MIPS: Fix odd fp register warnings with MIPS64r2
    
    commit c7fd89a6407ea3a44a2a2fa12d290162c42499c4 upstream.
    
    Building 32-bit MIPS64r2 kernels produces warnings like the following
    on certain toolchains (such as GNU assembler 2.24.90, but not GNU
    assembler 2.28.51) since commit 22b8ba765a72 ("MIPS: Fix MIPS64 FP
    save/restore on 32-bit kernels"), due to the exposure of fpu_save_16odd
    from fpu_save_double and fpu_restore_16odd from fpu_restore_double:
    
    arch/mips/kernel/r4k_fpu.S:47: Warning: float register should be even, was 1
    ...
    arch/mips/kernel/r4k_fpu.S:59: Warning: float register should be even, was 1
    ...
    
    This appears to be because .set mips64r2 does not change the FPU ABI to
    64-bit when -march=mips64r2 (or e.g. -march=xlp) is provided on the
    command line on that toolchain, from the default FPU ABI of 32-bit due
    to the -mabi=32. This makes access to the odd FPU registers invalid.
    
    Fix by explicitly changing the FPU ABI with .set fp=64 directives in
    fpu_save_16odd and fpu_restore_16odd, and moving the undefine of fp up
    in asmmacro.h so fp doesn't turn into $30.
    
    Fixes: 22b8ba765a72 ("MIPS: Fix MIPS64 FP save/restore on 32-bit kernels")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17656/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e39516d24fb8c3c1bcf1b1b5ba20e0c7093e1512
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Tue Nov 14 15:40:52 2017 -0500

    dm: discard support requires all targets in a table support discards
    
    commit 8a74d29d541cd86569139c6f3f44b2d210458071 upstream.
    
    A DM device with a mix of discard capabilities (due to some underlying
    devices not having discard support) _should_ just return -EOPNOTSUPP for
    the region of the device that doesn't support discards (even if only by
    way of the underlying driver formally not supporting discards).  BUT,
    that does ask the underlying driver to handle something that it never
    advertised support for.  In doing so we're exposing users to the
    potential for a underlying disk driver hanging if/when a discard is
    issued a the device that is incapable and never claimed to support
    discards.
    
    Fix this by requiring that each DM target in a DM table provide discard
    support as a prereq for a DM device to advertise support for discards.
    
    This may cause some configurations that were happily supporting discards
    (even in the face of a mix of discard support) to stop supporting
    discards -- but the risk of users hitting driver hangs, and forced
    reboots, outweighs supporting those fringe mixed discard
    configurations.
    
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bfb87ecb4f7e19c53c31b7beca4ecd9bb906a67
Author: Hou Tao <houtao1@huawei.com>
Date:   Wed Nov 1 15:42:36 2017 +0800

    dm: fix race between dm_get_from_kobject() and __dm_destroy()
    
    commit b9a41d21dceadf8104812626ef85dc56ee8a60ed upstream.
    
    The following BUG_ON was hit when testing repeat creation and removal of
    DM devices:
    
        kernel BUG at drivers/md/dm.c:2919!
        CPU: 7 PID: 750 Comm: systemd-udevd Not tainted 4.1.44
        Call Trace:
         [<ffffffff81649e8b>] dm_get_from_kobject+0x34/0x3a
         [<ffffffff81650ef1>] dm_attr_show+0x2b/0x5e
         [<ffffffff817b46d1>] ? mutex_lock+0x26/0x44
         [<ffffffff811df7f5>] sysfs_kf_seq_show+0x83/0xcf
         [<ffffffff811de257>] kernfs_seq_show+0x23/0x25
         [<ffffffff81199118>] seq_read+0x16f/0x325
         [<ffffffff811de994>] kernfs_fop_read+0x3a/0x13f
         [<ffffffff8117b625>] __vfs_read+0x26/0x9d
         [<ffffffff8130eb59>] ? security_file_permission+0x3c/0x44
         [<ffffffff8117bdb8>] ? rw_verify_area+0x83/0xd9
         [<ffffffff8117be9d>] vfs_read+0x8f/0xcf
         [<ffffffff81193e34>] ? __fdget_pos+0x12/0x41
         [<ffffffff8117c686>] SyS_read+0x4b/0x76
         [<ffffffff817b606e>] system_call_fastpath+0x12/0x71
    
    The bug can be easily triggered, if an extra delay (e.g. 10ms) is added
    between the test of DMF_FREEING & DMF_DELETING and dm_get() in
    dm_get_from_kobject().
    
    To fix it, we need to ensure the test of DMF_FREEING & DMF_DELETING and
    dm_get() are done in an atomic way, so _minor_lock is used.
    
    The other callers of dm_get() have also been checked to be OK: some
    callers invoke dm_get() under _minor_lock, some callers invoke it under
    _hash_lock, and dm_start_request() invoke it after increasing
    md->open_count.
    
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9be341edebf5880a53ff8b27d05c7d229797c4be
Author: John Crispin <john@phrozen.org>
Date:   Mon Feb 20 10:29:43 2017 +0100

    MIPS: pci: Remove KERN_WARN instance inside the mt7620 driver
    
    commit 8593b18ad348733b5d5ddfa0c79dcabf51dff308 upstream.
    
    Switch the printk() call to the prefered pr_warn() api.
    
    Fixes: 7e5873d3755c ("MIPS: pci: Add MT7620a PCIE driver")
    Signed-off-by: John Crispin <john@phrozen.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/15321/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f17c786b28a3060a566a170c2cf3bd7441fc30a3
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Fri Oct 6 14:05:04 2017 -0400

    sched/rt: Simplify the IPI based RT balancing logic
    
    commit 4bdced5c9a2922521e325896a7bbbf0132c94e56 upstream.
    
    When a CPU lowers its priority (schedules out a high priority task for a
    lower priority one), a check is made to see if any other CPU has overloaded
    RT tasks (more than one). It checks the rto_mask to determine this and if so
    it will request to pull one of those tasks to itself if the non running RT
    task is of higher priority than the new priority of the next task to run on
    the current CPU.
    
    When we deal with large number of CPUs, the original pull logic suffered
    from large lock contention on a single CPU run queue, which caused a huge
    latency across all CPUs. This was caused by only having one CPU having
    overloaded RT tasks and a bunch of other CPUs lowering their priority. To
    solve this issue, commit:
    
      b6366f048e0c ("sched/rt: Use IPI to trigger RT task push migration instead of pulling")
    
    changed the way to request a pull. Instead of grabbing the lock of the
    overloaded CPU's runqueue, it simply sent an IPI to that CPU to do the work.
    
    Although the IPI logic worked very well in removing the large latency build
    up, it still could suffer from a large number of IPIs being sent to a single
    CPU. On a 80 CPU box, I measured over 200us of processing IPIs. Worse yet,
    when I tested this on a 120 CPU box, with a stress test that had lots of
    RT tasks scheduling on all CPUs, it actually triggered the hard lockup
    detector! One CPU had so many IPIs sent to it, and due to the restart
    mechanism that is triggered when the source run queue has a priority status
    change, the CPU spent minutes! processing the IPIs.
    
    Thinking about this further, I realized there's no reason for each run queue
    to send its own IPI. As all CPUs with overloaded tasks must be scanned
    regardless if there's one or many CPUs lowering their priority, because
    there's no current way to find the CPU with the highest priority task that
    can schedule to one of these CPUs, there really only needs to be one IPI
    being sent around at a time.
    
    This greatly simplifies the code!
    
    The new approach is to have each root domain have its own irq work, as the
    rto_mask is per root domain. The root domain has the following fields
    attached to it:
    
      rto_push_work  - the irq work to process each CPU set in rto_mask
      rto_lock       - the lock to protect some of the other rto fields
      rto_loop_start - an atomic that keeps contention down on rto_lock
                        the first CPU scheduling in a lower priority task
                        is the one to kick off the process.
      rto_loop_next  - an atomic that gets incremented for each CPU that
                        schedules in a lower priority task.
      rto_loop       - a variable protected by rto_lock that is used to
                        compare against rto_loop_next
      rto_cpu        - The cpu to send the next IPI to, also protected by
                        the rto_lock.
    
    When a CPU schedules in a lower priority task and wants to make sure
    overloaded CPUs know about it. It increments the rto_loop_next. Then it
    atomically sets rto_loop_start with a cmpxchg. If the old value is not "0",
    then it is done, as another CPU is kicking off the IPI loop. If the old
    value is "0", then it will take the rto_lock to synchronize with a possible
    IPI being sent around to the overloaded CPUs.
    
    If rto_cpu is greater than or equal to nr_cpu_ids, then there's either no
    IPI being sent around, or one is about to finish. Then rto_cpu is set to the
    first CPU in rto_mask and an IPI is sent to that CPU. If there's no CPUs set
    in rto_mask, then there's nothing to be done.
    
    When the CPU receives the IPI, it will first try to push any RT tasks that is
    queued on the CPU but can't run because a higher priority RT task is
    currently running on that CPU.
    
    Then it takes the rto_lock and looks for the next CPU in the rto_mask. If it
    finds one, it simply sends an IPI to that CPU and the process continues.
    
    If there's no more CPUs in the rto_mask, then rto_loop is compared with
    rto_loop_next. If they match, everything is done and the process is over. If
    they do not match, then a CPU scheduled in a lower priority task as the IPI
    was being passed around, and the process needs to start again. The first CPU
    in rto_mask is sent the IPI.
    
    This change removes this duplication of work in the IPI logic, and greatly
    lowers the latency caused by the IPIs. This removed the lockup happening on
    the 120 CPU machine. It also simplifies the code tremendously. What else
    could anyone ask for?
    
    Thanks to Peter Zijlstra for simplifying the rto_loop_start atomic logic and
    supplying me with the rto_start_trylock() and rto_start_unlock() helper
    functions.
    
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Clark Williams <williams@redhat.com>
    Cc: Daniel Bristot de Oliveira <bristot@redhat.com>
    Cc: John Kacur <jkacur@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Scott Wood <swood@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20170424114732.1aac6dc4@gandalf.local.home
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bf483c9a402941b5594e5ac8ad3b2b4a335fd34
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Oct 31 19:33:02 2017 -0400

    dm: allocate struct mapped_device with kvzalloc
    
    commit 856eb0916d181da6d043cc33e03f54d5c5bbe54a upstream.
    
    The structure srcu_struct can be very big, its size is proportional to the
    value CONFIG_NR_CPUS. The Fedora kernel has CONFIG_NR_CPUS 8192, the field
    io_barrier in the struct mapped_device has 84kB in the debugging kernel
    and 50kB in the non-debugging kernel. The large size may result in failure
    of the function kzalloc_node.
    
    In order to avoid the allocation failure, we use the function
    kvzalloc_node, this function falls back to vmalloc if a large contiguous
    chunk of memory is not available. This patch also moves the field
    io_barrier to the last position of struct mapped_device - the reason is
    that on many processor architectures, short memory offsets result in
    smaller code than long memory offsets - on x86-64 it reduces code size by
    320 bytes.
    
    Note to stable kernel maintainers - the kernels 4.11 and older don't have
    the function kvzalloc_node, you can use the function vzalloc_node instead.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13e6560075607ff354b48556f306bee925328325
Author: Vivek Goyal <vgoyal@redhat.com>
Date:   Wed Nov 1 15:37:22 2017 -0400

    ovl: Put upperdentry if ovl_check_origin() fails
    
    commit 5455f92b54e516995a9ca45bbf790d3629c27a93 upstream.
    
    If ovl_check_origin() fails, we should put upperdentry. We have a reference
    on it by now. So goto out_put_upper instead of out.
    
    Fixes: a9d019573e88 ("ovl: lookup non-dir copy-up-origin by file handle")
    Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08720bf98b6ac0a3ebffeb80c6c6cc992c374d90
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Nov 15 16:38:09 2017 -0800

    dm bufio: fix integer overflow when limiting maximum cache size
    
    commit 74d4108d9e681dbbe4a2940ed8fdff1f6868184c upstream.
    
    The default max_cache_size_bytes for dm-bufio is meant to be the lesser
    of 25% of the size of the vmalloc area and 2% of the size of lowmem.
    However, on 32-bit systems the intermediate result in the expression
    
        (VMALLOC_END - VMALLOC_START) * DM_BUFIO_VMALLOC_PERCENT / 100
    
    overflows, causing the wrong result to be computed.  For example, on a
    32-bit system where the vmalloc area is 520093696 bytes, the result is
    1174405 rather than the expected 130023424, which makes the maximum
    cache size much too small (far less than 2% of lowmem).  This causes
    severe performance problems for dm-verity users on affected systems.
    
    Fix this by using mult_frac() to correctly multiply by a percentage.  Do
    this for all places in dm-bufio that multiply by a percentage.  Also
    replace (VMALLOC_END - VMALLOC_START) with VMALLOC_TOTAL, which contrary
    to the comment is now defined in include/linux/vmalloc.h.
    
    Depends-on: 9993bc635 ("sched/x86: Fix overflow in cyc2ns_offset")
    Fixes: 95d402f057f2 ("dm: add bufio")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d7a55f5b8099224e250e5e87882e4d7168af129
Author: Ming Lei <ming.lei@redhat.com>
Date:   Sat Sep 30 19:46:48 2017 +0800

    dm mpath: remove annoying message of 'blk_get_request() returned -11'
    
    commit 9dc112e2daf87b40607fd8d357e2d7de32290d45 upstream.
    
    It is very normal to see allocation failure, especially with blk-mq
    request_queues, so it's unnecessary to report this error and annoy
    people.
    
    In practice this 'blk_get_request() returned -11' error gets logged
    quite frequently when a blk-mq DM multipath device sees heavy IO.
    
    This change is marked for stable@ because the annoying message in
    question was included in stable@ commit 7083abbbf.
    
    Fixes: 7083abbbf ("dm mpath: avoid that path removal can trigger an infinite loop")
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac29afdb459c9a75916edc1ee77e2d1e73c50353
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Sat Oct 28 16:39:34 2017 +0900

    dm zoned: ignore last smaller runt zone
    
    commit 114e025968b5990ad0b57bf60697ea64ee206aac upstream.
    
    The SCSI layer allows ZBC drives to have a smaller last runt zone. For
    such a device, specifying the entire capacity for a dm-zoned target
    table entry fails because the specified capacity is not aligned on a
    device zone size indicated in the request queue structure of the
    device.
    
    Fix this problem by ignoring the last runt zone in the entry length
    when seting up the dm-zoned target (ctr method) and when iterating table
    entries of the target (iterate_devices method). This allows dm-zoned
    users to still easily setup a target using the entire device capacity
    (as mandated by dm-zoned) or the aligned capacity excluding the last
    runt zone.
    
    While at it, replace direct references to the device queue chunk_sectors
    limit with calls to the accessor blk_queue_zone_sectors().
    
    Reported-by: Peter Desnoyers <pjd@ccs.neu.edu>
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f71f493f46168bf48a02aaba5ae95335d8c7bb3
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Nov 7 10:35:57 2017 -0500

    dm crypt: allow unaligned bv_offset
    
    commit 0440d5c0ca9744b92a07aeb6df0a9a75db6f4280 upstream.
    
    When slub_debug is enabled kmalloc returns unaligned memory. XFS uses
    this unaligned memory for its buffers (if an unaligned buffer crosses a
    page, XFS frees it and allocates a full page instead - see the function
    xfs_buf_allocate_memory).
    
    dm-crypt checks if bv_offset is aligned on page size and these checks
    fail with slub_debug and XFS.
    
    Fix this bug by removing the bv_offset checks. Switch to checking if
    bv_len is aligned instead of bv_offset (this check should be sufficient
    to prevent overruns if a bio with too small bv_len is received).
    
    Fixes: 8f0009a22517 ("dm crypt: optionally support larger encryption sector size")
    Reported-by: Bruno Prémont <bonbons@sysophe.eu>
    Tested-by: Bruno Prémont <bonbons@sysophe.eu>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Milan Broz <gmazyland@gmail.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec544ec956bc791f08d66101bc1269c4d944df7f
Author: Joe Thornber <ejt@redhat.com>
Date:   Fri Nov 10 07:53:31 2017 -0500

    dm cache: fix race condition in the writeback mode overwrite_bio optimisation
    
    commit d1260e2a3f85f4c1010510a15f89597001318b1b upstream.
    
    When a DM cache in writeback mode moves data between the slow and fast
    device it can often avoid a copy if the triggering bio either:
    
    i) covers the whole block (no point copying if we're about to overwrite it)
    ii) the migration is a promotion and the origin block is currently discarded
    
    Prior to this fix there was a race with case (ii).  The discard status
    was checked with a shared lock held (rather than exclusive).  This meant
    another bio could run in parallel and write data to the origin, removing
    the discard state.  After the promotion the parallel write would have
    been lost.
    
    With this fix the discard status is re-checked once the exclusive lock
    has been aquired.  If the block is no longer discarded it falls back to
    the slower full copy path.
    
    Fixes: b29d4986d ("dm cache: significant rework to leverage dm-bio-prison-v2")
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a502cd2dd4689f0092c27c450786731c087a56e6
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Nov 7 10:40:40 2017 -0500

    dm integrity: allow unaligned bv_offset
    
    commit 95b1369a9638cfa322ad1c0cde8efbe524059884 upstream.
    
    When slub_debug is enabled kmalloc returns unaligned memory. XFS uses
    this unaligned memory for its buffers (if an unaligned buffer crosses a
    page, XFS frees it and allocates a full page instead - see the function
    xfs_buf_allocate_memory).
    
    dm-integrity checks if bv_offset is aligned on page size and this check
    fail with slub_debug and XFS.
    
    Fix this bug by removing the bv_offset check, leaving only the check for
    bv_len.
    
    Fixes: 7eada909bfd7 ("dm: add integrity target")
    Reported-by: Bruno Prémont <bonbons@sysophe.eu>
    Reviewed-by: Milan Broz <gmazyland@gmail.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca90f34e2e80597dee73c2e8d55de364a34c112b
Author: Vijendar Mukunda <Vijendar.Mukunda@amd.com>
Date:   Thu Nov 23 20:07:00 2017 +0530

    ALSA: hda: Add Raven PCI ID
    
    commit 9ceace3c9c18c67676e75141032a65a8e01f9a7a upstream.
    
    This commit adds PCI ID for Raven platform
    
    Signed-off-by: Vijendar Mukunda <Vijendar.Mukunda@amd.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a529422a5cb9c489f47647523779d2ea740d9918
Author: Vadim Lomovtsev <Vadim.Lomovtsev@cavium.com>
Date:   Tue Oct 17 05:47:39 2017 -0700

    PCI: Apply Cavium ThunderX ACS quirk to more Root Ports
    
    commit f2ddaf8dfd4a5071ad09074d2f95ab85d35c8a1e upstream.
    
    Extend the Cavium ThunderX ACS quirk to cover more device IDs and restrict
    it to only Root Ports.
    
    Signed-off-by: Vadim Lomovtsev <Vadim.Lomovtsev@cavium.com>
    [bhelgaas: changelog, stable tag]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f97ca60715d43d826657961db82b4704cb2f68c4
Author: Vadim Lomovtsev <Vadim.Lomovtsev@cavium.com>
Date:   Tue Oct 17 05:47:38 2017 -0700

    PCI: Set Cavium ACS capability quirk flags to assert RR/CR/SV/UF
    
    commit 7f342678634f16795892677204366e835e450dda upstream.
    
    The Cavium ThunderX (CN8XXX) family of PCIe Root Ports does not advertise
    an ACS capability.  However, the RTL internally implements similar
    protection as if ACS had Request Redirection, Completion Redirection,
    Source Validation, and Upstream Forwarding features enabled.
    
    Change Cavium ACS capabilities quirk flags accordingly.
    
    Fixes: b404bcfbf035 ("PCI: Add ACS quirk for all Cavium devices")
    Signed-off-by: Vadim Lomovtsev <Vadim.Lomovtsev@cavium.com>
    [bhelgaas: tidy changelog, comment, stable tag]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c85364c66e7dd03336d70e98dd6fc5881f34dcb8
Author: Dexuan Cui <decui@microsoft.com>
Date:   Wed Nov 1 20:30:53 2017 +0000

    PCI: hv: Use effective affinity mask
    
    commit 79aa801e899417a56863d6713f76c4e108856000 upstream.
    
    The effective_affinity_mask is always set when an interrupt is assigned in
    __assign_irq_vector() -> apic->cpu_mask_to_apicid(), e.g. for struct apic
    apic_physflat: -> default_cpu_mask_to_apicid() ->
    irq_data_update_effective_affinity(), but it looks d->common->affinity
    remains all-1's before the user space or the kernel changes it later.
    
    In the early allocation/initialization phase of an IRQ, we should use the
    effective_affinity_mask, otherwise Hyper-V may not deliver the interrupt to
    the expected CPU.  Without the patch, if we assign 7 Mellanox ConnectX-3
    VFs to a 32-vCPU VM, one of the VFs may fail to receive interrupts.
    
    Tested-by: Adrian Suhov <v-adsuho@microsoft.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Jake Oshins <jakeo@microsoft.com>
    Cc: Jork Loeser <jloeser@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d42e6a246cd75143e9133f740ac979011f81bc43
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Mon Nov 13 15:05:50 2017 -0600

    PCI/ASPM: Use correct capability pointer to program LTR_L1.2_THRESHOLD
    
    commit c00054f540bf81e592e1fee709b0bdbf20f478b5 upstream.
    
    Previously we programmed the LTR_L1.2_THRESHOLD in the parent (upstream)
    device using the capability pointer of the *child* (downstream) device,
    which corrupted some random word of the parent's config space.
    
    Use the parent's L1 SS capability pointer to program its
    LTR_L1.2_THRESHOLD.
    
    Fixes: aeda9adebab8 ("PCI/ASPM: Configure L1 substate settings")
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Vidya Sagar <vidyas@nvidia.com>
    CC: Rajat Jain <rajatja@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 576bdf9642d97c8aafb0305960c00259d7438b06
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Mon Nov 13 08:50:30 2017 -0600

    PCI/ASPM: Account for downstream device's Port Common_Mode_Restore_Time
    
    commit 94ac327e043ee40d7fc57b54541da50507ef4e99 upstream.
    
    Every Port that supports the L1.2 substate advertises its Port
    Common_Mode_Restore_Time, i.e., the time the Port requires to re-establish
    common mode when exiting L1.2 (see PCIe r3.1, sec 7.33.2).
    
    Per sec 5.5.3.3.1, when exiting L1.2, the Downstream Port (the device at
    the upstream end of the link) must send TS1 training sequences for at least
    T(COMMONMODE) after it detects electrical idle exit on the Link.  We want
    this to be long enough for both ends of the Link, so we should set it to
    the maximum of the Port Common_Mode_Restore_Time for the upstream and
    downstream components on the Link.
    
    Previously we only looked at the Port Common_Mode_Restore_Time of the
    upstream device, so if the downstream device required more time, we didn't
    program the upstream device's T(COMMONMODE) correctly.
    
    Fixes: f1f0366dd6be ("PCI/ASPM: Calculate and save the L1.2 timing parameters")
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Vidya Sagar <vidyas@nvidia.com>
    Acked-by: Rajat Jain <rajatja@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b4c6a3b394f86f6b78a688c092d8dcea976a59c
Author: Tobias Jordan <Tobias.Jordan@elektrobit.com>
Date:   Wed Oct 4 11:35:03 2017 +0530

    PM / OPP: Add missing of_node_put(np)
    
    commit 7978db344719dab1e56d05e6fc04aaaddcde0a5e upstream.
    
    The for_each_available_child_of_node() loop in _of_add_opp_table_v2()
    doesn't drop the reference to "np" on errors. Fix that.
    
    Fixes: 274659029c9d (PM / OPP: Add support to parse "operating-points-v2" bindings)
    Signed-off-by: Tobias Jordan <Tobias.Jordan@elektrobit.com>
    [ VK: Improved commit log. ]
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Reviewed-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2031e243efeea84f4f121018715e8c7755ee1914
Author: Josef Bacik <jbacik@fb.com>
Date:   Mon Nov 6 16:11:58 2017 -0500

    nbd: don't start req until after the dead connection logic
    
    commit 6a468d5990ecd1c2d07dd85f8633bbdd0ba61c40 upstream.
    
    We can end up sleeping for a while waiting for the dead timeout, which
    means we could get the per request timer to fire.  We did handle this
    case, but if the dead timeout happened right after we submitted we'd
    either tear down the connection or possibly requeue as we're handling an
    error and race with the endio which can lead to panics and other
    hilarity.
    
    Fixes: 560bc4b39952 ("nbd: handle dead connections")
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6b7c54c2d0ee8fe4d3b1cdfdb1961a80be60d3f
Author: Josef Bacik <jbacik@fb.com>
Date:   Mon Nov 6 16:11:57 2017 -0500

    nbd: wait uninterruptible for the dead timeout
    
    commit ff57dc94faec023abc267cdc45766fccff497557 upstream.
    
    If we have a pending signal or the user kills their application then
    it'll bring down the whole device, which is less than awesome.  Instead
    wait uninterruptible for the dead timeout so we're sure we gave it our
    best shot.
    
    Fixes: 560bc4b39952 ("nbd: handle dead connections")
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a59e386c4f4fce346161c0a62a5e1fbc1f435d6f
Author: Simon Guinot <simon.guinot@sequanux.org>
Date:   Mon Nov 13 16:27:02 2017 +0100

    net: mvneta: fix handling of the Tx descriptor counter
    
    commit 0d63785c6b94b5d2f095f90755825f90eea791f5 upstream.
    
    The mvneta controller provides a 8-bit register to update the pending
    Tx descriptor counter. Then, a maximum of 255 Tx descriptors can be
    added at once. In the current code the mvneta_txq_pend_desc_add function
    assumes the caller takes care of this limit. But it is not the case. In
    some situations (xmit_more flag), more than 255 descriptors are added.
    When this happens, the Tx descriptor counter register is updated with a
    wrong value, which breaks the whole Tx queue management.
    
    This patch fixes the issue by allowing the mvneta_txq_pend_desc_add
    function to process more than 255 Tx descriptors.
    
    Fixes: 2a90f7e1d5d0 ("net: mvneta: add xmit_more support")
    Signed-off-by: Simon Guinot <simon.guinot@sequanux.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d0a61fbc66724b2fdbbc7bf2b34354a4452efcd
Author: Mathias Kresin <dev@kresin.me>
Date:   Thu May 11 08:11:15 2017 +0200

    MIPS: ralink: Fix typo in mt7628 pinmux function
    
    commit 05a67cc258e75ac9758e6f13d26337b8be51162a upstream.
    
    There is a typo inside the pinmux setup code. The function is called
    refclk and not reclk.
    
    Fixes: 53263a1c6852 ("MIPS: ralink: add mt7628an support")
    Signed-off-by: Mathias Kresin <dev@kresin.me>
    Acked-by: John Crispin <john@phrozen.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16047/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8086ac5cdda0199d1231267808acc74cc75d6edf
Author: Mathias Kresin <dev@kresin.me>
Date:   Thu May 11 08:11:14 2017 +0200

    MIPS: ralink: Fix MT7628 pinmux
    
    commit 8ef4b43cd3794d63052d85898e42424fd3b14d24 upstream.
    
    According to the datasheet the REFCLK pin is shared with GPIO#37 and
    the PERST pin is shared with GPIO#36.
    
    Fixes: 53263a1c6852 ("MIPS: ralink: add mt7628an support")
    Signed-off-by: Mathias Kresin <dev@kresin.me>
    Acked-by: John Crispin <john@phrozen.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16046/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c792238027157d0fc6a80a8ea1b9d73443459d75
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Oct 4 03:46:14 2017 +0100

    MIPS: cmpxchg64() and HAVE_VIRT_CPU_ACCOUNTING_GEN don't work for 32-bit SMP
    
    commit a3f143106596d739e7fbc4b84c96b1475247d876 upstream.
    
    __cmpxchg64_local_generic() is atomic only w.r.t tasks and interrupts
    on the same CPU (that's what the 'local' means).  We can't use it to
    implement cmpxchg64() in SMP configurations.
    
    So, for 32-bit SMP configurations:
    
    - Don't define cmpxchg64()
    - Don't enable HAVE_VIRT_CPU_ACCOUNTING_GEN, which requires it
    
    Fixes: e2093c7b03c1 ("MIPS: Fall back to generic implementation of ...")
    Fixes: bb877e96bea1 ("MIPS: Add support for full dynticks CPU time accounting")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Deng-Cheng Zhu <dengcheng.zhu@mips.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17413/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8177aa54c509056c599e7cf1c7e91630814686e6
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Mon Nov 13 03:37:06 2017 +0300

    uapi: fix linux/rxrpc.h userspace compilation errors
    
    commit 0eef304bc9f7d079a1165e8cd2f24b078e9e1f2a upstream.
    
    Consistently use types provided by <linux/types.h> to fix the following
    linux/rxrpc.h userspace compilation errors:
    
    /usr/include/linux/rxrpc.h:24:2: error: unknown type name 'u16'
      u16  srx_service; /* service desired */
    /usr/include/linux/rxrpc.h:25:2: error: unknown type name 'u16'
      u16  transport_type; /* type of transport socket (SOCK_DGRAM) */
    /usr/include/linux/rxrpc.h:26:2: error: unknown type name 'u16'
      u16  transport_len; /* length of transport address */
    
    Use __kernel_sa_family_t instead of sa_family_t the same way
    as uapi/linux/in.h does, to fix the following
    linux/rxrpc.h userspace compilation errors:
    
    /usr/include/linux/rxrpc.h:23:2: error: unknown type name 'sa_family_t'
      sa_family_t srx_family; /* address family */
    /usr/include/linux/rxrpc.h:28:3: error: unknown type name 'sa_family_t'
      sa_family_t family;  /* transport address family */
    
    Fixes: 727f8914477e ("rxrpc: Expose UAPI definitions to userspace")
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33e58deefa0907ffba4d5a4c69f3641a649358d3
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Tue Nov 14 06:30:11 2017 +0300

    uapi: fix linux/tls.h userspace compilation error
    
    commit b9f3eb499d84f8d4adcb2f9212ec655700b28228 upstream.
    
    Move inclusion of a private kernel header <net/tcp.h>
    from uapi/linux/tls.h to its only user - net/tls.h,
    to fix the following linux/tls.h userspace compilation error:
    
    /usr/include/linux/tls.h:41:21: fatal error: net/tcp.h: No such file or directory
    
    As to this point uapi/linux/tls.h was totaly unusuable for userspace,
    cleanup this header file further by moving other redundant includes
    to net/tls.h.
    
    Fixes: 3c4d7559159b ("tls: kernel TLS support")
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30d3389d80eb0c6d2a49ffa07c8fd1eec5a49873
Author: Philip Derrin <philip@cog.systems>
Date:   Tue Nov 14 00:55:26 2017 +0100

    ARM: 8721/1: mm: dump: check hardware RO bit for LPAE
    
    commit 3b0c0c922ff4be275a8beb87ce5657d16f355b54 upstream.
    
    When CONFIG_ARM_LPAE is set, the PMD dump relies on the software
    read-only bit to determine whether a page is writable. This
    concealed a bug which left the kernel text section writable
    (AP2=0) while marked read-only in the software bit.
    
    In a kernel with the AP2 bug, the dump looks like this:
    
        ---[ Kernel Mapping ]---
        0xc0000000-0xc0200000           2M RW NX SHD
        0xc0200000-0xc0600000           4M ro x  SHD
        0xc0600000-0xc0800000           2M ro NX SHD
        0xc0800000-0xc4800000          64M RW NX SHD
    
    The fix is to check that the software and hardware bits are both
    set before displaying "ro". The dump then shows the true perms:
    
        ---[ Kernel Mapping ]---
        0xc0000000-0xc0200000           2M RW NX SHD
        0xc0200000-0xc0600000           4M RW x  SHD
        0xc0600000-0xc0800000           2M RW NX SHD
        0xc0800000-0xc4800000          64M RW NX SHD
    
    Fixes: ded947798469 ("ARM: 8109/1: mm: Modify pte_write and pmd_write logic for LPAE")
    Signed-off-by: Philip Derrin <philip@cog.systems>
    Tested-by: Neil Dick <neil@cog.systems>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb7cc998a0e5f0f4572609ccc334de5a6260b406
Author: Philip Derrin <philip@cog.systems>
Date:   Tue Nov 14 00:55:25 2017 +0100

    ARM: 8722/1: mm: make STRICT_KERNEL_RWX effective for LPAE
    
    commit 400eeffaffc7232c0ae1134fe04e14ae4fb48d8c upstream.
    
    Currently, for ARM kernels with CONFIG_ARM_LPAE and
    CONFIG_STRICT_KERNEL_RWX enabled, the 2MiB pages mapping the
    kernel code and rodata are writable. They are marked read-only in
    a software bit (L_PMD_SECT_RDONLY) but the hardware read-only bit
    is not set (PMD_SECT_AP2).
    
    For user mappings, the logic that propagates the software bit
    to the hardware bit is in set_pmd_at(); but for the kernel,
    section_update() writes the PMDs directly, skipping this logic.
    
    The fix is to set PMD_SECT_AP2 for read-only sections in
    section_update(), at the same time as L_PMD_SECT_RDONLY.
    
    Fixes: 1e3479225acb ("ARM: 8275/1: mm: fix PMD_SECT_RDONLY undeclared compile error")
    Signed-off-by: Philip Derrin <philip@cog.systems>
    Reported-by: Neil Dick <neil@cog.systems>
    Tested-by: Neil Dick <neil@cog.systems>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecc3c4795bc3c7624c7b727c91ef5328fda6fc79
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Thu Oct 26 18:36:47 2017 +0100

    arm64: Implement arch-specific pte_access_permitted()
    
    commit 6218f96c58dbf44a06aeaf767aab1f54fc397838 upstream.
    
    The generic pte_access_permitted() implementation only checks for
    pte_present() (together with the write permission where applicable).
    However, for both kernel ptes and PROT_NONE mappings pte_present() also
    returns true on arm64 even though such mappings are not user accessible.
    Additionally, arm64 now supports execute-only user permission
    (PROT_EXEC) which is implemented by clearing the PTE_USER bit.
    
    With this patch the arm64 implementation of pte_access_permitted()
    checks for the PTE_VALID and PTE_USER bits together with writable access
    if applicable.
    
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c35be334862c2cc6f4dd58ba638c0e7b341c7862
Author: Andi Kleen <ak@linux.intel.com>
Date:   Wed Nov 8 16:07:18 2017 -0800

    perf/x86/intel: Hide TSX events when RTM is not supported
    
    commit 58ba4d5a25579e5c7e312bd359c95f3a9a0a242c upstream.
    
    0day testing reported a perf test regression on Haswell systems without
    RTM. Commit a5df70c35 hides the in_tx/in_tx_cp attributes when RTM is not
    available, but the TSX events are still available in sysfs. Due to the
    missing attributes the event parser fails on those files.
    
    Don't show the TSX events in sysfs when RTM is not available on
    Haswell/Broadwell/Skylake.
    
    Fixes: a5df70c354c2 (perf/x86: Only show format attributes when supported)
    Reported-by: kernel test robot <xiaolong.ye@intel.com>
    Tested-by: Jin Yao <yao.jin@linux.intel.com>
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20171109000718.14137-1-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9a64e23a9da528e7d8aa1bd2c7bb92be4ebb724
Author: Andy Lutomirski <luto@kernel.org>
Date:   Wed Nov 22 20:39:16 2017 -0800

    x86/entry/64: Add missing irqflags tracing to native_load_gs_index()
    
    commit ca37e57bbe0cf1455ea3e84eb89ed04a132d59e1 upstream.
    
    Running this code with IRQs enabled (where dummy_lock is a spinlock):
    
    static void check_load_gs_index(void)
    {
            /* This will fail. */
            load_gs_index(0xffff);
    
            spin_lock(&dummy_lock);
            spin_unlock(&dummy_lock);
    }
    
    Will generate a lockdep warning.  The issue is that the actual write
    to %gs would cause an exception with IRQs disabled, and the exception
    handler would, as an inadvertent side effect, update irqflag tracing
    to reflect the IRQs-off status.  native_load_gs_index() would then
    turn IRQs back on and return with irqflag tracing still thinking that
    IRQs were off.  The dummy lock-and-unlock causes lockdep to notice the
    error and warn.
    
    Fix it by adding the missing tracing.
    
    Apparently nothing did this in a context where it mattered.  I haven't
    tried to find a code path that would actually exhibit the warning if
    appropriately nasty user code were running.
    
    I suspect that the security impact of this bug is very, very low --
    production systems don't run with lockdep enabled, and the warning is
    mostly harmless anyway.
    
    Found during a quick audit of the entry code to try to track down an
    unrelated bug that Ingo found in some still-in-development code.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/e1aeb0e6ba8dd430ec36c8a35e63b429698b4132.1511411918.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c91f3fc2411d9f007fbbaf9b10f772805e01cafe
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Nov 21 20:43:56 2017 -0800

    x86/entry/64: Fix entry_SYSCALL_64_after_hwframe() IRQ tracing
    
    commit 548c3050ea8d16997ae27f9e080a8338a606fc93 upstream.
    
    When I added entry_SYSCALL_64_after_hwframe(), I left TRACE_IRQS_OFF
    before it.  This means that users of entry_SYSCALL_64_after_hwframe()
    were responsible for invoking TRACE_IRQS_OFF, and the one and only
    user (Xen, added in the same commit) got it wrong.
    
    I think this would manifest as a warning if a Xen PV guest with
    CONFIG_DEBUG_LOCKDEP=y were used with context tracking.  (The
    context tracking bit is to cause lockdep to get invoked before we
    turn IRQs back on.)  I haven't tested that for real yet because I
    can't get a kernel configured like that to boot at all on Xen PV.
    
    Move TRACE_IRQS_OFF below the label.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 8a9949bc71a7 ("x86/xen/64: Rearrange the SYSCALL entries")
    Link: http://lkml.kernel.org/r/9150aac013b7b95d62c2336751d5b6e91d2722aa.1511325444.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00d5e292a8ea9675c6ac4583743b811fda6ba157
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Nov 24 13:56:30 2017 +0900

    x86/decoder: Add new TEST instruction pattern
    
    commit 12a78d43de767eaf8fb272facb7a7b6f2dc6a9df upstream.
    
    The kbuild test robot reported this build warning:
    
      Warning: arch/x86/tools/test_get_len found difference at <jump_table>:ffffffff8103dd2c
    
      Warning: ffffffff8103dd82: f6 09 d8 testb $0xd8,(%rcx)
      Warning: objdump says 3 bytes, but insn_get_length() says 2
      Warning: decoded and checked 1569014 instructions with 1 warnings
    
    This sequence seems to be a new instruction not in the opcode map in the Intel SDM.
    
    The instruction sequence is "F6 09 d8", means Group3(F6), MOD(00)REG(001)RM(001), and 0xd8.
    Intel SDM vol2 A.4 Table A-6 said the table index in the group is "Encoding of Bits 5,4,3 of
    the ModR/M Byte (bits 2,1,0 in parenthesis)"
    
    In that table, opcodes listed by the index REG bits as:
    
      000         001       010 011  100        101        110         111
     TEST Ib/Iz,(undefined),NOT,NEG,MUL AL/rAX,IMUL AL/rAX,DIV AL/rAX,IDIV AL/rAX
    
    So, it seems TEST Ib is assigned to 001.
    
    Add the new pattern.
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46855f80d1a0174b008ac7c6b8439a1c294bcb53
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Nov 6 14:17:53 2017 -0600

    x86/boot: Fix boot failure when SMP MP-table is based at 0
    
    commit ac5292e9a294618cecb31109d1ba265e3d027ba2 upstream.
    
    When crosvm is used to boot a kernel as a VM, the SMP MP-table is found
    at physical address 0x0. This causes mpf_base to be set to 0 and a
    subsequent "if (!mpf_base)" check in default_get_smp_config() results in
    the MP-table not being parsed.  Further into the boot this results in an
    oops when attempting a read_apic_id().
    
    Add a boolean variable that is set to true when the MP-table is found.
    Use this variable for testing if the MP-table was found so that even a
    value of 0 for mpf_base will result in continued parsing of the MP-table.
    
    Fixes: 5997efb96756 ("x86/boot: Use memremap() to map the MPF and MPC data")
    Reported-by: Tomeu Vizoso <tomeu@tomeuvizoso.net>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: regression@leemhuis.info
    Link: https://lkml.kernel.org/r/20171106201753.23059.86674.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce922b7b4a5178279eb5453e7fcb0b116c757f1e
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Nov 7 14:15:27 2017 -0800

    lib/mpi: call cond_resched() from mpi_powm() loop
    
    commit 1d9ddde12e3c9bab7f3d3484eb9446315e3571ca upstream.
    
    On a non-preemptible kernel, if KEYCTL_DH_COMPUTE is called with the
    largest permitted inputs (16384 bits), the kernel spends 10+ seconds
    doing modular exponentiation in mpi_powm() without rescheduling.  If all
    threads do it, it locks up the system.  Moreover, it can cause
    rcu_sched-stall warnings.
    
    Notwithstanding the insanity of doing this calculation in kernel mode
    rather than in userspace, fix it by calling cond_resched() as each bit
    from the exponent is processed.  It's still noninterruptible, but at
    least it's preemptible now.
    
    Do the cond_resched() once per bit rather than once per MPI limb because
    each limb might still easily take 100+ milliseconds on slow CPUs.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f088f6a6752c18ceb1338e07b7b702a0b086914
Author: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
Date:   Mon Sep 18 08:54:40 2017 -0700

    sched: Make resched_cpu() unconditional
    
    commit 7c2102e56a3f7d85b5d8f33efbd7aecc1f36fdd8 upstream.
    
    The current implementation of synchronize_sched_expedited() incorrectly
    assumes that resched_cpu() is unconditional, which it is not.  This means
    that synchronize_sched_expedited() can hang when resched_cpu()'s trylock
    fails as follows (analysis by Neeraj Upadhyay):
    
    o       CPU1 is waiting for expedited wait to complete:
    
            sync_rcu_exp_select_cpus
                 rdp->exp_dynticks_snap & 0x1   // returns 1 for CPU5
                 IPI sent to CPU5
    
            synchronize_sched_expedited_wait
                     ret = swait_event_timeout(rsp->expedited_wq,
                                               sync_rcu_preempt_exp_done(rnp_root),
                                               jiffies_stall);
    
            expmask = 0x20, CPU 5 in idle path (in cpuidle_enter())
    
    o       CPU5 handles IPI and fails to acquire rq lock.
    
            Handles IPI
                 sync_sched_exp_handler
                     resched_cpu
                         returns while failing to try lock acquire rq->lock
                     need_resched is not set
    
    o       CPU5 calls  rcu_idle_enter() and as need_resched is not set, goes to
            idle (schedule() is not called).
    
    o       CPU 1 reports RCU stall.
    
    Given that resched_cpu() is now used only by RCU, this commit fixes the
    assumption by making resched_cpu() unconditional.
    
    Reported-by: Neeraj Upadhyay <neeraju@codeaurora.org>
    Suggested-by: Neeraj Upadhyay <neeraju@codeaurora.org>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 668a1285187668ce162a3aa6b4f5e3272e659954
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Oct 10 18:09:49 2017 +0200

    serdev: fix registration of second slave
    
    commit 08fcee289f341786eb3b44e5f2d1dc850943238e upstream.
    
    Serdev currently only supports a single slave device, but the required
    sanity checks to prevent further registration attempts were missing.
    
    If a serial-port node has two child nodes with compatible properties,
    the OF code would try to register two slave devices using the same id
    and name. Driver core will not allow this (and there will be loud
    complaints), but the controller's slave pointer would already have been
    set to address of the soon to be deallocated second struct
    serdev_device. As the first slave device remains registered, this can
    lead to later use-after-free issues when the slave callbacks are
    accessed.
    
    Note that while the serdev registration helpers are exported, they are
    typically only called by serdev core. Any other (out-of-tree) callers
    must serialise registration and deregistration themselves.
    
    Fixes: cd6484e1830b ("serdev: Introduce new bus for serial attached devices")
    Cc: Rob Herring <robh@kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b79974945e48f9583861c464a8558d1db432c613
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Wed Nov 8 20:23:55 2017 +0530

    cpufreq: schedutil: Reset cached_raw_freq when not in sync with next_freq
    
    commit 07458f6a5171d97511dfbdf6ce549ed2ca0280c7 upstream.
    
    'cached_raw_freq' is used to get the next frequency quickly but should
    always be in sync with sg_policy->next_freq. There is a case where it is
    not and in such cases it should be reset to avoid switching to incorrect
    frequencies.
    
    Consider this case for example:
    
     - policy->cur is 1.2 GHz (Max)
     - New request comes for 780 MHz and we store that in cached_raw_freq.
     - Based on 780 MHz, we calculate the effective frequency as 800 MHz.
     - We then see the CPU wasn't idle recently and choose to keep the next
       freq as 1.2 GHz.
     - Now we have cached_raw_freq is 780 MHz and sg_policy->next_freq is
       1.2 GHz.
     - Now if the utilization doesn't change in then next request, then the
       next target frequency will still be 780 MHz and it will match with
       cached_raw_freq. But we will choose 1.2 GHz instead of 800 MHz here.
    
    Fixes: b7eaf1aab9f8 (cpufreq: schedutil: Avoid reducing frequency of busy CPUs prematurely)
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fe36d0c58a2a786308563163a999943bdc7b8b2
Author: Lv Zheng <lv.zheng@intel.com>
Date:   Tue Sep 26 16:54:03 2017 +0800

    ACPI / EC: Fix regression related to triggering source of EC event handling
    
    commit 53c5eaabaea9a1b7a96f95ccc486d2ad721d95bb upstream.
    
    Originally the Samsung quirks removed by commit 4c237371 can be covered
    by commit e923e8e7 and ec_freeze_events=Y mode. But commit 9c40f956
    changed ec_freeze_events=Y back to N, making this problem re-surface.
    
    Actually, if commit e923e8e7 is robust enough, we can freely change
    ec_freeze_events mode, so this patch fixes the issue by improving
    commit e923e8e7.
    
    Related commits listed in the merged order:
    
     Commit: e923e8e79e18fd6be9162f1be6b99a002e9df2cb
     Subject: ACPI / EC: Fix an issue that SCI_EVT cannot be detected
              after event is enabled
    
     Commit: 4c237371f290d1ed3b2071dd43554362137b1cce
     Subject: ACPI / EC: Remove old CLEAR_ON_RESUME quirk
    
     Commit: 9c40f956ce9b331493347d1b3cb7e384f7dc0581
     Subject: Revert "ACPI / EC: Enable event freeze mode..." to fix
              a regression
    
    This patch not only fixes the reported post-resume EC event triggering
    source issue, but also fixes an unreported similar issue related to the
    driver bind by adding EC event triggering source in ec_install_handlers().
    
    Fixes: e923e8e79e18 (ACPI / EC: Fix an issue that SCI_EVT cannot be detected after event is enabled)
    Fixes: 4c237371f290 (ACPI / EC: Remove old CLEAR_ON_RESUME quirk)
    Fixes: 9c40f956ce9b (Revert "ACPI / EC: Enable event freeze mode..." to fix a regression)
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=196833
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Reported-by: Alistair Hamilton <ahpatent@gmail.com>
    Tested-by: Alistair Hamilton <ahpatent@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef2b11c0a31df460cfda8bdc1a79806f9f95a3c5
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Tue Nov 7 23:08:10 2017 +0200

    ACPI / PM: Fix acpi_pm_notifier_lock vs flush_workqueue() deadlock
    
    commit ff1656790b3a4caca94505c52fd0250f981ea187 upstream.
    
    acpi_remove_pm_notifier() ends up calling flush_workqueue() while
    holding acpi_pm_notifier_lock, and that same lock is taken by
    by the work via acpi_pm_notify_handler(). This can deadlock.
    
    To fix the problem let's split the single lock into two: one to
    protect the dev->wakeup between the work vs. add/remove, and
    another one to handle notifier installation vs. removal.
    
    After commit a1d14934ea4b "workqueue/lockdep: 'Fix' flush_work()
    annotation" I was able to kill the machine (Intel Braswell)
    very easily with 'powertop --auto-tune', runtime suspending i915,
    and trying to wake it up via the USB keyboard. The cases when
    it didn't die are presumably explained by lockdep getting disabled
    by something else (cpu hotplug locking issues usually).
    
    Fortunately I still got a lockdep report over netconsole
    (trickling in very slowly), even though the machine was
    otherwise practically dead:
    
    [  112.179806] ======================================================
    [  114.670858] WARNING: possible circular locking dependency detected
    [  117.155663] 4.13.0-rc6-bsw-bisect-00169-ga1d14934ea4b #119 Not tainted
    [  119.658101] ------------------------------------------------------
    [  121.310242] xhci_hcd 0000:00:14.0: xHCI host not responding to stop endpoint command.
    [  121.313294] xhci_hcd 0000:00:14.0: xHCI host controller not responding, assume dead
    [  121.313346] xhci_hcd 0000:00:14.0: HC died; cleaning up
    [  121.313485] usb 1-6: USB disconnect, device number 3
    [  121.313501] usb 1-6.2: USB disconnect, device number 4
    [  134.747383] kworker/0:2/47 is trying to acquire lock:
    [  137.220790]  (acpi_pm_notifier_lock){+.+.}, at: [<ffffffff813cafdf>] acpi_pm_notify_handler+0x2f/0x80
    [  139.721524]
    [  139.721524] but task is already holding lock:
    [  144.672922]  ((&dpc->work)){+.+.}, at: [<ffffffff8109ce90>] process_one_work+0x160/0x720
    [  147.184450]
    [  147.184450] which lock already depends on the new lock.
    [  147.184450]
    [  154.604711]
    [  154.604711] the existing dependency chain (in reverse order) is:
    [  159.447888]
    [  159.447888] -> #2 ((&dpc->work)){+.+.}:
    [  164.183486]        __lock_acquire+0x1255/0x13f0
    [  166.504313]        lock_acquire+0xb5/0x210
    [  168.778973]        process_one_work+0x1b9/0x720
    [  171.030316]        worker_thread+0x4c/0x440
    [  173.257184]        kthread+0x154/0x190
    [  175.456143]        ret_from_fork+0x27/0x40
    [  177.624348]
    [  177.624348] -> #1 ("kacpi_notify"){+.+.}:
    [  181.850351]        __lock_acquire+0x1255/0x13f0
    [  183.941695]        lock_acquire+0xb5/0x210
    [  186.046115]        flush_workqueue+0xdd/0x510
    [  190.408153]        acpi_os_wait_events_complete+0x31/0x40
    [  192.625303]        acpi_remove_notify_handler+0x133/0x188
    [  194.820829]        acpi_remove_pm_notifier+0x56/0x90
    [  196.989068]        acpi_dev_pm_detach+0x5f/0xa0
    [  199.145866]        dev_pm_domain_detach+0x27/0x30
    [  201.285614]        i2c_device_probe+0x100/0x210
    [  203.411118]        driver_probe_device+0x23e/0x310
    [  205.522425]        __driver_attach+0xa3/0xb0
    [  207.634268]        bus_for_each_dev+0x69/0xa0
    [  209.714797]        driver_attach+0x1e/0x20
    [  211.778258]        bus_add_driver+0x1bc/0x230
    [  213.837162]        driver_register+0x60/0xe0
    [  215.868162]        i2c_register_driver+0x42/0x70
    [  217.869551]        0xffffffffa0172017
    [  219.863009]        do_one_initcall+0x45/0x170
    [  221.843863]        do_init_module+0x5f/0x204
    [  223.817915]        load_module+0x225b/0x29b0
    [  225.757234]        SyS_finit_module+0xc6/0xd0
    [  227.661851]        do_syscall_64+0x5c/0x120
    [  229.536819]        return_from_SYSCALL_64+0x0/0x7a
    [  231.392444]
    [  231.392444] -> #0 (acpi_pm_notifier_lock){+.+.}:
    [  235.124914]        check_prev_add+0x44e/0x8a0
    [  237.024795]        __lock_acquire+0x1255/0x13f0
    [  238.937351]        lock_acquire+0xb5/0x210
    [  240.840799]        __mutex_lock+0x75/0x940
    [  242.709517]        mutex_lock_nested+0x1c/0x20
    [  244.551478]        acpi_pm_notify_handler+0x2f/0x80
    [  246.382052]        acpi_ev_notify_dispatch+0x44/0x5c
    [  248.194412]        acpi_os_execute_deferred+0x14/0x30
    [  250.003925]        process_one_work+0x1ec/0x720
    [  251.803191]        worker_thread+0x4c/0x440
    [  253.605307]        kthread+0x154/0x190
    [  255.387498]        ret_from_fork+0x27/0x40
    [  257.153175]
    [  257.153175] other info that might help us debug this:
    [  257.153175]
    [  262.324392] Chain exists of:
    [  262.324392]   acpi_pm_notifier_lock --> "kacpi_notify" --> (&dpc->work)
    [  262.324392]
    [  267.391997]  Possible unsafe locking scenario:
    [  267.391997]
    [  270.758262]        CPU0                    CPU1
    [  272.431713]        ----                    ----
    [  274.060756]   lock((&dpc->work));
    [  275.646532]                                lock("kacpi_notify");
    [  277.260772]                                lock((&dpc->work));
    [  278.839146]   lock(acpi_pm_notifier_lock);
    [  280.391902]
    [  280.391902]  *** DEADLOCK ***
    [  280.391902]
    [  284.986385] 2 locks held by kworker/0:2/47:
    [  286.524895]  #0:  ("kacpi_notify"){+.+.}, at: [<ffffffff8109ce90>] process_one_work+0x160/0x720
    [  288.112927]  #1:  ((&dpc->work)){+.+.}, at: [<ffffffff8109ce90>] process_one_work+0x160/0x720
    [  289.727725]
    
    Fixes: c072530f391e (ACPI / PM: Revork the handling of ACPI device wakeup notifications)
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6047980008d8db5de9ef5c7ad897f5d2caac003c
Author: Vasily Gorbik <gor@linux.vnet.ibm.com>
Date:   Wed Nov 15 14:15:36 2017 +0100

    s390/disassembler: increase show_code buffer size
    
    commit b192571d1ae375e0bbe0aa3ccfa1a3c3704454b9 upstream.
    
    Current buffer size of 64 is too small. objdump shows that there are
    instructions which would require up to 75 bytes buffer (with current
    formating). 128 bytes "ought to be enough for anybody".
    
    Also replaces 8 spaces with a single tab to reduce the memory footprint.
    
    Fixes the following KASAN finding:
    
    BUG: KASAN: stack-out-of-bounds in number+0x3fe/0x538
    Write of size 1 at addr 000000005a4a75a0 by task bash/1282
    
    CPU: 1 PID: 1282 Comm: bash Not tainted 4.14.0+ #215
    Hardware name: IBM 2964 N96 702 (z/VM 6.4.0)
    Call Trace:
    ([<000000000011eeb6>] show_stack+0x56/0x88)
     [<0000000000e1ce1a>] dump_stack+0x15a/0x1b0
     [<00000000004e2994>] print_address_description+0xf4/0x288
     [<00000000004e2cf2>] kasan_report+0x13a/0x230
     [<0000000000e38ae6>] number+0x3fe/0x538
     [<0000000000e3dfe4>] vsnprintf+0x194/0x948
     [<0000000000e3ea42>] sprintf+0xa2/0xb8
     [<00000000001198dc>] print_insn+0x374/0x500
     [<0000000000119346>] show_code+0x4ee/0x538
     [<000000000011f234>] show_registers+0x34c/0x388
     [<000000000011f2ae>] show_regs+0x3e/0xa8
     [<000000000011f502>] die+0x1ea/0x2e8
     [<0000000000138f0e>] do_no_context+0x106/0x168
     [<0000000000139a1a>] do_protection_exception+0x4da/0x7d0
     [<0000000000e55914>] pgm_check_handler+0x16c/0x1c0
     [<000000000090639e>] sysrq_handle_crash+0x46/0x58
    ([<0000000000000007>] 0x7)
     [<00000000009073fa>] __handle_sysrq+0x102/0x218
     [<0000000000907c06>] write_sysrq_trigger+0xd6/0x100
     [<000000000061d67a>] proc_reg_write+0xb2/0x128
     [<0000000000520be6>] __vfs_write+0xee/0x368
     [<0000000000521222>] vfs_write+0x21a/0x278
     [<000000000052156a>] SyS_write+0xda/0x178
     [<0000000000e555cc>] system_call+0xc4/0x270
    
    The buggy address belongs to the page:
    page:000003d1016929c0 count:0 mapcount:0 mapping:          (null) index:0x0
    flags: 0x0()
    raw: 0000000000000000 0000000000000000 0000000000000000 ffffffff00000000
    raw: 0000000000000100 0000000000000200 0000000000000000 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     000000005a4a7480: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
     000000005a4a7500: 00 00 00 00 00 00 00 00 f2 f2 f2 f2 00 00 00 00
    >000000005a4a7580: 00 00 00 00 f3 f3 f3 f3 00 00 00 00 00 00 00 00
                                   ^
     000000005a4a7600: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f8 f8
     000000005a4a7680: f2 f2 f2 f2 f2 f2 f8 f8 f2 f2 f3 f3 f3 f3 00 00
    ==================================================================
    
    Signed-off-by: Vasily Gorbik <gor@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15e82cdb4d8da6c9ab0782c8bea008d03f52a97a
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Tue Sep 26 09:16:48 2017 +0200

    s390/disassembler: add missing end marker for e7 table
    
    commit 5c50538752af7968f53924b22dede8ed4ce4cb3b upstream.
    
    The e7 opcode table does not have an end marker. Hence when trying to
    find an unknown e7 instruction the code will access memory behind the
    table until it finds something that matches the opcode, or the kernel
    crashes, whatever comes first.
    
    This affects not only the in-kernel disassembler but also uprobes and
    kprobes which refuse to set a probe on unknown instructions, and
    therefore search the opcode tables to figure out if instructions are
    known or not.
    
    Fixes: 3585cb0280654 ("s390/disassembler: add vector instructions")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ee3f026aeb388248ecdc5cd6760169ee6a9e5af
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Sep 11 11:24:22 2017 +0200

    s390/guarded storage: fix possible memory corruption
    
    commit fa1edf3f63c05ca8eacafcd7048ed91e5360f1a8 upstream.
    
    For PREEMPT enabled kernels the guarded storage (GS) code contains a
    possible use-after-free bug. If a task that makes use of GS exits, it
    will execute do_exit() while still enabled for preemption.
    
    That function will call exit_thread_runtime_instr() via exit_thread().
    If exit_thread_gs() gets preempted after the GS control block of the
    task has been freed but before the pointer to it is set to NULL, then
    save_gs_cb(), called from switch_to(), will write to already freed
    memory.
    
    Avoid this and simply disable preemption while freeing the control
    block and setting the pointer to NULL.
    
    Fixes: 916cda1aa1b4 ("s390: add a system call for guarded storage")
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27576413d9484cd9df933e3e4c802cb0cfb9c915
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Sep 11 11:24:22 2017 +0200

    s390/runtime instrumention: fix possible memory corruption
    
    commit d6e646ad7cfa7034d280459b2b2546288f247144 upstream.
    
    For PREEMPT enabled kernels the runtime instrumentation (RI) code
    contains a possible use-after-free bug. If a task that makes use of RI
    exits, it will execute do_exit() while still enabled for preemption.
    
    That function will call exit_thread_runtime_instr() via
    exit_thread(). If exit_thread_runtime_instr() gets preempted after the
    RI control block of the task has been freed but before the pointer to
    it is set to NULL, then save_ri_cb(), called from switch_to(), will
    write to already freed memory.
    
    Avoid this and simply disable preemption while freeing the control
    block and setting the pointer to NULL.
    
    Fixes: e4b8b3f33fca ("s390: add support for runtime instrumentation")
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21caac65d29b7d985a7cd1672ad1dd316b227974
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Thu Nov 9 23:00:14 2017 +0100

    s390/noexec: execute kexec datamover without DAT
    
    commit d0e810eeb3d326978f248b8f0233a2f30f58c72d upstream.
    
    Rebooting into a new kernel with kexec fails (system dies) if tried on
    a machine that has no-execute support. Reason for this is that the so
    called datamover code gets executed with DAT on (MMU is active) and
    the page that contains the datamover is marked as non-executable.
    Therefore when branching into the datamover an unexpected program
    check happens and afterwards the machine is dead.
    
    This can be simply avoided by disabling DAT, which also disables any
    no-execute checks, just before the datamover gets executed.
    
    In fact the first thing done by the datamover is to disable DAT. The
    code in the datamover that disables DAT can be removed as well.
    
    Thanks to Michael Holzheu and Gerald Schaefer for tracking this down.
    
    Reviewed-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
    Reviewed-by: Philipp Rudo <prudo@linux.vnet.ibm.com>
    Cc: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Fixes: 57d7f939e7bd ("s390: add no-execute support")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 236f6e7283f593cf485b5233c8f540cf9f8120b9
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Thu Nov 9 12:29:34 2017 +0100

    s390: fix transactional execution control register handling
    
    commit a1c5befc1c24eb9c1ee83f711e0f21ee79cbb556 upstream.
    
    Dan Horák reported the following crash related to transactional execution:
    
    User process fault: interruption code 0013 ilc:3 in libpthread-2.26.so[3ff93c00000+1b000]
    CPU: 2 PID: 1 Comm: /init Not tainted 4.13.4-300.fc27.s390x #1
    Hardware name: IBM 2827 H43 400 (z/VM 6.4.0)
    task: 00000000fafc8000 task.stack: 00000000fafc4000
    User PSW : 0705200180000000 000003ff93c14e70
               R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:1 AS:0 CC:2 PM:0 RI:0 EA:3
    User GPRS: 0000000000000077 000003ff00000000 000003ff93144d48 000003ff93144d5e
               0000000000000000 0000000000000002 0000000000000000 000003ff00000000
               0000000000000000 0000000000000418 0000000000000000 000003ffcc9fe770
               000003ff93d28f50 000003ff9310acf0 000003ff92b0319a 000003ffcc9fe6d0
    User Code: 000003ff93c14e62: 60e0b030            std     %f14,48(%r11)
               000003ff93c14e66: 60f0b038            std     %f15,56(%r11)
              #000003ff93c14e6a: e5600000ff0e        tbegin  0,65294
              >000003ff93c14e70: a7740006            brc     7,3ff93c14e7c
               000003ff93c14e74: a7080000            lhi     %r0,0
               000003ff93c14e78: a7f40023            brc     15,3ff93c14ebe
               000003ff93c14e7c: b2220000            ipm     %r0
               000003ff93c14e80: 8800001c            srl     %r0,28
    
    There are several bugs with control register handling with respect to
    transactional execution:
    
    - on task switch update_per_regs() is only called if the next task has
      an mm (is not a kernel thread). This however is incorrect. This
      breaks e.g. for user mode helper handling, where the kernel creates
      a kernel thread and then execve's a user space program. Control
      register contents related to transactional execution won't be
      updated on execve. If the previous task ran with transactional
      execution disabled then the new task will also run with
      transactional execution disabled, which is incorrect. Therefore call
      update_per_regs() unconditionally within switch_to().
    
    - on startup the transactional execution facility is not enabled for
      the idle thread. This is not really a bug, but an inconsistency to
      other facilities. Therefore enable the facility if it is available.
    
    - on fork the new thread's per_flags field is not cleared. This means
      that a child process inherits the PER_FLAG_NO_TE flag. This flag can
      be set with a ptrace request to disable transactional execution for
      the current process. It should not be inherited by new child
      processes in order to be consistent with the handling of all other
      PER related debugging options. Therefore clear the per_flags field in
      copy_thread_tls().
    
    Reported-and-tested-by: Dan Horák <dan@danny.cz>
    Fixes: d35339a42dd1 ("s390: add support for transactional memory")
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9f0b03dedc19a6363a305d119efcb48667a3027
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Nov 24 08:37:05 2017 +0100

    Linux 4.14.2

commit 8d8564fce80dfafa8e90c345161aff734d9730cd
Author: Corey Minyard <cminyard@mvista.com>
Date:   Fri Sep 8 14:05:58 2017 -0500

    ipmi: Prefer ACPI system interfaces over SMBIOS ones
    
    commit 7e030d6dff713250c7dcfb543cad2addaf479b0e upstream.
    
    The recent changes to add SMBIOS (DMI) IPMI interfaces as platform
    devices caused DMI to be selected before ACPI, causing ACPI type
    of operations to not work.
    
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71d3850bf1e9458ed6a6119abe084e253128dee5
Author: Jan Harkes <jaharkes@cs.cmu.edu>
Date:   Wed Sep 27 15:52:12 2017 -0400

    coda: fix 'kernel memory exposure attempt' in fsync
    
    commit d337b66a4c52c7b04eec661d86c2ef6e168965a2 upstream.
    
    When an application called fsync on a file in Coda a small request with
    just the file identifier was allocated, but the declared length was set
    to the size of union of all possible upcall requests.
    
    This bug has been around for a very long time and is now caught by the
    extra checking in usercopy that was introduced in Linux-4.8.
    
    The exposure happens when the Coda cache manager process reads the fsync
    upcall request at which point it is killed. As a result there is nobody
    servicing any further upcalls, trapping any processes that try to access
    the mounted Coda filesystem.
    
    Signed-off-by: Jan Harkes <jaharkes@cs.cmu.edu>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb58b8f8a8d7d874690c7530b320a5c90bf0f471
Author: Jaewon Kim <jaewon31.kim@samsung.com>
Date:   Wed Nov 15 17:39:07 2017 -0800

    mm/page_ext.c: check if page_ext is not prepared
    
    commit e492080e640c2d1235ddf3441cae634cfffef7e1 upstream.
    
    online_page_ext() and page_ext_init() allocate page_ext for each
    section, but they do not allocate if the first PFN is !pfn_present(pfn)
    or !pfn_valid(pfn).  Then section->page_ext remains as NULL.
    lookup_page_ext checks NULL only if CONFIG_DEBUG_VM is enabled.  For a
    valid PFN, __set_page_owner will try to get page_ext through
    lookup_page_ext.  Without CONFIG_DEBUG_VM lookup_page_ext will misuse
    NULL pointer as value 0.  This incurrs invalid address access.
    
    This is the panic example when PFN 0x100000 is not valid but PFN
    0x13FC00 is being used for page_ext.  section->page_ext is NULL,
    get_entry returned invalid page_ext address as 0x1DFA000 for a PFN
    0x13FC00.
    
    To avoid this panic, CONFIG_DEBUG_VM should be removed so that page_ext
    will be checked at all times.
    
      Unable to handle kernel paging request at virtual address 01dfa014
      ------------[ cut here ]------------
      Kernel BUG at ffffff80082371e0 [verbose debug info unavailable]
      Internal error: Oops: 96000045 [#1] PREEMPT SMP
      Modules linked in:
      PC is at __set_page_owner+0x48/0x78
      LR is at __set_page_owner+0x44/0x78
        __set_page_owner+0x48/0x78
        get_page_from_freelist+0x880/0x8e8
        __alloc_pages_nodemask+0x14c/0xc48
        __do_page_cache_readahead+0xdc/0x264
        filemap_fault+0x2ac/0x550
        ext4_filemap_fault+0x3c/0x58
        __do_fault+0x80/0x120
        handle_mm_fault+0x704/0xbb0
        do_page_fault+0x2e8/0x394
        do_mem_abort+0x88/0x124
    
    Pre-4.7 kernels also need commit f86e4271978b ("mm: check the return
    value of lookup_page_ext for all call sites").
    
    Link: http://lkml.kernel.org/r/20171107094131.14621-1-jaewon31.kim@samsung.com
    Fixes: eefa864b701d ("mm/page_ext: resurrect struct page extending code for debugging")
    Signed-off-by: Jaewon Kim <jaewon31.kim@samsung.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Joonsoo Kim <js1304@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a77c92fa1403812ea5b85ad7b7a5091db1c493b
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Wed Nov 15 17:38:41 2017 -0800

    mm/page_alloc.c: broken deferred calculation
    
    commit d135e5750205a21a212a19dbb05aeb339e2cbea7 upstream.
    
    In reset_deferred_meminit() we determine number of pages that must not
    be deferred.  We initialize pages for at least 2G of memory, but also
    pages for reserved memory in this node.
    
    The reserved memory is determined in this function:
    memblock_reserved_memory_within(), which operates over physical
    addresses, and returns size in bytes.  However, reset_deferred_meminit()
    assumes that that this function operates with pfns, and returns page
    count.
    
    The result is that in the best case machine boots slower than expected
    due to initializing more pages than needed in single thread, and in the
    worst case panics because fewer than needed pages are initialized early.
    
    Link: http://lkml.kernel.org/r/20171021011707.15191-1-pasha.tatashin@oracle.com
    Fixes: 864b9a393dcb ("mm: consider memblock reservations for deferred memory initialization sizing")
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a46857604044d129dd7ac35f913c50627d37c4e
Author: Corey Minyard <cminyard@mvista.com>
Date:   Sat Jul 29 21:14:55 2017 -0500

    ipmi: fix unsigned long underflow
    
    commit 392a17b10ec4320d3c0e96e2a23ebaad1123b989 upstream.
    
    When I set the timeout to a specific value such as 500ms, the timeout
    event will not happen in time due to the overflow in function
    check_msg_timeout:
    ...
            ent->timeout -= timeout_period;
            if (ent->timeout > 0)
                    return;
    ...
    
    The type of timeout_period is long, but ent->timeout is unsigned long.
    This patch makes the type consistent.
    
    Reported-by: Weilong Chen <chenweilong@huawei.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Tested-by: Weilong Chen <chenweilong@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44ec0aecc73dc3959bdbb6fa733c69dc0bb633f4
Author: alex chen <alex.chen@huawei.com>
Date:   Wed Nov 15 17:31:40 2017 -0800

    ocfs2: should wait dio before inode lock in ocfs2_setattr()
    
    commit 28f5a8a7c033cbf3e32277f4cc9c6afd74f05300 upstream.
    
    we should wait dio requests to finish before inode lock in
    ocfs2_setattr(), otherwise the following deadlock will happen:
    
    process 1                  process 2                    process 3
    truncate file 'A'          end_io of writing file 'A'   receiving the bast messages
    ocfs2_setattr
     ocfs2_inode_lock_tracker
      ocfs2_inode_lock_full
     inode_dio_wait
      __inode_dio_wait
      -->waiting for all dio
      requests finish
                                                            dlm_proxy_ast_handler
                                                             dlm_do_local_bast
                                                              ocfs2_blocking_ast
                                                               ocfs2_generic_handle_bast
                                                                set OCFS2_LOCK_BLOCKED flag
                            dio_end_io
                             dio_bio_end_aio
                              dio_complete
                               ocfs2_dio_end_io
                                ocfs2_dio_end_io_write
                                 ocfs2_inode_lock
                                  __ocfs2_cluster_lock
                                   ocfs2_wait_for_mask
                                   -->waiting for OCFS2_LOCK_BLOCKED
                                   flag to be cleared, that is waiting
                                   for 'process 1' unlocking the inode lock
                               inode_dio_end
                               -->here dec the i_dio_count, but will never
                               be called, so a deadlock happened.
    
    Link: http://lkml.kernel.org/r/59F81636.70508@huawei.com
    Signed-off-by: Alex Chen <alex.chen@huawei.com>
    Reviewed-by: Jun Piao <piaojun@huawei.com>
    Reviewed-by: Joseph Qi <jiangqi903@gmail.com>
    Acked-by: Changwei Ge <ge.changwei@h3c.com>
    Cc: Mark Fasheh <mfasheh@versity.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e250a1993727dbe4b10831ca8ddf30745b3d545a
Author: Changwei Ge <ge.changwei@h3c.com>
Date:   Wed Nov 15 17:31:33 2017 -0800

    ocfs2: fix cluster hang after a node dies
    
    commit 1c01967116a678fed8e2c68a6ab82abc8effeddc upstream.
    
    When a node dies, other live nodes have to choose a new master for an
    existed lock resource mastered by the dead node.
    
    As for ocfs2/dlm implementation, this is done by function -
    dlm_move_lockres_to_recovery_list which marks those lock rsources as
    DLM_LOCK_RES_RECOVERING and manages them via a list from which DLM
    changes lock resource's master later.
    
    So without invoking dlm_move_lockres_to_recovery_list, no master will be
    choosed after dlm recovery accomplishment since no lock resource can be
    found through ::resource list.
    
    What's worse is that if DLM_LOCK_RES_RECOVERING is not marked for lock
    resources mastered a dead node, it will break up synchronization among
    nodes.
    
    So invoke dlm_move_lockres_to_recovery_list again.
    
    Fixs: 'commit ee8f7fcbe638 ("ocfs2/dlm: continue to purge recovery lockres when recovery master goes down")'
    Link: http://lkml.kernel.org/r/63ADC13FD55D6546B7DECE290D39E373CED6E0F9@H3CMLB14-EX.srv.huawei-3com.com
    Signed-off-by: Changwei Ge <ge.changwei@h3c.com>
    Reported-by: Vitaly Mayatskih <v.mayatskih@gmail.com>
    Tested-by: Vitaly Mayatskikh <v.mayatskih@gmail.com>
    Cc: Mark Fasheh <mfasheh@versity.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joseph Qi <jiangqi903@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbce81fc966f59421e5f54c4bd3d3a4670f45e33
Author: Jann Horn <jannh@google.com>
Date:   Tue Nov 14 01:03:44 2017 +0100

    mm/pagewalk.c: report holes in hugetlb ranges
    
    commit 373c4557d2aa362702c4c2d41288fb1e54990b7c upstream.
    
    This matters at least for the mincore syscall, which will otherwise copy
    uninitialized memory from the page allocator to userspace.  It is
    probably also a correctness error for /proc/$pid/pagemap, but I haven't
    tested that.
    
    Removing the `walk->hugetlb_entry` condition in walk_hugetlb_range() has
    no effect because the caller already checks for that.
    
    This only reports holes in hugetlb ranges to callers who have specified
    a hugetlb_entry callback.
    
    This issue was found using an AFL-based fuzzer.
    
    v2:
     - don't crash on ->pte_hole==NULL (Andrew Morton)
     - add Cc stable (Andrew Morton)
    
    Fixes: 1e25a271c8ac ("mincore: apply page table walker on do_mincore()")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3594216fc6cf25636109c70208d51e1250102b32
Author: Neeraj Upadhyay <neeraju@codeaurora.org>
Date:   Mon Aug 7 11:20:10 2017 +0530

    rcu: Fix up pending cbs check in rcu_prepare_for_idle
    
    commit 135bd1a230bb69a68c9808a7d25467318900b80a upstream.
    
    The pending-callbacks check in rcu_prepare_for_idle() is backwards.
    It should accelerate if there are pending callbacks, but the check
    rather uselessly accelerates only if there are no callbacks.  This commit
    therefore inverts this check.
    
    Fixes: 15fecf89e46a ("srcu: Abstract multi-tail callback list handling")
    Signed-off-by: Neeraj Upadhyay <neeraju@codeaurora.org>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a371abb25a16029932fde51eb4b12420421f96da
Author: Alexander Steffen <Alexander.Steffen@infineon.com>
Date:   Fri Sep 8 17:21:32 2017 +0200

    tpm-dev-common: Reject too short writes
    
    commit ee70bc1e7b63ac8023c9ff9475d8741e397316e7 upstream.
    
    tpm_transmit() does not offer an explicit interface to indicate the number
    of valid bytes in the communication buffer. Instead, it relies on the
    commandSize field in the TPM header that is encoded within the buffer.
    Therefore, ensure that a) enough data has been written to the buffer, so
    that the commandSize field is present and b) the commandSize field does not
    announce more data than has been written to the buffer.
    
    This should have been fixed with CVE-2011-1161 long ago, but apparently
    a correct version of that patch never made it into the kernel.
    
    Signed-off-by: Alexander Steffen <Alexander.Steffen@infineon.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 432a1a50d364e49d3b15a6ec412cb04c4d9bf108
Author: Ji-Ze Hong (Peter Hong) <hpeter@gmail.com>
Date:   Tue Oct 17 14:23:08 2017 +0800

    serial: 8250_fintek: Fix finding base_port with activated SuperIO
    
    commit fd97e66c5529046e989a0879c3bb58fddb592c71 upstream.
    
    The SuperIO will be configured at boot time by BIOS, but some BIOS
    will not deactivate the SuperIO when the end of configuration. It'll
    lead to mismatch for pdata->base_port in probe_setup_port(). So we'll
    deactivate all SuperIO before activate special base_port in
    fintek_8250_enter_key().
    
    Tested on iBASE MI802.
    
    Tested-by: Ji-Ze Hong (Peter Hong) <hpeter+linux_kernel@gmail.com>
    Signed-off-by: Ji-Ze Hong (Peter Hong) <hpeter+linux_kernel@gmail.com>
    Reviewd-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c75289a7b774d369263cef27c4e5aaf7ed59400a
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sat Oct 21 10:50:18 2017 +0200

    serial: omap: Fix EFR write on RTS deassertion
    
    commit 2a71de2f7366fb1aec632116d0549ec56d6a3940 upstream.
    
    Commit 348f9bb31c56 ("serial: omap: Fix RTS handling") sought to enable
    auto RTS upon manual RTS assertion and disable it on deassertion.
    However it seems the latter was done incorrectly, it clears all bits in
    the Extended Features Register *except* auto RTS.
    
    Fixes: 348f9bb31c56 ("serial: omap: Fix RTS handling")
    Cc: Peter Hurley <peter@hurleysoftware.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87eb84b9a0d1df942dd1676d16bb2b615e480d18
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Tue Nov 7 11:37:07 2017 +0100

    ima: do not update security.ima if appraisal status is not INTEGRITY_PASS
    
    commit 020aae3ee58c1af0e7ffc4e2cc9fe4dc630338cb upstream.
    
    Commit b65a9cfc2c38 ("Untangling ima mess, part 2: deal with counters")
    moved the call of ima_file_check() from may_open() to do_filp_open() at a
    point where the file descriptor is already opened.
    
    This breaks the assumption made by IMA that file descriptors being closed
    belong to files whose access was granted by ima_file_check(). The
    consequence is that security.ima and security.evm are updated with good
    values, regardless of the current appraisal status.
    
    For example, if a file does not have security.ima, IMA will create it after
    opening the file for writing, even if access is denied. Access to the file
    will be allowed afterwards.
    
    Avoid this issue by checking the appraisal status before updating
    security.ima.
    
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d028694813201787efd5086352fb051bfa35790
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Nov 15 22:17:48 2017 -0600

    net/sctp: Always set scope_id in sctp_inet6_skb_msgname
    
    
    [ Upstream commit 7c8a61d9ee1df0fb4747879fa67a99614eb62fec ]
    
    Alexandar Potapenko while testing the kernel with KMSAN and syzkaller
    discovered that in some configurations sctp would leak 4 bytes of
    kernel stack.
    
    Working with his reproducer I discovered that those 4 bytes that
    are leaked is the scope id of an ipv6 address returned by recvmsg.
    
    With a little code inspection and a shrewd guess I discovered that
    sctp_inet6_skb_msgname only initializes the scope_id field for link
    local ipv6 addresses to the interface index the link local address
    pertains to instead of initializing the scope_id field for all ipv6
    addresses.
    
    That is almost reasonable as scope_id's are meaniningful only for link
    local addresses.  Set the scope_id in all other cases to 0 which is
    not a valid interface index to make it clear there is nothing useful
    in the scope_id field.
    
    There should be no danger of breaking userspace as the stack leak
    guaranteed that previously meaningless random data was being returned.
    
    Fixes: 372f525b495c ("SCTP:  Resync with LKSCTP tree.")
    History-tree: https://git.kernel.org/pub/scm/linux/kernel/git/tglx/history.git
    Reported-by: Alexander Potapenko <glider@google.com>
    Tested-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b6868743d7e0bdf1c2f41e5256fdf2e3d33b962
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Nov 16 11:07:15 2017 +0800

    fealnx: Fix building error on MIPS
    
    
    [ Upstream commit cc54c1d32e6a4bb3f116721abf900513173e4d02 ]
    
    This patch try to fix the building error on MIPS. The reason is MIPS
    has already defined the LONG macro, which conflicts with the LONG enum
    in drivers/net/ethernet/fealnx.c.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 060dd7a476314ac393a51cf78e78957cdef0b43a
Author: Bjørn Mork <bjorn@mork.no>
Date:   Wed Nov 15 09:35:02 2017 +0100

    net: cdc_ncm: GetNtbFormat endian fix
    
    
    [ Upstream commit 6314dab4b8fb8493d810e175cb340376052c69b6 ]
    
    The GetNtbFormat and SetNtbFormat requests operate on 16 bit little
    endian values. We get away with ignoring this most of the time, because
    we only care about USB_CDC_NCM_NTB16_FORMAT which is 0x0000.  This
    fails for USB_CDC_NCM_NTB32_FORMAT.
    
    Fix comparison between LE value from device and constant by converting
    the constant to LE.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Fixes: 2b02c20ce0c2 ("cdc_ncm: Set NTB format again after altsetting switch for Huawei devices")
    Cc: Enrico Mioso <mrkiko.rs@gmail.com>
    Cc: Christian Panton <christian@panton.org>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Acked-By: Enrico Mioso <mrkiko.rs@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 829af2cd8a2ca21d0d5bc7cb46988c0a6e612f5b
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 11 19:58:50 2017 +0800

    vxlan: fix the issue that neigh proxy blocks all icmpv6 packets
    
    
    [ Upstream commit 8bff3685a4bbf175a96bc6a528f13455d8d38244 ]
    
    Commit f1fb08f6337c ("vxlan: fix ND proxy when skb doesn't have transport
    header offset") removed icmp6_code and icmp6_type check before calling
    neigh_reduce when doing neigh proxy.
    
    It means all icmpv6 packets would be blocked by this, not only ns packet.
    In Jianlin's env, even ping6 couldn't work through it.
    
    This patch is to bring the icmp6_code and icmp6_type check back and also
    removed the same check from neigh_reduce().
    
    Fixes: f1fb08f6337c ("vxlan: fix ND proxy when skb doesn't have transport header offset")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Reviewed-by: Vincent Bernat <vincent@bernat.im>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5856c858c6eaa9a4ba2100a9c7f1748be5614546
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Thu Nov 9 13:04:44 2017 +0900

    af_netlink: ensure that NLMSG_DONE never fails in dumps
    
    
    [ Upstream commit 0642840b8bb008528dbdf929cec9f65ac4231ad0 ]
    
    The way people generally use netlink_dump is that they fill in the skb
    as much as possible, breaking when nla_put returns an error. Then, they
    get called again and start filling out the next skb, and again, and so
    forth. The mechanism at work here is the ability for the iterative
    dumping function to detect when the skb is filled up and not fill it
    past the brim, waiting for a fresh skb for the rest of the data.
    
    However, if the attributes are small and nicely packed, it is possible
    that a dump callback function successfully fills in attributes until the
    skb is of size 4080 (libmnl's default page-sized receive buffer size).
    The dump function completes, satisfied, and then, if it happens to be
    that this is actually the last skb, and no further ones are to be sent,
    then netlink_dump will add on the NLMSG_DONE part:
    
      nlh = nlmsg_put_answer(skb, cb, NLMSG_DONE, sizeof(len), NLM_F_MULTI);
    
    It is very important that netlink_dump does this, of course. However, in
    this example, that call to nlmsg_put_answer will fail, because the
    previous filling by the dump function did not leave it enough room. And
    how could it possibly have done so? All of the nla_put variety of
    functions simply check to see if the skb has enough tailroom,
    independent of the context it is in.
    
    In order to keep the important assumptions of all netlink dump users, it
    is therefore important to give them an skb that has this end part of the
    tail already reserved, so that the call to nlmsg_put_answer does not
    fail. Otherwise, library authors are forced to find some bizarre sized
    receive buffer that has a large modulo relative to the common sizes of
    messages received, which is ugly and buggy.
    
    This patch thus saves the NLMSG_DONE for an additional message, for the
    case that things are dangerously close to the brim. This requires
    keeping track of the errno from ->dump() across calls.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d62da3a8e2aa3a056d6f7a9cc75a93a221f11b4
Author: Michael Lyle <mlyle@lyle.org>
Date:   Thu Nov 16 23:47:25 2017 -0800

    bio: ensure __bio_clone_fast copies bi_partno
    
    commit 62530ed8b1d07a45dec94d46e521c0c6c2d476e6 upstream.
    
    A new field was introduced in 74d46992e0d9, bi_partno, instead of using
    bdev->bd_contains and encoding the partition information in the bi_bdev
    field.  __bio_clone_fast was changed to copy the disk information, but
    not the partition information.  At minimum, this regressed bcache and
    caused data corruption.
    
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Fixes: 74d46992e0d9 ("block: replace bi_bdev with a gendisk pointer and partitions index")
    Reported-by: Pavel Goran <via-bcache@pvgoran.name>
    Reported-by: Campbell Steven <casteven@gmail.com>
    Reviewed-by: Coly Li <colyli@suse.de>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 780a781dd6f1af9dfac15b8eeba1cb678c9fc380
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 21 09:49:25 2017 +0100

    Linux 4.14.1

commit ea826dbc30d1c26380c050b669ddbb13c2170107
Author: Nitin Gupta <nitin.m.gupta@oracle.com>
Date:   Fri Nov 3 12:26:06 2017 -0700

    sparc64: Fix page table walk for PUD hugepages
    
    [ Upstream commit 70f3c8b7c2e7ebcdde8354da004872e7c9184e97 ]
    
    For a PUD hugepage entry, we need to propagate bits [32:22]
    from virtual address to resolve at 4M granularity. However,
    the current code was incorrectly propagating bits [29:19].
    This bug can cause incorrect data to be returned for pages
    backed with 16G hugepages.
    
    Signed-off-by: Nitin Gupta <nitin.m.gupta@oracle.com>
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Cc: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4b57c4bc11bfaa2588557b52ad5abd65fb9390e
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sun Sep 10 13:44:47 2017 -0700

    sparc64: mmu_context: Add missing include files
    
    commit 01c3f0a42a2a0ff0c3fed80a1a25f2641ae72554 upstream.
    
    Fix the following build errors.
    
    In file included from arch/sparc/include/asm/mmu_context.h:4:0,
                     from include/linux/mmu_context.h:4,
                     from drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.h:29,
                     from drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd.c:23:
    arch/sparc/include/asm/mmu_context_64.h:22:37: error:
            unknown type name 'per_cpu_secondary_mm'
    
    arch/sparc/include/asm/mmu_context_64.h: In function 'switch_mm':
    arch/sparc/include/asm/mmu_context_64.h:79:2: error:
            implicit declaration of function 'smp_processor_id'
    
    Fixes: 70539bd79500 ("drm/amd: Update MEC HQD loading code for KFD")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05e15a59eef1f87d0f50b592546b2c1fa64abbd4
Author: David S. Miller <davem@davemloft.net>
Date:   Wed Sep 27 22:38:19 2017 -0700

    sparc32: Add cmpxchg64().
    
    commit 23198ddffb6cddb5d5824230af4dd4b46e4046a4 upstream.
    
    This fixes the build with i40e driver enabled.
    
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9aacd82304adb74fa9320cb1c5d4bc71b1b91f06
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 30 11:35:25 2017 +0100

    spi: fix use-after-free at controller deregistration
    
    commit 67f7b2781fafcc0f52464880154b320fea1ae982 upstream.
    
    The controller is typically freed as part of device_unregister() so
    store the bus id before deregistration to avoid use-after-free when the
    id is later released.
    
    Fixes: 9b61e302210e ("spi: Pick spi bus number from Linux idr or spi alias")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3e36fd07b5b27768db8353a83dec0459bf2ee33
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Nov 2 10:30:13 2017 +0100

    staging: rtl8188eu: Revert 4 commits breaking ARP
    
    commit 66d32fdcbf03851724a8b551d490ae1ddfe6eef2 upstream.
    
    Commit 2ba8444c97b1 ("staging:r8188eu: move IV/ICV trimming into
    decrypt() and also place it after rtl88eu_mon_recv_hook()") breaks ARP.
    
    After this commit ssh-ing to a laptop with r8188eu wifi no longer works
    if the machine connecting has never communicated with the laptop before.
    This is 100% reproducable using "arp -d <ipv4> && ssh <ipv4>" to ssh to
    a laptop with r8188eu wifi.
    
    This commit reverts 4 commits in total:
    
    1. Commit 79650ffde38e ("staging:r8188eu: trim IV/ICV fields in
       validate_recv_data_frame()")
    This commit depends on 2 of the other commits being reverted.
    
    2. Commit 02b19b4c4920 ("staging:r8188eu: inline unprotect_frame() in
       mon_recv_decrypted_recv()")
    The inline code is wrong the un-inlined version contains:
            if (skb->len < hdr_len + iv_len + icv_len)
                    return;
            ...
    Where as the inline-ed code introduced by this commit does:
            if (skb->len < hdr_len + iv_len + icv_len) {
                    ...
    Note the same check, but now to actually continue doing ... instead
    of to not do it, so this commit is no good.
    
    3. Commit d86e16da6a5d ("staging:r8188eu: use different mon_recv_decrypted()
       inside rtl88eu_mon_recv_hook() and rtl88eu_mon_xmit_hook().")
    This commit introduced a 1:1 copy of a function so that one of the
    2 copies can be modified in the 2 commits we're already reverting.
    
    4. Commit 2ba8444c97b1 ("staging:r8188eu: move IV/ICV trimming into
       decrypt() and also place it after rtl88eu_mon_recv_hook()")
    This is the commit actually breaking ARP.
    
    Note this commit is a straight-forward squash of the revert of these
    4 commits, without any changes.
    
    Cc: Ivan Safonov <insafonov@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccc04bde3ae94fc46fdc1b74d1b10d8bc19175f5
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Oct 12 20:10:25 2017 +0200

    staging: vboxvideo: Fix reporting invalid suggested-offset-properties
    
    commit ce10d7b4e8e3574b9616e54a09d64521b9aeb8b6 upstream.
    
    The x and y hints receives from the host are unsigned 32 bit integers and
    they get set to -1 (0xffffffff) when invalid. Before this commit the
    vboxvideo driver was storing them in an u16 causing the -1 to be truncated
    to 65535 which, once reported to userspace, was breaking gnome 3.26+
    in Wayland mode.
    
    This commit stores the host values in 32 bit variables, removing the
    truncation and checks for -1, replacing it with 0 as -1 is not a valid
    suggested-offset-property value. Likewise the properties are now
    initialized to 0 instead of -1, since -1 is not a valid value.
    This fixes gnome 3.26+ in Wayland mode not working with the vboxvideo
    driver.
    
    Reported-by: Gianfranco Costamagna <locutusofborg@debian.org>
    Cc: Michael Thayer <michael.thayer@oracle.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5abe8d48471c212c45cbb0d522b70d76325ceac0
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Oct 29 13:01:33 2017 +0100

    staging: greybus: spilib: fix use-after-free after deregistration
    
    commit 770b03c2ca4aa44d226cf248f86aa23e546147d0 upstream.
    
    Remove erroneous spi_master_put() after controller deregistration which
    would access the already freed spi controller.
    
    Note that spi_unregister_master() drops our only controller reference.
    
    Fixes: ba3e67001b42 ("greybus: SPI: convert to a gpbridge driver")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75559e0f485432202fdf3c960229d75b77069076
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Mon Oct 30 13:38:03 2017 +0000

    staging: ccree: fix 64 bit scatter/gather DMA ops
    
    commit e0b3f39092a1cff5548cbaf40096ec25e7721de6 upstream.
    
    Fix a wrong offset used in splitting a 64 DMA address to MSB/LSB
    parts needed for scatter/gather HW descriptors causing operations
    relying on them to fail on 64 bit platforms.
    
    Fixes: c6f7f2f4591f ("staging: ccree: refactor LLI access macros")
    Reported-by: Stuart Yoder <stuart.yoder@arm.com>
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69cf5ab217d23429056f978c70a206c1596e03be
Author: Huacai Chen <chenhc@lemote.com>
Date:   Mon Nov 6 08:43:03 2017 +0800

    staging: sm750fb: Fix parameter mistake in poke32
    
    commit 16808dcf605e6302319a8c3266789b76d4c0983b upstream.
    
    In commit c075b6f2d357ea9 ("staging: sm750fb: Replace POKE32 and PEEK32
    by inline functions"), POKE32 has been replaced by the inline function
    poke32. But it exchange the "addr" and "data" parameters by mistake, so
    fix it.
    
    Fixes: c075b6f2d357ea9 ("staging: sm750fb: Replace POKE32 and PEEK32 by inline functions"),
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: Liangliang Huang <huangll@lemote.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbcb8d29aab2237491ac0f1da44b6e5765f5296a
Author: Aditya Shankar <aditya.shankar@microchip.com>
Date:   Fri Nov 3 14:26:27 2017 +0530

    staging: wilc1000: Fix bssid buffer offset in Txq
    
    commit 1bbf6a6d4091affb27ec0a19d7aa7887ce72f610 upstream.
    
    Commit 46949b48568b ("staging: wilc1000: New cfg packet
    format in handle_set_wfi_drv_handler") updated the frame
    format sent from host to the firmware. The code to update
    the bssid offset in the new frame was part of a second
    patch in the series which did not make it in and thus
    causes connection problems after associating to an AP.
    
    This fix adds the proper offset of the bssid value in the
    Tx queue buffer to fix the connection issues.
    
    Fixes: 46949b48568b ("staging: wilc1000: New cfg packet format in handle_set_wfi_drv_handler")
    Signed-off-by: Aditya Shankar <Aditya.Shankar@microchip.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99bff8f6d1ff8c63b1cf6bc04d1d7797484b5c0c
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Tue Nov 14 21:45:34 2017 -0800

    rpmsg: glink: Add missing MODULE_LICENSE
    
    commit 1e0d5615bbc37deb7732491798abccf8d3c3d244 upstream.
    
    The qcom_glink_native driver is missing a MODULE_LICENSE(), correct
    this.
    
    Fixes: 835764ddd9af ("rpmsg: glink: Move the common glink protocol implementation to glink_native.c")
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29718bff1cf9548f9009a55cc03588279beb511b
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Wed Oct 18 08:27:13 2017 -0700

    HID: wacom: generic: Recognize WACOM_HID_WD_PEN as a type of pen collection
    
    commit 885e89f601a52cc6fb025b009df58ba83d142734 upstream.
    
    The WACOM_PEN_FIELD macro is used to determine if a given HID field should be
    associated with pen input. This field includes several known collection types
    that Wacom pen data is contained in, but the WACOM_HID_WD_PEN application
    collection type is notably missing. This can result in fields within this
    kind of collection being completely ignored by the `wacom_usage_mapping`
    function, preventing the later '*_event' functions from being notified about
    changes to their value.
    
    Fixes: c9c095874a ("HID: wacom: generic: Support and use 'Custom HID' mode and usages")
    Fixes: ac2423c975 ("HID: wacom: generic: add vendor defined touch")
    Reviewed-by: Ping Cheng <ping.cheng@wacom.com>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 740ef39bce15d7d74a5b02b7b0e6abb472a9c76c
Author: Sébastien Szymanski <sebastien.szymanski@armadeus.com>
Date:   Thu Nov 2 12:12:43 2017 +0100

    HID: cp2112: add HIDRAW dependency
    
    commit cde3076bdc38bf436e517a379759a9092c6ffd4f upstream.
    
    Otherwise, with HIDRAW=n, the probe function crashes because of null
    dereference of hdev->hidraw.
    
    Fixes: 42cb6b35b9e6 ("HID: cp2112: use proper hidraw name with minor number")
    Signed-off-by: Sébastien Szymanski <sebastien.szymanski@armadeus.com>
    Acked-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 417b152ef12fe4cfed7453c7e475682629e94f6f
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Oct 30 14:07:37 2017 +0100

    platform/x86: peaq_wmi: Fix missing terminating entry for peaq_dmi_table
    
    commit d6fa71f1c003fb2bc824276bb424a4171f9a717f upstream.
    
    Add missing terminating entry to peaq_dmi_table.
    
    Fixes: 3b95206110a2 ("platform/x86: peaq-wmi: Add DMI check before ...")
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 202a3e232974a63f0fd1e0091821bb88931c3914
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Oct 5 20:04:04 2017 +0200

    platform/x86: peaq-wmi: Add DMI check before binding to the WMI interface
    
    commit 3b95206110a2c13076c3a7fa8ddeae36c2dbcf42 upstream.
    
    It seems that the WMI GUID used by the PEAQ 2-in-1 WMI hotkeys is not
    as unique as a GUID should be and is used on some other devices too.
    
    This is causing spurious key-press reports on these other devices.
    
    This commits adds a DMI check to the PEAQ 2-in-1 WMI hotkeys driver to
    ensure that it is actually running on a PEAQ 2-in-1, fixing the
    spurious key-presses on these other devices.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1497861
    BugLink: https://bugzilla.suse.com/attachment.cgi?id=743182
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3919ccafbdd16c95155a120a166dd72087dd08c4
Author: Yazen Ghannam <yazen.ghannam@amd.com>
Date:   Mon Nov 6 18:46:32 2017 +0100

    x86/MCE/AMD: Always give panic severity for UC errors in kernel context
    
    commit d65dfc81bb3894fdb68cbc74bbf5fb48d2354071 upstream.
    
    The AMD severity grading function was introduced in kernel 4.1. The
    current logic can possibly give MCE_AR_SEVERITY for uncorrectable
    errors in kernel context. The system may then get stuck in a loop as
    memory_failure() will try to handle the bad kernel memory and find it
    busy.
    
    Return MCE_PANIC_SEVERITY for all UC errors IN_KERNEL context on AMD
    systems.
    
    After:
    
      b2f9d678e28c ("x86/mce: Check for faults tagged in EXTABLE_CLASS_FAULT exception table entries")
    
    was accepted in v4.6, this issue was masked because of the tail-end attempt
    at kernel mode recovery in the #MC handler.
    
    However, uncorrectable errors IN_KERNEL context should always be considered
    unrecoverable and cause a panic.
    
    Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Fixes: bf80bbd7dcf5 (x86/mce: Add an AMD severities-grading function)
    Link: http://lkml.kernel.org/r/20171106174633.13576-1-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 502f3975c0d7b30c4779f775f0b108b8999d2046
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sat Nov 4 04:19:48 2017 -0700

    selftests/x86/protection_keys: Fix syscall NR redefinition warnings
    
    commit 693cb5580fdb026922363aa103add64b3ecd572e upstream.
    
    On new enough glibc, the pkey syscalls numbers are available.  Check
    first before defining them to avoid warnings like:
    
    protection_keys.c:198:0: warning: "SYS_pkey_alloc" redefined
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1fbef53a9e6befb7165ff855fc1a7d4788a191d6.1509794321.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a5a567333df30aa99890a16b9686efcf3442a09
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 11 14:02:58 2017 +0200

    USB: serial: garmin_gps: fix memory leak on probe errors
    
    commit 74d471b598444b7f2d964930f7234779c80960a0 upstream.
    
    Make sure to free the port private data before returning after a failed
    probe attempt.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df2ca939fed4e17d9d260b28420952e10a4615da
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 11 14:02:57 2017 +0200

    USB: serial: garmin_gps: fix I/O after failed probe and remove
    
    commit 19a565d9af6e0d828bd0d521d3bafd5017f4ce52 upstream.
    
    Make sure to stop any submitted interrupt and bulk-out URBs before
    returning after failed probe and when the port is being unbound to avoid
    later NULL-pointer dereferences in the completion callbacks.
    
    Also fix up the related and broken I/O cancellation on failed open and
    on close. (Note that port->write_urb was never submitted.)
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1922d5a084a4dfa387658d07f6b786e2e801b606
Author: Douglas Fischer <douglas.fischer@outlook.com>
Date:   Sun Oct 29 23:29:55 2017 +0000

    USB: serial: qcserial: add pid/vid for Sierra Wireless EM7355 fw update
    
    commit 771394a54148f18926ca86414e51c69eda27d0cd upstream.
    
    Add USB PID/VID for Sierra Wireless EM7355 LTE modem QDL firmware update
    mode.
    
    Signed-off-by: Douglas Fischer <douglas.fischer@outlook.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff6b050208b1c2ce5e1224cc8caf98a33e8f08ea
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue Nov 7 10:28:16 2017 +0800

    USB: serial: Change DbC debug device binding ID
    
    commit 12f28144cf2cf69e1520e238eee7c384719ca44b upstream.
    
    The product ID for "Linux USB GDB Target device" has been
    changed. Change the driver binding table accordingly.
    
    This patch should be back-ported to kernels as old as v4.12,
    that contain the commit 57fb47279a04 ("usb/serial: Add DBC
    debug device support to usb_debug").
    
    Cc: Johan Hovold <johan@kernel.org>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b55d4612484e516ce2e9804db619f7aa66ecb5e7
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Oct 12 10:54:21 2017 +0200

    USB: serial: metro-usb: stop I/O after failed open
    
    commit 2339536d229df25c71c0900fc619289229bfecf6 upstream.
    
    Make sure to kill the interrupt-in URB after a failed open request.
    Apart from saving power (and avoiding stale input after a later
    successful open), this also prevents a NULL-deref in the completion
    handler if the port is manually unbound.
    
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Fixes: 704577861d5e ("USB: serial: metro-usb: get data from device in Uni-Directional mode.")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d74d586746ccf743df309ed2c9a4232e858dbd68
Author: Andrew Gabbasov <andrew_gabbasov@mentor.com>
Date:   Wed Nov 8 10:13:15 2017 -0700

    usb: gadget: f_fs: Fix use-after-free in ffs_free_inst
    
    commit cdafb6d8b8da7fde266f79b3287ac221aa841879 upstream.
    
    KASAN enabled configuration reports an error
    
    BUG: KASAN: use-after-free in ffs_free_inst+... [usb_f_fs] at addr ...
    Write of size 8 by task ...
    
    This is observed after "ffs-test" is run and interrupted. If after that
    functionfs is unmounted and g_ffs module is unloaded, that use-after-free
    occurs during g_ffs module removal.
    
    Although the report indicates ffs_free_inst() function, the actual
    use-after-free condition occurs in _ffs_free_dev() function, which
    is probably inlined into ffs_free_inst().
    
    This happens due to keeping the ffs_data reference in device structure
    during functionfs unmounting, while ffs_data itself is freed as no longer
    needed. The fix is to clear that reference in ffs_closed() function,
    which is a counterpart of ffs_ready(), where the reference is stored.
    
    Fixes: 3262ad824307 ("usb: gadget: f_fs: Stop ffs_closed NULL pointer dereference")
    Signed-off-by: Andrew Gabbasov <andrew_gabbasov@mentor.com>
    Acked-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e7577588cce7aa7528bb822d99955514cdd1753
Author: Bernhard Rosenkraenzer <bernhard.rosenkranzer@linaro.org>
Date:   Fri Nov 3 16:46:02 2017 +0100

    USB: Add delay-init quirk for Corsair K70 LUX keyboards
    
    commit a0fea6027f19c62727315aba1a7fae75a9caa842 upstream.
    
    Without this patch, K70 LUX keyboards don't work, saying
    usb 3-3: unable to read config index 0 descriptor/all
    usb 3-3: can't read configurations, error -110
    usb usb3-port3: unable to enumerate USB device
    
    Signed-off-by: Bernhard Rosenkraenzer <Bernhard.Rosenkranzer@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95b0ab9e531042861a375c904962bbd94c1f1e9f
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Nov 8 12:23:17 2017 -0500

    USB: usbfs: compute urb->actual_length for isochronous
    
    commit 2ef47001b3ee3ded579b7532ebdcf8680e4d8c54 upstream.
    
    The USB kerneldoc says that the actual_length field "is read in
    non-iso completion functions", but the usbfs driver uses it for all
    URB types in processcompl().  Since not all of the host controller
    drivers set actual_length for isochronous URBs, programs using usbfs
    with some host controllers don't work properly.  For example, Minas
    reports that a USB camera controlled by libusb doesn't work properly
    with a dwc2 controller.
    
    It doesn't seem worthwhile to change the HCDs and the documentation,
    since the in-kernel USB class drivers evidently don't rely on
    actual_length for isochronous transfers.  The easiest solution is for
    usbfs to calculate the actual_length value for itself, by adding up
    the lengths of the individual packets in an isochronous transfer.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Reported-and-tested-by: wlf <wulf@rock-chips.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44efd1f1b1ea25e1393f91de18bff6608ba86e0f
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue Nov 7 10:28:15 2017 +0800

    USB: early: Use new USB product ID and strings for DbC device
    
    commit c67678ec78eff9cf1e7e997fe6c37c9fcccfc5b8 upstream.
    
    The DbC register set defines an interface for system software
    to specify the vendor id and product id for the debug device.
    These two values will be presented by the debug device in its
    device descriptor idVendor and idProduct fields.
    
    The current used product ID is a place holder. We now have a
    valid one. The description strings are changed accordingly.
    
    This patch should be back-ported to kernels as old as v4.12,
    that contain the commit aeb9dd1de98c ("usb/early: Add driver
    for xhci debug capability").
    
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d53b8eb50ae78c685139fa1a856e2bef4876763
Author: raveendra padasalagi <raveendra.padasalagi@broadcom.com>
Date:   Tue Aug 29 15:08:10 2017 +0530

    crypto: brcm - Explicity ACK mailbox message
    
    commit f0e2ce58f853634d7ad1a418a49bd5fbd556227c upstream.
    
    Add support to explicity ACK mailbox message
    because after sending message we can know
    the send status via error attribute of brcm_message.
    
    This is needed to support "txdone_ack" supported in
    mailbox controller driver.
    
    Fixes: 9d12ba86f818 ("crypto: brcm - Add Broadcom SPU driver")
    Signed-off-by: Raveendra Padasalagi <raveendra.padasalagi@broadcom.com>
    Reviewed-by: Anup Patel <anup.patel@broadcom.com>
    Reviewed-by: Scott Branden <scott.branden@broadcom.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e56be0e260cc367d2eb1823a9b476d018d80152
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Nov 5 18:30:46 2017 -0800

    crypto: dh - Don't permit 'key' or 'g' size longer than 'p'
    
    commit ccd9888f14a8019c0bbdeeae758aba1f58693712 upstream.
    
    The "qat-dh" DH implementation assumes that 'key' and 'g' can be copied
    into a buffer with size 'p_size'.  However it was never checked that
    that was actually the case, which most likely allowed users to cause a
    buffer underflow via KEYCTL_DH_COMPUTE.
    
    Fix this by updating crypto_dh_decode_key() to verify this precondition
    for all DH implementations.
    
    Fixes: c9839143ebbf ("crypto: qat - Add DH support")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 716b9ea8c6b07e293eb4af7cd68cbbb6c9490120
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Nov 5 18:30:45 2017 -0800

    crypto: dh - Don't permit 'p' to be 0
    
    commit 199512b1234f09e44d592153ec82b44212b2f0c4 upstream.
    
    If 'p' is 0 for the software Diffie-Hellman implementation, then
    dh_max_size() returns 0.  In the case of KEYCTL_DH_COMPUTE, this causes
    ZERO_SIZE_PTR to be passed to sg_init_one(), which with
    CONFIG_DEBUG_SG=y triggers the 'BUG_ON(!virt_addr_valid(buf));' in
    sg_set_buf().
    
    Fix this by making crypto_dh_decode_key() reject 0 for 'p'.  p=0 makes
    no sense for any DH implementation because 'p' is supposed to be a prime
    number.  Moreover, 'mod 0' is not mathematically defined.
    
    Bug report:
    
        kernel BUG at ./include/linux/scatterlist.h:140!
        invalid opcode: 0000 [#1] SMP KASAN
        CPU: 0 PID: 27112 Comm: syz-executor2 Not tainted 4.14.0-rc7-00010-gf5dbb5d0ce32-dirty #7
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.3-20171021_125229-anatol 04/01/2014
        task: ffff88006caac0c0 task.stack: ffff88006c7c8000
        RIP: 0010:sg_set_buf include/linux/scatterlist.h:140 [inline]
        RIP: 0010:sg_init_one+0x1b3/0x240 lib/scatterlist.c:156
        RSP: 0018:ffff88006c7cfb08 EFLAGS: 00010216
        RAX: 0000000000010000 RBX: ffff88006c7cfe30 RCX: 00000000000064ee
        RDX: ffffffff81cf64c3 RSI: ffffc90000d72000 RDI: ffffffff92e937e0
        RBP: ffff88006c7cfb30 R08: ffffed000d8f9fab R09: ffff88006c7cfd30
        R10: 0000000000000005 R11: ffffed000d8f9faa R12: ffff88006c7cfd30
        R13: 0000000000000000 R14: 0000000000000010 R15: ffff88006c7cfc50
        FS:  00007fce190fa700(0000) GS:ffff88003ea00000(0000) knlGS:0000000000000000
        CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
        CR2: 00007fffc6b33db8 CR3: 000000003cf64000 CR4: 00000000000006f0
        Call Trace:
         __keyctl_dh_compute+0xa95/0x19b0 security/keys/dh.c:360
         keyctl_dh_compute+0xac/0x100 security/keys/dh.c:434
         SYSC_keyctl security/keys/keyctl.c:1745 [inline]
         SyS_keyctl+0x72/0x2c0 security/keys/keyctl.c:1641
         entry_SYSCALL_64_fastpath+0x1f/0xbe
        RIP: 0033:0x4585c9
        RSP: 002b:00007fce190f9bd8 EFLAGS: 00000216 ORIG_RAX: 00000000000000fa
        RAX: ffffffffffffffda RBX: 0000000000738020 RCX: 00000000004585c9
        RDX: 000000002000d000 RSI: 0000000020000ff4 RDI: 0000000000000017
        RBP: 0000000000000046 R08: 0000000020008000 R09: 0000000000000000
        R10: 0000000000000000 R11: 0000000000000216 R12: 00007fff6e610cde
        R13: 00007fff6e610cdf R14: 00007fce190fa700 R15: 0000000000000000
        Code: 03 0f b6 14 02 48 89 f8 83 e0 07 83 c0 03 38 d0 7c 04 84 d2 75 33 5b 45 89 6c 24 14 41 5c 41 5d 41 5e 41 5f 5d c3 e8 fd 8f 68 ff <0f> 0b e8 f6 8f 68 ff 0f 0b e8 ef 8f 68 ff 0f 0b e8 e8 8f 68 ff 20
        RIP: sg_set_buf include/linux/scatterlist.h:140 [inline] RSP: ffff88006c7cfb08
        RIP: sg_init_one+0x1b3/0x240 lib/scatterlist.c:156 RSP: ffff88006c7cfb08
    
    Fixes: 802c7f1c84e4 ("crypto: dh - Add DH software implementation")
    Reviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a37b2a1cc6e99812190dac5a790affe7368d81a6
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Nov 5 18:30:44 2017 -0800

    crypto: dh - Fix double free of ctx->p
    
    commit 12d41a023efb01b846457ccdbbcbe2b65a87d530 upstream.
    
    When setting the secret with the software Diffie-Hellman implementation,
    if allocating 'g' failed (e.g. if it was longer than
    MAX_EXTERN_MPI_BITS), then 'p' was freed twice: once immediately, and
    once later when the crypto_kpp tfm was destroyed.
    
    Fix it by using dh_free_ctx() (renamed to dh_clear_ctx()) in the error
    paths, as that correctly sets the pointers to NULL.
    
    KASAN report:
    
        MPI: mpi too large (32760 bits)
        ==================================================================
        BUG: KASAN: use-after-free in mpi_free+0x131/0x170
        Read of size 4 at addr ffff88006c7cdf90 by task reproduce_doubl/367
    
        CPU: 1 PID: 367 Comm: reproduce_doubl Not tainted 4.14.0-rc7-00040-g05298abde6fe #7
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
        Call Trace:
         dump_stack+0xb3/0x10b
         ? mpi_free+0x131/0x170
         print_address_description+0x79/0x2a0
         ? mpi_free+0x131/0x170
         kasan_report+0x236/0x340
         ? akcipher_register_instance+0x90/0x90
         __asan_report_load4_noabort+0x14/0x20
         mpi_free+0x131/0x170
         ? akcipher_register_instance+0x90/0x90
         dh_exit_tfm+0x3d/0x140
         crypto_kpp_exit_tfm+0x52/0x70
         crypto_destroy_tfm+0xb3/0x250
         __keyctl_dh_compute+0x640/0xe90
         ? kasan_slab_free+0x12f/0x180
         ? dh_data_from_key+0x240/0x240
         ? key_create_or_update+0x1ee/0xb20
         ? key_instantiate_and_link+0x440/0x440
         ? lock_contended+0xee0/0xee0
         ? kfree+0xcf/0x210
         ? SyS_add_key+0x268/0x340
         keyctl_dh_compute+0xb3/0xf1
         ? __keyctl_dh_compute+0xe90/0xe90
         ? SyS_add_key+0x26d/0x340
         ? entry_SYSCALL_64_fastpath+0x5/0xbe
         ? trace_hardirqs_on_caller+0x3f4/0x560
         SyS_keyctl+0x72/0x2c0
         entry_SYSCALL_64_fastpath+0x1f/0xbe
        RIP: 0033:0x43ccf9
        RSP: 002b:00007ffeeec96158 EFLAGS: 00000246 ORIG_RAX: 00000000000000fa
        RAX: ffffffffffffffda RBX: 000000000248b9b9 RCX: 000000000043ccf9
        RDX: 00007ffeeec96170 RSI: 00007ffeeec96160 RDI: 0000000000000017
        RBP: 0000000000000046 R08: 0000000000000000 R09: 0248b9b9143dc936
        R10: 0000000000001000 R11: 0000000000000246 R12: 0000000000000000
        R13: 0000000000409670 R14: 0000000000409700 R15: 0000000000000000
    
        Allocated by task 367:
         save_stack_trace+0x16/0x20
         kasan_kmalloc+0xeb/0x180
         kmem_cache_alloc_trace+0x114/0x300
         mpi_alloc+0x4b/0x230
         mpi_read_raw_data+0xbe/0x360
         dh_set_secret+0x1dc/0x460
         __keyctl_dh_compute+0x623/0xe90
         keyctl_dh_compute+0xb3/0xf1
         SyS_keyctl+0x72/0x2c0
         entry_SYSCALL_64_fastpath+0x1f/0xbe
    
        Freed by task 367:
         save_stack_trace+0x16/0x20
         kasan_slab_free+0xab/0x180
         kfree+0xb5/0x210
         mpi_free+0xcb/0x170
         dh_set_secret+0x2d7/0x460
         __keyctl_dh_compute+0x623/0xe90
         keyctl_dh_compute+0xb3/0xf1
         SyS_keyctl+0x72/0x2c0
         entry_SYSCALL_64_fastpath+0x1f/0xbe
    
    Fixes: 802c7f1c84e4 ("crypto: dh - Add DH software implementation")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75d9dd294e2a41ddce75cc02d1675a9cf40873fc
Author: Andrey Konovalov <andreyknvl@google.com>
Date:   Thu Nov 2 10:38:21 2017 -0400

    media: dib0700: fix invalid dvb_detach argument
    
    commit eb0c19942288569e0ae492476534d5a485fb8ab4 upstream.
    
    dvb_detach(arg) calls symbol_put_addr(arg), where arg should be a pointer
    to a function. Right now a pointer to state->dib7000p_ops is passed to
    dvb_detach(), which causes a BUG() in symbol_put_addr() as discovered by
    syzkaller. Pass state->dib7000p_ops.set_wbd_ref instead.
    
    ------------[ cut here ]------------
    kernel BUG at kernel/module.c:1081!
    invalid opcode: 0000 [#1] PREEMPT SMP KASAN
    Modules linked in:
    CPU: 1 PID: 1151 Comm: kworker/1:1 Tainted: G        W
    4.14.0-rc1-42251-gebb2c2437d80 #224
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Workqueue: usb_hub_wq hub_event
    task: ffff88006a336300 task.stack: ffff88006a7c8000
    RIP: 0010:symbol_put_addr+0x54/0x60 kernel/module.c:1083
    RSP: 0018:ffff88006a7ce210 EFLAGS: 00010246
    RAX: 0000000000000000 RBX: ffff880062a8d190 RCX: 0000000000000000
    RDX: dffffc0000000020 RSI: ffffffff85876d60 RDI: ffff880062a8d190
    RBP: ffff88006a7ce218 R08: 1ffff1000d4f9c12 R09: 1ffff1000d4f9ae4
    R10: 1ffff1000d4f9bed R11: 0000000000000000 R12: ffff880062a8d180
    R13: 00000000ffffffed R14: ffff880062a8d190 R15: ffff88006947c000
    FS:  0000000000000000(0000) GS:ffff88006c900000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f6416532000 CR3: 00000000632f5000 CR4: 00000000000006e0
    Call Trace:
     stk7070p_frontend_attach+0x515/0x610
    drivers/media/usb/dvb-usb/dib0700_devices.c:1013
     dvb_usb_adapter_frontend_init+0x32b/0x660
    drivers/media/usb/dvb-usb/dvb-usb-dvb.c:286
     dvb_usb_adapter_init drivers/media/usb/dvb-usb/dvb-usb-init.c:86
     dvb_usb_init drivers/media/usb/dvb-usb/dvb-usb-init.c:162
     dvb_usb_device_init+0xf70/0x17f0 drivers/media/usb/dvb-usb/dvb-usb-init.c:277
     dib0700_probe+0x171/0x5a0 drivers/media/usb/dvb-usb/dib0700_core.c:886
     usb_probe_interface+0x35d/0x8e0 drivers/usb/core/driver.c:361
     really_probe drivers/base/dd.c:413
     driver_probe_device+0x610/0xa00 drivers/base/dd.c:557
     __device_attach_driver+0x230/0x290 drivers/base/dd.c:653
     bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463
     __device_attach+0x26e/0x3d0 drivers/base/dd.c:710
     device_initial_probe+0x1f/0x30 drivers/base/dd.c:757
     bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523
     device_add+0xd0b/0x1660 drivers/base/core.c:1835
     usb_set_configuration+0x104e/0x1870 drivers/usb/core/message.c:1932
     generic_probe+0x73/0xe0 drivers/usb/core/generic.c:174
     usb_probe_device+0xaf/0xe0 drivers/usb/core/driver.c:266
     really_probe drivers/base/dd.c:413
     driver_probe_device+0x610/0xa00 drivers/base/dd.c:557
     __device_attach_driver+0x230/0x290 drivers/base/dd.c:653
     bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463
     __device_attach+0x26e/0x3d0 drivers/base/dd.c:710
     device_initial_probe+0x1f/0x30 drivers/base/dd.c:757
     bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523
     device_add+0xd0b/0x1660 drivers/base/core.c:1835
     usb_new_device+0x7b8/0x1020 drivers/usb/core/hub.c:2457
     hub_port_connect drivers/usb/core/hub.c:4903
     hub_port_connect_change drivers/usb/core/hub.c:5009
     port_event drivers/usb/core/hub.c:5115
     hub_event+0x194d/0x3740 drivers/usb/core/hub.c:5195
     process_one_work+0xc7f/0x1db0 kernel/workqueue.c:2119
     worker_thread+0x221/0x1850 kernel/workqueue.c:2253
     kthread+0x3a1/0x470 kernel/kthread.c:231
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431
    Code: ff ff 48 85 c0 74 24 48 89 c7 e8 48 ea ff ff bf 01 00 00 00 e8
    de 20 e3 ff 65 8b 05 b7 2f c2 7e 85 c0 75 c9 e8 f9 0b c1 ff eb c2 <0f>
    0b 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 b8 00 00
    RIP: symbol_put_addr+0x54/0x60 RSP: ffff88006a7ce210
    ---[ end trace b75b357739e7e116 ]---
    
    Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16edf1a6a8a52040841e3e875c76bad0aa28f85f
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Mon Oct 9 20:14:48 2017 +0200

    media: imon: Fix null-ptr-deref in imon_probe
    
    commit 58fd55e838276a0c13d1dc7c387f90f25063cbf3 upstream.
    
    It seems that the return value of usb_ifnum_to_if() can be NULL and
    needs to be checked.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34c45c1ee883d080f2fc9a668714ae317c952f6b
Author: Adam Wallis <awallis@codeaurora.org>
Date:   Thu Nov 2 08:53:30 2017 -0400

    dmaengine: dmatest: warn user when dma test times out
    
    commit a9df21e34b422f79d9a9fa5c3eff8c2a53491be6 upstream.
    
    Commit adfa543e7314 ("dmatest: don't use set_freezable_with_signal()")
    introduced a bug (that is in fact documented by the patch commit text)
    that leaves behind a dangling pointer. Since the done_wait structure is
    allocated on the stack, future invocations to the DMATEST can produce
    undesirable results (e.g., corrupted spinlocks). Ideally, this would be
    cleaned up in the thread handler, but at the very least, the kernel
    is left in a very precarious scenario that can lead to some long debug
    sessions when the crash comes later.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=197605
    Signed-off-by: Adam Wallis <awallis@codeaurora.org>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5806ddd7948cc14b8d4b04e25b2831b37fee720d
Author: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
Date:   Wed Sep 13 18:42:14 2017 +0800

    EDAC, sb_edac: Don't create a second memory controller if HA1 is not present
    
    commit 15cc3ae001873845b5d842e212478a6570c7d938 upstream.
    
    Yi Zhang reported the following failure on a 2-socket Haswell (E5-2603v3)
    server (DELL PowerEdge 730xd):
    
      EDAC sbridge: Some needed devices are missing
      EDAC MC: Removed device 0 for sb_edac.c Haswell SrcID#0_Ha#0: DEV 0000:7f:12.0
      EDAC MC: Removed device 1 for sb_edac.c Haswell SrcID#1_Ha#0: DEV 0000:ff:12.0
      EDAC sbridge: Couldn't find mci handler
      EDAC sbridge: Couldn't find mci handler
      EDAC sbridge: Failed to register device with error -19.
    
    The refactored sb_edac driver creates the IMC1 (the 2nd memory
    controller) if any IMC1 device is present. In this case only
    HA1_TA of IMC1 was present, but the driver expected to find
    HA1/HA1_TM/HA1_TAD[0-3] devices too, leading to the above failure.
    
    The document [1] says the 'E5-2603 v3' CPU has 4 memory channels max. Yi
    Zhang inserted one DIMM per channel for each CPU, and did random error
    address injection test with this patch:
    
          4024  addresses fell in TOLM hole area
         12715  addresses fell in CPU_SrcID#0_Ha#0_Chan#0_DIMM#0
         12774  addresses fell in CPU_SrcID#0_Ha#0_Chan#1_DIMM#0
         12798  addresses fell in CPU_SrcID#0_Ha#0_Chan#2_DIMM#0
         12913  addresses fell in CPU_SrcID#0_Ha#0_Chan#3_DIMM#0
         12674  addresses fell in CPU_SrcID#1_Ha#0_Chan#0_DIMM#0
         12686  addresses fell in CPU_SrcID#1_Ha#0_Chan#1_DIMM#0
         12882  addresses fell in CPU_SrcID#1_Ha#0_Chan#2_DIMM#0
         12934  addresses fell in CPU_SrcID#1_Ha#0_Chan#3_DIMM#0
        106400  addresses were injected totally.
    
    The test result shows that all the 4 channels belong to IMC0 per CPU, so
    the server really only has one IMC per CPU.
    
    In the 1st page of chapter 2 in datasheet [2], it also says 'E5-2600 v3'
    implements either one or two IMCs. For CPUs with one IMC, IMC1 is not
    used and should be ignored.
    
    Thus, do not create a second memory controller if the key HA1 is absent.
    
    [1] http://ark.intel.com/products/83349/Intel-Xeon-Processor-E5-2603-v3-15M-Cache-1_60-GHz
    [2] https://www.intel.com/content/dam/www/public/us/en/documents/datasheets/xeon-e5-v3-datasheet-vol-2.pdf
    
    Reported-and-tested-by: Yi Zhang <yizhan@redhat.com>
    Signed-off-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20170913104214.7325-1-qiuxu.zhuo@intel.com
    [ Massage commit message. ]
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
